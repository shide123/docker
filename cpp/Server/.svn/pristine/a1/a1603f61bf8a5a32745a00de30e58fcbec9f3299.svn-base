// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: LogonSvr.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "LogonSvr.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* CMDUserLogonReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDUserLogonReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDUserLogonErrResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDUserLogonErrResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDUserLogonSuccessResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDUserLogonSuccessResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDSessionTokenReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDSessionTokenReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDSessionTokenResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDSessionTokenResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDUserExistReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDUserExistReq_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_LogonSvr_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_LogonSvr_2eproto() {
  protobuf_AddDesc_LogonSvr_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "LogonSvr.proto");
  GOOGLE_CHECK(file != NULL);
  CMDUserLogonReq_descriptor_ = file->message_type(0);
  static const int CMDUserLogonReq_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserLogonReq, loginid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserLogonReq, token_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserLogonReq, patternlock_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserLogonReq, platformtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserLogonReq, version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserLogonReq, serial_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserLogonReq, mac_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserLogonReq, mobile_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserLogonReq, devicemodel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserLogonReq, deviceos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserLogonReq, hostdb_),
  };
  CMDUserLogonReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDUserLogonReq_descriptor_,
      CMDUserLogonReq::default_instance_,
      CMDUserLogonReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDUserLogonReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserLogonReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserLogonReq, _is_default_instance_));
  CMDUserLogonErrResp_descriptor_ = file->message_type(1);
  static const int CMDUserLogonErrResp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserLogonErrResp, errinfo_),
  };
  CMDUserLogonErrResp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDUserLogonErrResp_descriptor_,
      CMDUserLogonErrResp::default_instance_,
      CMDUserLogonErrResp_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDUserLogonErrResp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserLogonErrResp, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserLogonErrResp, _is_default_instance_));
  CMDUserLogonSuccessResp_descriptor_ = file->message_type(2);
  static const int CMDUserLogonSuccessResp_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserLogonSuccessResp, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserLogonSuccessResp, headadd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserLogonSuccessResp, gender_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserLogonSuccessResp, useralias_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserLogonSuccessResp, loginplateform_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserLogonSuccessResp, tel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserLogonSuccessResp, sessiontoken_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserLogonSuccessResp, validtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserLogonSuccessResp, servarea_),
  };
  CMDUserLogonSuccessResp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDUserLogonSuccessResp_descriptor_,
      CMDUserLogonSuccessResp::default_instance_,
      CMDUserLogonSuccessResp_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDUserLogonSuccessResp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserLogonSuccessResp, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserLogonSuccessResp, _is_default_instance_));
  CMDSessionTokenReq_descriptor_ = file->message_type(3);
  static const int CMDSessionTokenReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSessionTokenReq, userid_),
  };
  CMDSessionTokenReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDSessionTokenReq_descriptor_,
      CMDSessionTokenReq::default_instance_,
      CMDSessionTokenReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDSessionTokenReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSessionTokenReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSessionTokenReq, _is_default_instance_));
  CMDSessionTokenResp_descriptor_ = file->message_type(4);
  static const int CMDSessionTokenResp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSessionTokenResp, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSessionTokenResp, sessiontoken_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSessionTokenResp, validtime_),
  };
  CMDSessionTokenResp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDSessionTokenResp_descriptor_,
      CMDSessionTokenResp::default_instance_,
      CMDSessionTokenResp_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDSessionTokenResp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSessionTokenResp, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSessionTokenResp, _is_default_instance_));
  CMDUserExistReq_descriptor_ = file->message_type(5);
  static const int CMDUserExistReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserExistReq, loginid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserExistReq, token_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserExistReq, platformtype_),
  };
  CMDUserExistReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDUserExistReq_descriptor_,
      CMDUserExistReq::default_instance_,
      CMDUserExistReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDUserExistReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserExistReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserExistReq, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_LogonSvr_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDUserLogonReq_descriptor_, &CMDUserLogonReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDUserLogonErrResp_descriptor_, &CMDUserLogonErrResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDUserLogonSuccessResp_descriptor_, &CMDUserLogonSuccessResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDSessionTokenReq_descriptor_, &CMDSessionTokenReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDSessionTokenResp_descriptor_, &CMDSessionTokenResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDUserExistReq_descriptor_, &CMDUserExistReq::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_LogonSvr_2eproto() {
  delete CMDUserLogonReq::default_instance_;
  delete CMDUserLogonReq_reflection_;
  delete CMDUserLogonErrResp::default_instance_;
  delete CMDUserLogonErrResp_reflection_;
  delete CMDUserLogonSuccessResp::default_instance_;
  delete CMDUserLogonSuccessResp_reflection_;
  delete CMDSessionTokenReq::default_instance_;
  delete CMDSessionTokenReq_reflection_;
  delete CMDSessionTokenResp::default_instance_;
  delete CMDSessionTokenResp_reflection_;
  delete CMDUserExistReq::default_instance_;
  delete CMDUserExistReq_reflection_;
}

void protobuf_AddDesc_LogonSvr_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_LogonSvr_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_Common_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016LogonSvr.proto\032\014Common.proto\"\321\001\n\017CMDUs"
    "erLogonReq\022\017\n\007loginid\030\001 \001(\r\022\r\n\005token\030\002 \001"
    "(\t\022\023\n\013patternLock\030\003 \001(\t\022\024\n\014platformType\030"
    "\004 \001(\r\022\017\n\007version\030\005 \001(\r\022\016\n\006serial\030\006 \001(\t\022\013"
    "\n\003mac\030\007 \001(\t\022\016\n\006mobile\030\010 \001(\r\022\023\n\013devicemod"
    "el\030\t \001(\t\022\020\n\010deviceos\030\n \001(\t\022\016\n\006hostdb\030\013 \001"
    "(\t\"3\n\023CMDUserLogonErrResp\022\034\n\007errInfo\030\001 \001"
    "(\0132\013.CMDErrCode\"\275\001\n\027CMDUserLogonSuccessR"
    "esp\022\016\n\006userid\030\001 \001(\r\022\017\n\007headadd\030\002 \001(\t\022\016\n\006"
    "gender\030\003 \001(\r\022\021\n\tuseralias\030\004 \001(\t\022\026\n\016login"
    "plateform\030\005 \001(\r\022\013\n\003tel\030\006 \001(\t\022\024\n\014sessiont"
    "oken\030\007 \001(\t\022\021\n\tvalidtime\030\010 \001(\t\022\020\n\010servAre"
    "a\030\t \001(\t\"$\n\022CMDSessionTokenReq\022\016\n\006userid\030"
    "\001 \001(\r\"N\n\023CMDSessionTokenResp\022\016\n\006userid\030\001"
    " \001(\r\022\024\n\014sessiontoken\030\002 \001(\t\022\021\n\tvalidtime\030"
    "\003 \001(\t\"G\n\017CMDUserExistReq\022\017\n\007loginid\030\001 \001("
    "\r\022\r\n\005token\030\002 \001(\t\022\024\n\014platformType\030\003 \001(\rB\026"
    "\n\022com.dream.cube.tcpH\001b\006proto3", 710);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "LogonSvr.proto", &protobuf_RegisterTypes);
  CMDUserLogonReq::default_instance_ = new CMDUserLogonReq();
  CMDUserLogonErrResp::default_instance_ = new CMDUserLogonErrResp();
  CMDUserLogonSuccessResp::default_instance_ = new CMDUserLogonSuccessResp();
  CMDSessionTokenReq::default_instance_ = new CMDSessionTokenReq();
  CMDSessionTokenResp::default_instance_ = new CMDSessionTokenResp();
  CMDUserExistReq::default_instance_ = new CMDUserExistReq();
  CMDUserLogonReq::default_instance_->InitAsDefaultInstance();
  CMDUserLogonErrResp::default_instance_->InitAsDefaultInstance();
  CMDUserLogonSuccessResp::default_instance_->InitAsDefaultInstance();
  CMDSessionTokenReq::default_instance_->InitAsDefaultInstance();
  CMDSessionTokenResp::default_instance_->InitAsDefaultInstance();
  CMDUserExistReq::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_LogonSvr_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_LogonSvr_2eproto {
  StaticDescriptorInitializer_LogonSvr_2eproto() {
    protobuf_AddDesc_LogonSvr_2eproto();
  }
} static_descriptor_initializer_LogonSvr_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDUserLogonReq::kLoginidFieldNumber;
const int CMDUserLogonReq::kTokenFieldNumber;
const int CMDUserLogonReq::kPatternLockFieldNumber;
const int CMDUserLogonReq::kPlatformTypeFieldNumber;
const int CMDUserLogonReq::kVersionFieldNumber;
const int CMDUserLogonReq::kSerialFieldNumber;
const int CMDUserLogonReq::kMacFieldNumber;
const int CMDUserLogonReq::kMobileFieldNumber;
const int CMDUserLogonReq::kDevicemodelFieldNumber;
const int CMDUserLogonReq::kDeviceosFieldNumber;
const int CMDUserLogonReq::kHostdbFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDUserLogonReq::CMDUserLogonReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDUserLogonReq)
}

void CMDUserLogonReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDUserLogonReq::CMDUserLogonReq(const CMDUserLogonReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDUserLogonReq)
}

void CMDUserLogonReq::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  loginid_ = 0u;
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  patternlock_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  platformtype_ = 0u;
  version_ = 0u;
  serial_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mac_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mobile_ = 0u;
  devicemodel_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  deviceos_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hostdb_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CMDUserLogonReq::~CMDUserLogonReq() {
  // @@protoc_insertion_point(destructor:CMDUserLogonReq)
  SharedDtor();
}

void CMDUserLogonReq::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  patternlock_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serial_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mac_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  devicemodel_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  deviceos_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hostdb_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CMDUserLogonReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDUserLogonReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDUserLogonReq_descriptor_;
}

const CMDUserLogonReq& CMDUserLogonReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_LogonSvr_2eproto();
  return *default_instance_;
}

CMDUserLogonReq* CMDUserLogonReq::default_instance_ = NULL;

CMDUserLogonReq* CMDUserLogonReq::New(::google::protobuf::Arena* arena) const {
  CMDUserLogonReq* n = new CMDUserLogonReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDUserLogonReq::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDUserLogonReq)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDUserLogonReq, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDUserLogonReq*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(loginid_, platformtype_);
  ZR_(version_, mobile_);
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  patternlock_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serial_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mac_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  devicemodel_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  deviceos_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hostdb_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool CMDUserLogonReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDUserLogonReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 loginid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &loginid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_token;
        break;
      }

      // optional string token = 2;
      case 2: {
        if (tag == 18) {
         parse_token:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), this->token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMDUserLogonReq.token"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_patternLock;
        break;
      }

      // optional string patternLock = 3;
      case 3: {
        if (tag == 26) {
         parse_patternLock:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_patternlock()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->patternlock().data(), this->patternlock().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMDUserLogonReq.patternLock"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_platformType;
        break;
      }

      // optional uint32 platformType = 4;
      case 4: {
        if (tag == 32) {
         parse_platformType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &platformtype_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_version;
        break;
      }

      // optional uint32 version = 5;
      case 5: {
        if (tag == 40) {
         parse_version:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &version_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_serial;
        break;
      }

      // optional string serial = 6;
      case 6: {
        if (tag == 50) {
         parse_serial:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_serial()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->serial().data(), this->serial().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMDUserLogonReq.serial"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_mac;
        break;
      }

      // optional string mac = 7;
      case 7: {
        if (tag == 58) {
         parse_mac:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mac()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mac().data(), this->mac().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMDUserLogonReq.mac"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_mobile;
        break;
      }

      // optional uint32 mobile = 8;
      case 8: {
        if (tag == 64) {
         parse_mobile:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mobile_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_devicemodel;
        break;
      }

      // optional string devicemodel = 9;
      case 9: {
        if (tag == 74) {
         parse_devicemodel:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_devicemodel()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->devicemodel().data(), this->devicemodel().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMDUserLogonReq.devicemodel"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_deviceos;
        break;
      }

      // optional string deviceos = 10;
      case 10: {
        if (tag == 82) {
         parse_deviceos:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_deviceos()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->deviceos().data(), this->deviceos().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMDUserLogonReq.deviceos"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_hostdb;
        break;
      }

      // optional string hostdb = 11;
      case 11: {
        if (tag == 90) {
         parse_hostdb:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hostdb()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->hostdb().data(), this->hostdb().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMDUserLogonReq.hostdb"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDUserLogonReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDUserLogonReq)
  return false;
#undef DO_
}

void CMDUserLogonReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDUserLogonReq)
  // optional uint32 loginid = 1;
  if (this->loginid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->loginid(), output);
  }

  // optional string token = 2;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDUserLogonReq.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->token(), output);
  }

  // optional string patternLock = 3;
  if (this->patternlock().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->patternlock().data(), this->patternlock().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDUserLogonReq.patternLock");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->patternlock(), output);
  }

  // optional uint32 platformType = 4;
  if (this->platformtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->platformtype(), output);
  }

  // optional uint32 version = 5;
  if (this->version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->version(), output);
  }

  // optional string serial = 6;
  if (this->serial().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->serial().data(), this->serial().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDUserLogonReq.serial");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->serial(), output);
  }

  // optional string mac = 7;
  if (this->mac().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mac().data(), this->mac().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDUserLogonReq.mac");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->mac(), output);
  }

  // optional uint32 mobile = 8;
  if (this->mobile() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->mobile(), output);
  }

  // optional string devicemodel = 9;
  if (this->devicemodel().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->devicemodel().data(), this->devicemodel().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDUserLogonReq.devicemodel");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->devicemodel(), output);
  }

  // optional string deviceos = 10;
  if (this->deviceos().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deviceos().data(), this->deviceos().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDUserLogonReq.deviceos");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->deviceos(), output);
  }

  // optional string hostdb = 11;
  if (this->hostdb().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hostdb().data(), this->hostdb().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDUserLogonReq.hostdb");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->hostdb(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDUserLogonReq)
}

::google::protobuf::uint8* CMDUserLogonReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDUserLogonReq)
  // optional uint32 loginid = 1;
  if (this->loginid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->loginid(), target);
  }

  // optional string token = 2;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDUserLogonReq.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->token(), target);
  }

  // optional string patternLock = 3;
  if (this->patternlock().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->patternlock().data(), this->patternlock().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDUserLogonReq.patternLock");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->patternlock(), target);
  }

  // optional uint32 platformType = 4;
  if (this->platformtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->platformtype(), target);
  }

  // optional uint32 version = 5;
  if (this->version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->version(), target);
  }

  // optional string serial = 6;
  if (this->serial().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->serial().data(), this->serial().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDUserLogonReq.serial");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->serial(), target);
  }

  // optional string mac = 7;
  if (this->mac().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mac().data(), this->mac().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDUserLogonReq.mac");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->mac(), target);
  }

  // optional uint32 mobile = 8;
  if (this->mobile() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->mobile(), target);
  }

  // optional string devicemodel = 9;
  if (this->devicemodel().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->devicemodel().data(), this->devicemodel().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDUserLogonReq.devicemodel");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->devicemodel(), target);
  }

  // optional string deviceos = 10;
  if (this->deviceos().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deviceos().data(), this->deviceos().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDUserLogonReq.deviceos");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->deviceos(), target);
  }

  // optional string hostdb = 11;
  if (this->hostdb().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hostdb().data(), this->hostdb().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDUserLogonReq.hostdb");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->hostdb(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDUserLogonReq)
  return target;
}

int CMDUserLogonReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDUserLogonReq)
  int total_size = 0;

  // optional uint32 loginid = 1;
  if (this->loginid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->loginid());
  }

  // optional string token = 2;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  // optional string patternLock = 3;
  if (this->patternlock().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->patternlock());
  }

  // optional uint32 platformType = 4;
  if (this->platformtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->platformtype());
  }

  // optional uint32 version = 5;
  if (this->version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->version());
  }

  // optional string serial = 6;
  if (this->serial().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->serial());
  }

  // optional string mac = 7;
  if (this->mac().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mac());
  }

  // optional uint32 mobile = 8;
  if (this->mobile() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mobile());
  }

  // optional string devicemodel = 9;
  if (this->devicemodel().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->devicemodel());
  }

  // optional string deviceos = 10;
  if (this->deviceos().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->deviceos());
  }

  // optional string hostdb = 11;
  if (this->hostdb().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->hostdb());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDUserLogonReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDUserLogonReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDUserLogonReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDUserLogonReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDUserLogonReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDUserLogonReq)
    MergeFrom(*source);
  }
}

void CMDUserLogonReq::MergeFrom(const CMDUserLogonReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDUserLogonReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.loginid() != 0) {
    set_loginid(from.loginid());
  }
  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.patternlock().size() > 0) {

    patternlock_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.patternlock_);
  }
  if (from.platformtype() != 0) {
    set_platformtype(from.platformtype());
  }
  if (from.version() != 0) {
    set_version(from.version());
  }
  if (from.serial().size() > 0) {

    serial_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serial_);
  }
  if (from.mac().size() > 0) {

    mac_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mac_);
  }
  if (from.mobile() != 0) {
    set_mobile(from.mobile());
  }
  if (from.devicemodel().size() > 0) {

    devicemodel_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.devicemodel_);
  }
  if (from.deviceos().size() > 0) {

    deviceos_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deviceos_);
  }
  if (from.hostdb().size() > 0) {

    hostdb_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hostdb_);
  }
}

void CMDUserLogonReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDUserLogonReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDUserLogonReq::CopyFrom(const CMDUserLogonReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDUserLogonReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDUserLogonReq::IsInitialized() const {

  return true;
}

void CMDUserLogonReq::Swap(CMDUserLogonReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDUserLogonReq::InternalSwap(CMDUserLogonReq* other) {
  std::swap(loginid_, other->loginid_);
  token_.Swap(&other->token_);
  patternlock_.Swap(&other->patternlock_);
  std::swap(platformtype_, other->platformtype_);
  std::swap(version_, other->version_);
  serial_.Swap(&other->serial_);
  mac_.Swap(&other->mac_);
  std::swap(mobile_, other->mobile_);
  devicemodel_.Swap(&other->devicemodel_);
  deviceos_.Swap(&other->deviceos_);
  hostdb_.Swap(&other->hostdb_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDUserLogonReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDUserLogonReq_descriptor_;
  metadata.reflection = CMDUserLogonReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDUserLogonReq

// optional uint32 loginid = 1;
void CMDUserLogonReq::clear_loginid() {
  loginid_ = 0u;
}
 ::google::protobuf::uint32 CMDUserLogonReq::loginid() const {
  // @@protoc_insertion_point(field_get:CMDUserLogonReq.loginid)
  return loginid_;
}
 void CMDUserLogonReq::set_loginid(::google::protobuf::uint32 value) {
  
  loginid_ = value;
  // @@protoc_insertion_point(field_set:CMDUserLogonReq.loginid)
}

// optional string token = 2;
void CMDUserLogonReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CMDUserLogonReq::token() const {
  // @@protoc_insertion_point(field_get:CMDUserLogonReq.token)
  return token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDUserLogonReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDUserLogonReq.token)
}
 void CMDUserLogonReq::set_token(const char* value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDUserLogonReq.token)
}
 void CMDUserLogonReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDUserLogonReq.token)
}
 ::std::string* CMDUserLogonReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:CMDUserLogonReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMDUserLogonReq::release_token() {
  // @@protoc_insertion_point(field_release:CMDUserLogonReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDUserLogonReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:CMDUserLogonReq.token)
}

// optional string patternLock = 3;
void CMDUserLogonReq::clear_patternlock() {
  patternlock_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CMDUserLogonReq::patternlock() const {
  // @@protoc_insertion_point(field_get:CMDUserLogonReq.patternLock)
  return patternlock_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDUserLogonReq::set_patternlock(const ::std::string& value) {
  
  patternlock_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDUserLogonReq.patternLock)
}
 void CMDUserLogonReq::set_patternlock(const char* value) {
  
  patternlock_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDUserLogonReq.patternLock)
}
 void CMDUserLogonReq::set_patternlock(const char* value, size_t size) {
  
  patternlock_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDUserLogonReq.patternLock)
}
 ::std::string* CMDUserLogonReq::mutable_patternlock() {
  
  // @@protoc_insertion_point(field_mutable:CMDUserLogonReq.patternLock)
  return patternlock_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMDUserLogonReq::release_patternlock() {
  // @@protoc_insertion_point(field_release:CMDUserLogonReq.patternLock)
  
  return patternlock_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDUserLogonReq::set_allocated_patternlock(::std::string* patternlock) {
  if (patternlock != NULL) {
    
  } else {
    
  }
  patternlock_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), patternlock);
  // @@protoc_insertion_point(field_set_allocated:CMDUserLogonReq.patternLock)
}

// optional uint32 platformType = 4;
void CMDUserLogonReq::clear_platformtype() {
  platformtype_ = 0u;
}
 ::google::protobuf::uint32 CMDUserLogonReq::platformtype() const {
  // @@protoc_insertion_point(field_get:CMDUserLogonReq.platformType)
  return platformtype_;
}
 void CMDUserLogonReq::set_platformtype(::google::protobuf::uint32 value) {
  
  platformtype_ = value;
  // @@protoc_insertion_point(field_set:CMDUserLogonReq.platformType)
}

// optional uint32 version = 5;
void CMDUserLogonReq::clear_version() {
  version_ = 0u;
}
 ::google::protobuf::uint32 CMDUserLogonReq::version() const {
  // @@protoc_insertion_point(field_get:CMDUserLogonReq.version)
  return version_;
}
 void CMDUserLogonReq::set_version(::google::protobuf::uint32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:CMDUserLogonReq.version)
}

// optional string serial = 6;
void CMDUserLogonReq::clear_serial() {
  serial_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CMDUserLogonReq::serial() const {
  // @@protoc_insertion_point(field_get:CMDUserLogonReq.serial)
  return serial_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDUserLogonReq::set_serial(const ::std::string& value) {
  
  serial_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDUserLogonReq.serial)
}
 void CMDUserLogonReq::set_serial(const char* value) {
  
  serial_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDUserLogonReq.serial)
}
 void CMDUserLogonReq::set_serial(const char* value, size_t size) {
  
  serial_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDUserLogonReq.serial)
}
 ::std::string* CMDUserLogonReq::mutable_serial() {
  
  // @@protoc_insertion_point(field_mutable:CMDUserLogonReq.serial)
  return serial_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMDUserLogonReq::release_serial() {
  // @@protoc_insertion_point(field_release:CMDUserLogonReq.serial)
  
  return serial_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDUserLogonReq::set_allocated_serial(::std::string* serial) {
  if (serial != NULL) {
    
  } else {
    
  }
  serial_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), serial);
  // @@protoc_insertion_point(field_set_allocated:CMDUserLogonReq.serial)
}

// optional string mac = 7;
void CMDUserLogonReq::clear_mac() {
  mac_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CMDUserLogonReq::mac() const {
  // @@protoc_insertion_point(field_get:CMDUserLogonReq.mac)
  return mac_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDUserLogonReq::set_mac(const ::std::string& value) {
  
  mac_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDUserLogonReq.mac)
}
 void CMDUserLogonReq::set_mac(const char* value) {
  
  mac_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDUserLogonReq.mac)
}
 void CMDUserLogonReq::set_mac(const char* value, size_t size) {
  
  mac_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDUserLogonReq.mac)
}
 ::std::string* CMDUserLogonReq::mutable_mac() {
  
  // @@protoc_insertion_point(field_mutable:CMDUserLogonReq.mac)
  return mac_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMDUserLogonReq::release_mac() {
  // @@protoc_insertion_point(field_release:CMDUserLogonReq.mac)
  
  return mac_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDUserLogonReq::set_allocated_mac(::std::string* mac) {
  if (mac != NULL) {
    
  } else {
    
  }
  mac_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mac);
  // @@protoc_insertion_point(field_set_allocated:CMDUserLogonReq.mac)
}

// optional uint32 mobile = 8;
void CMDUserLogonReq::clear_mobile() {
  mobile_ = 0u;
}
 ::google::protobuf::uint32 CMDUserLogonReq::mobile() const {
  // @@protoc_insertion_point(field_get:CMDUserLogonReq.mobile)
  return mobile_;
}
 void CMDUserLogonReq::set_mobile(::google::protobuf::uint32 value) {
  
  mobile_ = value;
  // @@protoc_insertion_point(field_set:CMDUserLogonReq.mobile)
}

// optional string devicemodel = 9;
void CMDUserLogonReq::clear_devicemodel() {
  devicemodel_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CMDUserLogonReq::devicemodel() const {
  // @@protoc_insertion_point(field_get:CMDUserLogonReq.devicemodel)
  return devicemodel_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDUserLogonReq::set_devicemodel(const ::std::string& value) {
  
  devicemodel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDUserLogonReq.devicemodel)
}
 void CMDUserLogonReq::set_devicemodel(const char* value) {
  
  devicemodel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDUserLogonReq.devicemodel)
}
 void CMDUserLogonReq::set_devicemodel(const char* value, size_t size) {
  
  devicemodel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDUserLogonReq.devicemodel)
}
 ::std::string* CMDUserLogonReq::mutable_devicemodel() {
  
  // @@protoc_insertion_point(field_mutable:CMDUserLogonReq.devicemodel)
  return devicemodel_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMDUserLogonReq::release_devicemodel() {
  // @@protoc_insertion_point(field_release:CMDUserLogonReq.devicemodel)
  
  return devicemodel_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDUserLogonReq::set_allocated_devicemodel(::std::string* devicemodel) {
  if (devicemodel != NULL) {
    
  } else {
    
  }
  devicemodel_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), devicemodel);
  // @@protoc_insertion_point(field_set_allocated:CMDUserLogonReq.devicemodel)
}

// optional string deviceos = 10;
void CMDUserLogonReq::clear_deviceos() {
  deviceos_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CMDUserLogonReq::deviceos() const {
  // @@protoc_insertion_point(field_get:CMDUserLogonReq.deviceos)
  return deviceos_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDUserLogonReq::set_deviceos(const ::std::string& value) {
  
  deviceos_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDUserLogonReq.deviceos)
}
 void CMDUserLogonReq::set_deviceos(const char* value) {
  
  deviceos_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDUserLogonReq.deviceos)
}
 void CMDUserLogonReq::set_deviceos(const char* value, size_t size) {
  
  deviceos_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDUserLogonReq.deviceos)
}
 ::std::string* CMDUserLogonReq::mutable_deviceos() {
  
  // @@protoc_insertion_point(field_mutable:CMDUserLogonReq.deviceos)
  return deviceos_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMDUserLogonReq::release_deviceos() {
  // @@protoc_insertion_point(field_release:CMDUserLogonReq.deviceos)
  
  return deviceos_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDUserLogonReq::set_allocated_deviceos(::std::string* deviceos) {
  if (deviceos != NULL) {
    
  } else {
    
  }
  deviceos_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), deviceos);
  // @@protoc_insertion_point(field_set_allocated:CMDUserLogonReq.deviceos)
}

// optional string hostdb = 11;
void CMDUserLogonReq::clear_hostdb() {
  hostdb_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CMDUserLogonReq::hostdb() const {
  // @@protoc_insertion_point(field_get:CMDUserLogonReq.hostdb)
  return hostdb_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDUserLogonReq::set_hostdb(const ::std::string& value) {
  
  hostdb_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDUserLogonReq.hostdb)
}
 void CMDUserLogonReq::set_hostdb(const char* value) {
  
  hostdb_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDUserLogonReq.hostdb)
}
 void CMDUserLogonReq::set_hostdb(const char* value, size_t size) {
  
  hostdb_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDUserLogonReq.hostdb)
}
 ::std::string* CMDUserLogonReq::mutable_hostdb() {
  
  // @@protoc_insertion_point(field_mutable:CMDUserLogonReq.hostdb)
  return hostdb_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMDUserLogonReq::release_hostdb() {
  // @@protoc_insertion_point(field_release:CMDUserLogonReq.hostdb)
  
  return hostdb_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDUserLogonReq::set_allocated_hostdb(::std::string* hostdb) {
  if (hostdb != NULL) {
    
  } else {
    
  }
  hostdb_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hostdb);
  // @@protoc_insertion_point(field_set_allocated:CMDUserLogonReq.hostdb)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDUserLogonErrResp::kErrInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDUserLogonErrResp::CMDUserLogonErrResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDUserLogonErrResp)
}

void CMDUserLogonErrResp::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  errinfo_ = const_cast< ::CMDErrCode*>(&::CMDErrCode::default_instance());
}

CMDUserLogonErrResp::CMDUserLogonErrResp(const CMDUserLogonErrResp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDUserLogonErrResp)
}

void CMDUserLogonErrResp::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  errinfo_ = NULL;
}

CMDUserLogonErrResp::~CMDUserLogonErrResp() {
  // @@protoc_insertion_point(destructor:CMDUserLogonErrResp)
  SharedDtor();
}

void CMDUserLogonErrResp::SharedDtor() {
  if (this != default_instance_) {
    delete errinfo_;
  }
}

void CMDUserLogonErrResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDUserLogonErrResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDUserLogonErrResp_descriptor_;
}

const CMDUserLogonErrResp& CMDUserLogonErrResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_LogonSvr_2eproto();
  return *default_instance_;
}

CMDUserLogonErrResp* CMDUserLogonErrResp::default_instance_ = NULL;

CMDUserLogonErrResp* CMDUserLogonErrResp::New(::google::protobuf::Arena* arena) const {
  CMDUserLogonErrResp* n = new CMDUserLogonErrResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDUserLogonErrResp::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDUserLogonErrResp)
  if (GetArenaNoVirtual() == NULL && errinfo_ != NULL) delete errinfo_;
  errinfo_ = NULL;
}

bool CMDUserLogonErrResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDUserLogonErrResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CMDErrCode errInfo = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_errinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDUserLogonErrResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDUserLogonErrResp)
  return false;
#undef DO_
}

void CMDUserLogonErrResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDUserLogonErrResp)
  // optional .CMDErrCode errInfo = 1;
  if (this->has_errinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->errinfo_, output);
  }

  // @@protoc_insertion_point(serialize_end:CMDUserLogonErrResp)
}

::google::protobuf::uint8* CMDUserLogonErrResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDUserLogonErrResp)
  // optional .CMDErrCode errInfo = 1;
  if (this->has_errinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->errinfo_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDUserLogonErrResp)
  return target;
}

int CMDUserLogonErrResp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDUserLogonErrResp)
  int total_size = 0;

  // optional .CMDErrCode errInfo = 1;
  if (this->has_errinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->errinfo_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDUserLogonErrResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDUserLogonErrResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDUserLogonErrResp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDUserLogonErrResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDUserLogonErrResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDUserLogonErrResp)
    MergeFrom(*source);
  }
}

void CMDUserLogonErrResp::MergeFrom(const CMDUserLogonErrResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDUserLogonErrResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.has_errinfo()) {
    mutable_errinfo()->::CMDErrCode::MergeFrom(from.errinfo());
  }
}

void CMDUserLogonErrResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDUserLogonErrResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDUserLogonErrResp::CopyFrom(const CMDUserLogonErrResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDUserLogonErrResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDUserLogonErrResp::IsInitialized() const {

  return true;
}

void CMDUserLogonErrResp::Swap(CMDUserLogonErrResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDUserLogonErrResp::InternalSwap(CMDUserLogonErrResp* other) {
  std::swap(errinfo_, other->errinfo_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDUserLogonErrResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDUserLogonErrResp_descriptor_;
  metadata.reflection = CMDUserLogonErrResp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDUserLogonErrResp

// optional .CMDErrCode errInfo = 1;
bool CMDUserLogonErrResp::has_errinfo() const {
  return !_is_default_instance_ && errinfo_ != NULL;
}
void CMDUserLogonErrResp::clear_errinfo() {
  if (GetArenaNoVirtual() == NULL && errinfo_ != NULL) delete errinfo_;
  errinfo_ = NULL;
}
const ::CMDErrCode& CMDUserLogonErrResp::errinfo() const {
  // @@protoc_insertion_point(field_get:CMDUserLogonErrResp.errInfo)
  return errinfo_ != NULL ? *errinfo_ : *default_instance_->errinfo_;
}
::CMDErrCode* CMDUserLogonErrResp::mutable_errinfo() {
  
  if (errinfo_ == NULL) {
    errinfo_ = new ::CMDErrCode;
  }
  // @@protoc_insertion_point(field_mutable:CMDUserLogonErrResp.errInfo)
  return errinfo_;
}
::CMDErrCode* CMDUserLogonErrResp::release_errinfo() {
  // @@protoc_insertion_point(field_release:CMDUserLogonErrResp.errInfo)
  
  ::CMDErrCode* temp = errinfo_;
  errinfo_ = NULL;
  return temp;
}
void CMDUserLogonErrResp::set_allocated_errinfo(::CMDErrCode* errinfo) {
  delete errinfo_;
  errinfo_ = errinfo;
  if (errinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDUserLogonErrResp.errInfo)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDUserLogonSuccessResp::kUseridFieldNumber;
const int CMDUserLogonSuccessResp::kHeadaddFieldNumber;
const int CMDUserLogonSuccessResp::kGenderFieldNumber;
const int CMDUserLogonSuccessResp::kUseraliasFieldNumber;
const int CMDUserLogonSuccessResp::kLoginplateformFieldNumber;
const int CMDUserLogonSuccessResp::kTelFieldNumber;
const int CMDUserLogonSuccessResp::kSessiontokenFieldNumber;
const int CMDUserLogonSuccessResp::kValidtimeFieldNumber;
const int CMDUserLogonSuccessResp::kServAreaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDUserLogonSuccessResp::CMDUserLogonSuccessResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDUserLogonSuccessResp)
}

void CMDUserLogonSuccessResp::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDUserLogonSuccessResp::CMDUserLogonSuccessResp(const CMDUserLogonSuccessResp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDUserLogonSuccessResp)
}

void CMDUserLogonSuccessResp::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  userid_ = 0u;
  headadd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gender_ = 0u;
  useralias_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  loginplateform_ = 0u;
  tel_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sessiontoken_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  validtime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  servarea_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CMDUserLogonSuccessResp::~CMDUserLogonSuccessResp() {
  // @@protoc_insertion_point(destructor:CMDUserLogonSuccessResp)
  SharedDtor();
}

void CMDUserLogonSuccessResp::SharedDtor() {
  headadd_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  useralias_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tel_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sessiontoken_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  validtime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  servarea_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CMDUserLogonSuccessResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDUserLogonSuccessResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDUserLogonSuccessResp_descriptor_;
}

const CMDUserLogonSuccessResp& CMDUserLogonSuccessResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_LogonSvr_2eproto();
  return *default_instance_;
}

CMDUserLogonSuccessResp* CMDUserLogonSuccessResp::default_instance_ = NULL;

CMDUserLogonSuccessResp* CMDUserLogonSuccessResp::New(::google::protobuf::Arena* arena) const {
  CMDUserLogonSuccessResp* n = new CMDUserLogonSuccessResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDUserLogonSuccessResp::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDUserLogonSuccessResp)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDUserLogonSuccessResp, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDUserLogonSuccessResp*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(userid_, gender_);
  headadd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  useralias_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  loginplateform_ = 0u;
  tel_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sessiontoken_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  validtime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  servarea_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool CMDUserLogonSuccessResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDUserLogonSuccessResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 userid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_headadd;
        break;
      }

      // optional string headadd = 2;
      case 2: {
        if (tag == 18) {
         parse_headadd:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_headadd()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->headadd().data(), this->headadd().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMDUserLogonSuccessResp.headadd"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_gender;
        break;
      }

      // optional uint32 gender = 3;
      case 3: {
        if (tag == 24) {
         parse_gender:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gender_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_useralias;
        break;
      }

      // optional string useralias = 4;
      case 4: {
        if (tag == 34) {
         parse_useralias:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_useralias()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->useralias().data(), this->useralias().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMDUserLogonSuccessResp.useralias"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_loginplateform;
        break;
      }

      // optional uint32 loginplateform = 5;
      case 5: {
        if (tag == 40) {
         parse_loginplateform:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &loginplateform_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_tel;
        break;
      }

      // optional string tel = 6;
      case 6: {
        if (tag == 50) {
         parse_tel:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tel()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tel().data(), this->tel().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMDUserLogonSuccessResp.tel"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_sessiontoken;
        break;
      }

      // optional string sessiontoken = 7;
      case 7: {
        if (tag == 58) {
         parse_sessiontoken:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sessiontoken()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sessiontoken().data(), this->sessiontoken().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMDUserLogonSuccessResp.sessiontoken"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_validtime;
        break;
      }

      // optional string validtime = 8;
      case 8: {
        if (tag == 66) {
         parse_validtime:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_validtime()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->validtime().data(), this->validtime().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMDUserLogonSuccessResp.validtime"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_servArea;
        break;
      }

      // optional string servArea = 9;
      case 9: {
        if (tag == 74) {
         parse_servArea:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_servarea()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->servarea().data(), this->servarea().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMDUserLogonSuccessResp.servArea"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDUserLogonSuccessResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDUserLogonSuccessResp)
  return false;
#undef DO_
}

void CMDUserLogonSuccessResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDUserLogonSuccessResp)
  // optional uint32 userid = 1;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->userid(), output);
  }

  // optional string headadd = 2;
  if (this->headadd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->headadd().data(), this->headadd().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDUserLogonSuccessResp.headadd");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->headadd(), output);
  }

  // optional uint32 gender = 3;
  if (this->gender() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->gender(), output);
  }

  // optional string useralias = 4;
  if (this->useralias().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->useralias().data(), this->useralias().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDUserLogonSuccessResp.useralias");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->useralias(), output);
  }

  // optional uint32 loginplateform = 5;
  if (this->loginplateform() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->loginplateform(), output);
  }

  // optional string tel = 6;
  if (this->tel().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tel().data(), this->tel().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDUserLogonSuccessResp.tel");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->tel(), output);
  }

  // optional string sessiontoken = 7;
  if (this->sessiontoken().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sessiontoken().data(), this->sessiontoken().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDUserLogonSuccessResp.sessiontoken");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->sessiontoken(), output);
  }

  // optional string validtime = 8;
  if (this->validtime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->validtime().data(), this->validtime().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDUserLogonSuccessResp.validtime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->validtime(), output);
  }

  // optional string servArea = 9;
  if (this->servarea().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->servarea().data(), this->servarea().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDUserLogonSuccessResp.servArea");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->servarea(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDUserLogonSuccessResp)
}

::google::protobuf::uint8* CMDUserLogonSuccessResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDUserLogonSuccessResp)
  // optional uint32 userid = 1;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->userid(), target);
  }

  // optional string headadd = 2;
  if (this->headadd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->headadd().data(), this->headadd().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDUserLogonSuccessResp.headadd");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->headadd(), target);
  }

  // optional uint32 gender = 3;
  if (this->gender() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->gender(), target);
  }

  // optional string useralias = 4;
  if (this->useralias().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->useralias().data(), this->useralias().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDUserLogonSuccessResp.useralias");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->useralias(), target);
  }

  // optional uint32 loginplateform = 5;
  if (this->loginplateform() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->loginplateform(), target);
  }

  // optional string tel = 6;
  if (this->tel().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tel().data(), this->tel().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDUserLogonSuccessResp.tel");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->tel(), target);
  }

  // optional string sessiontoken = 7;
  if (this->sessiontoken().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sessiontoken().data(), this->sessiontoken().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDUserLogonSuccessResp.sessiontoken");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->sessiontoken(), target);
  }

  // optional string validtime = 8;
  if (this->validtime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->validtime().data(), this->validtime().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDUserLogonSuccessResp.validtime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->validtime(), target);
  }

  // optional string servArea = 9;
  if (this->servarea().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->servarea().data(), this->servarea().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDUserLogonSuccessResp.servArea");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->servarea(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDUserLogonSuccessResp)
  return target;
}

int CMDUserLogonSuccessResp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDUserLogonSuccessResp)
  int total_size = 0;

  // optional uint32 userid = 1;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userid());
  }

  // optional string headadd = 2;
  if (this->headadd().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->headadd());
  }

  // optional uint32 gender = 3;
  if (this->gender() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gender());
  }

  // optional string useralias = 4;
  if (this->useralias().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->useralias());
  }

  // optional uint32 loginplateform = 5;
  if (this->loginplateform() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->loginplateform());
  }

  // optional string tel = 6;
  if (this->tel().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tel());
  }

  // optional string sessiontoken = 7;
  if (this->sessiontoken().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sessiontoken());
  }

  // optional string validtime = 8;
  if (this->validtime().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->validtime());
  }

  // optional string servArea = 9;
  if (this->servarea().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->servarea());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDUserLogonSuccessResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDUserLogonSuccessResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDUserLogonSuccessResp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDUserLogonSuccessResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDUserLogonSuccessResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDUserLogonSuccessResp)
    MergeFrom(*source);
  }
}

void CMDUserLogonSuccessResp::MergeFrom(const CMDUserLogonSuccessResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDUserLogonSuccessResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.headadd().size() > 0) {

    headadd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.headadd_);
  }
  if (from.gender() != 0) {
    set_gender(from.gender());
  }
  if (from.useralias().size() > 0) {

    useralias_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.useralias_);
  }
  if (from.loginplateform() != 0) {
    set_loginplateform(from.loginplateform());
  }
  if (from.tel().size() > 0) {

    tel_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tel_);
  }
  if (from.sessiontoken().size() > 0) {

    sessiontoken_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sessiontoken_);
  }
  if (from.validtime().size() > 0) {

    validtime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.validtime_);
  }
  if (from.servarea().size() > 0) {

    servarea_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.servarea_);
  }
}

void CMDUserLogonSuccessResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDUserLogonSuccessResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDUserLogonSuccessResp::CopyFrom(const CMDUserLogonSuccessResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDUserLogonSuccessResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDUserLogonSuccessResp::IsInitialized() const {

  return true;
}

void CMDUserLogonSuccessResp::Swap(CMDUserLogonSuccessResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDUserLogonSuccessResp::InternalSwap(CMDUserLogonSuccessResp* other) {
  std::swap(userid_, other->userid_);
  headadd_.Swap(&other->headadd_);
  std::swap(gender_, other->gender_);
  useralias_.Swap(&other->useralias_);
  std::swap(loginplateform_, other->loginplateform_);
  tel_.Swap(&other->tel_);
  sessiontoken_.Swap(&other->sessiontoken_);
  validtime_.Swap(&other->validtime_);
  servarea_.Swap(&other->servarea_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDUserLogonSuccessResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDUserLogonSuccessResp_descriptor_;
  metadata.reflection = CMDUserLogonSuccessResp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDUserLogonSuccessResp

// optional uint32 userid = 1;
void CMDUserLogonSuccessResp::clear_userid() {
  userid_ = 0u;
}
 ::google::protobuf::uint32 CMDUserLogonSuccessResp::userid() const {
  // @@protoc_insertion_point(field_get:CMDUserLogonSuccessResp.userid)
  return userid_;
}
 void CMDUserLogonSuccessResp::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDUserLogonSuccessResp.userid)
}

// optional string headadd = 2;
void CMDUserLogonSuccessResp::clear_headadd() {
  headadd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CMDUserLogonSuccessResp::headadd() const {
  // @@protoc_insertion_point(field_get:CMDUserLogonSuccessResp.headadd)
  return headadd_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDUserLogonSuccessResp::set_headadd(const ::std::string& value) {
  
  headadd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDUserLogonSuccessResp.headadd)
}
 void CMDUserLogonSuccessResp::set_headadd(const char* value) {
  
  headadd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDUserLogonSuccessResp.headadd)
}
 void CMDUserLogonSuccessResp::set_headadd(const char* value, size_t size) {
  
  headadd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDUserLogonSuccessResp.headadd)
}
 ::std::string* CMDUserLogonSuccessResp::mutable_headadd() {
  
  // @@protoc_insertion_point(field_mutable:CMDUserLogonSuccessResp.headadd)
  return headadd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMDUserLogonSuccessResp::release_headadd() {
  // @@protoc_insertion_point(field_release:CMDUserLogonSuccessResp.headadd)
  
  return headadd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDUserLogonSuccessResp::set_allocated_headadd(::std::string* headadd) {
  if (headadd != NULL) {
    
  } else {
    
  }
  headadd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), headadd);
  // @@protoc_insertion_point(field_set_allocated:CMDUserLogonSuccessResp.headadd)
}

// optional uint32 gender = 3;
void CMDUserLogonSuccessResp::clear_gender() {
  gender_ = 0u;
}
 ::google::protobuf::uint32 CMDUserLogonSuccessResp::gender() const {
  // @@protoc_insertion_point(field_get:CMDUserLogonSuccessResp.gender)
  return gender_;
}
 void CMDUserLogonSuccessResp::set_gender(::google::protobuf::uint32 value) {
  
  gender_ = value;
  // @@protoc_insertion_point(field_set:CMDUserLogonSuccessResp.gender)
}

// optional string useralias = 4;
void CMDUserLogonSuccessResp::clear_useralias() {
  useralias_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CMDUserLogonSuccessResp::useralias() const {
  // @@protoc_insertion_point(field_get:CMDUserLogonSuccessResp.useralias)
  return useralias_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDUserLogonSuccessResp::set_useralias(const ::std::string& value) {
  
  useralias_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDUserLogonSuccessResp.useralias)
}
 void CMDUserLogonSuccessResp::set_useralias(const char* value) {
  
  useralias_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDUserLogonSuccessResp.useralias)
}
 void CMDUserLogonSuccessResp::set_useralias(const char* value, size_t size) {
  
  useralias_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDUserLogonSuccessResp.useralias)
}
 ::std::string* CMDUserLogonSuccessResp::mutable_useralias() {
  
  // @@protoc_insertion_point(field_mutable:CMDUserLogonSuccessResp.useralias)
  return useralias_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMDUserLogonSuccessResp::release_useralias() {
  // @@protoc_insertion_point(field_release:CMDUserLogonSuccessResp.useralias)
  
  return useralias_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDUserLogonSuccessResp::set_allocated_useralias(::std::string* useralias) {
  if (useralias != NULL) {
    
  } else {
    
  }
  useralias_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), useralias);
  // @@protoc_insertion_point(field_set_allocated:CMDUserLogonSuccessResp.useralias)
}

// optional uint32 loginplateform = 5;
void CMDUserLogonSuccessResp::clear_loginplateform() {
  loginplateform_ = 0u;
}
 ::google::protobuf::uint32 CMDUserLogonSuccessResp::loginplateform() const {
  // @@protoc_insertion_point(field_get:CMDUserLogonSuccessResp.loginplateform)
  return loginplateform_;
}
 void CMDUserLogonSuccessResp::set_loginplateform(::google::protobuf::uint32 value) {
  
  loginplateform_ = value;
  // @@protoc_insertion_point(field_set:CMDUserLogonSuccessResp.loginplateform)
}

// optional string tel = 6;
void CMDUserLogonSuccessResp::clear_tel() {
  tel_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CMDUserLogonSuccessResp::tel() const {
  // @@protoc_insertion_point(field_get:CMDUserLogonSuccessResp.tel)
  return tel_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDUserLogonSuccessResp::set_tel(const ::std::string& value) {
  
  tel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDUserLogonSuccessResp.tel)
}
 void CMDUserLogonSuccessResp::set_tel(const char* value) {
  
  tel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDUserLogonSuccessResp.tel)
}
 void CMDUserLogonSuccessResp::set_tel(const char* value, size_t size) {
  
  tel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDUserLogonSuccessResp.tel)
}
 ::std::string* CMDUserLogonSuccessResp::mutable_tel() {
  
  // @@protoc_insertion_point(field_mutable:CMDUserLogonSuccessResp.tel)
  return tel_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMDUserLogonSuccessResp::release_tel() {
  // @@protoc_insertion_point(field_release:CMDUserLogonSuccessResp.tel)
  
  return tel_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDUserLogonSuccessResp::set_allocated_tel(::std::string* tel) {
  if (tel != NULL) {
    
  } else {
    
  }
  tel_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tel);
  // @@protoc_insertion_point(field_set_allocated:CMDUserLogonSuccessResp.tel)
}

// optional string sessiontoken = 7;
void CMDUserLogonSuccessResp::clear_sessiontoken() {
  sessiontoken_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CMDUserLogonSuccessResp::sessiontoken() const {
  // @@protoc_insertion_point(field_get:CMDUserLogonSuccessResp.sessiontoken)
  return sessiontoken_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDUserLogonSuccessResp::set_sessiontoken(const ::std::string& value) {
  
  sessiontoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDUserLogonSuccessResp.sessiontoken)
}
 void CMDUserLogonSuccessResp::set_sessiontoken(const char* value) {
  
  sessiontoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDUserLogonSuccessResp.sessiontoken)
}
 void CMDUserLogonSuccessResp::set_sessiontoken(const char* value, size_t size) {
  
  sessiontoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDUserLogonSuccessResp.sessiontoken)
}
 ::std::string* CMDUserLogonSuccessResp::mutable_sessiontoken() {
  
  // @@protoc_insertion_point(field_mutable:CMDUserLogonSuccessResp.sessiontoken)
  return sessiontoken_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMDUserLogonSuccessResp::release_sessiontoken() {
  // @@protoc_insertion_point(field_release:CMDUserLogonSuccessResp.sessiontoken)
  
  return sessiontoken_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDUserLogonSuccessResp::set_allocated_sessiontoken(::std::string* sessiontoken) {
  if (sessiontoken != NULL) {
    
  } else {
    
  }
  sessiontoken_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sessiontoken);
  // @@protoc_insertion_point(field_set_allocated:CMDUserLogonSuccessResp.sessiontoken)
}

// optional string validtime = 8;
void CMDUserLogonSuccessResp::clear_validtime() {
  validtime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CMDUserLogonSuccessResp::validtime() const {
  // @@protoc_insertion_point(field_get:CMDUserLogonSuccessResp.validtime)
  return validtime_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDUserLogonSuccessResp::set_validtime(const ::std::string& value) {
  
  validtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDUserLogonSuccessResp.validtime)
}
 void CMDUserLogonSuccessResp::set_validtime(const char* value) {
  
  validtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDUserLogonSuccessResp.validtime)
}
 void CMDUserLogonSuccessResp::set_validtime(const char* value, size_t size) {
  
  validtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDUserLogonSuccessResp.validtime)
}
 ::std::string* CMDUserLogonSuccessResp::mutable_validtime() {
  
  // @@protoc_insertion_point(field_mutable:CMDUserLogonSuccessResp.validtime)
  return validtime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMDUserLogonSuccessResp::release_validtime() {
  // @@protoc_insertion_point(field_release:CMDUserLogonSuccessResp.validtime)
  
  return validtime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDUserLogonSuccessResp::set_allocated_validtime(::std::string* validtime) {
  if (validtime != NULL) {
    
  } else {
    
  }
  validtime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), validtime);
  // @@protoc_insertion_point(field_set_allocated:CMDUserLogonSuccessResp.validtime)
}

// optional string servArea = 9;
void CMDUserLogonSuccessResp::clear_servarea() {
  servarea_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CMDUserLogonSuccessResp::servarea() const {
  // @@protoc_insertion_point(field_get:CMDUserLogonSuccessResp.servArea)
  return servarea_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDUserLogonSuccessResp::set_servarea(const ::std::string& value) {
  
  servarea_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDUserLogonSuccessResp.servArea)
}
 void CMDUserLogonSuccessResp::set_servarea(const char* value) {
  
  servarea_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDUserLogonSuccessResp.servArea)
}
 void CMDUserLogonSuccessResp::set_servarea(const char* value, size_t size) {
  
  servarea_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDUserLogonSuccessResp.servArea)
}
 ::std::string* CMDUserLogonSuccessResp::mutable_servarea() {
  
  // @@protoc_insertion_point(field_mutable:CMDUserLogonSuccessResp.servArea)
  return servarea_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMDUserLogonSuccessResp::release_servarea() {
  // @@protoc_insertion_point(field_release:CMDUserLogonSuccessResp.servArea)
  
  return servarea_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDUserLogonSuccessResp::set_allocated_servarea(::std::string* servarea) {
  if (servarea != NULL) {
    
  } else {
    
  }
  servarea_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), servarea);
  // @@protoc_insertion_point(field_set_allocated:CMDUserLogonSuccessResp.servArea)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDSessionTokenReq::kUseridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDSessionTokenReq::CMDSessionTokenReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDSessionTokenReq)
}

void CMDSessionTokenReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDSessionTokenReq::CMDSessionTokenReq(const CMDSessionTokenReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDSessionTokenReq)
}

void CMDSessionTokenReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  userid_ = 0u;
}

CMDSessionTokenReq::~CMDSessionTokenReq() {
  // @@protoc_insertion_point(destructor:CMDSessionTokenReq)
  SharedDtor();
}

void CMDSessionTokenReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMDSessionTokenReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDSessionTokenReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDSessionTokenReq_descriptor_;
}

const CMDSessionTokenReq& CMDSessionTokenReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_LogonSvr_2eproto();
  return *default_instance_;
}

CMDSessionTokenReq* CMDSessionTokenReq::default_instance_ = NULL;

CMDSessionTokenReq* CMDSessionTokenReq::New(::google::protobuf::Arena* arena) const {
  CMDSessionTokenReq* n = new CMDSessionTokenReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDSessionTokenReq::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDSessionTokenReq)
  userid_ = 0u;
}

bool CMDSessionTokenReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDSessionTokenReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 userid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDSessionTokenReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDSessionTokenReq)
  return false;
#undef DO_
}

void CMDSessionTokenReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDSessionTokenReq)
  // optional uint32 userid = 1;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->userid(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDSessionTokenReq)
}

::google::protobuf::uint8* CMDSessionTokenReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDSessionTokenReq)
  // optional uint32 userid = 1;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->userid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDSessionTokenReq)
  return target;
}

int CMDSessionTokenReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDSessionTokenReq)
  int total_size = 0;

  // optional uint32 userid = 1;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDSessionTokenReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDSessionTokenReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDSessionTokenReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDSessionTokenReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDSessionTokenReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDSessionTokenReq)
    MergeFrom(*source);
  }
}

void CMDSessionTokenReq::MergeFrom(const CMDSessionTokenReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDSessionTokenReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
}

void CMDSessionTokenReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDSessionTokenReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDSessionTokenReq::CopyFrom(const CMDSessionTokenReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDSessionTokenReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDSessionTokenReq::IsInitialized() const {

  return true;
}

void CMDSessionTokenReq::Swap(CMDSessionTokenReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDSessionTokenReq::InternalSwap(CMDSessionTokenReq* other) {
  std::swap(userid_, other->userid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDSessionTokenReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDSessionTokenReq_descriptor_;
  metadata.reflection = CMDSessionTokenReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDSessionTokenReq

// optional uint32 userid = 1;
void CMDSessionTokenReq::clear_userid() {
  userid_ = 0u;
}
 ::google::protobuf::uint32 CMDSessionTokenReq::userid() const {
  // @@protoc_insertion_point(field_get:CMDSessionTokenReq.userid)
  return userid_;
}
 void CMDSessionTokenReq::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDSessionTokenReq.userid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDSessionTokenResp::kUseridFieldNumber;
const int CMDSessionTokenResp::kSessiontokenFieldNumber;
const int CMDSessionTokenResp::kValidtimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDSessionTokenResp::CMDSessionTokenResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDSessionTokenResp)
}

void CMDSessionTokenResp::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDSessionTokenResp::CMDSessionTokenResp(const CMDSessionTokenResp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDSessionTokenResp)
}

void CMDSessionTokenResp::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  userid_ = 0u;
  sessiontoken_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  validtime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CMDSessionTokenResp::~CMDSessionTokenResp() {
  // @@protoc_insertion_point(destructor:CMDSessionTokenResp)
  SharedDtor();
}

void CMDSessionTokenResp::SharedDtor() {
  sessiontoken_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  validtime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CMDSessionTokenResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDSessionTokenResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDSessionTokenResp_descriptor_;
}

const CMDSessionTokenResp& CMDSessionTokenResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_LogonSvr_2eproto();
  return *default_instance_;
}

CMDSessionTokenResp* CMDSessionTokenResp::default_instance_ = NULL;

CMDSessionTokenResp* CMDSessionTokenResp::New(::google::protobuf::Arena* arena) const {
  CMDSessionTokenResp* n = new CMDSessionTokenResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDSessionTokenResp::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDSessionTokenResp)
  userid_ = 0u;
  sessiontoken_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  validtime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool CMDSessionTokenResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDSessionTokenResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 userid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sessiontoken;
        break;
      }

      // optional string sessiontoken = 2;
      case 2: {
        if (tag == 18) {
         parse_sessiontoken:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sessiontoken()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sessiontoken().data(), this->sessiontoken().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMDSessionTokenResp.sessiontoken"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_validtime;
        break;
      }

      // optional string validtime = 3;
      case 3: {
        if (tag == 26) {
         parse_validtime:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_validtime()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->validtime().data(), this->validtime().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMDSessionTokenResp.validtime"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDSessionTokenResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDSessionTokenResp)
  return false;
#undef DO_
}

void CMDSessionTokenResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDSessionTokenResp)
  // optional uint32 userid = 1;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->userid(), output);
  }

  // optional string sessiontoken = 2;
  if (this->sessiontoken().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sessiontoken().data(), this->sessiontoken().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDSessionTokenResp.sessiontoken");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sessiontoken(), output);
  }

  // optional string validtime = 3;
  if (this->validtime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->validtime().data(), this->validtime().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDSessionTokenResp.validtime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->validtime(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDSessionTokenResp)
}

::google::protobuf::uint8* CMDSessionTokenResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDSessionTokenResp)
  // optional uint32 userid = 1;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->userid(), target);
  }

  // optional string sessiontoken = 2;
  if (this->sessiontoken().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sessiontoken().data(), this->sessiontoken().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDSessionTokenResp.sessiontoken");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->sessiontoken(), target);
  }

  // optional string validtime = 3;
  if (this->validtime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->validtime().data(), this->validtime().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDSessionTokenResp.validtime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->validtime(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDSessionTokenResp)
  return target;
}

int CMDSessionTokenResp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDSessionTokenResp)
  int total_size = 0;

  // optional uint32 userid = 1;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userid());
  }

  // optional string sessiontoken = 2;
  if (this->sessiontoken().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sessiontoken());
  }

  // optional string validtime = 3;
  if (this->validtime().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->validtime());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDSessionTokenResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDSessionTokenResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDSessionTokenResp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDSessionTokenResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDSessionTokenResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDSessionTokenResp)
    MergeFrom(*source);
  }
}

void CMDSessionTokenResp::MergeFrom(const CMDSessionTokenResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDSessionTokenResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.sessiontoken().size() > 0) {

    sessiontoken_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sessiontoken_);
  }
  if (from.validtime().size() > 0) {

    validtime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.validtime_);
  }
}

void CMDSessionTokenResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDSessionTokenResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDSessionTokenResp::CopyFrom(const CMDSessionTokenResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDSessionTokenResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDSessionTokenResp::IsInitialized() const {

  return true;
}

void CMDSessionTokenResp::Swap(CMDSessionTokenResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDSessionTokenResp::InternalSwap(CMDSessionTokenResp* other) {
  std::swap(userid_, other->userid_);
  sessiontoken_.Swap(&other->sessiontoken_);
  validtime_.Swap(&other->validtime_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDSessionTokenResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDSessionTokenResp_descriptor_;
  metadata.reflection = CMDSessionTokenResp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDSessionTokenResp

// optional uint32 userid = 1;
void CMDSessionTokenResp::clear_userid() {
  userid_ = 0u;
}
 ::google::protobuf::uint32 CMDSessionTokenResp::userid() const {
  // @@protoc_insertion_point(field_get:CMDSessionTokenResp.userid)
  return userid_;
}
 void CMDSessionTokenResp::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDSessionTokenResp.userid)
}

// optional string sessiontoken = 2;
void CMDSessionTokenResp::clear_sessiontoken() {
  sessiontoken_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CMDSessionTokenResp::sessiontoken() const {
  // @@protoc_insertion_point(field_get:CMDSessionTokenResp.sessiontoken)
  return sessiontoken_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDSessionTokenResp::set_sessiontoken(const ::std::string& value) {
  
  sessiontoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDSessionTokenResp.sessiontoken)
}
 void CMDSessionTokenResp::set_sessiontoken(const char* value) {
  
  sessiontoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDSessionTokenResp.sessiontoken)
}
 void CMDSessionTokenResp::set_sessiontoken(const char* value, size_t size) {
  
  sessiontoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDSessionTokenResp.sessiontoken)
}
 ::std::string* CMDSessionTokenResp::mutable_sessiontoken() {
  
  // @@protoc_insertion_point(field_mutable:CMDSessionTokenResp.sessiontoken)
  return sessiontoken_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMDSessionTokenResp::release_sessiontoken() {
  // @@protoc_insertion_point(field_release:CMDSessionTokenResp.sessiontoken)
  
  return sessiontoken_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDSessionTokenResp::set_allocated_sessiontoken(::std::string* sessiontoken) {
  if (sessiontoken != NULL) {
    
  } else {
    
  }
  sessiontoken_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sessiontoken);
  // @@protoc_insertion_point(field_set_allocated:CMDSessionTokenResp.sessiontoken)
}

// optional string validtime = 3;
void CMDSessionTokenResp::clear_validtime() {
  validtime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CMDSessionTokenResp::validtime() const {
  // @@protoc_insertion_point(field_get:CMDSessionTokenResp.validtime)
  return validtime_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDSessionTokenResp::set_validtime(const ::std::string& value) {
  
  validtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDSessionTokenResp.validtime)
}
 void CMDSessionTokenResp::set_validtime(const char* value) {
  
  validtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDSessionTokenResp.validtime)
}
 void CMDSessionTokenResp::set_validtime(const char* value, size_t size) {
  
  validtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDSessionTokenResp.validtime)
}
 ::std::string* CMDSessionTokenResp::mutable_validtime() {
  
  // @@protoc_insertion_point(field_mutable:CMDSessionTokenResp.validtime)
  return validtime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMDSessionTokenResp::release_validtime() {
  // @@protoc_insertion_point(field_release:CMDSessionTokenResp.validtime)
  
  return validtime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDSessionTokenResp::set_allocated_validtime(::std::string* validtime) {
  if (validtime != NULL) {
    
  } else {
    
  }
  validtime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), validtime);
  // @@protoc_insertion_point(field_set_allocated:CMDSessionTokenResp.validtime)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDUserExistReq::kLoginidFieldNumber;
const int CMDUserExistReq::kTokenFieldNumber;
const int CMDUserExistReq::kPlatformTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDUserExistReq::CMDUserExistReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDUserExistReq)
}

void CMDUserExistReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDUserExistReq::CMDUserExistReq(const CMDUserExistReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDUserExistReq)
}

void CMDUserExistReq::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  loginid_ = 0u;
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  platformtype_ = 0u;
}

CMDUserExistReq::~CMDUserExistReq() {
  // @@protoc_insertion_point(destructor:CMDUserExistReq)
  SharedDtor();
}

void CMDUserExistReq::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CMDUserExistReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDUserExistReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDUserExistReq_descriptor_;
}

const CMDUserExistReq& CMDUserExistReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_LogonSvr_2eproto();
  return *default_instance_;
}

CMDUserExistReq* CMDUserExistReq::default_instance_ = NULL;

CMDUserExistReq* CMDUserExistReq::New(::google::protobuf::Arena* arena) const {
  CMDUserExistReq* n = new CMDUserExistReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDUserExistReq::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDUserExistReq)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDUserExistReq, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDUserExistReq*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(loginid_, platformtype_);
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool CMDUserExistReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDUserExistReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 loginid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &loginid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_token;
        break;
      }

      // optional string token = 2;
      case 2: {
        if (tag == 18) {
         parse_token:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), this->token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMDUserExistReq.token"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_platformType;
        break;
      }

      // optional uint32 platformType = 3;
      case 3: {
        if (tag == 24) {
         parse_platformType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &platformtype_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDUserExistReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDUserExistReq)
  return false;
#undef DO_
}

void CMDUserExistReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDUserExistReq)
  // optional uint32 loginid = 1;
  if (this->loginid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->loginid(), output);
  }

  // optional string token = 2;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDUserExistReq.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->token(), output);
  }

  // optional uint32 platformType = 3;
  if (this->platformtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->platformtype(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDUserExistReq)
}

::google::protobuf::uint8* CMDUserExistReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDUserExistReq)
  // optional uint32 loginid = 1;
  if (this->loginid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->loginid(), target);
  }

  // optional string token = 2;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDUserExistReq.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->token(), target);
  }

  // optional uint32 platformType = 3;
  if (this->platformtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->platformtype(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDUserExistReq)
  return target;
}

int CMDUserExistReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDUserExistReq)
  int total_size = 0;

  // optional uint32 loginid = 1;
  if (this->loginid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->loginid());
  }

  // optional string token = 2;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  // optional uint32 platformType = 3;
  if (this->platformtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->platformtype());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDUserExistReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDUserExistReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDUserExistReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDUserExistReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDUserExistReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDUserExistReq)
    MergeFrom(*source);
  }
}

void CMDUserExistReq::MergeFrom(const CMDUserExistReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDUserExistReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.loginid() != 0) {
    set_loginid(from.loginid());
  }
  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.platformtype() != 0) {
    set_platformtype(from.platformtype());
  }
}

void CMDUserExistReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDUserExistReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDUserExistReq::CopyFrom(const CMDUserExistReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDUserExistReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDUserExistReq::IsInitialized() const {

  return true;
}

void CMDUserExistReq::Swap(CMDUserExistReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDUserExistReq::InternalSwap(CMDUserExistReq* other) {
  std::swap(loginid_, other->loginid_);
  token_.Swap(&other->token_);
  std::swap(platformtype_, other->platformtype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDUserExistReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDUserExistReq_descriptor_;
  metadata.reflection = CMDUserExistReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDUserExistReq

// optional uint32 loginid = 1;
void CMDUserExistReq::clear_loginid() {
  loginid_ = 0u;
}
 ::google::protobuf::uint32 CMDUserExistReq::loginid() const {
  // @@protoc_insertion_point(field_get:CMDUserExistReq.loginid)
  return loginid_;
}
 void CMDUserExistReq::set_loginid(::google::protobuf::uint32 value) {
  
  loginid_ = value;
  // @@protoc_insertion_point(field_set:CMDUserExistReq.loginid)
}

// optional string token = 2;
void CMDUserExistReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CMDUserExistReq::token() const {
  // @@protoc_insertion_point(field_get:CMDUserExistReq.token)
  return token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDUserExistReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDUserExistReq.token)
}
 void CMDUserExistReq::set_token(const char* value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDUserExistReq.token)
}
 void CMDUserExistReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDUserExistReq.token)
}
 ::std::string* CMDUserExistReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:CMDUserExistReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMDUserExistReq::release_token() {
  // @@protoc_insertion_point(field_release:CMDUserExistReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDUserExistReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:CMDUserExistReq.token)
}

// optional uint32 platformType = 3;
void CMDUserExistReq::clear_platformtype() {
  platformtype_ = 0u;
}
 ::google::protobuf::uint32 CMDUserExistReq::platformtype() const {
  // @@protoc_insertion_point(field_get:CMDUserExistReq.platformType)
  return platformtype_;
}
 void CMDUserExistReq::set_platformtype(::google::protobuf::uint32 value) {
  
  platformtype_ = value;
  // @@protoc_insertion_point(field_set:CMDUserExistReq.platformType)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
