// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ChatSvr.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ChatSvr.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* ChatMsg_t_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ChatMsg_t_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDPrivateMsgReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDPrivateMsgReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDPrivateMsgRecv_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDPrivateMsgRecv_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDPrivateMsgNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDPrivateMsgNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDPrivateMsgNotifyRecv_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDPrivateMsgNotifyRecv_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDUnreadPrivateMsgReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDUnreadPrivateMsgReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDUnreadPrivateMsgNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDUnreadPrivateMsgNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDPrivateMsgHisReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDPrivateMsgHisReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDPrivateMsgHisResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDPrivateMsgHisResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDGroupMsgReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDGroupMsgReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDGroupMsgRecv_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDGroupMsgRecv_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDGroupMsgNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDGroupMsgNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDGroupMsgNotifyRecv_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDGroupMsgNotifyRecv_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDUnreadGroupMsgReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDUnreadGroupMsgReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDUnreadGroupMsgNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDUnreadGroupMsgNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDGroupMsgHisReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDGroupMsgHisReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDGroupMsgHisResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDGroupMsgHisResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDGroupPrivateMsgReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDGroupPrivateMsgReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDGroupPrivateMsgRecv_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDGroupPrivateMsgRecv_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDGroupPrivateMsgNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDGroupPrivateMsgNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDGroupPrivateMsgNotifyRecv_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDGroupPrivateMsgNotifyRecv_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDUnreadGroupPrivateMsgNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDUnreadGroupPrivateMsgNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDGroupPrivateMsgHisReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDGroupPrivateMsgHisReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDGroupPrivateMsgHisResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDGroupPrivateMsgHisResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDGroupPChatQualiticationReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDGroupPChatQualiticationReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDGroupPChatQualiticationResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDGroupPChatQualiticationResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDDeleteChatMsgHis_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDDeleteChatMsgHis_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDDeleteChatMsgHisResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDDeleteChatMsgHisResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* GPAssistMsg_t_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GPAssistMsg_t_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDUnreadAssistMsgReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDUnreadAssistMsgReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDUnreadAssistMsgNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDUnreadAssistMsgNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDGroupAssistMsgNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDGroupAssistMsgNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDAssistMsgNotifyRecv_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDAssistMsgNotifyRecv_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDGroupAssistMsgStateReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDGroupAssistMsgStateReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgState_t_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgState_t_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDGroupAssistMsgStateResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDGroupAssistMsgStateResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDGPAssistMsgHisReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDGPAssistMsgHisReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDGPAssistMsgHisResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDGPAssistMsgHisResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDGroupInvestUserReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDGroupInvestUserReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDGroupInvestUserResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDGroupInvestUserResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDNoticeMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDNoticeMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDSysNoticeMsgNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDSysNoticeMsgNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDUnreadSysNoticeMsgNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDUnreadSysNoticeMsgNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDNoticeMsgNotifyRecv_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDNoticeMsgNotifyRecv_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDUserNoticeMsgNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDUserNoticeMsgNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDUnreadUserNoticeMsgNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDUnreadUserNoticeMsgNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDUnreadNoticeMsgReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDUnreadNoticeMsgReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PPTCoursePicInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PPTCoursePicInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDPPTPicChangeMsgNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDPPTPicChangeMsgNotify_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* e_MsgState_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* e_AssistMsgType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* e_InvestType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_ChatSvr_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_ChatSvr_2eproto() {
  protobuf_AddDesc_ChatSvr_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ChatSvr.proto");
  GOOGLE_CHECK(file != NULL);
  ChatMsg_t_descriptor_ = file->message_type(0);
  static const int ChatMsg_t_offsets_[14] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatMsg_t, srcuser_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatMsg_t, dstuser_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatMsg_t, msgid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatMsg_t, msgtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatMsg_t, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatMsg_t, content_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatMsg_t, atlist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatMsg_t, msgtimestr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatMsg_t, clientmsgid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatMsg_t, recall_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatMsg_t, sendstate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatMsg_t, medialength_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatMsg_t, mastermsgid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatMsg_t, extendtype_),
  };
  ChatMsg_t_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ChatMsg_t_descriptor_,
      ChatMsg_t::default_instance_,
      ChatMsg_t_offsets_,
      -1,
      -1,
      -1,
      sizeof(ChatMsg_t),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatMsg_t, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatMsg_t, _is_default_instance_));
  CMDPrivateMsgReq_descriptor_ = file->message_type(1);
  static const int CMDPrivateMsgReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDPrivateMsgReq, msg_),
  };
  CMDPrivateMsgReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDPrivateMsgReq_descriptor_,
      CMDPrivateMsgReq::default_instance_,
      CMDPrivateMsgReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDPrivateMsgReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDPrivateMsgReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDPrivateMsgReq, _is_default_instance_));
  CMDPrivateMsgRecv_descriptor_ = file->message_type(2);
  static const int CMDPrivateMsgRecv_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDPrivateMsgRecv, dstuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDPrivateMsgRecv, msgid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDPrivateMsgRecv, clientmsgid_),
  };
  CMDPrivateMsgRecv_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDPrivateMsgRecv_descriptor_,
      CMDPrivateMsgRecv::default_instance_,
      CMDPrivateMsgRecv_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDPrivateMsgRecv),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDPrivateMsgRecv, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDPrivateMsgRecv, _is_default_instance_));
  CMDPrivateMsgNotify_descriptor_ = file->message_type(3);
  static const int CMDPrivateMsgNotify_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDPrivateMsgNotify, msg_),
  };
  CMDPrivateMsgNotify_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDPrivateMsgNotify_descriptor_,
      CMDPrivateMsgNotify::default_instance_,
      CMDPrivateMsgNotify_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDPrivateMsgNotify),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDPrivateMsgNotify, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDPrivateMsgNotify, _is_default_instance_));
  CMDPrivateMsgNotifyRecv_descriptor_ = file->message_type(4);
  static const int CMDPrivateMsgNotifyRecv_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDPrivateMsgNotifyRecv, rcvuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDPrivateMsgNotifyRecv, srcuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDPrivateMsgNotifyRecv, msgid_),
  };
  CMDPrivateMsgNotifyRecv_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDPrivateMsgNotifyRecv_descriptor_,
      CMDPrivateMsgNotifyRecv::default_instance_,
      CMDPrivateMsgNotifyRecv_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDPrivateMsgNotifyRecv),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDPrivateMsgNotifyRecv, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDPrivateMsgNotifyRecv, _is_default_instance_));
  CMDUnreadPrivateMsgReq_descriptor_ = file->message_type(5);
  static const int CMDUnreadPrivateMsgReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUnreadPrivateMsgReq, userid_),
  };
  CMDUnreadPrivateMsgReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDUnreadPrivateMsgReq_descriptor_,
      CMDUnreadPrivateMsgReq::default_instance_,
      CMDUnreadPrivateMsgReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDUnreadPrivateMsgReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUnreadPrivateMsgReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUnreadPrivateMsgReq, _is_default_instance_));
  CMDUnreadPrivateMsgNotify_descriptor_ = file->message_type(6);
  static const int CMDUnreadPrivateMsgNotify_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUnreadPrivateMsgNotify, dstuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUnreadPrivateMsgNotify, unreadcount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUnreadPrivateMsgNotify, msgs_),
  };
  CMDUnreadPrivateMsgNotify_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDUnreadPrivateMsgNotify_descriptor_,
      CMDUnreadPrivateMsgNotify::default_instance_,
      CMDUnreadPrivateMsgNotify_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDUnreadPrivateMsgNotify),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUnreadPrivateMsgNotify, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUnreadPrivateMsgNotify, _is_default_instance_));
  CMDPrivateMsgHisReq_descriptor_ = file->message_type(7);
  static const int CMDPrivateMsgHisReq_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDPrivateMsgHisReq, requid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDPrivateMsgHisReq, dstuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDPrivateMsgHisReq, forward_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDPrivateMsgHisReq, msgid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDPrivateMsgHisReq, count_),
  };
  CMDPrivateMsgHisReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDPrivateMsgHisReq_descriptor_,
      CMDPrivateMsgHisReq::default_instance_,
      CMDPrivateMsgHisReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDPrivateMsgHisReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDPrivateMsgHisReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDPrivateMsgHisReq, _is_default_instance_));
  CMDPrivateMsgHisResp_descriptor_ = file->message_type(8);
  static const int CMDPrivateMsgHisResp_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDPrivateMsgHisResp, requid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDPrivateMsgHisResp, dstuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDPrivateMsgHisResp, needclear_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDPrivateMsgHisResp, msgs_),
  };
  CMDPrivateMsgHisResp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDPrivateMsgHisResp_descriptor_,
      CMDPrivateMsgHisResp::default_instance_,
      CMDPrivateMsgHisResp_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDPrivateMsgHisResp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDPrivateMsgHisResp, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDPrivateMsgHisResp, _is_default_instance_));
  CMDGroupMsgReq_descriptor_ = file->message_type(9);
  static const int CMDGroupMsgReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupMsgReq, groupid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupMsgReq, msg_),
  };
  CMDGroupMsgReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDGroupMsgReq_descriptor_,
      CMDGroupMsgReq::default_instance_,
      CMDGroupMsgReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDGroupMsgReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupMsgReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupMsgReq, _is_default_instance_));
  CMDGroupMsgRecv_descriptor_ = file->message_type(10);
  static const int CMDGroupMsgRecv_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupMsgRecv, groupid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupMsgRecv, msgid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupMsgRecv, clientmsgid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupMsgRecv, errinfo_),
  };
  CMDGroupMsgRecv_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDGroupMsgRecv_descriptor_,
      CMDGroupMsgRecv::default_instance_,
      CMDGroupMsgRecv_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDGroupMsgRecv),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupMsgRecv, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupMsgRecv, _is_default_instance_));
  CMDGroupMsgNotify_descriptor_ = file->message_type(11);
  static const int CMDGroupMsgNotify_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupMsgNotify, groupid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupMsgNotify, msg_),
  };
  CMDGroupMsgNotify_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDGroupMsgNotify_descriptor_,
      CMDGroupMsgNotify::default_instance_,
      CMDGroupMsgNotify_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDGroupMsgNotify),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupMsgNotify, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupMsgNotify, _is_default_instance_));
  CMDGroupMsgNotifyRecv_descriptor_ = file->message_type(12);
  static const int CMDGroupMsgNotifyRecv_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupMsgNotifyRecv, rcvuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupMsgNotifyRecv, groupid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupMsgNotifyRecv, msgid_),
  };
  CMDGroupMsgNotifyRecv_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDGroupMsgNotifyRecv_descriptor_,
      CMDGroupMsgNotifyRecv::default_instance_,
      CMDGroupMsgNotifyRecv_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDGroupMsgNotifyRecv),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupMsgNotifyRecv, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupMsgNotifyRecv, _is_default_instance_));
  CMDUnreadGroupMsgReq_descriptor_ = file->message_type(13);
  static const int CMDUnreadGroupMsgReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUnreadGroupMsgReq, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUnreadGroupMsgReq, groupid_),
  };
  CMDUnreadGroupMsgReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDUnreadGroupMsgReq_descriptor_,
      CMDUnreadGroupMsgReq::default_instance_,
      CMDUnreadGroupMsgReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDUnreadGroupMsgReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUnreadGroupMsgReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUnreadGroupMsgReq, _is_default_instance_));
  CMDUnreadGroupMsgNotify_descriptor_ = file->message_type(14);
  static const int CMDUnreadGroupMsgNotify_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUnreadGroupMsgNotify, groupid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUnreadGroupMsgNotify, unreadcount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUnreadGroupMsgNotify, atmsgidlist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUnreadGroupMsgNotify, msgs_),
  };
  CMDUnreadGroupMsgNotify_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDUnreadGroupMsgNotify_descriptor_,
      CMDUnreadGroupMsgNotify::default_instance_,
      CMDUnreadGroupMsgNotify_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDUnreadGroupMsgNotify),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUnreadGroupMsgNotify, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUnreadGroupMsgNotify, _is_default_instance_));
  CMDGroupMsgHisReq_descriptor_ = file->message_type(15);
  static const int CMDGroupMsgHisReq_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupMsgHisReq, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupMsgHisReq, groupid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupMsgHisReq, forward_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupMsgHisReq, msgid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupMsgHisReq, count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupMsgHisReq, querytime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupMsgHisReq, reversemsgorder_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupMsgHisReq, reqtag_),
  };
  CMDGroupMsgHisReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDGroupMsgHisReq_descriptor_,
      CMDGroupMsgHisReq::default_instance_,
      CMDGroupMsgHisReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDGroupMsgHisReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupMsgHisReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupMsgHisReq, _is_default_instance_));
  CMDGroupMsgHisResp_descriptor_ = file->message_type(16);
  static const int CMDGroupMsgHisResp_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupMsgHisResp, groupid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupMsgHisResp, needclear_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupMsgHisResp, hismsgcount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupMsgHisResp, msgs_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupMsgHisResp, courseinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupMsgHisResp, reversemsgorder_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupMsgHisResp, reqtag_),
  };
  CMDGroupMsgHisResp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDGroupMsgHisResp_descriptor_,
      CMDGroupMsgHisResp::default_instance_,
      CMDGroupMsgHisResp_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDGroupMsgHisResp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupMsgHisResp, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupMsgHisResp, _is_default_instance_));
  CMDGroupPrivateMsgReq_descriptor_ = file->message_type(17);
  static const int CMDGroupPrivateMsgReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupPrivateMsgReq, groupid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupPrivateMsgReq, msg_),
  };
  CMDGroupPrivateMsgReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDGroupPrivateMsgReq_descriptor_,
      CMDGroupPrivateMsgReq::default_instance_,
      CMDGroupPrivateMsgReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDGroupPrivateMsgReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupPrivateMsgReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupPrivateMsgReq, _is_default_instance_));
  CMDGroupPrivateMsgRecv_descriptor_ = file->message_type(18);
  static const int CMDGroupPrivateMsgRecv_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupPrivateMsgRecv, groupid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupPrivateMsgRecv, dstuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupPrivateMsgRecv, msgid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupPrivateMsgRecv, clientmsgid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupPrivateMsgRecv, errinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupPrivateMsgRecv, threshold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupPrivateMsgRecv, intimacy_),
  };
  CMDGroupPrivateMsgRecv_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDGroupPrivateMsgRecv_descriptor_,
      CMDGroupPrivateMsgRecv::default_instance_,
      CMDGroupPrivateMsgRecv_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDGroupPrivateMsgRecv),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupPrivateMsgRecv, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupPrivateMsgRecv, _is_default_instance_));
  CMDGroupPrivateMsgNotify_descriptor_ = file->message_type(19);
  static const int CMDGroupPrivateMsgNotify_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupPrivateMsgNotify, groupid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupPrivateMsgNotify, msg_),
  };
  CMDGroupPrivateMsgNotify_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDGroupPrivateMsgNotify_descriptor_,
      CMDGroupPrivateMsgNotify::default_instance_,
      CMDGroupPrivateMsgNotify_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDGroupPrivateMsgNotify),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupPrivateMsgNotify, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupPrivateMsgNotify, _is_default_instance_));
  CMDGroupPrivateMsgNotifyRecv_descriptor_ = file->message_type(20);
  static const int CMDGroupPrivateMsgNotifyRecv_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupPrivateMsgNotifyRecv, groupid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupPrivateMsgNotifyRecv, rcvuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupPrivateMsgNotifyRecv, srcuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupPrivateMsgNotifyRecv, dstuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupPrivateMsgNotifyRecv, msgid_),
  };
  CMDGroupPrivateMsgNotifyRecv_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDGroupPrivateMsgNotifyRecv_descriptor_,
      CMDGroupPrivateMsgNotifyRecv::default_instance_,
      CMDGroupPrivateMsgNotifyRecv_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDGroupPrivateMsgNotifyRecv),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupPrivateMsgNotifyRecv, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupPrivateMsgNotifyRecv, _is_default_instance_));
  CMDUnreadGroupPrivateMsgNotify_descriptor_ = file->message_type(21);
  static const int CMDUnreadGroupPrivateMsgNotify_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUnreadGroupPrivateMsgNotify, groupid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUnreadGroupPrivateMsgNotify, dstuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUnreadGroupPrivateMsgNotify, unreadcount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUnreadGroupPrivateMsgNotify, msgs_),
  };
  CMDUnreadGroupPrivateMsgNotify_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDUnreadGroupPrivateMsgNotify_descriptor_,
      CMDUnreadGroupPrivateMsgNotify::default_instance_,
      CMDUnreadGroupPrivateMsgNotify_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDUnreadGroupPrivateMsgNotify),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUnreadGroupPrivateMsgNotify, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUnreadGroupPrivateMsgNotify, _is_default_instance_));
  CMDGroupPrivateMsgHisReq_descriptor_ = file->message_type(22);
  static const int CMDGroupPrivateMsgHisReq_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupPrivateMsgHisReq, groupid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupPrivateMsgHisReq, requid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupPrivateMsgHisReq, dstuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupPrivateMsgHisReq, forward_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupPrivateMsgHisReq, msgid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupPrivateMsgHisReq, count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupPrivateMsgHisReq, reversemsgorder_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupPrivateMsgHisReq, reqtag_),
  };
  CMDGroupPrivateMsgHisReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDGroupPrivateMsgHisReq_descriptor_,
      CMDGroupPrivateMsgHisReq::default_instance_,
      CMDGroupPrivateMsgHisReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDGroupPrivateMsgHisReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupPrivateMsgHisReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupPrivateMsgHisReq, _is_default_instance_));
  CMDGroupPrivateMsgHisResp_descriptor_ = file->message_type(23);
  static const int CMDGroupPrivateMsgHisResp_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupPrivateMsgHisResp, groupid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupPrivateMsgHisResp, requid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupPrivateMsgHisResp, dstuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupPrivateMsgHisResp, needclear_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupPrivateMsgHisResp, msgs_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupPrivateMsgHisResp, reversemsgorder_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupPrivateMsgHisResp, reqtag_),
  };
  CMDGroupPrivateMsgHisResp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDGroupPrivateMsgHisResp_descriptor_,
      CMDGroupPrivateMsgHisResp::default_instance_,
      CMDGroupPrivateMsgHisResp_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDGroupPrivateMsgHisResp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupPrivateMsgHisResp, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupPrivateMsgHisResp, _is_default_instance_));
  CMDGroupPChatQualiticationReq_descriptor_ = file->message_type(24);
  static const int CMDGroupPChatQualiticationReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupPChatQualiticationReq, groupid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupPChatQualiticationReq, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupPChatQualiticationReq, dstuid_),
  };
  CMDGroupPChatQualiticationReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDGroupPChatQualiticationReq_descriptor_,
      CMDGroupPChatQualiticationReq::default_instance_,
      CMDGroupPChatQualiticationReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDGroupPChatQualiticationReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupPChatQualiticationReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupPChatQualiticationReq, _is_default_instance_));
  CMDGroupPChatQualiticationResp_descriptor_ = file->message_type(25);
  static const int CMDGroupPChatQualiticationResp_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupPChatQualiticationResp, errinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupPChatQualiticationResp, groupid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupPChatQualiticationResp, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupPChatQualiticationResp, dstuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupPChatQualiticationResp, threshold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupPChatQualiticationResp, intimacy_),
  };
  CMDGroupPChatQualiticationResp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDGroupPChatQualiticationResp_descriptor_,
      CMDGroupPChatQualiticationResp::default_instance_,
      CMDGroupPChatQualiticationResp_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDGroupPChatQualiticationResp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupPChatQualiticationResp, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupPChatQualiticationResp, _is_default_instance_));
  CMDDeleteChatMsgHis_descriptor_ = file->message_type(26);
  static const int CMDDeleteChatMsgHis_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDDeleteChatMsgHis, groupid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDDeleteChatMsgHis, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDDeleteChatMsgHis, dstuid_),
  };
  CMDDeleteChatMsgHis_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDDeleteChatMsgHis_descriptor_,
      CMDDeleteChatMsgHis::default_instance_,
      CMDDeleteChatMsgHis_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDDeleteChatMsgHis),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDDeleteChatMsgHis, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDDeleteChatMsgHis, _is_default_instance_));
  CMDDeleteChatMsgHisResp_descriptor_ = file->message_type(27);
  static const int CMDDeleteChatMsgHisResp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDDeleteChatMsgHisResp, errinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDDeleteChatMsgHisResp, req_),
  };
  CMDDeleteChatMsgHisResp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDDeleteChatMsgHisResp_descriptor_,
      CMDDeleteChatMsgHisResp::default_instance_,
      CMDDeleteChatMsgHisResp_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDDeleteChatMsgHisResp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDDeleteChatMsgHisResp, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDDeleteChatMsgHisResp, _is_default_instance_));
  GPAssistMsg_t_descriptor_ = file->message_type(28);
  static const int GPAssistMsg_t_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GPAssistMsg_t, msgid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GPAssistMsg_t, msgtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GPAssistMsg_t, msg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GPAssistMsg_t, url_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GPAssistMsg_t, state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GPAssistMsg_t, title_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GPAssistMsg_t, icon_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GPAssistMsg_t, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GPAssistMsg_t, authid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GPAssistMsg_t, action_),
  };
  GPAssistMsg_t_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GPAssistMsg_t_descriptor_,
      GPAssistMsg_t::default_instance_,
      GPAssistMsg_t_offsets_,
      -1,
      -1,
      -1,
      sizeof(GPAssistMsg_t),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GPAssistMsg_t, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GPAssistMsg_t, _is_default_instance_));
  CMDUnreadAssistMsgReq_descriptor_ = file->message_type(29);
  static const int CMDUnreadAssistMsgReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUnreadAssistMsgReq, userid_),
  };
  CMDUnreadAssistMsgReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDUnreadAssistMsgReq_descriptor_,
      CMDUnreadAssistMsgReq::default_instance_,
      CMDUnreadAssistMsgReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDUnreadAssistMsgReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUnreadAssistMsgReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUnreadAssistMsgReq, _is_default_instance_));
  CMDUnreadAssistMsgNotify_descriptor_ = file->message_type(30);
  static const int CMDUnreadAssistMsgNotify_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUnreadAssistMsgNotify, unreadcount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUnreadAssistMsgNotify, msgs_),
  };
  CMDUnreadAssistMsgNotify_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDUnreadAssistMsgNotify_descriptor_,
      CMDUnreadAssistMsgNotify::default_instance_,
      CMDUnreadAssistMsgNotify_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDUnreadAssistMsgNotify),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUnreadAssistMsgNotify, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUnreadAssistMsgNotify, _is_default_instance_));
  CMDGroupAssistMsgNotify_descriptor_ = file->message_type(31);
  static const int CMDGroupAssistMsgNotify_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupAssistMsgNotify, msg_),
  };
  CMDGroupAssistMsgNotify_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDGroupAssistMsgNotify_descriptor_,
      CMDGroupAssistMsgNotify::default_instance_,
      CMDGroupAssistMsgNotify_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDGroupAssistMsgNotify),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupAssistMsgNotify, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupAssistMsgNotify, _is_default_instance_));
  CMDAssistMsgNotifyRecv_descriptor_ = file->message_type(32);
  static const int CMDAssistMsgNotifyRecv_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDAssistMsgNotifyRecv, rcvuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDAssistMsgNotifyRecv, msgid_),
  };
  CMDAssistMsgNotifyRecv_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDAssistMsgNotifyRecv_descriptor_,
      CMDAssistMsgNotifyRecv::default_instance_,
      CMDAssistMsgNotifyRecv_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDAssistMsgNotifyRecv),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDAssistMsgNotifyRecv, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDAssistMsgNotifyRecv, _is_default_instance_));
  CMDGroupAssistMsgStateReq_descriptor_ = file->message_type(33);
  static const int CMDGroupAssistMsgStateReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupAssistMsgStateReq, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupAssistMsgStateReq, msgids_),
  };
  CMDGroupAssistMsgStateReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDGroupAssistMsgStateReq_descriptor_,
      CMDGroupAssistMsgStateReq::default_instance_,
      CMDGroupAssistMsgStateReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDGroupAssistMsgStateReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupAssistMsgStateReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupAssistMsgStateReq, _is_default_instance_));
  MsgState_t_descriptor_ = file->message_type(34);
  static const int MsgState_t_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgState_t, msgid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgState_t, state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgState_t, msgtype_),
  };
  MsgState_t_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MsgState_t_descriptor_,
      MsgState_t::default_instance_,
      MsgState_t_offsets_,
      -1,
      -1,
      -1,
      sizeof(MsgState_t),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgState_t, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgState_t, _is_default_instance_));
  CMDGroupAssistMsgStateResp_descriptor_ = file->message_type(35);
  static const int CMDGroupAssistMsgStateResp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupAssistMsgStateResp, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupAssistMsgStateResp, msgidstates_),
  };
  CMDGroupAssistMsgStateResp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDGroupAssistMsgStateResp_descriptor_,
      CMDGroupAssistMsgStateResp::default_instance_,
      CMDGroupAssistMsgStateResp_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDGroupAssistMsgStateResp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupAssistMsgStateResp, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupAssistMsgStateResp, _is_default_instance_));
  CMDGPAssistMsgHisReq_descriptor_ = file->message_type(36);
  static const int CMDGPAssistMsgHisReq_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGPAssistMsgHisReq, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGPAssistMsgHisReq, forward_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGPAssistMsgHisReq, msgid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGPAssistMsgHisReq, count_),
  };
  CMDGPAssistMsgHisReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDGPAssistMsgHisReq_descriptor_,
      CMDGPAssistMsgHisReq::default_instance_,
      CMDGPAssistMsgHisReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDGPAssistMsgHisReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGPAssistMsgHisReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGPAssistMsgHisReq, _is_default_instance_));
  CMDGPAssistMsgHisResp_descriptor_ = file->message_type(37);
  static const int CMDGPAssistMsgHisResp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGPAssistMsgHisResp, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGPAssistMsgHisResp, msgs_),
  };
  CMDGPAssistMsgHisResp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDGPAssistMsgHisResp_descriptor_,
      CMDGPAssistMsgHisResp::default_instance_,
      CMDGPAssistMsgHisResp_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDGPAssistMsgHisResp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGPAssistMsgHisResp, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGPAssistMsgHisResp, _is_default_instance_));
  CMDGroupInvestUserReq_descriptor_ = file->message_type(38);
  static const int CMDGroupInvestUserReq_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupInvestUserReq, groupid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupInvestUserReq, to_userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupInvestUserReq, investtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupInvestUserReq, run_userid_),
  };
  CMDGroupInvestUserReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDGroupInvestUserReq_descriptor_,
      CMDGroupInvestUserReq::default_instance_,
      CMDGroupInvestUserReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDGroupInvestUserReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupInvestUserReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupInvestUserReq, _is_default_instance_));
  CMDGroupInvestUserResp_descriptor_ = file->message_type(39);
  static const int CMDGroupInvestUserResp_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupInvestUserResp, groupid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupInvestUserResp, to_userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupInvestUserResp, investtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupInvestUserResp, errinfo_),
  };
  CMDGroupInvestUserResp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDGroupInvestUserResp_descriptor_,
      CMDGroupInvestUserResp::default_instance_,
      CMDGroupInvestUserResp_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDGroupInvestUserResp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupInvestUserResp, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupInvestUserResp, _is_default_instance_));
  CMDNoticeMsg_descriptor_ = file->message_type(40);
  static const int CMDNoticeMsg_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDNoticeMsg, msgid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDNoticeMsg, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDNoticeMsg, content_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDNoticeMsg, action_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDNoticeMsg, time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDNoticeMsg, endtime_),
  };
  CMDNoticeMsg_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDNoticeMsg_descriptor_,
      CMDNoticeMsg::default_instance_,
      CMDNoticeMsg_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDNoticeMsg),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDNoticeMsg, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDNoticeMsg, _is_default_instance_));
  CMDSysNoticeMsgNotify_descriptor_ = file->message_type(41);
  static const int CMDSysNoticeMsgNotify_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSysNoticeMsgNotify, msg_),
  };
  CMDSysNoticeMsgNotify_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDSysNoticeMsgNotify_descriptor_,
      CMDSysNoticeMsgNotify::default_instance_,
      CMDSysNoticeMsgNotify_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDSysNoticeMsgNotify),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSysNoticeMsgNotify, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSysNoticeMsgNotify, _is_default_instance_));
  CMDUnreadSysNoticeMsgNotify_descriptor_ = file->message_type(42);
  static const int CMDUnreadSysNoticeMsgNotify_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUnreadSysNoticeMsgNotify, msgs_),
  };
  CMDUnreadSysNoticeMsgNotify_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDUnreadSysNoticeMsgNotify_descriptor_,
      CMDUnreadSysNoticeMsgNotify::default_instance_,
      CMDUnreadSysNoticeMsgNotify_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDUnreadSysNoticeMsgNotify),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUnreadSysNoticeMsgNotify, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUnreadSysNoticeMsgNotify, _is_default_instance_));
  CMDNoticeMsgNotifyRecv_descriptor_ = file->message_type(43);
  static const int CMDNoticeMsgNotifyRecv_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDNoticeMsgNotifyRecv, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDNoticeMsgNotifyRecv, msgid_),
  };
  CMDNoticeMsgNotifyRecv_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDNoticeMsgNotifyRecv_descriptor_,
      CMDNoticeMsgNotifyRecv::default_instance_,
      CMDNoticeMsgNotifyRecv_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDNoticeMsgNotifyRecv),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDNoticeMsgNotifyRecv, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDNoticeMsgNotifyRecv, _is_default_instance_));
  CMDUserNoticeMsgNotify_descriptor_ = file->message_type(44);
  static const int CMDUserNoticeMsgNotify_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserNoticeMsgNotify, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserNoticeMsgNotify, msg_),
  };
  CMDUserNoticeMsgNotify_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDUserNoticeMsgNotify_descriptor_,
      CMDUserNoticeMsgNotify::default_instance_,
      CMDUserNoticeMsgNotify_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDUserNoticeMsgNotify),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserNoticeMsgNotify, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserNoticeMsgNotify, _is_default_instance_));
  CMDUnreadUserNoticeMsgNotify_descriptor_ = file->message_type(45);
  static const int CMDUnreadUserNoticeMsgNotify_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUnreadUserNoticeMsgNotify, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUnreadUserNoticeMsgNotify, msgs_),
  };
  CMDUnreadUserNoticeMsgNotify_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDUnreadUserNoticeMsgNotify_descriptor_,
      CMDUnreadUserNoticeMsgNotify::default_instance_,
      CMDUnreadUserNoticeMsgNotify_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDUnreadUserNoticeMsgNotify),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUnreadUserNoticeMsgNotify, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUnreadUserNoticeMsgNotify, _is_default_instance_));
  CMDUnreadNoticeMsgReq_descriptor_ = file->message_type(46);
  static const int CMDUnreadNoticeMsgReq_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUnreadNoticeMsgReq, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUnreadNoticeMsgReq, appversion_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUnreadNoticeMsgReq, osplatform_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUnreadNoticeMsgReq, osversion_),
  };
  CMDUnreadNoticeMsgReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDUnreadNoticeMsgReq_descriptor_,
      CMDUnreadNoticeMsgReq::default_instance_,
      CMDUnreadNoticeMsgReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDUnreadNoticeMsgReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUnreadNoticeMsgReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUnreadNoticeMsgReq, _is_default_instance_));
  PPTCoursePicInfo_descriptor_ = file->message_type(47);
  static const int PPTCoursePicInfo_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PPTCoursePicInfo, picid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PPTCoursePicInfo, groupid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PPTCoursePicInfo, rank_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PPTCoursePicInfo, picurl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PPTCoursePicInfo, dbid_),
  };
  PPTCoursePicInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PPTCoursePicInfo_descriptor_,
      PPTCoursePicInfo::default_instance_,
      PPTCoursePicInfo_offsets_,
      -1,
      -1,
      -1,
      sizeof(PPTCoursePicInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PPTCoursePicInfo, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PPTCoursePicInfo, _is_default_instance_));
  CMDPPTPicChangeMsgNotify_descriptor_ = file->message_type(48);
  static const int CMDPPTPicChangeMsgNotify_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDPPTPicChangeMsgNotify, opttype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDPPTPicChangeMsgNotify, vecpics_),
  };
  CMDPPTPicChangeMsgNotify_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDPPTPicChangeMsgNotify_descriptor_,
      CMDPPTPicChangeMsgNotify::default_instance_,
      CMDPPTPicChangeMsgNotify_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDPPTPicChangeMsgNotify),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDPPTPicChangeMsgNotify, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDPPTPicChangeMsgNotify, _is_default_instance_));
  e_MsgState_descriptor_ = file->enum_type(0);
  e_AssistMsgType_descriptor_ = file->enum_type(1);
  e_InvestType_descriptor_ = file->enum_type(2);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ChatSvr_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ChatMsg_t_descriptor_, &ChatMsg_t::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDPrivateMsgReq_descriptor_, &CMDPrivateMsgReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDPrivateMsgRecv_descriptor_, &CMDPrivateMsgRecv::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDPrivateMsgNotify_descriptor_, &CMDPrivateMsgNotify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDPrivateMsgNotifyRecv_descriptor_, &CMDPrivateMsgNotifyRecv::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDUnreadPrivateMsgReq_descriptor_, &CMDUnreadPrivateMsgReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDUnreadPrivateMsgNotify_descriptor_, &CMDUnreadPrivateMsgNotify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDPrivateMsgHisReq_descriptor_, &CMDPrivateMsgHisReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDPrivateMsgHisResp_descriptor_, &CMDPrivateMsgHisResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDGroupMsgReq_descriptor_, &CMDGroupMsgReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDGroupMsgRecv_descriptor_, &CMDGroupMsgRecv::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDGroupMsgNotify_descriptor_, &CMDGroupMsgNotify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDGroupMsgNotifyRecv_descriptor_, &CMDGroupMsgNotifyRecv::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDUnreadGroupMsgReq_descriptor_, &CMDUnreadGroupMsgReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDUnreadGroupMsgNotify_descriptor_, &CMDUnreadGroupMsgNotify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDGroupMsgHisReq_descriptor_, &CMDGroupMsgHisReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDGroupMsgHisResp_descriptor_, &CMDGroupMsgHisResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDGroupPrivateMsgReq_descriptor_, &CMDGroupPrivateMsgReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDGroupPrivateMsgRecv_descriptor_, &CMDGroupPrivateMsgRecv::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDGroupPrivateMsgNotify_descriptor_, &CMDGroupPrivateMsgNotify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDGroupPrivateMsgNotifyRecv_descriptor_, &CMDGroupPrivateMsgNotifyRecv::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDUnreadGroupPrivateMsgNotify_descriptor_, &CMDUnreadGroupPrivateMsgNotify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDGroupPrivateMsgHisReq_descriptor_, &CMDGroupPrivateMsgHisReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDGroupPrivateMsgHisResp_descriptor_, &CMDGroupPrivateMsgHisResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDGroupPChatQualiticationReq_descriptor_, &CMDGroupPChatQualiticationReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDGroupPChatQualiticationResp_descriptor_, &CMDGroupPChatQualiticationResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDDeleteChatMsgHis_descriptor_, &CMDDeleteChatMsgHis::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDDeleteChatMsgHisResp_descriptor_, &CMDDeleteChatMsgHisResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GPAssistMsg_t_descriptor_, &GPAssistMsg_t::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDUnreadAssistMsgReq_descriptor_, &CMDUnreadAssistMsgReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDUnreadAssistMsgNotify_descriptor_, &CMDUnreadAssistMsgNotify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDGroupAssistMsgNotify_descriptor_, &CMDGroupAssistMsgNotify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDAssistMsgNotifyRecv_descriptor_, &CMDAssistMsgNotifyRecv::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDGroupAssistMsgStateReq_descriptor_, &CMDGroupAssistMsgStateReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MsgState_t_descriptor_, &MsgState_t::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDGroupAssistMsgStateResp_descriptor_, &CMDGroupAssistMsgStateResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDGPAssistMsgHisReq_descriptor_, &CMDGPAssistMsgHisReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDGPAssistMsgHisResp_descriptor_, &CMDGPAssistMsgHisResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDGroupInvestUserReq_descriptor_, &CMDGroupInvestUserReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDGroupInvestUserResp_descriptor_, &CMDGroupInvestUserResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDNoticeMsg_descriptor_, &CMDNoticeMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDSysNoticeMsgNotify_descriptor_, &CMDSysNoticeMsgNotify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDUnreadSysNoticeMsgNotify_descriptor_, &CMDUnreadSysNoticeMsgNotify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDNoticeMsgNotifyRecv_descriptor_, &CMDNoticeMsgNotifyRecv::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDUserNoticeMsgNotify_descriptor_, &CMDUserNoticeMsgNotify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDUnreadUserNoticeMsgNotify_descriptor_, &CMDUnreadUserNoticeMsgNotify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDUnreadNoticeMsgReq_descriptor_, &CMDUnreadNoticeMsgReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PPTCoursePicInfo_descriptor_, &PPTCoursePicInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDPPTPicChangeMsgNotify_descriptor_, &CMDPPTPicChangeMsgNotify::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ChatSvr_2eproto() {
  delete ChatMsg_t::default_instance_;
  delete ChatMsg_t_reflection_;
  delete CMDPrivateMsgReq::default_instance_;
  delete CMDPrivateMsgReq_reflection_;
  delete CMDPrivateMsgRecv::default_instance_;
  delete CMDPrivateMsgRecv_reflection_;
  delete CMDPrivateMsgNotify::default_instance_;
  delete CMDPrivateMsgNotify_reflection_;
  delete CMDPrivateMsgNotifyRecv::default_instance_;
  delete CMDPrivateMsgNotifyRecv_reflection_;
  delete CMDUnreadPrivateMsgReq::default_instance_;
  delete CMDUnreadPrivateMsgReq_reflection_;
  delete CMDUnreadPrivateMsgNotify::default_instance_;
  delete CMDUnreadPrivateMsgNotify_reflection_;
  delete CMDPrivateMsgHisReq::default_instance_;
  delete CMDPrivateMsgHisReq_reflection_;
  delete CMDPrivateMsgHisResp::default_instance_;
  delete CMDPrivateMsgHisResp_reflection_;
  delete CMDGroupMsgReq::default_instance_;
  delete CMDGroupMsgReq_reflection_;
  delete CMDGroupMsgRecv::default_instance_;
  delete CMDGroupMsgRecv_reflection_;
  delete CMDGroupMsgNotify::default_instance_;
  delete CMDGroupMsgNotify_reflection_;
  delete CMDGroupMsgNotifyRecv::default_instance_;
  delete CMDGroupMsgNotifyRecv_reflection_;
  delete CMDUnreadGroupMsgReq::default_instance_;
  delete CMDUnreadGroupMsgReq_reflection_;
  delete CMDUnreadGroupMsgNotify::default_instance_;
  delete CMDUnreadGroupMsgNotify_reflection_;
  delete CMDGroupMsgHisReq::default_instance_;
  delete CMDGroupMsgHisReq_reflection_;
  delete CMDGroupMsgHisResp::default_instance_;
  delete CMDGroupMsgHisResp_reflection_;
  delete CMDGroupPrivateMsgReq::default_instance_;
  delete CMDGroupPrivateMsgReq_reflection_;
  delete CMDGroupPrivateMsgRecv::default_instance_;
  delete CMDGroupPrivateMsgRecv_reflection_;
  delete CMDGroupPrivateMsgNotify::default_instance_;
  delete CMDGroupPrivateMsgNotify_reflection_;
  delete CMDGroupPrivateMsgNotifyRecv::default_instance_;
  delete CMDGroupPrivateMsgNotifyRecv_reflection_;
  delete CMDUnreadGroupPrivateMsgNotify::default_instance_;
  delete CMDUnreadGroupPrivateMsgNotify_reflection_;
  delete CMDGroupPrivateMsgHisReq::default_instance_;
  delete CMDGroupPrivateMsgHisReq_reflection_;
  delete CMDGroupPrivateMsgHisResp::default_instance_;
  delete CMDGroupPrivateMsgHisResp_reflection_;
  delete CMDGroupPChatQualiticationReq::default_instance_;
  delete CMDGroupPChatQualiticationReq_reflection_;
  delete CMDGroupPChatQualiticationResp::default_instance_;
  delete CMDGroupPChatQualiticationResp_reflection_;
  delete CMDDeleteChatMsgHis::default_instance_;
  delete CMDDeleteChatMsgHis_reflection_;
  delete CMDDeleteChatMsgHisResp::default_instance_;
  delete CMDDeleteChatMsgHisResp_reflection_;
  delete GPAssistMsg_t::default_instance_;
  delete GPAssistMsg_t_reflection_;
  delete CMDUnreadAssistMsgReq::default_instance_;
  delete CMDUnreadAssistMsgReq_reflection_;
  delete CMDUnreadAssistMsgNotify::default_instance_;
  delete CMDUnreadAssistMsgNotify_reflection_;
  delete CMDGroupAssistMsgNotify::default_instance_;
  delete CMDGroupAssistMsgNotify_reflection_;
  delete CMDAssistMsgNotifyRecv::default_instance_;
  delete CMDAssistMsgNotifyRecv_reflection_;
  delete CMDGroupAssistMsgStateReq::default_instance_;
  delete CMDGroupAssistMsgStateReq_reflection_;
  delete MsgState_t::default_instance_;
  delete MsgState_t_reflection_;
  delete CMDGroupAssistMsgStateResp::default_instance_;
  delete CMDGroupAssistMsgStateResp_reflection_;
  delete CMDGPAssistMsgHisReq::default_instance_;
  delete CMDGPAssistMsgHisReq_reflection_;
  delete CMDGPAssistMsgHisResp::default_instance_;
  delete CMDGPAssistMsgHisResp_reflection_;
  delete CMDGroupInvestUserReq::default_instance_;
  delete CMDGroupInvestUserReq_reflection_;
  delete CMDGroupInvestUserResp::default_instance_;
  delete CMDGroupInvestUserResp_reflection_;
  delete CMDNoticeMsg::default_instance_;
  delete CMDNoticeMsg_reflection_;
  delete CMDSysNoticeMsgNotify::default_instance_;
  delete CMDSysNoticeMsgNotify_reflection_;
  delete CMDUnreadSysNoticeMsgNotify::default_instance_;
  delete CMDUnreadSysNoticeMsgNotify_reflection_;
  delete CMDNoticeMsgNotifyRecv::default_instance_;
  delete CMDNoticeMsgNotifyRecv_reflection_;
  delete CMDUserNoticeMsgNotify::default_instance_;
  delete CMDUserNoticeMsgNotify_reflection_;
  delete CMDUnreadUserNoticeMsgNotify::default_instance_;
  delete CMDUnreadUserNoticeMsgNotify_reflection_;
  delete CMDUnreadNoticeMsgReq::default_instance_;
  delete CMDUnreadNoticeMsgReq_reflection_;
  delete PPTCoursePicInfo::default_instance_;
  delete PPTCoursePicInfo_reflection_;
  delete CMDPPTPicChangeMsgNotify::default_instance_;
  delete CMDPPTPicChangeMsgNotify_reflection_;
}

void protobuf_AddDesc_ChatSvr_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_ChatSvr_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_Common_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\rChatSvr.proto\032\014Common.proto\"\257\002\n\tChatMs"
    "g_t\022\034\n\007srcUser\030\001 \001(\0132\013.UserInfo_t\022\034\n\007dst"
    "User\030\002 \001(\0132\013.UserInfo_t\022\r\n\005msgId\030\003 \001(\r\022\017"
    "\n\007msgTime\030\004 \001(\r\022\033\n\007msgType\030\005 \001(\0162\n.e_Msg"
    "Type\022\017\n\007content\030\006 \001(\t\022\016\n\006atList\030\007 \003(\r\022\022\n"
    "\nmsgTimeStr\030\010 \001(\t\022\023\n\013clientMSgId\030\t \001(\004\022\016"
    "\n\006recall\030\n \001(\010\022\021\n\tsendState\030\013 \001(\r\022\023\n\013med"
    "iaLength\030\014 \001(\r\022\023\n\013mastermsgId\030\r \001(\r\022\022\n\ne"
    "xtendType\030\016 \001(\005\"+\n\020CMDPrivateMsgReq\022\027\n\003m"
    "sg\030\024 \001(\0132\n.ChatMsg_t\"G\n\021CMDPrivateMsgRec"
    "v\022\016\n\006dstUId\030\001 \001(\r\022\r\n\005msgId\030\002 \001(\r\022\023\n\013clie"
    "ntMSgId\030\003 \001(\004\".\n\023CMDPrivateMsgNotify\022\027\n\003"
    "msg\030\024 \001(\0132\n.ChatMsg_t\"H\n\027CMDPrivateMsgNo"
    "tifyRecv\022\016\n\006rcvUId\030\001 \001(\r\022\016\n\006srcUId\030\002 \001(\r"
    "\022\r\n\005msgId\030\003 \001(\r\"(\n\026CMDUnreadPrivateMsgRe"
    "q\022\016\n\006userId\030\001 \001(\r\"Z\n\031CMDUnreadPrivateMsg"
    "Notify\022\016\n\006dstUId\030\001 \001(\r\022\023\n\013unreadCount\030\002 "
    "\001(\r\022\030\n\004msgs\030\024 \003(\0132\n.ChatMsg_t\"d\n\023CMDPriv"
    "ateMsgHisReq\022\016\n\006reqUId\030\001 \001(\r\022\016\n\006dstUId\030\002"
    " \001(\r\022\017\n\007forward\030\003 \001(\010\022\r\n\005msgId\030\004 \001(\r\022\r\n\005"
    "count\030\005 \001(\r\"c\n\024CMDPrivateMsgHisResp\022\016\n\006r"
    "eqUId\030\001 \001(\r\022\016\n\006dstUId\030\002 \001(\r\022\021\n\tneedClear"
    "\030\003 \001(\010\022\030\n\004msgs\030\024 \003(\0132\n.ChatMsg_t\":\n\016CMDG"
    "roupMsgReq\022\017\n\007groupId\030\001 \001(\r\022\027\n\003msg\030\024 \001(\013"
    "2\n.ChatMsg_t\"d\n\017CMDGroupMsgRecv\022\017\n\007group"
    "Id\030\001 \001(\r\022\r\n\005msgId\030\002 \001(\r\022\023\n\013clientMSgId\030\003"
    " \001(\004\022\034\n\007errInfo\030\004 \001(\0132\013.CMDErrCode\"=\n\021CM"
    "DGroupMsgNotify\022\017\n\007groupId\030\001 \001(\r\022\027\n\003msg\030"
    "\024 \001(\0132\n.ChatMsg_t\"G\n\025CMDGroupMsgNotifyRe"
    "cv\022\016\n\006rcvUId\030\001 \001(\r\022\017\n\007groupId\030\002 \001(\r\022\r\n\005m"
    "sgId\030\003 \001(\r\"7\n\024CMDUnreadGroupMsgReq\022\016\n\006us"
    "erId\030\001 \001(\r\022\017\n\007groupId\030\002 \001(\r\"n\n\027CMDUnread"
    "GroupMsgNotify\022\017\n\007groupId\030\001 \001(\r\022\023\n\013unrea"
    "dCount\030\002 \001(\r\022\023\n\013atMsgIdList\030\023 \003(\r\022\030\n\004msg"
    "s\030\024 \003(\0132\n.ChatMsg_t\"\237\001\n\021CMDGroupMsgHisRe"
    "q\022\016\n\006userId\030\001 \001(\r\022\017\n\007groupId\030\002 \001(\r\022\017\n\007fo"
    "rward\030\003 \001(\010\022\r\n\005msgId\030\004 \001(\r\022\r\n\005count\030\005 \001("
    "\r\022\021\n\tqueryTime\030\006 \001(\003\022\027\n\017reverseMsgOrder\030"
    "\007 \001(\010\022\016\n\006reqTag\030\010 \001(\t\"\244\001\n\022CMDGroupMsgHis"
    "Resp\022\017\n\007groupId\030\001 \001(\r\022\021\n\tneedClear\030\002 \001(\010"
    "\022\023\n\013hisMsgCount\030\003 \001(\r\022\030\n\004msgs\030\024 \003(\0132\n.Ch"
    "atMsg_t\022\022\n\ncourseInfo\030\025 \001(\t\022\027\n\017reverseMs"
    "gOrder\030\026 \001(\010\022\016\n\006reqTag\030\027 \001(\t\"A\n\025CMDGroup"
    "PrivateMsgReq\022\017\n\007groupId\030\001 \001(\r\022\027\n\003msg\030\024 "
    "\001(\0132\n.ChatMsg_t\"\240\001\n\026CMDGroupPrivateMsgRe"
    "cv\022\017\n\007groupId\030\001 \001(\r\022\016\n\006dstUId\030\002 \001(\r\022\r\n\005m"
    "sgId\030\003 \001(\r\022\023\n\013clientMSgId\030\004 \001(\004\022\034\n\007errIn"
    "fo\030\005 \001(\0132\013.CMDErrCode\022\021\n\tthreshold\030\006 \001(\r"
    "\022\020\n\010intimacy\030\007 \001(\r\"D\n\030CMDGroupPrivateMsg"
    "Notify\022\017\n\007groupId\030\001 \001(\r\022\027\n\003msg\030\024 \001(\0132\n.C"
    "hatMsg_t\"n\n\034CMDGroupPrivateMsgNotifyRecv"
    "\022\017\n\007groupId\030\001 \001(\r\022\016\n\006rcvUId\030\002 \001(\r\022\016\n\006src"
    "UId\030\003 \001(\r\022\016\n\006dstUId\030\004 \001(\r\022\r\n\005msgId\030\005 \001(\r"
    "\"p\n\036CMDUnreadGroupPrivateMsgNotify\022\017\n\007gr"
    "oupId\030\001 \001(\r\022\016\n\006dstUId\030\002 \001(\r\022\023\n\013unreadCou"
    "nt\030\003 \001(\r\022\030\n\004msgs\030\024 \003(\0132\n.ChatMsg_t\"\243\001\n\030C"
    "MDGroupPrivateMsgHisReq\022\017\n\007groupId\030\001 \001(\r"
    "\022\016\n\006reqUId\030\002 \001(\r\022\016\n\006dstUId\030\003 \001(\r\022\017\n\007forw"
    "ard\030\004 \001(\010\022\r\n\005msgId\030\005 \001(\r\022\r\n\005count\030\006 \001(\r\022"
    "\027\n\017reverseMsgOrder\030\007 \001(\010\022\016\n\006reqTag\030\010 \001(\t"
    "\"\242\001\n\031CMDGroupPrivateMsgHisResp\022\017\n\007groupI"
    "d\030\001 \001(\r\022\016\n\006reqUId\030\002 \001(\r\022\016\n\006dstUId\030\003 \001(\r\022"
    "\021\n\tneedClear\030\004 \001(\010\022\030\n\004msgs\030\024 \003(\0132\n.ChatM"
    "sg_t\022\027\n\017reverseMsgOrder\030\025 \001(\010\022\016\n\006reqTag\030"
    "\026 \001(\t\"P\n\035CMDGroupPChatQualiticationReq\022\017"
    "\n\007groupid\030\001 \001(\r\022\016\n\006userid\030\002 \001(\r\022\016\n\006dstui"
    "d\030\003 \001(\r\"\224\001\n\036CMDGroupPChatQualiticationRe"
    "sp\022\034\n\007errInfo\030\001 \001(\0132\013.CMDErrCode\022\017\n\007grou"
    "pid\030\002 \001(\r\022\016\n\006userid\030\003 \001(\r\022\016\n\006dstuid\030\004 \001("
    "\r\022\021\n\tthreshold\030\005 \001(\r\022\020\n\010intimacy\030\006 \001(\r\"F"
    "\n\023CMDDeleteChatMsgHis\022\017\n\007groupid\030\001 \001(\r\022\016"
    "\n\006userid\030\002 \001(\r\022\016\n\006dstuid\030\003 \001(\r\"Z\n\027CMDDel"
    "eteChatMsgHisResp\022\034\n\007errInfo\030\001 \001(\0132\013.CMD"
    "ErrCode\022!\n\003req\030\002 \001(\0132\024.CMDDeleteChatMsgH"
    "is\"\305\001\n\rGPAssistMsg_t\022\r\n\005msgId\030\001 \001(\r\022\017\n\007m"
    "sgTime\030\002 \001(\r\022\013\n\003msg\030\003 \001(\t\022\013\n\003url\030\004 \001(\t\022\032"
    "\n\005state\030\005 \001(\0162\013.e_MsgState\022\r\n\005title\030\006 \001("
    "\t\022\014\n\004icon\030\007 \001(\t\022!\n\007msgType\030\010 \001(\0162\020.e_Ass"
    "istMsgType\022\016\n\006authID\030\t \001(\r\022\016\n\006action\030\n \001"
    "(\t\"\'\n\025CMDUnreadAssistMsgReq\022\016\n\006userid\030\001 "
    "\001(\r\"M\n\030CMDUnreadAssistMsgNotify\022\023\n\013unrea"
    "dCount\030\001 \001(\r\022\034\n\004msgs\030\002 \003(\0132\016.GPAssistMsg"
    "_t\"6\n\027CMDGroupAssistMsgNotify\022\033\n\003msg\030\001 \001"
    "(\0132\016.GPAssistMsg_t\"7\n\026CMDAssistMsgNotify"
    "Recv\022\016\n\006rcvUId\030\001 \001(\r\022\r\n\005msgId\030\002 \001(\r\";\n\031C"
    "MDGroupAssistMsgStateReq\022\016\n\006userID\030\001 \001(\r"
    "\022\016\n\006msgIds\030\002 \003(\r\"T\n\nMsgState_t\022\r\n\005msgId\030"
    "\001 \001(\r\022\032\n\005state\030\002 \001(\0162\013.e_MsgState\022\033\n\007msg"
    "Type\030\003 \001(\0162\n.e_MsgType\"N\n\032CMDGroupAssist"
    "MsgStateResp\022\016\n\006userID\030\001 \001(\r\022 \n\013msgIdSta"
    "tes\030\002 \003(\0132\013.MsgState_t\"U\n\024CMDGPAssistMsg"
    "HisReq\022\016\n\006userID\030\001 \001(\r\022\017\n\007forward\030\002 \001(\010\022"
    "\r\n\005msgId\030\003 \001(\r\022\r\n\005count\030\004 \001(\r\"E\n\025CMDGPAs"
    "sistMsgHisResp\022\016\n\006userID\030\001 \001(\r\022\034\n\004msgs\030\002"
    " \003(\0132\016.GPAssistMsg_t\"r\n\025CMDGroupInvestUs"
    "erReq\022\017\n\007groupID\030\001 \001(\r\022\021\n\tto_userID\030\002 \001("
    "\r\022!\n\ninvestType\030\003 \001(\0162\r.e_InvestType\022\022\n\n"
    "run_userID\030\004 \001(\r\"}\n\026CMDGroupInvestUserRe"
    "sp\022\017\n\007groupID\030\001 \001(\r\022\021\n\tto_userID\030\002 \001(\r\022!"
    "\n\ninvestType\030\003 \001(\0162\r.e_InvestType\022\034\n\007err"
    "Info\030\004 \001(\0132\013.CMDErrCode\"k\n\014CMDNoticeMsg\022"
    "\r\n\005msgid\030\001 \001(\r\022\014\n\004type\030\002 \001(\r\022\017\n\007content\030"
    "\003 \001(\t\022\016\n\006action\030\004 \001(\t\022\014\n\004time\030\005 \001(\r\022\017\n\007e"
    "ndTime\030\006 \001(\r\"3\n\025CMDSysNoticeMsgNotify\022\032\n"
    "\003msg\030\001 \001(\0132\r.CMDNoticeMsg\":\n\033CMDUnreadSy"
    "sNoticeMsgNotify\022\033\n\004msgs\030\001 \003(\0132\r.CMDNoti"
    "ceMsg\"7\n\026CMDNoticeMsgNotifyRecv\022\016\n\006useri"
    "d\030\001 \001(\r\022\r\n\005msgid\030\002 \001(\r\"D\n\026CMDUserNoticeM"
    "sgNotify\022\016\n\006userid\030\001 \001(\r\022\032\n\003msg\030\002 \001(\0132\r."
    "CMDNoticeMsg\"K\n\034CMDUnreadUserNoticeMsgNo"
    "tify\022\016\n\006userid\030\001 \001(\r\022\033\n\004msgs\030\002 \003(\0132\r.CMD"
    "NoticeMsg\"b\n\025CMDUnreadNoticeMsgReq\022\016\n\006us"
    "erid\030\001 \001(\r\022\022\n\nappVersion\030\002 \001(\t\022\022\n\nosPlat"
    "form\030\003 \001(\r\022\021\n\tosVersion\030\004 \001(\t\"^\n\020PPTCour"
    "sePicInfo\022\r\n\005picId\030\001 \001(\t\022\017\n\007groupId\030\002 \001("
    "\r\022\014\n\004rank\030\003 \001(\005\022\016\n\006picurl\030\004 \001(\t\022\014\n\004dbId\030"
    "\005 \001(\r\"O\n\030CMDPPTPicChangeMsgNotify\022\017\n\007opt"
    "Type\030\001 \001(\r\022\"\n\007vecpics\030\002 \003(\0132\021.PPTCourseP"
    "icInfo*b\n\ne_MsgState\022\r\n\te_NotNeed\020\000\022\020\n\014e"
    "_NeedHandle\020\001\022\023\n\017e_NotAdminAgree\020\002\022\020\n\014e_"
    "AdminAgree\020\003\022\014\n\010e_Reject\020\004*D\n\017e_AssistMs"
    "gType\022\020\n\014e_SystemType\020\000\022\016\n\ne_ViewType\020\001\022"
    "\017\n\013e_AgreeType\020\002*+\n\014e_InvestType\022\013\n\007e_Ph"
    "oto\020\000\022\016\n\ne_ViewAuth\020\001B\026\n\022com.dream.cube."
    "tcpH\001b\006proto3", 4973);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ChatSvr.proto", &protobuf_RegisterTypes);
  ChatMsg_t::default_instance_ = new ChatMsg_t();
  CMDPrivateMsgReq::default_instance_ = new CMDPrivateMsgReq();
  CMDPrivateMsgRecv::default_instance_ = new CMDPrivateMsgRecv();
  CMDPrivateMsgNotify::default_instance_ = new CMDPrivateMsgNotify();
  CMDPrivateMsgNotifyRecv::default_instance_ = new CMDPrivateMsgNotifyRecv();
  CMDUnreadPrivateMsgReq::default_instance_ = new CMDUnreadPrivateMsgReq();
  CMDUnreadPrivateMsgNotify::default_instance_ = new CMDUnreadPrivateMsgNotify();
  CMDPrivateMsgHisReq::default_instance_ = new CMDPrivateMsgHisReq();
  CMDPrivateMsgHisResp::default_instance_ = new CMDPrivateMsgHisResp();
  CMDGroupMsgReq::default_instance_ = new CMDGroupMsgReq();
  CMDGroupMsgRecv::default_instance_ = new CMDGroupMsgRecv();
  CMDGroupMsgNotify::default_instance_ = new CMDGroupMsgNotify();
  CMDGroupMsgNotifyRecv::default_instance_ = new CMDGroupMsgNotifyRecv();
  CMDUnreadGroupMsgReq::default_instance_ = new CMDUnreadGroupMsgReq();
  CMDUnreadGroupMsgNotify::default_instance_ = new CMDUnreadGroupMsgNotify();
  CMDGroupMsgHisReq::default_instance_ = new CMDGroupMsgHisReq();
  CMDGroupMsgHisResp::default_instance_ = new CMDGroupMsgHisResp();
  CMDGroupPrivateMsgReq::default_instance_ = new CMDGroupPrivateMsgReq();
  CMDGroupPrivateMsgRecv::default_instance_ = new CMDGroupPrivateMsgRecv();
  CMDGroupPrivateMsgNotify::default_instance_ = new CMDGroupPrivateMsgNotify();
  CMDGroupPrivateMsgNotifyRecv::default_instance_ = new CMDGroupPrivateMsgNotifyRecv();
  CMDUnreadGroupPrivateMsgNotify::default_instance_ = new CMDUnreadGroupPrivateMsgNotify();
  CMDGroupPrivateMsgHisReq::default_instance_ = new CMDGroupPrivateMsgHisReq();
  CMDGroupPrivateMsgHisResp::default_instance_ = new CMDGroupPrivateMsgHisResp();
  CMDGroupPChatQualiticationReq::default_instance_ = new CMDGroupPChatQualiticationReq();
  CMDGroupPChatQualiticationResp::default_instance_ = new CMDGroupPChatQualiticationResp();
  CMDDeleteChatMsgHis::default_instance_ = new CMDDeleteChatMsgHis();
  CMDDeleteChatMsgHisResp::default_instance_ = new CMDDeleteChatMsgHisResp();
  GPAssistMsg_t::default_instance_ = new GPAssistMsg_t();
  CMDUnreadAssistMsgReq::default_instance_ = new CMDUnreadAssistMsgReq();
  CMDUnreadAssistMsgNotify::default_instance_ = new CMDUnreadAssistMsgNotify();
  CMDGroupAssistMsgNotify::default_instance_ = new CMDGroupAssistMsgNotify();
  CMDAssistMsgNotifyRecv::default_instance_ = new CMDAssistMsgNotifyRecv();
  CMDGroupAssistMsgStateReq::default_instance_ = new CMDGroupAssistMsgStateReq();
  MsgState_t::default_instance_ = new MsgState_t();
  CMDGroupAssistMsgStateResp::default_instance_ = new CMDGroupAssistMsgStateResp();
  CMDGPAssistMsgHisReq::default_instance_ = new CMDGPAssistMsgHisReq();
  CMDGPAssistMsgHisResp::default_instance_ = new CMDGPAssistMsgHisResp();
  CMDGroupInvestUserReq::default_instance_ = new CMDGroupInvestUserReq();
  CMDGroupInvestUserResp::default_instance_ = new CMDGroupInvestUserResp();
  CMDNoticeMsg::default_instance_ = new CMDNoticeMsg();
  CMDSysNoticeMsgNotify::default_instance_ = new CMDSysNoticeMsgNotify();
  CMDUnreadSysNoticeMsgNotify::default_instance_ = new CMDUnreadSysNoticeMsgNotify();
  CMDNoticeMsgNotifyRecv::default_instance_ = new CMDNoticeMsgNotifyRecv();
  CMDUserNoticeMsgNotify::default_instance_ = new CMDUserNoticeMsgNotify();
  CMDUnreadUserNoticeMsgNotify::default_instance_ = new CMDUnreadUserNoticeMsgNotify();
  CMDUnreadNoticeMsgReq::default_instance_ = new CMDUnreadNoticeMsgReq();
  PPTCoursePicInfo::default_instance_ = new PPTCoursePicInfo();
  CMDPPTPicChangeMsgNotify::default_instance_ = new CMDPPTPicChangeMsgNotify();
  ChatMsg_t::default_instance_->InitAsDefaultInstance();
  CMDPrivateMsgReq::default_instance_->InitAsDefaultInstance();
  CMDPrivateMsgRecv::default_instance_->InitAsDefaultInstance();
  CMDPrivateMsgNotify::default_instance_->InitAsDefaultInstance();
  CMDPrivateMsgNotifyRecv::default_instance_->InitAsDefaultInstance();
  CMDUnreadPrivateMsgReq::default_instance_->InitAsDefaultInstance();
  CMDUnreadPrivateMsgNotify::default_instance_->InitAsDefaultInstance();
  CMDPrivateMsgHisReq::default_instance_->InitAsDefaultInstance();
  CMDPrivateMsgHisResp::default_instance_->InitAsDefaultInstance();
  CMDGroupMsgReq::default_instance_->InitAsDefaultInstance();
  CMDGroupMsgRecv::default_instance_->InitAsDefaultInstance();
  CMDGroupMsgNotify::default_instance_->InitAsDefaultInstance();
  CMDGroupMsgNotifyRecv::default_instance_->InitAsDefaultInstance();
  CMDUnreadGroupMsgReq::default_instance_->InitAsDefaultInstance();
  CMDUnreadGroupMsgNotify::default_instance_->InitAsDefaultInstance();
  CMDGroupMsgHisReq::default_instance_->InitAsDefaultInstance();
  CMDGroupMsgHisResp::default_instance_->InitAsDefaultInstance();
  CMDGroupPrivateMsgReq::default_instance_->InitAsDefaultInstance();
  CMDGroupPrivateMsgRecv::default_instance_->InitAsDefaultInstance();
  CMDGroupPrivateMsgNotify::default_instance_->InitAsDefaultInstance();
  CMDGroupPrivateMsgNotifyRecv::default_instance_->InitAsDefaultInstance();
  CMDUnreadGroupPrivateMsgNotify::default_instance_->InitAsDefaultInstance();
  CMDGroupPrivateMsgHisReq::default_instance_->InitAsDefaultInstance();
  CMDGroupPrivateMsgHisResp::default_instance_->InitAsDefaultInstance();
  CMDGroupPChatQualiticationReq::default_instance_->InitAsDefaultInstance();
  CMDGroupPChatQualiticationResp::default_instance_->InitAsDefaultInstance();
  CMDDeleteChatMsgHis::default_instance_->InitAsDefaultInstance();
  CMDDeleteChatMsgHisResp::default_instance_->InitAsDefaultInstance();
  GPAssistMsg_t::default_instance_->InitAsDefaultInstance();
  CMDUnreadAssistMsgReq::default_instance_->InitAsDefaultInstance();
  CMDUnreadAssistMsgNotify::default_instance_->InitAsDefaultInstance();
  CMDGroupAssistMsgNotify::default_instance_->InitAsDefaultInstance();
  CMDAssistMsgNotifyRecv::default_instance_->InitAsDefaultInstance();
  CMDGroupAssistMsgStateReq::default_instance_->InitAsDefaultInstance();
  MsgState_t::default_instance_->InitAsDefaultInstance();
  CMDGroupAssistMsgStateResp::default_instance_->InitAsDefaultInstance();
  CMDGPAssistMsgHisReq::default_instance_->InitAsDefaultInstance();
  CMDGPAssistMsgHisResp::default_instance_->InitAsDefaultInstance();
  CMDGroupInvestUserReq::default_instance_->InitAsDefaultInstance();
  CMDGroupInvestUserResp::default_instance_->InitAsDefaultInstance();
  CMDNoticeMsg::default_instance_->InitAsDefaultInstance();
  CMDSysNoticeMsgNotify::default_instance_->InitAsDefaultInstance();
  CMDUnreadSysNoticeMsgNotify::default_instance_->InitAsDefaultInstance();
  CMDNoticeMsgNotifyRecv::default_instance_->InitAsDefaultInstance();
  CMDUserNoticeMsgNotify::default_instance_->InitAsDefaultInstance();
  CMDUnreadUserNoticeMsgNotify::default_instance_->InitAsDefaultInstance();
  CMDUnreadNoticeMsgReq::default_instance_->InitAsDefaultInstance();
  PPTCoursePicInfo::default_instance_->InitAsDefaultInstance();
  CMDPPTPicChangeMsgNotify::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ChatSvr_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ChatSvr_2eproto {
  StaticDescriptorInitializer_ChatSvr_2eproto() {
    protobuf_AddDesc_ChatSvr_2eproto();
  }
} static_descriptor_initializer_ChatSvr_2eproto_;
const ::google::protobuf::EnumDescriptor* e_MsgState_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return e_MsgState_descriptor_;
}
bool e_MsgState_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* e_AssistMsgType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return e_AssistMsgType_descriptor_;
}
bool e_AssistMsgType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* e_InvestType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return e_InvestType_descriptor_;
}
bool e_InvestType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChatMsg_t::kSrcUserFieldNumber;
const int ChatMsg_t::kDstUserFieldNumber;
const int ChatMsg_t::kMsgIdFieldNumber;
const int ChatMsg_t::kMsgTimeFieldNumber;
const int ChatMsg_t::kMsgTypeFieldNumber;
const int ChatMsg_t::kContentFieldNumber;
const int ChatMsg_t::kAtListFieldNumber;
const int ChatMsg_t::kMsgTimeStrFieldNumber;
const int ChatMsg_t::kClientMSgIdFieldNumber;
const int ChatMsg_t::kRecallFieldNumber;
const int ChatMsg_t::kSendStateFieldNumber;
const int ChatMsg_t::kMediaLengthFieldNumber;
const int ChatMsg_t::kMastermsgIdFieldNumber;
const int ChatMsg_t::kExtendTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChatMsg_t::ChatMsg_t()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ChatMsg_t)
}

void ChatMsg_t::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  srcuser_ = const_cast< ::UserInfo_t*>(&::UserInfo_t::default_instance());
  dstuser_ = const_cast< ::UserInfo_t*>(&::UserInfo_t::default_instance());
}

ChatMsg_t::ChatMsg_t(const ChatMsg_t& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ChatMsg_t)
}

void ChatMsg_t::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  srcuser_ = NULL;
  dstuser_ = NULL;
  msgid_ = 0u;
  msgtime_ = 0u;
  msgtype_ = 0;
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgtimestr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clientmsgid_ = GOOGLE_ULONGLONG(0);
  recall_ = false;
  sendstate_ = 0u;
  medialength_ = 0u;
  mastermsgid_ = 0u;
  extendtype_ = 0;
}

ChatMsg_t::~ChatMsg_t() {
  // @@protoc_insertion_point(destructor:ChatMsg_t)
  SharedDtor();
}

void ChatMsg_t::SharedDtor() {
  content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgtimestr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete srcuser_;
    delete dstuser_;
  }
}

void ChatMsg_t::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChatMsg_t::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ChatMsg_t_descriptor_;
}

const ChatMsg_t& ChatMsg_t::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ChatSvr_2eproto();
  return *default_instance_;
}

ChatMsg_t* ChatMsg_t::default_instance_ = NULL;

ChatMsg_t* ChatMsg_t::New(::google::protobuf::Arena* arena) const {
  ChatMsg_t* n = new ChatMsg_t;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChatMsg_t::Clear() {
// @@protoc_insertion_point(message_clear_start:ChatMsg_t)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ChatMsg_t, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ChatMsg_t*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(msgid_, msgtime_);
  if (GetArenaNoVirtual() == NULL && srcuser_ != NULL) delete srcuser_;
  srcuser_ = NULL;
  if (GetArenaNoVirtual() == NULL && dstuser_ != NULL) delete dstuser_;
  dstuser_ = NULL;
  msgtype_ = 0;
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgtimestr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ZR_(clientmsgid_, extendtype_);
  recall_ = false;

#undef ZR_HELPER_
#undef ZR_

  atlist_.Clear();
}

bool ChatMsg_t::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ChatMsg_t)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .UserInfo_t srcUser = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_srcuser()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_dstUser;
        break;
      }

      // optional .UserInfo_t dstUser = 2;
      case 2: {
        if (tag == 18) {
         parse_dstUser:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_dstuser()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_msgId;
        break;
      }

      // optional uint32 msgId = 3;
      case 3: {
        if (tag == 24) {
         parse_msgId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msgid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_msgTime;
        break;
      }

      // optional uint32 msgTime = 4;
      case 4: {
        if (tag == 32) {
         parse_msgTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msgtime_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_msgType;
        break;
      }

      // optional .e_MsgType msgType = 5;
      case 5: {
        if (tag == 40) {
         parse_msgType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_msgtype(static_cast< ::e_MsgType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_content;
        break;
      }

      // optional string content = 6;
      case 6: {
        if (tag == 50) {
         parse_content:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->content().data(), this->content().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ChatMsg_t.content"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_atList;
        break;
      }

      // repeated uint32 atList = 7;
      case 7: {
        if (tag == 58) {
         parse_atList:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_atlist())));
        } else if (tag == 56) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 58, input, this->mutable_atlist())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_msgTimeStr;
        break;
      }

      // optional string msgTimeStr = 8;
      case 8: {
        if (tag == 66) {
         parse_msgTimeStr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msgtimestr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msgtimestr().data(), this->msgtimestr().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ChatMsg_t.msgTimeStr"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_clientMSgId;
        break;
      }

      // optional uint64 clientMSgId = 9;
      case 9: {
        if (tag == 72) {
         parse_clientMSgId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &clientmsgid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_recall;
        break;
      }

      // optional bool recall = 10;
      case 10: {
        if (tag == 80) {
         parse_recall:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &recall_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_sendState;
        break;
      }

      // optional uint32 sendState = 11;
      case 11: {
        if (tag == 88) {
         parse_sendState:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sendstate_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_mediaLength;
        break;
      }

      // optional uint32 mediaLength = 12;
      case 12: {
        if (tag == 96) {
         parse_mediaLength:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &medialength_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_mastermsgId;
        break;
      }

      // optional uint32 mastermsgId = 13;
      case 13: {
        if (tag == 104) {
         parse_mastermsgId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mastermsgid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_extendType;
        break;
      }

      // optional int32 extendType = 14;
      case 14: {
        if (tag == 112) {
         parse_extendType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &extendtype_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ChatMsg_t)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ChatMsg_t)
  return false;
#undef DO_
}

void ChatMsg_t::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ChatMsg_t)
  // optional .UserInfo_t srcUser = 1;
  if (this->has_srcuser()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->srcuser_, output);
  }

  // optional .UserInfo_t dstUser = 2;
  if (this->has_dstuser()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->dstuser_, output);
  }

  // optional uint32 msgId = 3;
  if (this->msgid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->msgid(), output);
  }

  // optional uint32 msgTime = 4;
  if (this->msgtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->msgtime(), output);
  }

  // optional .e_MsgType msgType = 5;
  if (this->msgtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->msgtype(), output);
  }

  // optional string content = 6;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ChatMsg_t.content");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->content(), output);
  }

  // repeated uint32 atList = 7;
  if (this->atlist_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(7, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_atlist_cached_byte_size_);
  }
  for (int i = 0; i < this->atlist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->atlist(i), output);
  }

  // optional string msgTimeStr = 8;
  if (this->msgtimestr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msgtimestr().data(), this->msgtimestr().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ChatMsg_t.msgTimeStr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->msgtimestr(), output);
  }

  // optional uint64 clientMSgId = 9;
  if (this->clientmsgid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(9, this->clientmsgid(), output);
  }

  // optional bool recall = 10;
  if (this->recall() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->recall(), output);
  }

  // optional uint32 sendState = 11;
  if (this->sendstate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->sendstate(), output);
  }

  // optional uint32 mediaLength = 12;
  if (this->medialength() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->medialength(), output);
  }

  // optional uint32 mastermsgId = 13;
  if (this->mastermsgid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->mastermsgid(), output);
  }

  // optional int32 extendType = 14;
  if (this->extendtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->extendtype(), output);
  }

  // @@protoc_insertion_point(serialize_end:ChatMsg_t)
}

::google::protobuf::uint8* ChatMsg_t::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ChatMsg_t)
  // optional .UserInfo_t srcUser = 1;
  if (this->has_srcuser()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->srcuser_, false, target);
  }

  // optional .UserInfo_t dstUser = 2;
  if (this->has_dstuser()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->dstuser_, false, target);
  }

  // optional uint32 msgId = 3;
  if (this->msgid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->msgid(), target);
  }

  // optional uint32 msgTime = 4;
  if (this->msgtime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->msgtime(), target);
  }

  // optional .e_MsgType msgType = 5;
  if (this->msgtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->msgtype(), target);
  }

  // optional string content = 6;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ChatMsg_t.content");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->content(), target);
  }

  // repeated uint32 atList = 7;
  if (this->atlist_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      7,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _atlist_cached_byte_size_, target);
  }
  for (int i = 0; i < this->atlist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->atlist(i), target);
  }

  // optional string msgTimeStr = 8;
  if (this->msgtimestr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msgtimestr().data(), this->msgtimestr().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ChatMsg_t.msgTimeStr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->msgtimestr(), target);
  }

  // optional uint64 clientMSgId = 9;
  if (this->clientmsgid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(9, this->clientmsgid(), target);
  }

  // optional bool recall = 10;
  if (this->recall() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->recall(), target);
  }

  // optional uint32 sendState = 11;
  if (this->sendstate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->sendstate(), target);
  }

  // optional uint32 mediaLength = 12;
  if (this->medialength() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->medialength(), target);
  }

  // optional uint32 mastermsgId = 13;
  if (this->mastermsgid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->mastermsgid(), target);
  }

  // optional int32 extendType = 14;
  if (this->extendtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->extendtype(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ChatMsg_t)
  return target;
}

int ChatMsg_t::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:ChatMsg_t)
  int total_size = 0;

  // optional .UserInfo_t srcUser = 1;
  if (this->has_srcuser()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->srcuser_);
  }

  // optional .UserInfo_t dstUser = 2;
  if (this->has_dstuser()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->dstuser_);
  }

  // optional uint32 msgId = 3;
  if (this->msgid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->msgid());
  }

  // optional uint32 msgTime = 4;
  if (this->msgtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->msgtime());
  }

  // optional .e_MsgType msgType = 5;
  if (this->msgtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
  }

  // optional string content = 6;
  if (this->content().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->content());
  }

  // optional string msgTimeStr = 8;
  if (this->msgtimestr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msgtimestr());
  }

  // optional uint64 clientMSgId = 9;
  if (this->clientmsgid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->clientmsgid());
  }

  // optional bool recall = 10;
  if (this->recall() != 0) {
    total_size += 1 + 1;
  }

  // optional uint32 sendState = 11;
  if (this->sendstate() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->sendstate());
  }

  // optional uint32 mediaLength = 12;
  if (this->medialength() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->medialength());
  }

  // optional uint32 mastermsgId = 13;
  if (this->mastermsgid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mastermsgid());
  }

  // optional int32 extendType = 14;
  if (this->extendtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->extendtype());
  }

  // repeated uint32 atList = 7;
  {
    int data_size = 0;
    for (int i = 0; i < this->atlist_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->atlist(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _atlist_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChatMsg_t::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ChatMsg_t)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ChatMsg_t* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ChatMsg_t>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ChatMsg_t)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ChatMsg_t)
    MergeFrom(*source);
  }
}

void ChatMsg_t::MergeFrom(const ChatMsg_t& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ChatMsg_t)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  atlist_.MergeFrom(from.atlist_);
  if (from.has_srcuser()) {
    mutable_srcuser()->::UserInfo_t::MergeFrom(from.srcuser());
  }
  if (from.has_dstuser()) {
    mutable_dstuser()->::UserInfo_t::MergeFrom(from.dstuser());
  }
  if (from.msgid() != 0) {
    set_msgid(from.msgid());
  }
  if (from.msgtime() != 0) {
    set_msgtime(from.msgtime());
  }
  if (from.msgtype() != 0) {
    set_msgtype(from.msgtype());
  }
  if (from.content().size() > 0) {

    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  if (from.msgtimestr().size() > 0) {

    msgtimestr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msgtimestr_);
  }
  if (from.clientmsgid() != 0) {
    set_clientmsgid(from.clientmsgid());
  }
  if (from.recall() != 0) {
    set_recall(from.recall());
  }
  if (from.sendstate() != 0) {
    set_sendstate(from.sendstate());
  }
  if (from.medialength() != 0) {
    set_medialength(from.medialength());
  }
  if (from.mastermsgid() != 0) {
    set_mastermsgid(from.mastermsgid());
  }
  if (from.extendtype() != 0) {
    set_extendtype(from.extendtype());
  }
}

void ChatMsg_t::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ChatMsg_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChatMsg_t::CopyFrom(const ChatMsg_t& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ChatMsg_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChatMsg_t::IsInitialized() const {

  return true;
}

void ChatMsg_t::Swap(ChatMsg_t* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChatMsg_t::InternalSwap(ChatMsg_t* other) {
  std::swap(srcuser_, other->srcuser_);
  std::swap(dstuser_, other->dstuser_);
  std::swap(msgid_, other->msgid_);
  std::swap(msgtime_, other->msgtime_);
  std::swap(msgtype_, other->msgtype_);
  content_.Swap(&other->content_);
  atlist_.UnsafeArenaSwap(&other->atlist_);
  msgtimestr_.Swap(&other->msgtimestr_);
  std::swap(clientmsgid_, other->clientmsgid_);
  std::swap(recall_, other->recall_);
  std::swap(sendstate_, other->sendstate_);
  std::swap(medialength_, other->medialength_);
  std::swap(mastermsgid_, other->mastermsgid_);
  std::swap(extendtype_, other->extendtype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChatMsg_t::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ChatMsg_t_descriptor_;
  metadata.reflection = ChatMsg_t_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ChatMsg_t

// optional .UserInfo_t srcUser = 1;
bool ChatMsg_t::has_srcuser() const {
  return !_is_default_instance_ && srcuser_ != NULL;
}
void ChatMsg_t::clear_srcuser() {
  if (GetArenaNoVirtual() == NULL && srcuser_ != NULL) delete srcuser_;
  srcuser_ = NULL;
}
const ::UserInfo_t& ChatMsg_t::srcuser() const {
  // @@protoc_insertion_point(field_get:ChatMsg_t.srcUser)
  return srcuser_ != NULL ? *srcuser_ : *default_instance_->srcuser_;
}
::UserInfo_t* ChatMsg_t::mutable_srcuser() {
  
  if (srcuser_ == NULL) {
    srcuser_ = new ::UserInfo_t;
  }
  // @@protoc_insertion_point(field_mutable:ChatMsg_t.srcUser)
  return srcuser_;
}
::UserInfo_t* ChatMsg_t::release_srcuser() {
  // @@protoc_insertion_point(field_release:ChatMsg_t.srcUser)
  
  ::UserInfo_t* temp = srcuser_;
  srcuser_ = NULL;
  return temp;
}
void ChatMsg_t::set_allocated_srcuser(::UserInfo_t* srcuser) {
  delete srcuser_;
  srcuser_ = srcuser;
  if (srcuser) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ChatMsg_t.srcUser)
}

// optional .UserInfo_t dstUser = 2;
bool ChatMsg_t::has_dstuser() const {
  return !_is_default_instance_ && dstuser_ != NULL;
}
void ChatMsg_t::clear_dstuser() {
  if (GetArenaNoVirtual() == NULL && dstuser_ != NULL) delete dstuser_;
  dstuser_ = NULL;
}
const ::UserInfo_t& ChatMsg_t::dstuser() const {
  // @@protoc_insertion_point(field_get:ChatMsg_t.dstUser)
  return dstuser_ != NULL ? *dstuser_ : *default_instance_->dstuser_;
}
::UserInfo_t* ChatMsg_t::mutable_dstuser() {
  
  if (dstuser_ == NULL) {
    dstuser_ = new ::UserInfo_t;
  }
  // @@protoc_insertion_point(field_mutable:ChatMsg_t.dstUser)
  return dstuser_;
}
::UserInfo_t* ChatMsg_t::release_dstuser() {
  // @@protoc_insertion_point(field_release:ChatMsg_t.dstUser)
  
  ::UserInfo_t* temp = dstuser_;
  dstuser_ = NULL;
  return temp;
}
void ChatMsg_t::set_allocated_dstuser(::UserInfo_t* dstuser) {
  delete dstuser_;
  dstuser_ = dstuser;
  if (dstuser) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ChatMsg_t.dstUser)
}

// optional uint32 msgId = 3;
void ChatMsg_t::clear_msgid() {
  msgid_ = 0u;
}
 ::google::protobuf::uint32 ChatMsg_t::msgid() const {
  // @@protoc_insertion_point(field_get:ChatMsg_t.msgId)
  return msgid_;
}
 void ChatMsg_t::set_msgid(::google::protobuf::uint32 value) {
  
  msgid_ = value;
  // @@protoc_insertion_point(field_set:ChatMsg_t.msgId)
}

// optional uint32 msgTime = 4;
void ChatMsg_t::clear_msgtime() {
  msgtime_ = 0u;
}
 ::google::protobuf::uint32 ChatMsg_t::msgtime() const {
  // @@protoc_insertion_point(field_get:ChatMsg_t.msgTime)
  return msgtime_;
}
 void ChatMsg_t::set_msgtime(::google::protobuf::uint32 value) {
  
  msgtime_ = value;
  // @@protoc_insertion_point(field_set:ChatMsg_t.msgTime)
}

// optional .e_MsgType msgType = 5;
void ChatMsg_t::clear_msgtype() {
  msgtype_ = 0;
}
 ::e_MsgType ChatMsg_t::msgtype() const {
  // @@protoc_insertion_point(field_get:ChatMsg_t.msgType)
  return static_cast< ::e_MsgType >(msgtype_);
}
 void ChatMsg_t::set_msgtype(::e_MsgType value) {
  
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:ChatMsg_t.msgType)
}

// optional string content = 6;
void ChatMsg_t::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ChatMsg_t::content() const {
  // @@protoc_insertion_point(field_get:ChatMsg_t.content)
  return content_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ChatMsg_t::set_content(const ::std::string& value) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ChatMsg_t.content)
}
 void ChatMsg_t::set_content(const char* value) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ChatMsg_t.content)
}
 void ChatMsg_t::set_content(const char* value, size_t size) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ChatMsg_t.content)
}
 ::std::string* ChatMsg_t::mutable_content() {
  
  // @@protoc_insertion_point(field_mutable:ChatMsg_t.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ChatMsg_t::release_content() {
  // @@protoc_insertion_point(field_release:ChatMsg_t.content)
  
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ChatMsg_t::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    
  } else {
    
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:ChatMsg_t.content)
}

// repeated uint32 atList = 7;
int ChatMsg_t::atlist_size() const {
  return atlist_.size();
}
void ChatMsg_t::clear_atlist() {
  atlist_.Clear();
}
 ::google::protobuf::uint32 ChatMsg_t::atlist(int index) const {
  // @@protoc_insertion_point(field_get:ChatMsg_t.atList)
  return atlist_.Get(index);
}
 void ChatMsg_t::set_atlist(int index, ::google::protobuf::uint32 value) {
  atlist_.Set(index, value);
  // @@protoc_insertion_point(field_set:ChatMsg_t.atList)
}
 void ChatMsg_t::add_atlist(::google::protobuf::uint32 value) {
  atlist_.Add(value);
  // @@protoc_insertion_point(field_add:ChatMsg_t.atList)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ChatMsg_t::atlist() const {
  // @@protoc_insertion_point(field_list:ChatMsg_t.atList)
  return atlist_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ChatMsg_t::mutable_atlist() {
  // @@protoc_insertion_point(field_mutable_list:ChatMsg_t.atList)
  return &atlist_;
}

// optional string msgTimeStr = 8;
void ChatMsg_t::clear_msgtimestr() {
  msgtimestr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ChatMsg_t::msgtimestr() const {
  // @@protoc_insertion_point(field_get:ChatMsg_t.msgTimeStr)
  return msgtimestr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ChatMsg_t::set_msgtimestr(const ::std::string& value) {
  
  msgtimestr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ChatMsg_t.msgTimeStr)
}
 void ChatMsg_t::set_msgtimestr(const char* value) {
  
  msgtimestr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ChatMsg_t.msgTimeStr)
}
 void ChatMsg_t::set_msgtimestr(const char* value, size_t size) {
  
  msgtimestr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ChatMsg_t.msgTimeStr)
}
 ::std::string* ChatMsg_t::mutable_msgtimestr() {
  
  // @@protoc_insertion_point(field_mutable:ChatMsg_t.msgTimeStr)
  return msgtimestr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ChatMsg_t::release_msgtimestr() {
  // @@protoc_insertion_point(field_release:ChatMsg_t.msgTimeStr)
  
  return msgtimestr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ChatMsg_t::set_allocated_msgtimestr(::std::string* msgtimestr) {
  if (msgtimestr != NULL) {
    
  } else {
    
  }
  msgtimestr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msgtimestr);
  // @@protoc_insertion_point(field_set_allocated:ChatMsg_t.msgTimeStr)
}

// optional uint64 clientMSgId = 9;
void ChatMsg_t::clear_clientmsgid() {
  clientmsgid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 ChatMsg_t::clientmsgid() const {
  // @@protoc_insertion_point(field_get:ChatMsg_t.clientMSgId)
  return clientmsgid_;
}
 void ChatMsg_t::set_clientmsgid(::google::protobuf::uint64 value) {
  
  clientmsgid_ = value;
  // @@protoc_insertion_point(field_set:ChatMsg_t.clientMSgId)
}

// optional bool recall = 10;
void ChatMsg_t::clear_recall() {
  recall_ = false;
}
 bool ChatMsg_t::recall() const {
  // @@protoc_insertion_point(field_get:ChatMsg_t.recall)
  return recall_;
}
 void ChatMsg_t::set_recall(bool value) {
  
  recall_ = value;
  // @@protoc_insertion_point(field_set:ChatMsg_t.recall)
}

// optional uint32 sendState = 11;
void ChatMsg_t::clear_sendstate() {
  sendstate_ = 0u;
}
 ::google::protobuf::uint32 ChatMsg_t::sendstate() const {
  // @@protoc_insertion_point(field_get:ChatMsg_t.sendState)
  return sendstate_;
}
 void ChatMsg_t::set_sendstate(::google::protobuf::uint32 value) {
  
  sendstate_ = value;
  // @@protoc_insertion_point(field_set:ChatMsg_t.sendState)
}

// optional uint32 mediaLength = 12;
void ChatMsg_t::clear_medialength() {
  medialength_ = 0u;
}
 ::google::protobuf::uint32 ChatMsg_t::medialength() const {
  // @@protoc_insertion_point(field_get:ChatMsg_t.mediaLength)
  return medialength_;
}
 void ChatMsg_t::set_medialength(::google::protobuf::uint32 value) {
  
  medialength_ = value;
  // @@protoc_insertion_point(field_set:ChatMsg_t.mediaLength)
}

// optional uint32 mastermsgId = 13;
void ChatMsg_t::clear_mastermsgid() {
  mastermsgid_ = 0u;
}
 ::google::protobuf::uint32 ChatMsg_t::mastermsgid() const {
  // @@protoc_insertion_point(field_get:ChatMsg_t.mastermsgId)
  return mastermsgid_;
}
 void ChatMsg_t::set_mastermsgid(::google::protobuf::uint32 value) {
  
  mastermsgid_ = value;
  // @@protoc_insertion_point(field_set:ChatMsg_t.mastermsgId)
}

// optional int32 extendType = 14;
void ChatMsg_t::clear_extendtype() {
  extendtype_ = 0;
}
 ::google::protobuf::int32 ChatMsg_t::extendtype() const {
  // @@protoc_insertion_point(field_get:ChatMsg_t.extendType)
  return extendtype_;
}
 void ChatMsg_t::set_extendtype(::google::protobuf::int32 value) {
  
  extendtype_ = value;
  // @@protoc_insertion_point(field_set:ChatMsg_t.extendType)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDPrivateMsgReq::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDPrivateMsgReq::CMDPrivateMsgReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDPrivateMsgReq)
}

void CMDPrivateMsgReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  msg_ = const_cast< ::ChatMsg_t*>(&::ChatMsg_t::default_instance());
}

CMDPrivateMsgReq::CMDPrivateMsgReq(const CMDPrivateMsgReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDPrivateMsgReq)
}

void CMDPrivateMsgReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  msg_ = NULL;
}

CMDPrivateMsgReq::~CMDPrivateMsgReq() {
  // @@protoc_insertion_point(destructor:CMDPrivateMsgReq)
  SharedDtor();
}

void CMDPrivateMsgReq::SharedDtor() {
  if (this != default_instance_) {
    delete msg_;
  }
}

void CMDPrivateMsgReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDPrivateMsgReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDPrivateMsgReq_descriptor_;
}

const CMDPrivateMsgReq& CMDPrivateMsgReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ChatSvr_2eproto();
  return *default_instance_;
}

CMDPrivateMsgReq* CMDPrivateMsgReq::default_instance_ = NULL;

CMDPrivateMsgReq* CMDPrivateMsgReq::New(::google::protobuf::Arena* arena) const {
  CMDPrivateMsgReq* n = new CMDPrivateMsgReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDPrivateMsgReq::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDPrivateMsgReq)
  if (GetArenaNoVirtual() == NULL && msg_ != NULL) delete msg_;
  msg_ = NULL;
}

bool CMDPrivateMsgReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDPrivateMsgReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ChatMsg_t msg = 20;
      case 20: {
        if (tag == 162) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msg()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDPrivateMsgReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDPrivateMsgReq)
  return false;
#undef DO_
}

void CMDPrivateMsgReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDPrivateMsgReq)
  // optional .ChatMsg_t msg = 20;
  if (this->has_msg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, *this->msg_, output);
  }

  // @@protoc_insertion_point(serialize_end:CMDPrivateMsgReq)
}

::google::protobuf::uint8* CMDPrivateMsgReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDPrivateMsgReq)
  // optional .ChatMsg_t msg = 20;
  if (this->has_msg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        20, *this->msg_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDPrivateMsgReq)
  return target;
}

int CMDPrivateMsgReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDPrivateMsgReq)
  int total_size = 0;

  // optional .ChatMsg_t msg = 20;
  if (this->has_msg()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msg_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDPrivateMsgReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDPrivateMsgReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDPrivateMsgReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDPrivateMsgReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDPrivateMsgReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDPrivateMsgReq)
    MergeFrom(*source);
  }
}

void CMDPrivateMsgReq::MergeFrom(const CMDPrivateMsgReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDPrivateMsgReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.has_msg()) {
    mutable_msg()->::ChatMsg_t::MergeFrom(from.msg());
  }
}

void CMDPrivateMsgReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDPrivateMsgReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDPrivateMsgReq::CopyFrom(const CMDPrivateMsgReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDPrivateMsgReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDPrivateMsgReq::IsInitialized() const {

  return true;
}

void CMDPrivateMsgReq::Swap(CMDPrivateMsgReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDPrivateMsgReq::InternalSwap(CMDPrivateMsgReq* other) {
  std::swap(msg_, other->msg_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDPrivateMsgReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDPrivateMsgReq_descriptor_;
  metadata.reflection = CMDPrivateMsgReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDPrivateMsgReq

// optional .ChatMsg_t msg = 20;
bool CMDPrivateMsgReq::has_msg() const {
  return !_is_default_instance_ && msg_ != NULL;
}
void CMDPrivateMsgReq::clear_msg() {
  if (GetArenaNoVirtual() == NULL && msg_ != NULL) delete msg_;
  msg_ = NULL;
}
const ::ChatMsg_t& CMDPrivateMsgReq::msg() const {
  // @@protoc_insertion_point(field_get:CMDPrivateMsgReq.msg)
  return msg_ != NULL ? *msg_ : *default_instance_->msg_;
}
::ChatMsg_t* CMDPrivateMsgReq::mutable_msg() {
  
  if (msg_ == NULL) {
    msg_ = new ::ChatMsg_t;
  }
  // @@protoc_insertion_point(field_mutable:CMDPrivateMsgReq.msg)
  return msg_;
}
::ChatMsg_t* CMDPrivateMsgReq::release_msg() {
  // @@protoc_insertion_point(field_release:CMDPrivateMsgReq.msg)
  
  ::ChatMsg_t* temp = msg_;
  msg_ = NULL;
  return temp;
}
void CMDPrivateMsgReq::set_allocated_msg(::ChatMsg_t* msg) {
  delete msg_;
  msg_ = msg;
  if (msg) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDPrivateMsgReq.msg)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDPrivateMsgRecv::kDstUIdFieldNumber;
const int CMDPrivateMsgRecv::kMsgIdFieldNumber;
const int CMDPrivateMsgRecv::kClientMSgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDPrivateMsgRecv::CMDPrivateMsgRecv()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDPrivateMsgRecv)
}

void CMDPrivateMsgRecv::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDPrivateMsgRecv::CMDPrivateMsgRecv(const CMDPrivateMsgRecv& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDPrivateMsgRecv)
}

void CMDPrivateMsgRecv::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  dstuid_ = 0u;
  msgid_ = 0u;
  clientmsgid_ = GOOGLE_ULONGLONG(0);
}

CMDPrivateMsgRecv::~CMDPrivateMsgRecv() {
  // @@protoc_insertion_point(destructor:CMDPrivateMsgRecv)
  SharedDtor();
}

void CMDPrivateMsgRecv::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMDPrivateMsgRecv::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDPrivateMsgRecv::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDPrivateMsgRecv_descriptor_;
}

const CMDPrivateMsgRecv& CMDPrivateMsgRecv::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ChatSvr_2eproto();
  return *default_instance_;
}

CMDPrivateMsgRecv* CMDPrivateMsgRecv::default_instance_ = NULL;

CMDPrivateMsgRecv* CMDPrivateMsgRecv::New(::google::protobuf::Arena* arena) const {
  CMDPrivateMsgRecv* n = new CMDPrivateMsgRecv;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDPrivateMsgRecv::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDPrivateMsgRecv)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDPrivateMsgRecv, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDPrivateMsgRecv*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(dstuid_, clientmsgid_);

#undef ZR_HELPER_
#undef ZR_

}

bool CMDPrivateMsgRecv::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDPrivateMsgRecv)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 dstUId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dstuid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_msgId;
        break;
      }

      // optional uint32 msgId = 2;
      case 2: {
        if (tag == 16) {
         parse_msgId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msgid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_clientMSgId;
        break;
      }

      // optional uint64 clientMSgId = 3;
      case 3: {
        if (tag == 24) {
         parse_clientMSgId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &clientmsgid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDPrivateMsgRecv)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDPrivateMsgRecv)
  return false;
#undef DO_
}

void CMDPrivateMsgRecv::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDPrivateMsgRecv)
  // optional uint32 dstUId = 1;
  if (this->dstuid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->dstuid(), output);
  }

  // optional uint32 msgId = 2;
  if (this->msgid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->msgid(), output);
  }

  // optional uint64 clientMSgId = 3;
  if (this->clientmsgid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->clientmsgid(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDPrivateMsgRecv)
}

::google::protobuf::uint8* CMDPrivateMsgRecv::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDPrivateMsgRecv)
  // optional uint32 dstUId = 1;
  if (this->dstuid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->dstuid(), target);
  }

  // optional uint32 msgId = 2;
  if (this->msgid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->msgid(), target);
  }

  // optional uint64 clientMSgId = 3;
  if (this->clientmsgid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->clientmsgid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDPrivateMsgRecv)
  return target;
}

int CMDPrivateMsgRecv::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDPrivateMsgRecv)
  int total_size = 0;

  // optional uint32 dstUId = 1;
  if (this->dstuid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dstuid());
  }

  // optional uint32 msgId = 2;
  if (this->msgid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->msgid());
  }

  // optional uint64 clientMSgId = 3;
  if (this->clientmsgid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->clientmsgid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDPrivateMsgRecv::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDPrivateMsgRecv)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDPrivateMsgRecv* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDPrivateMsgRecv>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDPrivateMsgRecv)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDPrivateMsgRecv)
    MergeFrom(*source);
  }
}

void CMDPrivateMsgRecv::MergeFrom(const CMDPrivateMsgRecv& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDPrivateMsgRecv)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.dstuid() != 0) {
    set_dstuid(from.dstuid());
  }
  if (from.msgid() != 0) {
    set_msgid(from.msgid());
  }
  if (from.clientmsgid() != 0) {
    set_clientmsgid(from.clientmsgid());
  }
}

void CMDPrivateMsgRecv::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDPrivateMsgRecv)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDPrivateMsgRecv::CopyFrom(const CMDPrivateMsgRecv& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDPrivateMsgRecv)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDPrivateMsgRecv::IsInitialized() const {

  return true;
}

void CMDPrivateMsgRecv::Swap(CMDPrivateMsgRecv* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDPrivateMsgRecv::InternalSwap(CMDPrivateMsgRecv* other) {
  std::swap(dstuid_, other->dstuid_);
  std::swap(msgid_, other->msgid_);
  std::swap(clientmsgid_, other->clientmsgid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDPrivateMsgRecv::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDPrivateMsgRecv_descriptor_;
  metadata.reflection = CMDPrivateMsgRecv_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDPrivateMsgRecv

// optional uint32 dstUId = 1;
void CMDPrivateMsgRecv::clear_dstuid() {
  dstuid_ = 0u;
}
 ::google::protobuf::uint32 CMDPrivateMsgRecv::dstuid() const {
  // @@protoc_insertion_point(field_get:CMDPrivateMsgRecv.dstUId)
  return dstuid_;
}
 void CMDPrivateMsgRecv::set_dstuid(::google::protobuf::uint32 value) {
  
  dstuid_ = value;
  // @@protoc_insertion_point(field_set:CMDPrivateMsgRecv.dstUId)
}

// optional uint32 msgId = 2;
void CMDPrivateMsgRecv::clear_msgid() {
  msgid_ = 0u;
}
 ::google::protobuf::uint32 CMDPrivateMsgRecv::msgid() const {
  // @@protoc_insertion_point(field_get:CMDPrivateMsgRecv.msgId)
  return msgid_;
}
 void CMDPrivateMsgRecv::set_msgid(::google::protobuf::uint32 value) {
  
  msgid_ = value;
  // @@protoc_insertion_point(field_set:CMDPrivateMsgRecv.msgId)
}

// optional uint64 clientMSgId = 3;
void CMDPrivateMsgRecv::clear_clientmsgid() {
  clientmsgid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 CMDPrivateMsgRecv::clientmsgid() const {
  // @@protoc_insertion_point(field_get:CMDPrivateMsgRecv.clientMSgId)
  return clientmsgid_;
}
 void CMDPrivateMsgRecv::set_clientmsgid(::google::protobuf::uint64 value) {
  
  clientmsgid_ = value;
  // @@protoc_insertion_point(field_set:CMDPrivateMsgRecv.clientMSgId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDPrivateMsgNotify::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDPrivateMsgNotify::CMDPrivateMsgNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDPrivateMsgNotify)
}

void CMDPrivateMsgNotify::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  msg_ = const_cast< ::ChatMsg_t*>(&::ChatMsg_t::default_instance());
}

CMDPrivateMsgNotify::CMDPrivateMsgNotify(const CMDPrivateMsgNotify& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDPrivateMsgNotify)
}

void CMDPrivateMsgNotify::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  msg_ = NULL;
}

CMDPrivateMsgNotify::~CMDPrivateMsgNotify() {
  // @@protoc_insertion_point(destructor:CMDPrivateMsgNotify)
  SharedDtor();
}

void CMDPrivateMsgNotify::SharedDtor() {
  if (this != default_instance_) {
    delete msg_;
  }
}

void CMDPrivateMsgNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDPrivateMsgNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDPrivateMsgNotify_descriptor_;
}

const CMDPrivateMsgNotify& CMDPrivateMsgNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ChatSvr_2eproto();
  return *default_instance_;
}

CMDPrivateMsgNotify* CMDPrivateMsgNotify::default_instance_ = NULL;

CMDPrivateMsgNotify* CMDPrivateMsgNotify::New(::google::protobuf::Arena* arena) const {
  CMDPrivateMsgNotify* n = new CMDPrivateMsgNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDPrivateMsgNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDPrivateMsgNotify)
  if (GetArenaNoVirtual() == NULL && msg_ != NULL) delete msg_;
  msg_ = NULL;
}

bool CMDPrivateMsgNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDPrivateMsgNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ChatMsg_t msg = 20;
      case 20: {
        if (tag == 162) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msg()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDPrivateMsgNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDPrivateMsgNotify)
  return false;
#undef DO_
}

void CMDPrivateMsgNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDPrivateMsgNotify)
  // optional .ChatMsg_t msg = 20;
  if (this->has_msg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, *this->msg_, output);
  }

  // @@protoc_insertion_point(serialize_end:CMDPrivateMsgNotify)
}

::google::protobuf::uint8* CMDPrivateMsgNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDPrivateMsgNotify)
  // optional .ChatMsg_t msg = 20;
  if (this->has_msg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        20, *this->msg_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDPrivateMsgNotify)
  return target;
}

int CMDPrivateMsgNotify::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDPrivateMsgNotify)
  int total_size = 0;

  // optional .ChatMsg_t msg = 20;
  if (this->has_msg()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msg_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDPrivateMsgNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDPrivateMsgNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDPrivateMsgNotify* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDPrivateMsgNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDPrivateMsgNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDPrivateMsgNotify)
    MergeFrom(*source);
  }
}

void CMDPrivateMsgNotify::MergeFrom(const CMDPrivateMsgNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDPrivateMsgNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.has_msg()) {
    mutable_msg()->::ChatMsg_t::MergeFrom(from.msg());
  }
}

void CMDPrivateMsgNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDPrivateMsgNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDPrivateMsgNotify::CopyFrom(const CMDPrivateMsgNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDPrivateMsgNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDPrivateMsgNotify::IsInitialized() const {

  return true;
}

void CMDPrivateMsgNotify::Swap(CMDPrivateMsgNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDPrivateMsgNotify::InternalSwap(CMDPrivateMsgNotify* other) {
  std::swap(msg_, other->msg_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDPrivateMsgNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDPrivateMsgNotify_descriptor_;
  metadata.reflection = CMDPrivateMsgNotify_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDPrivateMsgNotify

// optional .ChatMsg_t msg = 20;
bool CMDPrivateMsgNotify::has_msg() const {
  return !_is_default_instance_ && msg_ != NULL;
}
void CMDPrivateMsgNotify::clear_msg() {
  if (GetArenaNoVirtual() == NULL && msg_ != NULL) delete msg_;
  msg_ = NULL;
}
const ::ChatMsg_t& CMDPrivateMsgNotify::msg() const {
  // @@protoc_insertion_point(field_get:CMDPrivateMsgNotify.msg)
  return msg_ != NULL ? *msg_ : *default_instance_->msg_;
}
::ChatMsg_t* CMDPrivateMsgNotify::mutable_msg() {
  
  if (msg_ == NULL) {
    msg_ = new ::ChatMsg_t;
  }
  // @@protoc_insertion_point(field_mutable:CMDPrivateMsgNotify.msg)
  return msg_;
}
::ChatMsg_t* CMDPrivateMsgNotify::release_msg() {
  // @@protoc_insertion_point(field_release:CMDPrivateMsgNotify.msg)
  
  ::ChatMsg_t* temp = msg_;
  msg_ = NULL;
  return temp;
}
void CMDPrivateMsgNotify::set_allocated_msg(::ChatMsg_t* msg) {
  delete msg_;
  msg_ = msg;
  if (msg) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDPrivateMsgNotify.msg)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDPrivateMsgNotifyRecv::kRcvUIdFieldNumber;
const int CMDPrivateMsgNotifyRecv::kSrcUIdFieldNumber;
const int CMDPrivateMsgNotifyRecv::kMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDPrivateMsgNotifyRecv::CMDPrivateMsgNotifyRecv()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDPrivateMsgNotifyRecv)
}

void CMDPrivateMsgNotifyRecv::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDPrivateMsgNotifyRecv::CMDPrivateMsgNotifyRecv(const CMDPrivateMsgNotifyRecv& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDPrivateMsgNotifyRecv)
}

void CMDPrivateMsgNotifyRecv::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  rcvuid_ = 0u;
  srcuid_ = 0u;
  msgid_ = 0u;
}

CMDPrivateMsgNotifyRecv::~CMDPrivateMsgNotifyRecv() {
  // @@protoc_insertion_point(destructor:CMDPrivateMsgNotifyRecv)
  SharedDtor();
}

void CMDPrivateMsgNotifyRecv::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMDPrivateMsgNotifyRecv::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDPrivateMsgNotifyRecv::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDPrivateMsgNotifyRecv_descriptor_;
}

const CMDPrivateMsgNotifyRecv& CMDPrivateMsgNotifyRecv::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ChatSvr_2eproto();
  return *default_instance_;
}

CMDPrivateMsgNotifyRecv* CMDPrivateMsgNotifyRecv::default_instance_ = NULL;

CMDPrivateMsgNotifyRecv* CMDPrivateMsgNotifyRecv::New(::google::protobuf::Arena* arena) const {
  CMDPrivateMsgNotifyRecv* n = new CMDPrivateMsgNotifyRecv;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDPrivateMsgNotifyRecv::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDPrivateMsgNotifyRecv)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDPrivateMsgNotifyRecv, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDPrivateMsgNotifyRecv*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(rcvuid_, msgid_);

#undef ZR_HELPER_
#undef ZR_

}

bool CMDPrivateMsgNotifyRecv::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDPrivateMsgNotifyRecv)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 rcvUId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rcvuid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_srcUId;
        break;
      }

      // optional uint32 srcUId = 2;
      case 2: {
        if (tag == 16) {
         parse_srcUId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &srcuid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_msgId;
        break;
      }

      // optional uint32 msgId = 3;
      case 3: {
        if (tag == 24) {
         parse_msgId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msgid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDPrivateMsgNotifyRecv)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDPrivateMsgNotifyRecv)
  return false;
#undef DO_
}

void CMDPrivateMsgNotifyRecv::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDPrivateMsgNotifyRecv)
  // optional uint32 rcvUId = 1;
  if (this->rcvuid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->rcvuid(), output);
  }

  // optional uint32 srcUId = 2;
  if (this->srcuid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->srcuid(), output);
  }

  // optional uint32 msgId = 3;
  if (this->msgid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->msgid(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDPrivateMsgNotifyRecv)
}

::google::protobuf::uint8* CMDPrivateMsgNotifyRecv::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDPrivateMsgNotifyRecv)
  // optional uint32 rcvUId = 1;
  if (this->rcvuid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->rcvuid(), target);
  }

  // optional uint32 srcUId = 2;
  if (this->srcuid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->srcuid(), target);
  }

  // optional uint32 msgId = 3;
  if (this->msgid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->msgid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDPrivateMsgNotifyRecv)
  return target;
}

int CMDPrivateMsgNotifyRecv::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDPrivateMsgNotifyRecv)
  int total_size = 0;

  // optional uint32 rcvUId = 1;
  if (this->rcvuid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->rcvuid());
  }

  // optional uint32 srcUId = 2;
  if (this->srcuid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->srcuid());
  }

  // optional uint32 msgId = 3;
  if (this->msgid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->msgid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDPrivateMsgNotifyRecv::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDPrivateMsgNotifyRecv)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDPrivateMsgNotifyRecv* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDPrivateMsgNotifyRecv>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDPrivateMsgNotifyRecv)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDPrivateMsgNotifyRecv)
    MergeFrom(*source);
  }
}

void CMDPrivateMsgNotifyRecv::MergeFrom(const CMDPrivateMsgNotifyRecv& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDPrivateMsgNotifyRecv)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.rcvuid() != 0) {
    set_rcvuid(from.rcvuid());
  }
  if (from.srcuid() != 0) {
    set_srcuid(from.srcuid());
  }
  if (from.msgid() != 0) {
    set_msgid(from.msgid());
  }
}

void CMDPrivateMsgNotifyRecv::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDPrivateMsgNotifyRecv)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDPrivateMsgNotifyRecv::CopyFrom(const CMDPrivateMsgNotifyRecv& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDPrivateMsgNotifyRecv)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDPrivateMsgNotifyRecv::IsInitialized() const {

  return true;
}

void CMDPrivateMsgNotifyRecv::Swap(CMDPrivateMsgNotifyRecv* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDPrivateMsgNotifyRecv::InternalSwap(CMDPrivateMsgNotifyRecv* other) {
  std::swap(rcvuid_, other->rcvuid_);
  std::swap(srcuid_, other->srcuid_);
  std::swap(msgid_, other->msgid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDPrivateMsgNotifyRecv::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDPrivateMsgNotifyRecv_descriptor_;
  metadata.reflection = CMDPrivateMsgNotifyRecv_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDPrivateMsgNotifyRecv

// optional uint32 rcvUId = 1;
void CMDPrivateMsgNotifyRecv::clear_rcvuid() {
  rcvuid_ = 0u;
}
 ::google::protobuf::uint32 CMDPrivateMsgNotifyRecv::rcvuid() const {
  // @@protoc_insertion_point(field_get:CMDPrivateMsgNotifyRecv.rcvUId)
  return rcvuid_;
}
 void CMDPrivateMsgNotifyRecv::set_rcvuid(::google::protobuf::uint32 value) {
  
  rcvuid_ = value;
  // @@protoc_insertion_point(field_set:CMDPrivateMsgNotifyRecv.rcvUId)
}

// optional uint32 srcUId = 2;
void CMDPrivateMsgNotifyRecv::clear_srcuid() {
  srcuid_ = 0u;
}
 ::google::protobuf::uint32 CMDPrivateMsgNotifyRecv::srcuid() const {
  // @@protoc_insertion_point(field_get:CMDPrivateMsgNotifyRecv.srcUId)
  return srcuid_;
}
 void CMDPrivateMsgNotifyRecv::set_srcuid(::google::protobuf::uint32 value) {
  
  srcuid_ = value;
  // @@protoc_insertion_point(field_set:CMDPrivateMsgNotifyRecv.srcUId)
}

// optional uint32 msgId = 3;
void CMDPrivateMsgNotifyRecv::clear_msgid() {
  msgid_ = 0u;
}
 ::google::protobuf::uint32 CMDPrivateMsgNotifyRecv::msgid() const {
  // @@protoc_insertion_point(field_get:CMDPrivateMsgNotifyRecv.msgId)
  return msgid_;
}
 void CMDPrivateMsgNotifyRecv::set_msgid(::google::protobuf::uint32 value) {
  
  msgid_ = value;
  // @@protoc_insertion_point(field_set:CMDPrivateMsgNotifyRecv.msgId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDUnreadPrivateMsgReq::kUserIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDUnreadPrivateMsgReq::CMDUnreadPrivateMsgReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDUnreadPrivateMsgReq)
}

void CMDUnreadPrivateMsgReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDUnreadPrivateMsgReq::CMDUnreadPrivateMsgReq(const CMDUnreadPrivateMsgReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDUnreadPrivateMsgReq)
}

void CMDUnreadPrivateMsgReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  userid_ = 0u;
}

CMDUnreadPrivateMsgReq::~CMDUnreadPrivateMsgReq() {
  // @@protoc_insertion_point(destructor:CMDUnreadPrivateMsgReq)
  SharedDtor();
}

void CMDUnreadPrivateMsgReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMDUnreadPrivateMsgReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDUnreadPrivateMsgReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDUnreadPrivateMsgReq_descriptor_;
}

const CMDUnreadPrivateMsgReq& CMDUnreadPrivateMsgReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ChatSvr_2eproto();
  return *default_instance_;
}

CMDUnreadPrivateMsgReq* CMDUnreadPrivateMsgReq::default_instance_ = NULL;

CMDUnreadPrivateMsgReq* CMDUnreadPrivateMsgReq::New(::google::protobuf::Arena* arena) const {
  CMDUnreadPrivateMsgReq* n = new CMDUnreadPrivateMsgReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDUnreadPrivateMsgReq::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDUnreadPrivateMsgReq)
  userid_ = 0u;
}

bool CMDUnreadPrivateMsgReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDUnreadPrivateMsgReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 userId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDUnreadPrivateMsgReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDUnreadPrivateMsgReq)
  return false;
#undef DO_
}

void CMDUnreadPrivateMsgReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDUnreadPrivateMsgReq)
  // optional uint32 userId = 1;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->userid(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDUnreadPrivateMsgReq)
}

::google::protobuf::uint8* CMDUnreadPrivateMsgReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDUnreadPrivateMsgReq)
  // optional uint32 userId = 1;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->userid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDUnreadPrivateMsgReq)
  return target;
}

int CMDUnreadPrivateMsgReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDUnreadPrivateMsgReq)
  int total_size = 0;

  // optional uint32 userId = 1;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDUnreadPrivateMsgReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDUnreadPrivateMsgReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDUnreadPrivateMsgReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDUnreadPrivateMsgReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDUnreadPrivateMsgReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDUnreadPrivateMsgReq)
    MergeFrom(*source);
  }
}

void CMDUnreadPrivateMsgReq::MergeFrom(const CMDUnreadPrivateMsgReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDUnreadPrivateMsgReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
}

void CMDUnreadPrivateMsgReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDUnreadPrivateMsgReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDUnreadPrivateMsgReq::CopyFrom(const CMDUnreadPrivateMsgReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDUnreadPrivateMsgReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDUnreadPrivateMsgReq::IsInitialized() const {

  return true;
}

void CMDUnreadPrivateMsgReq::Swap(CMDUnreadPrivateMsgReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDUnreadPrivateMsgReq::InternalSwap(CMDUnreadPrivateMsgReq* other) {
  std::swap(userid_, other->userid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDUnreadPrivateMsgReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDUnreadPrivateMsgReq_descriptor_;
  metadata.reflection = CMDUnreadPrivateMsgReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDUnreadPrivateMsgReq

// optional uint32 userId = 1;
void CMDUnreadPrivateMsgReq::clear_userid() {
  userid_ = 0u;
}
 ::google::protobuf::uint32 CMDUnreadPrivateMsgReq::userid() const {
  // @@protoc_insertion_point(field_get:CMDUnreadPrivateMsgReq.userId)
  return userid_;
}
 void CMDUnreadPrivateMsgReq::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDUnreadPrivateMsgReq.userId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDUnreadPrivateMsgNotify::kDstUIdFieldNumber;
const int CMDUnreadPrivateMsgNotify::kUnreadCountFieldNumber;
const int CMDUnreadPrivateMsgNotify::kMsgsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDUnreadPrivateMsgNotify::CMDUnreadPrivateMsgNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDUnreadPrivateMsgNotify)
}

void CMDUnreadPrivateMsgNotify::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDUnreadPrivateMsgNotify::CMDUnreadPrivateMsgNotify(const CMDUnreadPrivateMsgNotify& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDUnreadPrivateMsgNotify)
}

void CMDUnreadPrivateMsgNotify::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  dstuid_ = 0u;
  unreadcount_ = 0u;
}

CMDUnreadPrivateMsgNotify::~CMDUnreadPrivateMsgNotify() {
  // @@protoc_insertion_point(destructor:CMDUnreadPrivateMsgNotify)
  SharedDtor();
}

void CMDUnreadPrivateMsgNotify::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMDUnreadPrivateMsgNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDUnreadPrivateMsgNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDUnreadPrivateMsgNotify_descriptor_;
}

const CMDUnreadPrivateMsgNotify& CMDUnreadPrivateMsgNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ChatSvr_2eproto();
  return *default_instance_;
}

CMDUnreadPrivateMsgNotify* CMDUnreadPrivateMsgNotify::default_instance_ = NULL;

CMDUnreadPrivateMsgNotify* CMDUnreadPrivateMsgNotify::New(::google::protobuf::Arena* arena) const {
  CMDUnreadPrivateMsgNotify* n = new CMDUnreadPrivateMsgNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDUnreadPrivateMsgNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDUnreadPrivateMsgNotify)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDUnreadPrivateMsgNotify, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDUnreadPrivateMsgNotify*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(dstuid_, unreadcount_);

#undef ZR_HELPER_
#undef ZR_

  msgs_.Clear();
}

bool CMDUnreadPrivateMsgNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDUnreadPrivateMsgNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 dstUId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dstuid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_unreadCount;
        break;
      }

      // optional uint32 unreadCount = 2;
      case 2: {
        if (tag == 16) {
         parse_unreadCount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &unreadcount_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(162)) goto parse_msgs;
        break;
      }

      // repeated .ChatMsg_t msgs = 20;
      case 20: {
        if (tag == 162) {
         parse_msgs:
          DO_(input->IncrementRecursionDepth());
         parse_loop_msgs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_msgs()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(162)) goto parse_loop_msgs;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDUnreadPrivateMsgNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDUnreadPrivateMsgNotify)
  return false;
#undef DO_
}

void CMDUnreadPrivateMsgNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDUnreadPrivateMsgNotify)
  // optional uint32 dstUId = 1;
  if (this->dstuid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->dstuid(), output);
  }

  // optional uint32 unreadCount = 2;
  if (this->unreadcount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->unreadcount(), output);
  }

  // repeated .ChatMsg_t msgs = 20;
  for (unsigned int i = 0, n = this->msgs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, this->msgs(i), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDUnreadPrivateMsgNotify)
}

::google::protobuf::uint8* CMDUnreadPrivateMsgNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDUnreadPrivateMsgNotify)
  // optional uint32 dstUId = 1;
  if (this->dstuid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->dstuid(), target);
  }

  // optional uint32 unreadCount = 2;
  if (this->unreadcount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->unreadcount(), target);
  }

  // repeated .ChatMsg_t msgs = 20;
  for (unsigned int i = 0, n = this->msgs_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        20, this->msgs(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDUnreadPrivateMsgNotify)
  return target;
}

int CMDUnreadPrivateMsgNotify::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDUnreadPrivateMsgNotify)
  int total_size = 0;

  // optional uint32 dstUId = 1;
  if (this->dstuid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dstuid());
  }

  // optional uint32 unreadCount = 2;
  if (this->unreadcount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->unreadcount());
  }

  // repeated .ChatMsg_t msgs = 20;
  total_size += 2 * this->msgs_size();
  for (int i = 0; i < this->msgs_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->msgs(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDUnreadPrivateMsgNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDUnreadPrivateMsgNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDUnreadPrivateMsgNotify* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDUnreadPrivateMsgNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDUnreadPrivateMsgNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDUnreadPrivateMsgNotify)
    MergeFrom(*source);
  }
}

void CMDUnreadPrivateMsgNotify::MergeFrom(const CMDUnreadPrivateMsgNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDUnreadPrivateMsgNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  msgs_.MergeFrom(from.msgs_);
  if (from.dstuid() != 0) {
    set_dstuid(from.dstuid());
  }
  if (from.unreadcount() != 0) {
    set_unreadcount(from.unreadcount());
  }
}

void CMDUnreadPrivateMsgNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDUnreadPrivateMsgNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDUnreadPrivateMsgNotify::CopyFrom(const CMDUnreadPrivateMsgNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDUnreadPrivateMsgNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDUnreadPrivateMsgNotify::IsInitialized() const {

  return true;
}

void CMDUnreadPrivateMsgNotify::Swap(CMDUnreadPrivateMsgNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDUnreadPrivateMsgNotify::InternalSwap(CMDUnreadPrivateMsgNotify* other) {
  std::swap(dstuid_, other->dstuid_);
  std::swap(unreadcount_, other->unreadcount_);
  msgs_.UnsafeArenaSwap(&other->msgs_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDUnreadPrivateMsgNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDUnreadPrivateMsgNotify_descriptor_;
  metadata.reflection = CMDUnreadPrivateMsgNotify_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDUnreadPrivateMsgNotify

// optional uint32 dstUId = 1;
void CMDUnreadPrivateMsgNotify::clear_dstuid() {
  dstuid_ = 0u;
}
 ::google::protobuf::uint32 CMDUnreadPrivateMsgNotify::dstuid() const {
  // @@protoc_insertion_point(field_get:CMDUnreadPrivateMsgNotify.dstUId)
  return dstuid_;
}
 void CMDUnreadPrivateMsgNotify::set_dstuid(::google::protobuf::uint32 value) {
  
  dstuid_ = value;
  // @@protoc_insertion_point(field_set:CMDUnreadPrivateMsgNotify.dstUId)
}

// optional uint32 unreadCount = 2;
void CMDUnreadPrivateMsgNotify::clear_unreadcount() {
  unreadcount_ = 0u;
}
 ::google::protobuf::uint32 CMDUnreadPrivateMsgNotify::unreadcount() const {
  // @@protoc_insertion_point(field_get:CMDUnreadPrivateMsgNotify.unreadCount)
  return unreadcount_;
}
 void CMDUnreadPrivateMsgNotify::set_unreadcount(::google::protobuf::uint32 value) {
  
  unreadcount_ = value;
  // @@protoc_insertion_point(field_set:CMDUnreadPrivateMsgNotify.unreadCount)
}

// repeated .ChatMsg_t msgs = 20;
int CMDUnreadPrivateMsgNotify::msgs_size() const {
  return msgs_.size();
}
void CMDUnreadPrivateMsgNotify::clear_msgs() {
  msgs_.Clear();
}
const ::ChatMsg_t& CMDUnreadPrivateMsgNotify::msgs(int index) const {
  // @@protoc_insertion_point(field_get:CMDUnreadPrivateMsgNotify.msgs)
  return msgs_.Get(index);
}
::ChatMsg_t* CMDUnreadPrivateMsgNotify::mutable_msgs(int index) {
  // @@protoc_insertion_point(field_mutable:CMDUnreadPrivateMsgNotify.msgs)
  return msgs_.Mutable(index);
}
::ChatMsg_t* CMDUnreadPrivateMsgNotify::add_msgs() {
  // @@protoc_insertion_point(field_add:CMDUnreadPrivateMsgNotify.msgs)
  return msgs_.Add();
}
::google::protobuf::RepeatedPtrField< ::ChatMsg_t >*
CMDUnreadPrivateMsgNotify::mutable_msgs() {
  // @@protoc_insertion_point(field_mutable_list:CMDUnreadPrivateMsgNotify.msgs)
  return &msgs_;
}
const ::google::protobuf::RepeatedPtrField< ::ChatMsg_t >&
CMDUnreadPrivateMsgNotify::msgs() const {
  // @@protoc_insertion_point(field_list:CMDUnreadPrivateMsgNotify.msgs)
  return msgs_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDPrivateMsgHisReq::kReqUIdFieldNumber;
const int CMDPrivateMsgHisReq::kDstUIdFieldNumber;
const int CMDPrivateMsgHisReq::kForwardFieldNumber;
const int CMDPrivateMsgHisReq::kMsgIdFieldNumber;
const int CMDPrivateMsgHisReq::kCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDPrivateMsgHisReq::CMDPrivateMsgHisReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDPrivateMsgHisReq)
}

void CMDPrivateMsgHisReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDPrivateMsgHisReq::CMDPrivateMsgHisReq(const CMDPrivateMsgHisReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDPrivateMsgHisReq)
}

void CMDPrivateMsgHisReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  requid_ = 0u;
  dstuid_ = 0u;
  forward_ = false;
  msgid_ = 0u;
  count_ = 0u;
}

CMDPrivateMsgHisReq::~CMDPrivateMsgHisReq() {
  // @@protoc_insertion_point(destructor:CMDPrivateMsgHisReq)
  SharedDtor();
}

void CMDPrivateMsgHisReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMDPrivateMsgHisReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDPrivateMsgHisReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDPrivateMsgHisReq_descriptor_;
}

const CMDPrivateMsgHisReq& CMDPrivateMsgHisReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ChatSvr_2eproto();
  return *default_instance_;
}

CMDPrivateMsgHisReq* CMDPrivateMsgHisReq::default_instance_ = NULL;

CMDPrivateMsgHisReq* CMDPrivateMsgHisReq::New(::google::protobuf::Arena* arena) const {
  CMDPrivateMsgHisReq* n = new CMDPrivateMsgHisReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDPrivateMsgHisReq::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDPrivateMsgHisReq)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDPrivateMsgHisReq, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDPrivateMsgHisReq*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(requid_, count_);

#undef ZR_HELPER_
#undef ZR_

}

bool CMDPrivateMsgHisReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDPrivateMsgHisReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 reqUId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &requid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_dstUId;
        break;
      }

      // optional uint32 dstUId = 2;
      case 2: {
        if (tag == 16) {
         parse_dstUId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dstuid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_forward;
        break;
      }

      // optional bool forward = 3;
      case 3: {
        if (tag == 24) {
         parse_forward:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &forward_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_msgId;
        break;
      }

      // optional uint32 msgId = 4;
      case 4: {
        if (tag == 32) {
         parse_msgId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msgid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_count;
        break;
      }

      // optional uint32 count = 5;
      case 5: {
        if (tag == 40) {
         parse_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDPrivateMsgHisReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDPrivateMsgHisReq)
  return false;
#undef DO_
}

void CMDPrivateMsgHisReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDPrivateMsgHisReq)
  // optional uint32 reqUId = 1;
  if (this->requid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->requid(), output);
  }

  // optional uint32 dstUId = 2;
  if (this->dstuid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->dstuid(), output);
  }

  // optional bool forward = 3;
  if (this->forward() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->forward(), output);
  }

  // optional uint32 msgId = 4;
  if (this->msgid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->msgid(), output);
  }

  // optional uint32 count = 5;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->count(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDPrivateMsgHisReq)
}

::google::protobuf::uint8* CMDPrivateMsgHisReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDPrivateMsgHisReq)
  // optional uint32 reqUId = 1;
  if (this->requid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->requid(), target);
  }

  // optional uint32 dstUId = 2;
  if (this->dstuid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->dstuid(), target);
  }

  // optional bool forward = 3;
  if (this->forward() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->forward(), target);
  }

  // optional uint32 msgId = 4;
  if (this->msgid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->msgid(), target);
  }

  // optional uint32 count = 5;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->count(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDPrivateMsgHisReq)
  return target;
}

int CMDPrivateMsgHisReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDPrivateMsgHisReq)
  int total_size = 0;

  // optional uint32 reqUId = 1;
  if (this->requid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->requid());
  }

  // optional uint32 dstUId = 2;
  if (this->dstuid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dstuid());
  }

  // optional bool forward = 3;
  if (this->forward() != 0) {
    total_size += 1 + 1;
  }

  // optional uint32 msgId = 4;
  if (this->msgid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->msgid());
  }

  // optional uint32 count = 5;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDPrivateMsgHisReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDPrivateMsgHisReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDPrivateMsgHisReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDPrivateMsgHisReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDPrivateMsgHisReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDPrivateMsgHisReq)
    MergeFrom(*source);
  }
}

void CMDPrivateMsgHisReq::MergeFrom(const CMDPrivateMsgHisReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDPrivateMsgHisReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.requid() != 0) {
    set_requid(from.requid());
  }
  if (from.dstuid() != 0) {
    set_dstuid(from.dstuid());
  }
  if (from.forward() != 0) {
    set_forward(from.forward());
  }
  if (from.msgid() != 0) {
    set_msgid(from.msgid());
  }
  if (from.count() != 0) {
    set_count(from.count());
  }
}

void CMDPrivateMsgHisReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDPrivateMsgHisReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDPrivateMsgHisReq::CopyFrom(const CMDPrivateMsgHisReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDPrivateMsgHisReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDPrivateMsgHisReq::IsInitialized() const {

  return true;
}

void CMDPrivateMsgHisReq::Swap(CMDPrivateMsgHisReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDPrivateMsgHisReq::InternalSwap(CMDPrivateMsgHisReq* other) {
  std::swap(requid_, other->requid_);
  std::swap(dstuid_, other->dstuid_);
  std::swap(forward_, other->forward_);
  std::swap(msgid_, other->msgid_);
  std::swap(count_, other->count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDPrivateMsgHisReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDPrivateMsgHisReq_descriptor_;
  metadata.reflection = CMDPrivateMsgHisReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDPrivateMsgHisReq

// optional uint32 reqUId = 1;
void CMDPrivateMsgHisReq::clear_requid() {
  requid_ = 0u;
}
 ::google::protobuf::uint32 CMDPrivateMsgHisReq::requid() const {
  // @@protoc_insertion_point(field_get:CMDPrivateMsgHisReq.reqUId)
  return requid_;
}
 void CMDPrivateMsgHisReq::set_requid(::google::protobuf::uint32 value) {
  
  requid_ = value;
  // @@protoc_insertion_point(field_set:CMDPrivateMsgHisReq.reqUId)
}

// optional uint32 dstUId = 2;
void CMDPrivateMsgHisReq::clear_dstuid() {
  dstuid_ = 0u;
}
 ::google::protobuf::uint32 CMDPrivateMsgHisReq::dstuid() const {
  // @@protoc_insertion_point(field_get:CMDPrivateMsgHisReq.dstUId)
  return dstuid_;
}
 void CMDPrivateMsgHisReq::set_dstuid(::google::protobuf::uint32 value) {
  
  dstuid_ = value;
  // @@protoc_insertion_point(field_set:CMDPrivateMsgHisReq.dstUId)
}

// optional bool forward = 3;
void CMDPrivateMsgHisReq::clear_forward() {
  forward_ = false;
}
 bool CMDPrivateMsgHisReq::forward() const {
  // @@protoc_insertion_point(field_get:CMDPrivateMsgHisReq.forward)
  return forward_;
}
 void CMDPrivateMsgHisReq::set_forward(bool value) {
  
  forward_ = value;
  // @@protoc_insertion_point(field_set:CMDPrivateMsgHisReq.forward)
}

// optional uint32 msgId = 4;
void CMDPrivateMsgHisReq::clear_msgid() {
  msgid_ = 0u;
}
 ::google::protobuf::uint32 CMDPrivateMsgHisReq::msgid() const {
  // @@protoc_insertion_point(field_get:CMDPrivateMsgHisReq.msgId)
  return msgid_;
}
 void CMDPrivateMsgHisReq::set_msgid(::google::protobuf::uint32 value) {
  
  msgid_ = value;
  // @@protoc_insertion_point(field_set:CMDPrivateMsgHisReq.msgId)
}

// optional uint32 count = 5;
void CMDPrivateMsgHisReq::clear_count() {
  count_ = 0u;
}
 ::google::protobuf::uint32 CMDPrivateMsgHisReq::count() const {
  // @@protoc_insertion_point(field_get:CMDPrivateMsgHisReq.count)
  return count_;
}
 void CMDPrivateMsgHisReq::set_count(::google::protobuf::uint32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:CMDPrivateMsgHisReq.count)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDPrivateMsgHisResp::kReqUIdFieldNumber;
const int CMDPrivateMsgHisResp::kDstUIdFieldNumber;
const int CMDPrivateMsgHisResp::kNeedClearFieldNumber;
const int CMDPrivateMsgHisResp::kMsgsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDPrivateMsgHisResp::CMDPrivateMsgHisResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDPrivateMsgHisResp)
}

void CMDPrivateMsgHisResp::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDPrivateMsgHisResp::CMDPrivateMsgHisResp(const CMDPrivateMsgHisResp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDPrivateMsgHisResp)
}

void CMDPrivateMsgHisResp::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  requid_ = 0u;
  dstuid_ = 0u;
  needclear_ = false;
}

CMDPrivateMsgHisResp::~CMDPrivateMsgHisResp() {
  // @@protoc_insertion_point(destructor:CMDPrivateMsgHisResp)
  SharedDtor();
}

void CMDPrivateMsgHisResp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMDPrivateMsgHisResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDPrivateMsgHisResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDPrivateMsgHisResp_descriptor_;
}

const CMDPrivateMsgHisResp& CMDPrivateMsgHisResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ChatSvr_2eproto();
  return *default_instance_;
}

CMDPrivateMsgHisResp* CMDPrivateMsgHisResp::default_instance_ = NULL;

CMDPrivateMsgHisResp* CMDPrivateMsgHisResp::New(::google::protobuf::Arena* arena) const {
  CMDPrivateMsgHisResp* n = new CMDPrivateMsgHisResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDPrivateMsgHisResp::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDPrivateMsgHisResp)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDPrivateMsgHisResp, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDPrivateMsgHisResp*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(requid_, dstuid_);
  needclear_ = false;

#undef ZR_HELPER_
#undef ZR_

  msgs_.Clear();
}

bool CMDPrivateMsgHisResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDPrivateMsgHisResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 reqUId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &requid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_dstUId;
        break;
      }

      // optional uint32 dstUId = 2;
      case 2: {
        if (tag == 16) {
         parse_dstUId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dstuid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_needClear;
        break;
      }

      // optional bool needClear = 3;
      case 3: {
        if (tag == 24) {
         parse_needClear:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &needclear_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(162)) goto parse_msgs;
        break;
      }

      // repeated .ChatMsg_t msgs = 20;
      case 20: {
        if (tag == 162) {
         parse_msgs:
          DO_(input->IncrementRecursionDepth());
         parse_loop_msgs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_msgs()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(162)) goto parse_loop_msgs;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDPrivateMsgHisResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDPrivateMsgHisResp)
  return false;
#undef DO_
}

void CMDPrivateMsgHisResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDPrivateMsgHisResp)
  // optional uint32 reqUId = 1;
  if (this->requid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->requid(), output);
  }

  // optional uint32 dstUId = 2;
  if (this->dstuid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->dstuid(), output);
  }

  // optional bool needClear = 3;
  if (this->needclear() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->needclear(), output);
  }

  // repeated .ChatMsg_t msgs = 20;
  for (unsigned int i = 0, n = this->msgs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, this->msgs(i), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDPrivateMsgHisResp)
}

::google::protobuf::uint8* CMDPrivateMsgHisResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDPrivateMsgHisResp)
  // optional uint32 reqUId = 1;
  if (this->requid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->requid(), target);
  }

  // optional uint32 dstUId = 2;
  if (this->dstuid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->dstuid(), target);
  }

  // optional bool needClear = 3;
  if (this->needclear() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->needclear(), target);
  }

  // repeated .ChatMsg_t msgs = 20;
  for (unsigned int i = 0, n = this->msgs_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        20, this->msgs(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDPrivateMsgHisResp)
  return target;
}

int CMDPrivateMsgHisResp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDPrivateMsgHisResp)
  int total_size = 0;

  // optional uint32 reqUId = 1;
  if (this->requid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->requid());
  }

  // optional uint32 dstUId = 2;
  if (this->dstuid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dstuid());
  }

  // optional bool needClear = 3;
  if (this->needclear() != 0) {
    total_size += 1 + 1;
  }

  // repeated .ChatMsg_t msgs = 20;
  total_size += 2 * this->msgs_size();
  for (int i = 0; i < this->msgs_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->msgs(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDPrivateMsgHisResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDPrivateMsgHisResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDPrivateMsgHisResp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDPrivateMsgHisResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDPrivateMsgHisResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDPrivateMsgHisResp)
    MergeFrom(*source);
  }
}

void CMDPrivateMsgHisResp::MergeFrom(const CMDPrivateMsgHisResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDPrivateMsgHisResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  msgs_.MergeFrom(from.msgs_);
  if (from.requid() != 0) {
    set_requid(from.requid());
  }
  if (from.dstuid() != 0) {
    set_dstuid(from.dstuid());
  }
  if (from.needclear() != 0) {
    set_needclear(from.needclear());
  }
}

void CMDPrivateMsgHisResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDPrivateMsgHisResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDPrivateMsgHisResp::CopyFrom(const CMDPrivateMsgHisResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDPrivateMsgHisResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDPrivateMsgHisResp::IsInitialized() const {

  return true;
}

void CMDPrivateMsgHisResp::Swap(CMDPrivateMsgHisResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDPrivateMsgHisResp::InternalSwap(CMDPrivateMsgHisResp* other) {
  std::swap(requid_, other->requid_);
  std::swap(dstuid_, other->dstuid_);
  std::swap(needclear_, other->needclear_);
  msgs_.UnsafeArenaSwap(&other->msgs_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDPrivateMsgHisResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDPrivateMsgHisResp_descriptor_;
  metadata.reflection = CMDPrivateMsgHisResp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDPrivateMsgHisResp

// optional uint32 reqUId = 1;
void CMDPrivateMsgHisResp::clear_requid() {
  requid_ = 0u;
}
 ::google::protobuf::uint32 CMDPrivateMsgHisResp::requid() const {
  // @@protoc_insertion_point(field_get:CMDPrivateMsgHisResp.reqUId)
  return requid_;
}
 void CMDPrivateMsgHisResp::set_requid(::google::protobuf::uint32 value) {
  
  requid_ = value;
  // @@protoc_insertion_point(field_set:CMDPrivateMsgHisResp.reqUId)
}

// optional uint32 dstUId = 2;
void CMDPrivateMsgHisResp::clear_dstuid() {
  dstuid_ = 0u;
}
 ::google::protobuf::uint32 CMDPrivateMsgHisResp::dstuid() const {
  // @@protoc_insertion_point(field_get:CMDPrivateMsgHisResp.dstUId)
  return dstuid_;
}
 void CMDPrivateMsgHisResp::set_dstuid(::google::protobuf::uint32 value) {
  
  dstuid_ = value;
  // @@protoc_insertion_point(field_set:CMDPrivateMsgHisResp.dstUId)
}

// optional bool needClear = 3;
void CMDPrivateMsgHisResp::clear_needclear() {
  needclear_ = false;
}
 bool CMDPrivateMsgHisResp::needclear() const {
  // @@protoc_insertion_point(field_get:CMDPrivateMsgHisResp.needClear)
  return needclear_;
}
 void CMDPrivateMsgHisResp::set_needclear(bool value) {
  
  needclear_ = value;
  // @@protoc_insertion_point(field_set:CMDPrivateMsgHisResp.needClear)
}

// repeated .ChatMsg_t msgs = 20;
int CMDPrivateMsgHisResp::msgs_size() const {
  return msgs_.size();
}
void CMDPrivateMsgHisResp::clear_msgs() {
  msgs_.Clear();
}
const ::ChatMsg_t& CMDPrivateMsgHisResp::msgs(int index) const {
  // @@protoc_insertion_point(field_get:CMDPrivateMsgHisResp.msgs)
  return msgs_.Get(index);
}
::ChatMsg_t* CMDPrivateMsgHisResp::mutable_msgs(int index) {
  // @@protoc_insertion_point(field_mutable:CMDPrivateMsgHisResp.msgs)
  return msgs_.Mutable(index);
}
::ChatMsg_t* CMDPrivateMsgHisResp::add_msgs() {
  // @@protoc_insertion_point(field_add:CMDPrivateMsgHisResp.msgs)
  return msgs_.Add();
}
::google::protobuf::RepeatedPtrField< ::ChatMsg_t >*
CMDPrivateMsgHisResp::mutable_msgs() {
  // @@protoc_insertion_point(field_mutable_list:CMDPrivateMsgHisResp.msgs)
  return &msgs_;
}
const ::google::protobuf::RepeatedPtrField< ::ChatMsg_t >&
CMDPrivateMsgHisResp::msgs() const {
  // @@protoc_insertion_point(field_list:CMDPrivateMsgHisResp.msgs)
  return msgs_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDGroupMsgReq::kGroupIdFieldNumber;
const int CMDGroupMsgReq::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDGroupMsgReq::CMDGroupMsgReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDGroupMsgReq)
}

void CMDGroupMsgReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  msg_ = const_cast< ::ChatMsg_t*>(&::ChatMsg_t::default_instance());
}

CMDGroupMsgReq::CMDGroupMsgReq(const CMDGroupMsgReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDGroupMsgReq)
}

void CMDGroupMsgReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  groupid_ = 0u;
  msg_ = NULL;
}

CMDGroupMsgReq::~CMDGroupMsgReq() {
  // @@protoc_insertion_point(destructor:CMDGroupMsgReq)
  SharedDtor();
}

void CMDGroupMsgReq::SharedDtor() {
  if (this != default_instance_) {
    delete msg_;
  }
}

void CMDGroupMsgReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDGroupMsgReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDGroupMsgReq_descriptor_;
}

const CMDGroupMsgReq& CMDGroupMsgReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ChatSvr_2eproto();
  return *default_instance_;
}

CMDGroupMsgReq* CMDGroupMsgReq::default_instance_ = NULL;

CMDGroupMsgReq* CMDGroupMsgReq::New(::google::protobuf::Arena* arena) const {
  CMDGroupMsgReq* n = new CMDGroupMsgReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDGroupMsgReq::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDGroupMsgReq)
  groupid_ = 0u;
  if (GetArenaNoVirtual() == NULL && msg_ != NULL) delete msg_;
  msg_ = NULL;
}

bool CMDGroupMsgReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDGroupMsgReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 groupId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &groupid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(162)) goto parse_msg;
        break;
      }

      // optional .ChatMsg_t msg = 20;
      case 20: {
        if (tag == 162) {
         parse_msg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msg()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDGroupMsgReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDGroupMsgReq)
  return false;
#undef DO_
}

void CMDGroupMsgReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDGroupMsgReq)
  // optional uint32 groupId = 1;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->groupid(), output);
  }

  // optional .ChatMsg_t msg = 20;
  if (this->has_msg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, *this->msg_, output);
  }

  // @@protoc_insertion_point(serialize_end:CMDGroupMsgReq)
}

::google::protobuf::uint8* CMDGroupMsgReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDGroupMsgReq)
  // optional uint32 groupId = 1;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->groupid(), target);
  }

  // optional .ChatMsg_t msg = 20;
  if (this->has_msg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        20, *this->msg_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDGroupMsgReq)
  return target;
}

int CMDGroupMsgReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDGroupMsgReq)
  int total_size = 0;

  // optional uint32 groupId = 1;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->groupid());
  }

  // optional .ChatMsg_t msg = 20;
  if (this->has_msg()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msg_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDGroupMsgReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDGroupMsgReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDGroupMsgReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDGroupMsgReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDGroupMsgReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDGroupMsgReq)
    MergeFrom(*source);
  }
}

void CMDGroupMsgReq::MergeFrom(const CMDGroupMsgReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDGroupMsgReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
  if (from.has_msg()) {
    mutable_msg()->::ChatMsg_t::MergeFrom(from.msg());
  }
}

void CMDGroupMsgReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDGroupMsgReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDGroupMsgReq::CopyFrom(const CMDGroupMsgReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDGroupMsgReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDGroupMsgReq::IsInitialized() const {

  return true;
}

void CMDGroupMsgReq::Swap(CMDGroupMsgReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDGroupMsgReq::InternalSwap(CMDGroupMsgReq* other) {
  std::swap(groupid_, other->groupid_);
  std::swap(msg_, other->msg_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDGroupMsgReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDGroupMsgReq_descriptor_;
  metadata.reflection = CMDGroupMsgReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDGroupMsgReq

// optional uint32 groupId = 1;
void CMDGroupMsgReq::clear_groupid() {
  groupid_ = 0u;
}
 ::google::protobuf::uint32 CMDGroupMsgReq::groupid() const {
  // @@protoc_insertion_point(field_get:CMDGroupMsgReq.groupId)
  return groupid_;
}
 void CMDGroupMsgReq::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDGroupMsgReq.groupId)
}

// optional .ChatMsg_t msg = 20;
bool CMDGroupMsgReq::has_msg() const {
  return !_is_default_instance_ && msg_ != NULL;
}
void CMDGroupMsgReq::clear_msg() {
  if (GetArenaNoVirtual() == NULL && msg_ != NULL) delete msg_;
  msg_ = NULL;
}
const ::ChatMsg_t& CMDGroupMsgReq::msg() const {
  // @@protoc_insertion_point(field_get:CMDGroupMsgReq.msg)
  return msg_ != NULL ? *msg_ : *default_instance_->msg_;
}
::ChatMsg_t* CMDGroupMsgReq::mutable_msg() {
  
  if (msg_ == NULL) {
    msg_ = new ::ChatMsg_t;
  }
  // @@protoc_insertion_point(field_mutable:CMDGroupMsgReq.msg)
  return msg_;
}
::ChatMsg_t* CMDGroupMsgReq::release_msg() {
  // @@protoc_insertion_point(field_release:CMDGroupMsgReq.msg)
  
  ::ChatMsg_t* temp = msg_;
  msg_ = NULL;
  return temp;
}
void CMDGroupMsgReq::set_allocated_msg(::ChatMsg_t* msg) {
  delete msg_;
  msg_ = msg;
  if (msg) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDGroupMsgReq.msg)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDGroupMsgRecv::kGroupIdFieldNumber;
const int CMDGroupMsgRecv::kMsgIdFieldNumber;
const int CMDGroupMsgRecv::kClientMSgIdFieldNumber;
const int CMDGroupMsgRecv::kErrInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDGroupMsgRecv::CMDGroupMsgRecv()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDGroupMsgRecv)
}

void CMDGroupMsgRecv::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  errinfo_ = const_cast< ::CMDErrCode*>(&::CMDErrCode::default_instance());
}

CMDGroupMsgRecv::CMDGroupMsgRecv(const CMDGroupMsgRecv& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDGroupMsgRecv)
}

void CMDGroupMsgRecv::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  groupid_ = 0u;
  msgid_ = 0u;
  clientmsgid_ = GOOGLE_ULONGLONG(0);
  errinfo_ = NULL;
}

CMDGroupMsgRecv::~CMDGroupMsgRecv() {
  // @@protoc_insertion_point(destructor:CMDGroupMsgRecv)
  SharedDtor();
}

void CMDGroupMsgRecv::SharedDtor() {
  if (this != default_instance_) {
    delete errinfo_;
  }
}

void CMDGroupMsgRecv::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDGroupMsgRecv::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDGroupMsgRecv_descriptor_;
}

const CMDGroupMsgRecv& CMDGroupMsgRecv::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ChatSvr_2eproto();
  return *default_instance_;
}

CMDGroupMsgRecv* CMDGroupMsgRecv::default_instance_ = NULL;

CMDGroupMsgRecv* CMDGroupMsgRecv::New(::google::protobuf::Arena* arena) const {
  CMDGroupMsgRecv* n = new CMDGroupMsgRecv;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDGroupMsgRecv::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDGroupMsgRecv)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDGroupMsgRecv, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDGroupMsgRecv*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(groupid_, clientmsgid_);
  if (GetArenaNoVirtual() == NULL && errinfo_ != NULL) delete errinfo_;
  errinfo_ = NULL;

#undef ZR_HELPER_
#undef ZR_

}

bool CMDGroupMsgRecv::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDGroupMsgRecv)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 groupId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &groupid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_msgId;
        break;
      }

      // optional uint32 msgId = 2;
      case 2: {
        if (tag == 16) {
         parse_msgId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msgid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_clientMSgId;
        break;
      }

      // optional uint64 clientMSgId = 3;
      case 3: {
        if (tag == 24) {
         parse_clientMSgId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &clientmsgid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_errInfo;
        break;
      }

      // optional .CMDErrCode errInfo = 4;
      case 4: {
        if (tag == 34) {
         parse_errInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_errinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDGroupMsgRecv)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDGroupMsgRecv)
  return false;
#undef DO_
}

void CMDGroupMsgRecv::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDGroupMsgRecv)
  // optional uint32 groupId = 1;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->groupid(), output);
  }

  // optional uint32 msgId = 2;
  if (this->msgid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->msgid(), output);
  }

  // optional uint64 clientMSgId = 3;
  if (this->clientmsgid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->clientmsgid(), output);
  }

  // optional .CMDErrCode errInfo = 4;
  if (this->has_errinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->errinfo_, output);
  }

  // @@protoc_insertion_point(serialize_end:CMDGroupMsgRecv)
}

::google::protobuf::uint8* CMDGroupMsgRecv::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDGroupMsgRecv)
  // optional uint32 groupId = 1;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->groupid(), target);
  }

  // optional uint32 msgId = 2;
  if (this->msgid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->msgid(), target);
  }

  // optional uint64 clientMSgId = 3;
  if (this->clientmsgid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->clientmsgid(), target);
  }

  // optional .CMDErrCode errInfo = 4;
  if (this->has_errinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->errinfo_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDGroupMsgRecv)
  return target;
}

int CMDGroupMsgRecv::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDGroupMsgRecv)
  int total_size = 0;

  // optional uint32 groupId = 1;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->groupid());
  }

  // optional uint32 msgId = 2;
  if (this->msgid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->msgid());
  }

  // optional uint64 clientMSgId = 3;
  if (this->clientmsgid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->clientmsgid());
  }

  // optional .CMDErrCode errInfo = 4;
  if (this->has_errinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->errinfo_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDGroupMsgRecv::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDGroupMsgRecv)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDGroupMsgRecv* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDGroupMsgRecv>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDGroupMsgRecv)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDGroupMsgRecv)
    MergeFrom(*source);
  }
}

void CMDGroupMsgRecv::MergeFrom(const CMDGroupMsgRecv& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDGroupMsgRecv)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
  if (from.msgid() != 0) {
    set_msgid(from.msgid());
  }
  if (from.clientmsgid() != 0) {
    set_clientmsgid(from.clientmsgid());
  }
  if (from.has_errinfo()) {
    mutable_errinfo()->::CMDErrCode::MergeFrom(from.errinfo());
  }
}

void CMDGroupMsgRecv::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDGroupMsgRecv)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDGroupMsgRecv::CopyFrom(const CMDGroupMsgRecv& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDGroupMsgRecv)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDGroupMsgRecv::IsInitialized() const {

  return true;
}

void CMDGroupMsgRecv::Swap(CMDGroupMsgRecv* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDGroupMsgRecv::InternalSwap(CMDGroupMsgRecv* other) {
  std::swap(groupid_, other->groupid_);
  std::swap(msgid_, other->msgid_);
  std::swap(clientmsgid_, other->clientmsgid_);
  std::swap(errinfo_, other->errinfo_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDGroupMsgRecv::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDGroupMsgRecv_descriptor_;
  metadata.reflection = CMDGroupMsgRecv_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDGroupMsgRecv

// optional uint32 groupId = 1;
void CMDGroupMsgRecv::clear_groupid() {
  groupid_ = 0u;
}
 ::google::protobuf::uint32 CMDGroupMsgRecv::groupid() const {
  // @@protoc_insertion_point(field_get:CMDGroupMsgRecv.groupId)
  return groupid_;
}
 void CMDGroupMsgRecv::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDGroupMsgRecv.groupId)
}

// optional uint32 msgId = 2;
void CMDGroupMsgRecv::clear_msgid() {
  msgid_ = 0u;
}
 ::google::protobuf::uint32 CMDGroupMsgRecv::msgid() const {
  // @@protoc_insertion_point(field_get:CMDGroupMsgRecv.msgId)
  return msgid_;
}
 void CMDGroupMsgRecv::set_msgid(::google::protobuf::uint32 value) {
  
  msgid_ = value;
  // @@protoc_insertion_point(field_set:CMDGroupMsgRecv.msgId)
}

// optional uint64 clientMSgId = 3;
void CMDGroupMsgRecv::clear_clientmsgid() {
  clientmsgid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 CMDGroupMsgRecv::clientmsgid() const {
  // @@protoc_insertion_point(field_get:CMDGroupMsgRecv.clientMSgId)
  return clientmsgid_;
}
 void CMDGroupMsgRecv::set_clientmsgid(::google::protobuf::uint64 value) {
  
  clientmsgid_ = value;
  // @@protoc_insertion_point(field_set:CMDGroupMsgRecv.clientMSgId)
}

// optional .CMDErrCode errInfo = 4;
bool CMDGroupMsgRecv::has_errinfo() const {
  return !_is_default_instance_ && errinfo_ != NULL;
}
void CMDGroupMsgRecv::clear_errinfo() {
  if (GetArenaNoVirtual() == NULL && errinfo_ != NULL) delete errinfo_;
  errinfo_ = NULL;
}
const ::CMDErrCode& CMDGroupMsgRecv::errinfo() const {
  // @@protoc_insertion_point(field_get:CMDGroupMsgRecv.errInfo)
  return errinfo_ != NULL ? *errinfo_ : *default_instance_->errinfo_;
}
::CMDErrCode* CMDGroupMsgRecv::mutable_errinfo() {
  
  if (errinfo_ == NULL) {
    errinfo_ = new ::CMDErrCode;
  }
  // @@protoc_insertion_point(field_mutable:CMDGroupMsgRecv.errInfo)
  return errinfo_;
}
::CMDErrCode* CMDGroupMsgRecv::release_errinfo() {
  // @@protoc_insertion_point(field_release:CMDGroupMsgRecv.errInfo)
  
  ::CMDErrCode* temp = errinfo_;
  errinfo_ = NULL;
  return temp;
}
void CMDGroupMsgRecv::set_allocated_errinfo(::CMDErrCode* errinfo) {
  delete errinfo_;
  errinfo_ = errinfo;
  if (errinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDGroupMsgRecv.errInfo)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDGroupMsgNotify::kGroupIdFieldNumber;
const int CMDGroupMsgNotify::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDGroupMsgNotify::CMDGroupMsgNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDGroupMsgNotify)
}

void CMDGroupMsgNotify::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  msg_ = const_cast< ::ChatMsg_t*>(&::ChatMsg_t::default_instance());
}

CMDGroupMsgNotify::CMDGroupMsgNotify(const CMDGroupMsgNotify& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDGroupMsgNotify)
}

void CMDGroupMsgNotify::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  groupid_ = 0u;
  msg_ = NULL;
}

CMDGroupMsgNotify::~CMDGroupMsgNotify() {
  // @@protoc_insertion_point(destructor:CMDGroupMsgNotify)
  SharedDtor();
}

void CMDGroupMsgNotify::SharedDtor() {
  if (this != default_instance_) {
    delete msg_;
  }
}

void CMDGroupMsgNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDGroupMsgNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDGroupMsgNotify_descriptor_;
}

const CMDGroupMsgNotify& CMDGroupMsgNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ChatSvr_2eproto();
  return *default_instance_;
}

CMDGroupMsgNotify* CMDGroupMsgNotify::default_instance_ = NULL;

CMDGroupMsgNotify* CMDGroupMsgNotify::New(::google::protobuf::Arena* arena) const {
  CMDGroupMsgNotify* n = new CMDGroupMsgNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDGroupMsgNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDGroupMsgNotify)
  groupid_ = 0u;
  if (GetArenaNoVirtual() == NULL && msg_ != NULL) delete msg_;
  msg_ = NULL;
}

bool CMDGroupMsgNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDGroupMsgNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 groupId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &groupid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(162)) goto parse_msg;
        break;
      }

      // optional .ChatMsg_t msg = 20;
      case 20: {
        if (tag == 162) {
         parse_msg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msg()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDGroupMsgNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDGroupMsgNotify)
  return false;
#undef DO_
}

void CMDGroupMsgNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDGroupMsgNotify)
  // optional uint32 groupId = 1;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->groupid(), output);
  }

  // optional .ChatMsg_t msg = 20;
  if (this->has_msg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, *this->msg_, output);
  }

  // @@protoc_insertion_point(serialize_end:CMDGroupMsgNotify)
}

::google::protobuf::uint8* CMDGroupMsgNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDGroupMsgNotify)
  // optional uint32 groupId = 1;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->groupid(), target);
  }

  // optional .ChatMsg_t msg = 20;
  if (this->has_msg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        20, *this->msg_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDGroupMsgNotify)
  return target;
}

int CMDGroupMsgNotify::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDGroupMsgNotify)
  int total_size = 0;

  // optional uint32 groupId = 1;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->groupid());
  }

  // optional .ChatMsg_t msg = 20;
  if (this->has_msg()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msg_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDGroupMsgNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDGroupMsgNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDGroupMsgNotify* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDGroupMsgNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDGroupMsgNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDGroupMsgNotify)
    MergeFrom(*source);
  }
}

void CMDGroupMsgNotify::MergeFrom(const CMDGroupMsgNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDGroupMsgNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
  if (from.has_msg()) {
    mutable_msg()->::ChatMsg_t::MergeFrom(from.msg());
  }
}

void CMDGroupMsgNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDGroupMsgNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDGroupMsgNotify::CopyFrom(const CMDGroupMsgNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDGroupMsgNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDGroupMsgNotify::IsInitialized() const {

  return true;
}

void CMDGroupMsgNotify::Swap(CMDGroupMsgNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDGroupMsgNotify::InternalSwap(CMDGroupMsgNotify* other) {
  std::swap(groupid_, other->groupid_);
  std::swap(msg_, other->msg_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDGroupMsgNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDGroupMsgNotify_descriptor_;
  metadata.reflection = CMDGroupMsgNotify_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDGroupMsgNotify

// optional uint32 groupId = 1;
void CMDGroupMsgNotify::clear_groupid() {
  groupid_ = 0u;
}
 ::google::protobuf::uint32 CMDGroupMsgNotify::groupid() const {
  // @@protoc_insertion_point(field_get:CMDGroupMsgNotify.groupId)
  return groupid_;
}
 void CMDGroupMsgNotify::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDGroupMsgNotify.groupId)
}

// optional .ChatMsg_t msg = 20;
bool CMDGroupMsgNotify::has_msg() const {
  return !_is_default_instance_ && msg_ != NULL;
}
void CMDGroupMsgNotify::clear_msg() {
  if (GetArenaNoVirtual() == NULL && msg_ != NULL) delete msg_;
  msg_ = NULL;
}
const ::ChatMsg_t& CMDGroupMsgNotify::msg() const {
  // @@protoc_insertion_point(field_get:CMDGroupMsgNotify.msg)
  return msg_ != NULL ? *msg_ : *default_instance_->msg_;
}
::ChatMsg_t* CMDGroupMsgNotify::mutable_msg() {
  
  if (msg_ == NULL) {
    msg_ = new ::ChatMsg_t;
  }
  // @@protoc_insertion_point(field_mutable:CMDGroupMsgNotify.msg)
  return msg_;
}
::ChatMsg_t* CMDGroupMsgNotify::release_msg() {
  // @@protoc_insertion_point(field_release:CMDGroupMsgNotify.msg)
  
  ::ChatMsg_t* temp = msg_;
  msg_ = NULL;
  return temp;
}
void CMDGroupMsgNotify::set_allocated_msg(::ChatMsg_t* msg) {
  delete msg_;
  msg_ = msg;
  if (msg) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDGroupMsgNotify.msg)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDGroupMsgNotifyRecv::kRcvUIdFieldNumber;
const int CMDGroupMsgNotifyRecv::kGroupIdFieldNumber;
const int CMDGroupMsgNotifyRecv::kMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDGroupMsgNotifyRecv::CMDGroupMsgNotifyRecv()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDGroupMsgNotifyRecv)
}

void CMDGroupMsgNotifyRecv::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDGroupMsgNotifyRecv::CMDGroupMsgNotifyRecv(const CMDGroupMsgNotifyRecv& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDGroupMsgNotifyRecv)
}

void CMDGroupMsgNotifyRecv::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  rcvuid_ = 0u;
  groupid_ = 0u;
  msgid_ = 0u;
}

CMDGroupMsgNotifyRecv::~CMDGroupMsgNotifyRecv() {
  // @@protoc_insertion_point(destructor:CMDGroupMsgNotifyRecv)
  SharedDtor();
}

void CMDGroupMsgNotifyRecv::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMDGroupMsgNotifyRecv::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDGroupMsgNotifyRecv::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDGroupMsgNotifyRecv_descriptor_;
}

const CMDGroupMsgNotifyRecv& CMDGroupMsgNotifyRecv::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ChatSvr_2eproto();
  return *default_instance_;
}

CMDGroupMsgNotifyRecv* CMDGroupMsgNotifyRecv::default_instance_ = NULL;

CMDGroupMsgNotifyRecv* CMDGroupMsgNotifyRecv::New(::google::protobuf::Arena* arena) const {
  CMDGroupMsgNotifyRecv* n = new CMDGroupMsgNotifyRecv;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDGroupMsgNotifyRecv::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDGroupMsgNotifyRecv)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDGroupMsgNotifyRecv, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDGroupMsgNotifyRecv*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(rcvuid_, msgid_);

#undef ZR_HELPER_
#undef ZR_

}

bool CMDGroupMsgNotifyRecv::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDGroupMsgNotifyRecv)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 rcvUId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rcvuid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_groupId;
        break;
      }

      // optional uint32 groupId = 2;
      case 2: {
        if (tag == 16) {
         parse_groupId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &groupid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_msgId;
        break;
      }

      // optional uint32 msgId = 3;
      case 3: {
        if (tag == 24) {
         parse_msgId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msgid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDGroupMsgNotifyRecv)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDGroupMsgNotifyRecv)
  return false;
#undef DO_
}

void CMDGroupMsgNotifyRecv::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDGroupMsgNotifyRecv)
  // optional uint32 rcvUId = 1;
  if (this->rcvuid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->rcvuid(), output);
  }

  // optional uint32 groupId = 2;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->groupid(), output);
  }

  // optional uint32 msgId = 3;
  if (this->msgid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->msgid(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDGroupMsgNotifyRecv)
}

::google::protobuf::uint8* CMDGroupMsgNotifyRecv::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDGroupMsgNotifyRecv)
  // optional uint32 rcvUId = 1;
  if (this->rcvuid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->rcvuid(), target);
  }

  // optional uint32 groupId = 2;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->groupid(), target);
  }

  // optional uint32 msgId = 3;
  if (this->msgid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->msgid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDGroupMsgNotifyRecv)
  return target;
}

int CMDGroupMsgNotifyRecv::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDGroupMsgNotifyRecv)
  int total_size = 0;

  // optional uint32 rcvUId = 1;
  if (this->rcvuid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->rcvuid());
  }

  // optional uint32 groupId = 2;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->groupid());
  }

  // optional uint32 msgId = 3;
  if (this->msgid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->msgid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDGroupMsgNotifyRecv::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDGroupMsgNotifyRecv)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDGroupMsgNotifyRecv* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDGroupMsgNotifyRecv>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDGroupMsgNotifyRecv)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDGroupMsgNotifyRecv)
    MergeFrom(*source);
  }
}

void CMDGroupMsgNotifyRecv::MergeFrom(const CMDGroupMsgNotifyRecv& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDGroupMsgNotifyRecv)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.rcvuid() != 0) {
    set_rcvuid(from.rcvuid());
  }
  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
  if (from.msgid() != 0) {
    set_msgid(from.msgid());
  }
}

void CMDGroupMsgNotifyRecv::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDGroupMsgNotifyRecv)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDGroupMsgNotifyRecv::CopyFrom(const CMDGroupMsgNotifyRecv& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDGroupMsgNotifyRecv)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDGroupMsgNotifyRecv::IsInitialized() const {

  return true;
}

void CMDGroupMsgNotifyRecv::Swap(CMDGroupMsgNotifyRecv* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDGroupMsgNotifyRecv::InternalSwap(CMDGroupMsgNotifyRecv* other) {
  std::swap(rcvuid_, other->rcvuid_);
  std::swap(groupid_, other->groupid_);
  std::swap(msgid_, other->msgid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDGroupMsgNotifyRecv::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDGroupMsgNotifyRecv_descriptor_;
  metadata.reflection = CMDGroupMsgNotifyRecv_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDGroupMsgNotifyRecv

// optional uint32 rcvUId = 1;
void CMDGroupMsgNotifyRecv::clear_rcvuid() {
  rcvuid_ = 0u;
}
 ::google::protobuf::uint32 CMDGroupMsgNotifyRecv::rcvuid() const {
  // @@protoc_insertion_point(field_get:CMDGroupMsgNotifyRecv.rcvUId)
  return rcvuid_;
}
 void CMDGroupMsgNotifyRecv::set_rcvuid(::google::protobuf::uint32 value) {
  
  rcvuid_ = value;
  // @@protoc_insertion_point(field_set:CMDGroupMsgNotifyRecv.rcvUId)
}

// optional uint32 groupId = 2;
void CMDGroupMsgNotifyRecv::clear_groupid() {
  groupid_ = 0u;
}
 ::google::protobuf::uint32 CMDGroupMsgNotifyRecv::groupid() const {
  // @@protoc_insertion_point(field_get:CMDGroupMsgNotifyRecv.groupId)
  return groupid_;
}
 void CMDGroupMsgNotifyRecv::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDGroupMsgNotifyRecv.groupId)
}

// optional uint32 msgId = 3;
void CMDGroupMsgNotifyRecv::clear_msgid() {
  msgid_ = 0u;
}
 ::google::protobuf::uint32 CMDGroupMsgNotifyRecv::msgid() const {
  // @@protoc_insertion_point(field_get:CMDGroupMsgNotifyRecv.msgId)
  return msgid_;
}
 void CMDGroupMsgNotifyRecv::set_msgid(::google::protobuf::uint32 value) {
  
  msgid_ = value;
  // @@protoc_insertion_point(field_set:CMDGroupMsgNotifyRecv.msgId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDUnreadGroupMsgReq::kUserIdFieldNumber;
const int CMDUnreadGroupMsgReq::kGroupIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDUnreadGroupMsgReq::CMDUnreadGroupMsgReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDUnreadGroupMsgReq)
}

void CMDUnreadGroupMsgReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDUnreadGroupMsgReq::CMDUnreadGroupMsgReq(const CMDUnreadGroupMsgReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDUnreadGroupMsgReq)
}

void CMDUnreadGroupMsgReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  userid_ = 0u;
  groupid_ = 0u;
}

CMDUnreadGroupMsgReq::~CMDUnreadGroupMsgReq() {
  // @@protoc_insertion_point(destructor:CMDUnreadGroupMsgReq)
  SharedDtor();
}

void CMDUnreadGroupMsgReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMDUnreadGroupMsgReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDUnreadGroupMsgReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDUnreadGroupMsgReq_descriptor_;
}

const CMDUnreadGroupMsgReq& CMDUnreadGroupMsgReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ChatSvr_2eproto();
  return *default_instance_;
}

CMDUnreadGroupMsgReq* CMDUnreadGroupMsgReq::default_instance_ = NULL;

CMDUnreadGroupMsgReq* CMDUnreadGroupMsgReq::New(::google::protobuf::Arena* arena) const {
  CMDUnreadGroupMsgReq* n = new CMDUnreadGroupMsgReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDUnreadGroupMsgReq::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDUnreadGroupMsgReq)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDUnreadGroupMsgReq, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDUnreadGroupMsgReq*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(userid_, groupid_);

#undef ZR_HELPER_
#undef ZR_

}

bool CMDUnreadGroupMsgReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDUnreadGroupMsgReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 userId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_groupId;
        break;
      }

      // optional uint32 groupId = 2;
      case 2: {
        if (tag == 16) {
         parse_groupId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &groupid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDUnreadGroupMsgReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDUnreadGroupMsgReq)
  return false;
#undef DO_
}

void CMDUnreadGroupMsgReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDUnreadGroupMsgReq)
  // optional uint32 userId = 1;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->userid(), output);
  }

  // optional uint32 groupId = 2;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->groupid(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDUnreadGroupMsgReq)
}

::google::protobuf::uint8* CMDUnreadGroupMsgReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDUnreadGroupMsgReq)
  // optional uint32 userId = 1;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->userid(), target);
  }

  // optional uint32 groupId = 2;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->groupid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDUnreadGroupMsgReq)
  return target;
}

int CMDUnreadGroupMsgReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDUnreadGroupMsgReq)
  int total_size = 0;

  // optional uint32 userId = 1;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userid());
  }

  // optional uint32 groupId = 2;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->groupid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDUnreadGroupMsgReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDUnreadGroupMsgReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDUnreadGroupMsgReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDUnreadGroupMsgReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDUnreadGroupMsgReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDUnreadGroupMsgReq)
    MergeFrom(*source);
  }
}

void CMDUnreadGroupMsgReq::MergeFrom(const CMDUnreadGroupMsgReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDUnreadGroupMsgReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
}

void CMDUnreadGroupMsgReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDUnreadGroupMsgReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDUnreadGroupMsgReq::CopyFrom(const CMDUnreadGroupMsgReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDUnreadGroupMsgReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDUnreadGroupMsgReq::IsInitialized() const {

  return true;
}

void CMDUnreadGroupMsgReq::Swap(CMDUnreadGroupMsgReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDUnreadGroupMsgReq::InternalSwap(CMDUnreadGroupMsgReq* other) {
  std::swap(userid_, other->userid_);
  std::swap(groupid_, other->groupid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDUnreadGroupMsgReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDUnreadGroupMsgReq_descriptor_;
  metadata.reflection = CMDUnreadGroupMsgReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDUnreadGroupMsgReq

// optional uint32 userId = 1;
void CMDUnreadGroupMsgReq::clear_userid() {
  userid_ = 0u;
}
 ::google::protobuf::uint32 CMDUnreadGroupMsgReq::userid() const {
  // @@protoc_insertion_point(field_get:CMDUnreadGroupMsgReq.userId)
  return userid_;
}
 void CMDUnreadGroupMsgReq::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDUnreadGroupMsgReq.userId)
}

// optional uint32 groupId = 2;
void CMDUnreadGroupMsgReq::clear_groupid() {
  groupid_ = 0u;
}
 ::google::protobuf::uint32 CMDUnreadGroupMsgReq::groupid() const {
  // @@protoc_insertion_point(field_get:CMDUnreadGroupMsgReq.groupId)
  return groupid_;
}
 void CMDUnreadGroupMsgReq::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDUnreadGroupMsgReq.groupId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDUnreadGroupMsgNotify::kGroupIdFieldNumber;
const int CMDUnreadGroupMsgNotify::kUnreadCountFieldNumber;
const int CMDUnreadGroupMsgNotify::kAtMsgIdListFieldNumber;
const int CMDUnreadGroupMsgNotify::kMsgsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDUnreadGroupMsgNotify::CMDUnreadGroupMsgNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDUnreadGroupMsgNotify)
}

void CMDUnreadGroupMsgNotify::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDUnreadGroupMsgNotify::CMDUnreadGroupMsgNotify(const CMDUnreadGroupMsgNotify& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDUnreadGroupMsgNotify)
}

void CMDUnreadGroupMsgNotify::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  groupid_ = 0u;
  unreadcount_ = 0u;
}

CMDUnreadGroupMsgNotify::~CMDUnreadGroupMsgNotify() {
  // @@protoc_insertion_point(destructor:CMDUnreadGroupMsgNotify)
  SharedDtor();
}

void CMDUnreadGroupMsgNotify::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMDUnreadGroupMsgNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDUnreadGroupMsgNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDUnreadGroupMsgNotify_descriptor_;
}

const CMDUnreadGroupMsgNotify& CMDUnreadGroupMsgNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ChatSvr_2eproto();
  return *default_instance_;
}

CMDUnreadGroupMsgNotify* CMDUnreadGroupMsgNotify::default_instance_ = NULL;

CMDUnreadGroupMsgNotify* CMDUnreadGroupMsgNotify::New(::google::protobuf::Arena* arena) const {
  CMDUnreadGroupMsgNotify* n = new CMDUnreadGroupMsgNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDUnreadGroupMsgNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDUnreadGroupMsgNotify)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDUnreadGroupMsgNotify, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDUnreadGroupMsgNotify*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(groupid_, unreadcount_);

#undef ZR_HELPER_
#undef ZR_

  atmsgidlist_.Clear();
  msgs_.Clear();
}

bool CMDUnreadGroupMsgNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDUnreadGroupMsgNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 groupId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &groupid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_unreadCount;
        break;
      }

      // optional uint32 unreadCount = 2;
      case 2: {
        if (tag == 16) {
         parse_unreadCount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &unreadcount_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(154)) goto parse_atMsgIdList;
        break;
      }

      // repeated uint32 atMsgIdList = 19;
      case 19: {
        if (tag == 154) {
         parse_atMsgIdList:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_atmsgidlist())));
        } else if (tag == 152) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 2, 154, input, this->mutable_atmsgidlist())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(162)) goto parse_msgs;
        break;
      }

      // repeated .ChatMsg_t msgs = 20;
      case 20: {
        if (tag == 162) {
         parse_msgs:
          DO_(input->IncrementRecursionDepth());
         parse_loop_msgs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_msgs()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(162)) goto parse_loop_msgs;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDUnreadGroupMsgNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDUnreadGroupMsgNotify)
  return false;
#undef DO_
}

void CMDUnreadGroupMsgNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDUnreadGroupMsgNotify)
  // optional uint32 groupId = 1;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->groupid(), output);
  }

  // optional uint32 unreadCount = 2;
  if (this->unreadcount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->unreadcount(), output);
  }

  // repeated uint32 atMsgIdList = 19;
  if (this->atmsgidlist_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(19, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_atmsgidlist_cached_byte_size_);
  }
  for (int i = 0; i < this->atmsgidlist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->atmsgidlist(i), output);
  }

  // repeated .ChatMsg_t msgs = 20;
  for (unsigned int i = 0, n = this->msgs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, this->msgs(i), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDUnreadGroupMsgNotify)
}

::google::protobuf::uint8* CMDUnreadGroupMsgNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDUnreadGroupMsgNotify)
  // optional uint32 groupId = 1;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->groupid(), target);
  }

  // optional uint32 unreadCount = 2;
  if (this->unreadcount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->unreadcount(), target);
  }

  // repeated uint32 atMsgIdList = 19;
  if (this->atmsgidlist_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      19,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _atmsgidlist_cached_byte_size_, target);
  }
  for (int i = 0; i < this->atmsgidlist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->atmsgidlist(i), target);
  }

  // repeated .ChatMsg_t msgs = 20;
  for (unsigned int i = 0, n = this->msgs_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        20, this->msgs(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDUnreadGroupMsgNotify)
  return target;
}

int CMDUnreadGroupMsgNotify::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDUnreadGroupMsgNotify)
  int total_size = 0;

  // optional uint32 groupId = 1;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->groupid());
  }

  // optional uint32 unreadCount = 2;
  if (this->unreadcount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->unreadcount());
  }

  // repeated uint32 atMsgIdList = 19;
  {
    int data_size = 0;
    for (int i = 0; i < this->atmsgidlist_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->atmsgidlist(i));
    }
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _atmsgidlist_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .ChatMsg_t msgs = 20;
  total_size += 2 * this->msgs_size();
  for (int i = 0; i < this->msgs_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->msgs(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDUnreadGroupMsgNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDUnreadGroupMsgNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDUnreadGroupMsgNotify* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDUnreadGroupMsgNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDUnreadGroupMsgNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDUnreadGroupMsgNotify)
    MergeFrom(*source);
  }
}

void CMDUnreadGroupMsgNotify::MergeFrom(const CMDUnreadGroupMsgNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDUnreadGroupMsgNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  atmsgidlist_.MergeFrom(from.atmsgidlist_);
  msgs_.MergeFrom(from.msgs_);
  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
  if (from.unreadcount() != 0) {
    set_unreadcount(from.unreadcount());
  }
}

void CMDUnreadGroupMsgNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDUnreadGroupMsgNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDUnreadGroupMsgNotify::CopyFrom(const CMDUnreadGroupMsgNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDUnreadGroupMsgNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDUnreadGroupMsgNotify::IsInitialized() const {

  return true;
}

void CMDUnreadGroupMsgNotify::Swap(CMDUnreadGroupMsgNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDUnreadGroupMsgNotify::InternalSwap(CMDUnreadGroupMsgNotify* other) {
  std::swap(groupid_, other->groupid_);
  std::swap(unreadcount_, other->unreadcount_);
  atmsgidlist_.UnsafeArenaSwap(&other->atmsgidlist_);
  msgs_.UnsafeArenaSwap(&other->msgs_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDUnreadGroupMsgNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDUnreadGroupMsgNotify_descriptor_;
  metadata.reflection = CMDUnreadGroupMsgNotify_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDUnreadGroupMsgNotify

// optional uint32 groupId = 1;
void CMDUnreadGroupMsgNotify::clear_groupid() {
  groupid_ = 0u;
}
 ::google::protobuf::uint32 CMDUnreadGroupMsgNotify::groupid() const {
  // @@protoc_insertion_point(field_get:CMDUnreadGroupMsgNotify.groupId)
  return groupid_;
}
 void CMDUnreadGroupMsgNotify::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDUnreadGroupMsgNotify.groupId)
}

// optional uint32 unreadCount = 2;
void CMDUnreadGroupMsgNotify::clear_unreadcount() {
  unreadcount_ = 0u;
}
 ::google::protobuf::uint32 CMDUnreadGroupMsgNotify::unreadcount() const {
  // @@protoc_insertion_point(field_get:CMDUnreadGroupMsgNotify.unreadCount)
  return unreadcount_;
}
 void CMDUnreadGroupMsgNotify::set_unreadcount(::google::protobuf::uint32 value) {
  
  unreadcount_ = value;
  // @@protoc_insertion_point(field_set:CMDUnreadGroupMsgNotify.unreadCount)
}

// repeated uint32 atMsgIdList = 19;
int CMDUnreadGroupMsgNotify::atmsgidlist_size() const {
  return atmsgidlist_.size();
}
void CMDUnreadGroupMsgNotify::clear_atmsgidlist() {
  atmsgidlist_.Clear();
}
 ::google::protobuf::uint32 CMDUnreadGroupMsgNotify::atmsgidlist(int index) const {
  // @@protoc_insertion_point(field_get:CMDUnreadGroupMsgNotify.atMsgIdList)
  return atmsgidlist_.Get(index);
}
 void CMDUnreadGroupMsgNotify::set_atmsgidlist(int index, ::google::protobuf::uint32 value) {
  atmsgidlist_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMDUnreadGroupMsgNotify.atMsgIdList)
}
 void CMDUnreadGroupMsgNotify::add_atmsgidlist(::google::protobuf::uint32 value) {
  atmsgidlist_.Add(value);
  // @@protoc_insertion_point(field_add:CMDUnreadGroupMsgNotify.atMsgIdList)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMDUnreadGroupMsgNotify::atmsgidlist() const {
  // @@protoc_insertion_point(field_list:CMDUnreadGroupMsgNotify.atMsgIdList)
  return atmsgidlist_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMDUnreadGroupMsgNotify::mutable_atmsgidlist() {
  // @@protoc_insertion_point(field_mutable_list:CMDUnreadGroupMsgNotify.atMsgIdList)
  return &atmsgidlist_;
}

// repeated .ChatMsg_t msgs = 20;
int CMDUnreadGroupMsgNotify::msgs_size() const {
  return msgs_.size();
}
void CMDUnreadGroupMsgNotify::clear_msgs() {
  msgs_.Clear();
}
const ::ChatMsg_t& CMDUnreadGroupMsgNotify::msgs(int index) const {
  // @@protoc_insertion_point(field_get:CMDUnreadGroupMsgNotify.msgs)
  return msgs_.Get(index);
}
::ChatMsg_t* CMDUnreadGroupMsgNotify::mutable_msgs(int index) {
  // @@protoc_insertion_point(field_mutable:CMDUnreadGroupMsgNotify.msgs)
  return msgs_.Mutable(index);
}
::ChatMsg_t* CMDUnreadGroupMsgNotify::add_msgs() {
  // @@protoc_insertion_point(field_add:CMDUnreadGroupMsgNotify.msgs)
  return msgs_.Add();
}
::google::protobuf::RepeatedPtrField< ::ChatMsg_t >*
CMDUnreadGroupMsgNotify::mutable_msgs() {
  // @@protoc_insertion_point(field_mutable_list:CMDUnreadGroupMsgNotify.msgs)
  return &msgs_;
}
const ::google::protobuf::RepeatedPtrField< ::ChatMsg_t >&
CMDUnreadGroupMsgNotify::msgs() const {
  // @@protoc_insertion_point(field_list:CMDUnreadGroupMsgNotify.msgs)
  return msgs_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDGroupMsgHisReq::kUserIdFieldNumber;
const int CMDGroupMsgHisReq::kGroupIdFieldNumber;
const int CMDGroupMsgHisReq::kForwardFieldNumber;
const int CMDGroupMsgHisReq::kMsgIdFieldNumber;
const int CMDGroupMsgHisReq::kCountFieldNumber;
const int CMDGroupMsgHisReq::kQueryTimeFieldNumber;
const int CMDGroupMsgHisReq::kReverseMsgOrderFieldNumber;
const int CMDGroupMsgHisReq::kReqTagFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDGroupMsgHisReq::CMDGroupMsgHisReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDGroupMsgHisReq)
}

void CMDGroupMsgHisReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDGroupMsgHisReq::CMDGroupMsgHisReq(const CMDGroupMsgHisReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDGroupMsgHisReq)
}

void CMDGroupMsgHisReq::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  userid_ = 0u;
  groupid_ = 0u;
  forward_ = false;
  msgid_ = 0u;
  count_ = 0u;
  querytime_ = GOOGLE_LONGLONG(0);
  reversemsgorder_ = false;
  reqtag_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CMDGroupMsgHisReq::~CMDGroupMsgHisReq() {
  // @@protoc_insertion_point(destructor:CMDGroupMsgHisReq)
  SharedDtor();
}

void CMDGroupMsgHisReq::SharedDtor() {
  reqtag_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CMDGroupMsgHisReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDGroupMsgHisReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDGroupMsgHisReq_descriptor_;
}

const CMDGroupMsgHisReq& CMDGroupMsgHisReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ChatSvr_2eproto();
  return *default_instance_;
}

CMDGroupMsgHisReq* CMDGroupMsgHisReq::default_instance_ = NULL;

CMDGroupMsgHisReq* CMDGroupMsgHisReq::New(::google::protobuf::Arena* arena) const {
  CMDGroupMsgHisReq* n = new CMDGroupMsgHisReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDGroupMsgHisReq::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDGroupMsgHisReq)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDGroupMsgHisReq, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDGroupMsgHisReq*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(userid_, querytime_);
  ZR_(forward_, reversemsgorder_);
  reqtag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool CMDGroupMsgHisReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDGroupMsgHisReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 userId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_groupId;
        break;
      }

      // optional uint32 groupId = 2;
      case 2: {
        if (tag == 16) {
         parse_groupId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &groupid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_forward;
        break;
      }

      // optional bool forward = 3;
      case 3: {
        if (tag == 24) {
         parse_forward:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &forward_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_msgId;
        break;
      }

      // optional uint32 msgId = 4;
      case 4: {
        if (tag == 32) {
         parse_msgId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msgid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_count;
        break;
      }

      // optional uint32 count = 5;
      case 5: {
        if (tag == 40) {
         parse_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_queryTime;
        break;
      }

      // optional int64 queryTime = 6;
      case 6: {
        if (tag == 48) {
         parse_queryTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &querytime_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_reverseMsgOrder;
        break;
      }

      // optional bool reverseMsgOrder = 7;
      case 7: {
        if (tag == 56) {
         parse_reverseMsgOrder:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &reversemsgorder_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_reqTag;
        break;
      }

      // optional string reqTag = 8;
      case 8: {
        if (tag == 66) {
         parse_reqTag:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reqtag()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->reqtag().data(), this->reqtag().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMDGroupMsgHisReq.reqTag"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDGroupMsgHisReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDGroupMsgHisReq)
  return false;
#undef DO_
}

void CMDGroupMsgHisReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDGroupMsgHisReq)
  // optional uint32 userId = 1;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->userid(), output);
  }

  // optional uint32 groupId = 2;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->groupid(), output);
  }

  // optional bool forward = 3;
  if (this->forward() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->forward(), output);
  }

  // optional uint32 msgId = 4;
  if (this->msgid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->msgid(), output);
  }

  // optional uint32 count = 5;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->count(), output);
  }

  // optional int64 queryTime = 6;
  if (this->querytime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->querytime(), output);
  }

  // optional bool reverseMsgOrder = 7;
  if (this->reversemsgorder() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->reversemsgorder(), output);
  }

  // optional string reqTag = 8;
  if (this->reqtag().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reqtag().data(), this->reqtag().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDGroupMsgHisReq.reqTag");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->reqtag(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDGroupMsgHisReq)
}

::google::protobuf::uint8* CMDGroupMsgHisReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDGroupMsgHisReq)
  // optional uint32 userId = 1;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->userid(), target);
  }

  // optional uint32 groupId = 2;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->groupid(), target);
  }

  // optional bool forward = 3;
  if (this->forward() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->forward(), target);
  }

  // optional uint32 msgId = 4;
  if (this->msgid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->msgid(), target);
  }

  // optional uint32 count = 5;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->count(), target);
  }

  // optional int64 queryTime = 6;
  if (this->querytime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->querytime(), target);
  }

  // optional bool reverseMsgOrder = 7;
  if (this->reversemsgorder() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->reversemsgorder(), target);
  }

  // optional string reqTag = 8;
  if (this->reqtag().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reqtag().data(), this->reqtag().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDGroupMsgHisReq.reqTag");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->reqtag(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDGroupMsgHisReq)
  return target;
}

int CMDGroupMsgHisReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDGroupMsgHisReq)
  int total_size = 0;

  // optional uint32 userId = 1;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userid());
  }

  // optional uint32 groupId = 2;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->groupid());
  }

  // optional bool forward = 3;
  if (this->forward() != 0) {
    total_size += 1 + 1;
  }

  // optional uint32 msgId = 4;
  if (this->msgid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->msgid());
  }

  // optional uint32 count = 5;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  // optional int64 queryTime = 6;
  if (this->querytime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->querytime());
  }

  // optional bool reverseMsgOrder = 7;
  if (this->reversemsgorder() != 0) {
    total_size += 1 + 1;
  }

  // optional string reqTag = 8;
  if (this->reqtag().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->reqtag());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDGroupMsgHisReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDGroupMsgHisReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDGroupMsgHisReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDGroupMsgHisReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDGroupMsgHisReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDGroupMsgHisReq)
    MergeFrom(*source);
  }
}

void CMDGroupMsgHisReq::MergeFrom(const CMDGroupMsgHisReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDGroupMsgHisReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
  if (from.forward() != 0) {
    set_forward(from.forward());
  }
  if (from.msgid() != 0) {
    set_msgid(from.msgid());
  }
  if (from.count() != 0) {
    set_count(from.count());
  }
  if (from.querytime() != 0) {
    set_querytime(from.querytime());
  }
  if (from.reversemsgorder() != 0) {
    set_reversemsgorder(from.reversemsgorder());
  }
  if (from.reqtag().size() > 0) {

    reqtag_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reqtag_);
  }
}

void CMDGroupMsgHisReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDGroupMsgHisReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDGroupMsgHisReq::CopyFrom(const CMDGroupMsgHisReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDGroupMsgHisReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDGroupMsgHisReq::IsInitialized() const {

  return true;
}

void CMDGroupMsgHisReq::Swap(CMDGroupMsgHisReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDGroupMsgHisReq::InternalSwap(CMDGroupMsgHisReq* other) {
  std::swap(userid_, other->userid_);
  std::swap(groupid_, other->groupid_);
  std::swap(forward_, other->forward_);
  std::swap(msgid_, other->msgid_);
  std::swap(count_, other->count_);
  std::swap(querytime_, other->querytime_);
  std::swap(reversemsgorder_, other->reversemsgorder_);
  reqtag_.Swap(&other->reqtag_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDGroupMsgHisReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDGroupMsgHisReq_descriptor_;
  metadata.reflection = CMDGroupMsgHisReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDGroupMsgHisReq

// optional uint32 userId = 1;
void CMDGroupMsgHisReq::clear_userid() {
  userid_ = 0u;
}
 ::google::protobuf::uint32 CMDGroupMsgHisReq::userid() const {
  // @@protoc_insertion_point(field_get:CMDGroupMsgHisReq.userId)
  return userid_;
}
 void CMDGroupMsgHisReq::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDGroupMsgHisReq.userId)
}

// optional uint32 groupId = 2;
void CMDGroupMsgHisReq::clear_groupid() {
  groupid_ = 0u;
}
 ::google::protobuf::uint32 CMDGroupMsgHisReq::groupid() const {
  // @@protoc_insertion_point(field_get:CMDGroupMsgHisReq.groupId)
  return groupid_;
}
 void CMDGroupMsgHisReq::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDGroupMsgHisReq.groupId)
}

// optional bool forward = 3;
void CMDGroupMsgHisReq::clear_forward() {
  forward_ = false;
}
 bool CMDGroupMsgHisReq::forward() const {
  // @@protoc_insertion_point(field_get:CMDGroupMsgHisReq.forward)
  return forward_;
}
 void CMDGroupMsgHisReq::set_forward(bool value) {
  
  forward_ = value;
  // @@protoc_insertion_point(field_set:CMDGroupMsgHisReq.forward)
}

// optional uint32 msgId = 4;
void CMDGroupMsgHisReq::clear_msgid() {
  msgid_ = 0u;
}
 ::google::protobuf::uint32 CMDGroupMsgHisReq::msgid() const {
  // @@protoc_insertion_point(field_get:CMDGroupMsgHisReq.msgId)
  return msgid_;
}
 void CMDGroupMsgHisReq::set_msgid(::google::protobuf::uint32 value) {
  
  msgid_ = value;
  // @@protoc_insertion_point(field_set:CMDGroupMsgHisReq.msgId)
}

// optional uint32 count = 5;
void CMDGroupMsgHisReq::clear_count() {
  count_ = 0u;
}
 ::google::protobuf::uint32 CMDGroupMsgHisReq::count() const {
  // @@protoc_insertion_point(field_get:CMDGroupMsgHisReq.count)
  return count_;
}
 void CMDGroupMsgHisReq::set_count(::google::protobuf::uint32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:CMDGroupMsgHisReq.count)
}

// optional int64 queryTime = 6;
void CMDGroupMsgHisReq::clear_querytime() {
  querytime_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 CMDGroupMsgHisReq::querytime() const {
  // @@protoc_insertion_point(field_get:CMDGroupMsgHisReq.queryTime)
  return querytime_;
}
 void CMDGroupMsgHisReq::set_querytime(::google::protobuf::int64 value) {
  
  querytime_ = value;
  // @@protoc_insertion_point(field_set:CMDGroupMsgHisReq.queryTime)
}

// optional bool reverseMsgOrder = 7;
void CMDGroupMsgHisReq::clear_reversemsgorder() {
  reversemsgorder_ = false;
}
 bool CMDGroupMsgHisReq::reversemsgorder() const {
  // @@protoc_insertion_point(field_get:CMDGroupMsgHisReq.reverseMsgOrder)
  return reversemsgorder_;
}
 void CMDGroupMsgHisReq::set_reversemsgorder(bool value) {
  
  reversemsgorder_ = value;
  // @@protoc_insertion_point(field_set:CMDGroupMsgHisReq.reverseMsgOrder)
}

// optional string reqTag = 8;
void CMDGroupMsgHisReq::clear_reqtag() {
  reqtag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CMDGroupMsgHisReq::reqtag() const {
  // @@protoc_insertion_point(field_get:CMDGroupMsgHisReq.reqTag)
  return reqtag_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDGroupMsgHisReq::set_reqtag(const ::std::string& value) {
  
  reqtag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDGroupMsgHisReq.reqTag)
}
 void CMDGroupMsgHisReq::set_reqtag(const char* value) {
  
  reqtag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDGroupMsgHisReq.reqTag)
}
 void CMDGroupMsgHisReq::set_reqtag(const char* value, size_t size) {
  
  reqtag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDGroupMsgHisReq.reqTag)
}
 ::std::string* CMDGroupMsgHisReq::mutable_reqtag() {
  
  // @@protoc_insertion_point(field_mutable:CMDGroupMsgHisReq.reqTag)
  return reqtag_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMDGroupMsgHisReq::release_reqtag() {
  // @@protoc_insertion_point(field_release:CMDGroupMsgHisReq.reqTag)
  
  return reqtag_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDGroupMsgHisReq::set_allocated_reqtag(::std::string* reqtag) {
  if (reqtag != NULL) {
    
  } else {
    
  }
  reqtag_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reqtag);
  // @@protoc_insertion_point(field_set_allocated:CMDGroupMsgHisReq.reqTag)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDGroupMsgHisResp::kGroupIdFieldNumber;
const int CMDGroupMsgHisResp::kNeedClearFieldNumber;
const int CMDGroupMsgHisResp::kHisMsgCountFieldNumber;
const int CMDGroupMsgHisResp::kMsgsFieldNumber;
const int CMDGroupMsgHisResp::kCourseInfoFieldNumber;
const int CMDGroupMsgHisResp::kReverseMsgOrderFieldNumber;
const int CMDGroupMsgHisResp::kReqTagFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDGroupMsgHisResp::CMDGroupMsgHisResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDGroupMsgHisResp)
}

void CMDGroupMsgHisResp::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDGroupMsgHisResp::CMDGroupMsgHisResp(const CMDGroupMsgHisResp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDGroupMsgHisResp)
}

void CMDGroupMsgHisResp::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  groupid_ = 0u;
  needclear_ = false;
  hismsgcount_ = 0u;
  courseinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reversemsgorder_ = false;
  reqtag_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CMDGroupMsgHisResp::~CMDGroupMsgHisResp() {
  // @@protoc_insertion_point(destructor:CMDGroupMsgHisResp)
  SharedDtor();
}

void CMDGroupMsgHisResp::SharedDtor() {
  courseinfo_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reqtag_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CMDGroupMsgHisResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDGroupMsgHisResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDGroupMsgHisResp_descriptor_;
}

const CMDGroupMsgHisResp& CMDGroupMsgHisResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ChatSvr_2eproto();
  return *default_instance_;
}

CMDGroupMsgHisResp* CMDGroupMsgHisResp::default_instance_ = NULL;

CMDGroupMsgHisResp* CMDGroupMsgHisResp::New(::google::protobuf::Arena* arena) const {
  CMDGroupMsgHisResp* n = new CMDGroupMsgHisResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDGroupMsgHisResp::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDGroupMsgHisResp)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDGroupMsgHisResp, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDGroupMsgHisResp*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(groupid_, hismsgcount_);
  ZR_(needclear_, reversemsgorder_);
  courseinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reqtag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

  msgs_.Clear();
}

bool CMDGroupMsgHisResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDGroupMsgHisResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 groupId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &groupid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_needClear;
        break;
      }

      // optional bool needClear = 2;
      case 2: {
        if (tag == 16) {
         parse_needClear:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &needclear_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_hisMsgCount;
        break;
      }

      // optional uint32 hisMsgCount = 3;
      case 3: {
        if (tag == 24) {
         parse_hisMsgCount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hismsgcount_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(162)) goto parse_msgs;
        break;
      }

      // repeated .ChatMsg_t msgs = 20;
      case 20: {
        if (tag == 162) {
         parse_msgs:
          DO_(input->IncrementRecursionDepth());
         parse_loop_msgs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_msgs()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(162)) goto parse_loop_msgs;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(170)) goto parse_courseInfo;
        break;
      }

      // optional string courseInfo = 21;
      case 21: {
        if (tag == 170) {
         parse_courseInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_courseinfo()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->courseinfo().data(), this->courseinfo().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMDGroupMsgHisResp.courseInfo"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(176)) goto parse_reverseMsgOrder;
        break;
      }

      // optional bool reverseMsgOrder = 22;
      case 22: {
        if (tag == 176) {
         parse_reverseMsgOrder:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &reversemsgorder_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(186)) goto parse_reqTag;
        break;
      }

      // optional string reqTag = 23;
      case 23: {
        if (tag == 186) {
         parse_reqTag:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reqtag()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->reqtag().data(), this->reqtag().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMDGroupMsgHisResp.reqTag"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDGroupMsgHisResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDGroupMsgHisResp)
  return false;
#undef DO_
}

void CMDGroupMsgHisResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDGroupMsgHisResp)
  // optional uint32 groupId = 1;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->groupid(), output);
  }

  // optional bool needClear = 2;
  if (this->needclear() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->needclear(), output);
  }

  // optional uint32 hisMsgCount = 3;
  if (this->hismsgcount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->hismsgcount(), output);
  }

  // repeated .ChatMsg_t msgs = 20;
  for (unsigned int i = 0, n = this->msgs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, this->msgs(i), output);
  }

  // optional string courseInfo = 21;
  if (this->courseinfo().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->courseinfo().data(), this->courseinfo().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDGroupMsgHisResp.courseInfo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      21, this->courseinfo(), output);
  }

  // optional bool reverseMsgOrder = 22;
  if (this->reversemsgorder() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(22, this->reversemsgorder(), output);
  }

  // optional string reqTag = 23;
  if (this->reqtag().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reqtag().data(), this->reqtag().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDGroupMsgHisResp.reqTag");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      23, this->reqtag(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDGroupMsgHisResp)
}

::google::protobuf::uint8* CMDGroupMsgHisResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDGroupMsgHisResp)
  // optional uint32 groupId = 1;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->groupid(), target);
  }

  // optional bool needClear = 2;
  if (this->needclear() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->needclear(), target);
  }

  // optional uint32 hisMsgCount = 3;
  if (this->hismsgcount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->hismsgcount(), target);
  }

  // repeated .ChatMsg_t msgs = 20;
  for (unsigned int i = 0, n = this->msgs_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        20, this->msgs(i), false, target);
  }

  // optional string courseInfo = 21;
  if (this->courseinfo().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->courseinfo().data(), this->courseinfo().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDGroupMsgHisResp.courseInfo");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        21, this->courseinfo(), target);
  }

  // optional bool reverseMsgOrder = 22;
  if (this->reversemsgorder() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(22, this->reversemsgorder(), target);
  }

  // optional string reqTag = 23;
  if (this->reqtag().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reqtag().data(), this->reqtag().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDGroupMsgHisResp.reqTag");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        23, this->reqtag(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDGroupMsgHisResp)
  return target;
}

int CMDGroupMsgHisResp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDGroupMsgHisResp)
  int total_size = 0;

  // optional uint32 groupId = 1;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->groupid());
  }

  // optional bool needClear = 2;
  if (this->needclear() != 0) {
    total_size += 1 + 1;
  }

  // optional uint32 hisMsgCount = 3;
  if (this->hismsgcount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hismsgcount());
  }

  // optional string courseInfo = 21;
  if (this->courseinfo().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->courseinfo());
  }

  // optional bool reverseMsgOrder = 22;
  if (this->reversemsgorder() != 0) {
    total_size += 2 + 1;
  }

  // optional string reqTag = 23;
  if (this->reqtag().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->reqtag());
  }

  // repeated .ChatMsg_t msgs = 20;
  total_size += 2 * this->msgs_size();
  for (int i = 0; i < this->msgs_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->msgs(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDGroupMsgHisResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDGroupMsgHisResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDGroupMsgHisResp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDGroupMsgHisResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDGroupMsgHisResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDGroupMsgHisResp)
    MergeFrom(*source);
  }
}

void CMDGroupMsgHisResp::MergeFrom(const CMDGroupMsgHisResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDGroupMsgHisResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  msgs_.MergeFrom(from.msgs_);
  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
  if (from.needclear() != 0) {
    set_needclear(from.needclear());
  }
  if (from.hismsgcount() != 0) {
    set_hismsgcount(from.hismsgcount());
  }
  if (from.courseinfo().size() > 0) {

    courseinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.courseinfo_);
  }
  if (from.reversemsgorder() != 0) {
    set_reversemsgorder(from.reversemsgorder());
  }
  if (from.reqtag().size() > 0) {

    reqtag_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reqtag_);
  }
}

void CMDGroupMsgHisResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDGroupMsgHisResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDGroupMsgHisResp::CopyFrom(const CMDGroupMsgHisResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDGroupMsgHisResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDGroupMsgHisResp::IsInitialized() const {

  return true;
}

void CMDGroupMsgHisResp::Swap(CMDGroupMsgHisResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDGroupMsgHisResp::InternalSwap(CMDGroupMsgHisResp* other) {
  std::swap(groupid_, other->groupid_);
  std::swap(needclear_, other->needclear_);
  std::swap(hismsgcount_, other->hismsgcount_);
  msgs_.UnsafeArenaSwap(&other->msgs_);
  courseinfo_.Swap(&other->courseinfo_);
  std::swap(reversemsgorder_, other->reversemsgorder_);
  reqtag_.Swap(&other->reqtag_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDGroupMsgHisResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDGroupMsgHisResp_descriptor_;
  metadata.reflection = CMDGroupMsgHisResp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDGroupMsgHisResp

// optional uint32 groupId = 1;
void CMDGroupMsgHisResp::clear_groupid() {
  groupid_ = 0u;
}
 ::google::protobuf::uint32 CMDGroupMsgHisResp::groupid() const {
  // @@protoc_insertion_point(field_get:CMDGroupMsgHisResp.groupId)
  return groupid_;
}
 void CMDGroupMsgHisResp::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDGroupMsgHisResp.groupId)
}

// optional bool needClear = 2;
void CMDGroupMsgHisResp::clear_needclear() {
  needclear_ = false;
}
 bool CMDGroupMsgHisResp::needclear() const {
  // @@protoc_insertion_point(field_get:CMDGroupMsgHisResp.needClear)
  return needclear_;
}
 void CMDGroupMsgHisResp::set_needclear(bool value) {
  
  needclear_ = value;
  // @@protoc_insertion_point(field_set:CMDGroupMsgHisResp.needClear)
}

// optional uint32 hisMsgCount = 3;
void CMDGroupMsgHisResp::clear_hismsgcount() {
  hismsgcount_ = 0u;
}
 ::google::protobuf::uint32 CMDGroupMsgHisResp::hismsgcount() const {
  // @@protoc_insertion_point(field_get:CMDGroupMsgHisResp.hisMsgCount)
  return hismsgcount_;
}
 void CMDGroupMsgHisResp::set_hismsgcount(::google::protobuf::uint32 value) {
  
  hismsgcount_ = value;
  // @@protoc_insertion_point(field_set:CMDGroupMsgHisResp.hisMsgCount)
}

// repeated .ChatMsg_t msgs = 20;
int CMDGroupMsgHisResp::msgs_size() const {
  return msgs_.size();
}
void CMDGroupMsgHisResp::clear_msgs() {
  msgs_.Clear();
}
const ::ChatMsg_t& CMDGroupMsgHisResp::msgs(int index) const {
  // @@protoc_insertion_point(field_get:CMDGroupMsgHisResp.msgs)
  return msgs_.Get(index);
}
::ChatMsg_t* CMDGroupMsgHisResp::mutable_msgs(int index) {
  // @@protoc_insertion_point(field_mutable:CMDGroupMsgHisResp.msgs)
  return msgs_.Mutable(index);
}
::ChatMsg_t* CMDGroupMsgHisResp::add_msgs() {
  // @@protoc_insertion_point(field_add:CMDGroupMsgHisResp.msgs)
  return msgs_.Add();
}
::google::protobuf::RepeatedPtrField< ::ChatMsg_t >*
CMDGroupMsgHisResp::mutable_msgs() {
  // @@protoc_insertion_point(field_mutable_list:CMDGroupMsgHisResp.msgs)
  return &msgs_;
}
const ::google::protobuf::RepeatedPtrField< ::ChatMsg_t >&
CMDGroupMsgHisResp::msgs() const {
  // @@protoc_insertion_point(field_list:CMDGroupMsgHisResp.msgs)
  return msgs_;
}

// optional string courseInfo = 21;
void CMDGroupMsgHisResp::clear_courseinfo() {
  courseinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CMDGroupMsgHisResp::courseinfo() const {
  // @@protoc_insertion_point(field_get:CMDGroupMsgHisResp.courseInfo)
  return courseinfo_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDGroupMsgHisResp::set_courseinfo(const ::std::string& value) {
  
  courseinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDGroupMsgHisResp.courseInfo)
}
 void CMDGroupMsgHisResp::set_courseinfo(const char* value) {
  
  courseinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDGroupMsgHisResp.courseInfo)
}
 void CMDGroupMsgHisResp::set_courseinfo(const char* value, size_t size) {
  
  courseinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDGroupMsgHisResp.courseInfo)
}
 ::std::string* CMDGroupMsgHisResp::mutable_courseinfo() {
  
  // @@protoc_insertion_point(field_mutable:CMDGroupMsgHisResp.courseInfo)
  return courseinfo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMDGroupMsgHisResp::release_courseinfo() {
  // @@protoc_insertion_point(field_release:CMDGroupMsgHisResp.courseInfo)
  
  return courseinfo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDGroupMsgHisResp::set_allocated_courseinfo(::std::string* courseinfo) {
  if (courseinfo != NULL) {
    
  } else {
    
  }
  courseinfo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), courseinfo);
  // @@protoc_insertion_point(field_set_allocated:CMDGroupMsgHisResp.courseInfo)
}

// optional bool reverseMsgOrder = 22;
void CMDGroupMsgHisResp::clear_reversemsgorder() {
  reversemsgorder_ = false;
}
 bool CMDGroupMsgHisResp::reversemsgorder() const {
  // @@protoc_insertion_point(field_get:CMDGroupMsgHisResp.reverseMsgOrder)
  return reversemsgorder_;
}
 void CMDGroupMsgHisResp::set_reversemsgorder(bool value) {
  
  reversemsgorder_ = value;
  // @@protoc_insertion_point(field_set:CMDGroupMsgHisResp.reverseMsgOrder)
}

// optional string reqTag = 23;
void CMDGroupMsgHisResp::clear_reqtag() {
  reqtag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CMDGroupMsgHisResp::reqtag() const {
  // @@protoc_insertion_point(field_get:CMDGroupMsgHisResp.reqTag)
  return reqtag_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDGroupMsgHisResp::set_reqtag(const ::std::string& value) {
  
  reqtag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDGroupMsgHisResp.reqTag)
}
 void CMDGroupMsgHisResp::set_reqtag(const char* value) {
  
  reqtag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDGroupMsgHisResp.reqTag)
}
 void CMDGroupMsgHisResp::set_reqtag(const char* value, size_t size) {
  
  reqtag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDGroupMsgHisResp.reqTag)
}
 ::std::string* CMDGroupMsgHisResp::mutable_reqtag() {
  
  // @@protoc_insertion_point(field_mutable:CMDGroupMsgHisResp.reqTag)
  return reqtag_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMDGroupMsgHisResp::release_reqtag() {
  // @@protoc_insertion_point(field_release:CMDGroupMsgHisResp.reqTag)
  
  return reqtag_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDGroupMsgHisResp::set_allocated_reqtag(::std::string* reqtag) {
  if (reqtag != NULL) {
    
  } else {
    
  }
  reqtag_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reqtag);
  // @@protoc_insertion_point(field_set_allocated:CMDGroupMsgHisResp.reqTag)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDGroupPrivateMsgReq::kGroupIdFieldNumber;
const int CMDGroupPrivateMsgReq::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDGroupPrivateMsgReq::CMDGroupPrivateMsgReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDGroupPrivateMsgReq)
}

void CMDGroupPrivateMsgReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  msg_ = const_cast< ::ChatMsg_t*>(&::ChatMsg_t::default_instance());
}

CMDGroupPrivateMsgReq::CMDGroupPrivateMsgReq(const CMDGroupPrivateMsgReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDGroupPrivateMsgReq)
}

void CMDGroupPrivateMsgReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  groupid_ = 0u;
  msg_ = NULL;
}

CMDGroupPrivateMsgReq::~CMDGroupPrivateMsgReq() {
  // @@protoc_insertion_point(destructor:CMDGroupPrivateMsgReq)
  SharedDtor();
}

void CMDGroupPrivateMsgReq::SharedDtor() {
  if (this != default_instance_) {
    delete msg_;
  }
}

void CMDGroupPrivateMsgReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDGroupPrivateMsgReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDGroupPrivateMsgReq_descriptor_;
}

const CMDGroupPrivateMsgReq& CMDGroupPrivateMsgReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ChatSvr_2eproto();
  return *default_instance_;
}

CMDGroupPrivateMsgReq* CMDGroupPrivateMsgReq::default_instance_ = NULL;

CMDGroupPrivateMsgReq* CMDGroupPrivateMsgReq::New(::google::protobuf::Arena* arena) const {
  CMDGroupPrivateMsgReq* n = new CMDGroupPrivateMsgReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDGroupPrivateMsgReq::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDGroupPrivateMsgReq)
  groupid_ = 0u;
  if (GetArenaNoVirtual() == NULL && msg_ != NULL) delete msg_;
  msg_ = NULL;
}

bool CMDGroupPrivateMsgReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDGroupPrivateMsgReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 groupId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &groupid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(162)) goto parse_msg;
        break;
      }

      // optional .ChatMsg_t msg = 20;
      case 20: {
        if (tag == 162) {
         parse_msg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msg()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDGroupPrivateMsgReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDGroupPrivateMsgReq)
  return false;
#undef DO_
}

void CMDGroupPrivateMsgReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDGroupPrivateMsgReq)
  // optional uint32 groupId = 1;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->groupid(), output);
  }

  // optional .ChatMsg_t msg = 20;
  if (this->has_msg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, *this->msg_, output);
  }

  // @@protoc_insertion_point(serialize_end:CMDGroupPrivateMsgReq)
}

::google::protobuf::uint8* CMDGroupPrivateMsgReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDGroupPrivateMsgReq)
  // optional uint32 groupId = 1;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->groupid(), target);
  }

  // optional .ChatMsg_t msg = 20;
  if (this->has_msg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        20, *this->msg_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDGroupPrivateMsgReq)
  return target;
}

int CMDGroupPrivateMsgReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDGroupPrivateMsgReq)
  int total_size = 0;

  // optional uint32 groupId = 1;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->groupid());
  }

  // optional .ChatMsg_t msg = 20;
  if (this->has_msg()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msg_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDGroupPrivateMsgReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDGroupPrivateMsgReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDGroupPrivateMsgReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDGroupPrivateMsgReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDGroupPrivateMsgReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDGroupPrivateMsgReq)
    MergeFrom(*source);
  }
}

void CMDGroupPrivateMsgReq::MergeFrom(const CMDGroupPrivateMsgReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDGroupPrivateMsgReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
  if (from.has_msg()) {
    mutable_msg()->::ChatMsg_t::MergeFrom(from.msg());
  }
}

void CMDGroupPrivateMsgReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDGroupPrivateMsgReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDGroupPrivateMsgReq::CopyFrom(const CMDGroupPrivateMsgReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDGroupPrivateMsgReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDGroupPrivateMsgReq::IsInitialized() const {

  return true;
}

void CMDGroupPrivateMsgReq::Swap(CMDGroupPrivateMsgReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDGroupPrivateMsgReq::InternalSwap(CMDGroupPrivateMsgReq* other) {
  std::swap(groupid_, other->groupid_);
  std::swap(msg_, other->msg_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDGroupPrivateMsgReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDGroupPrivateMsgReq_descriptor_;
  metadata.reflection = CMDGroupPrivateMsgReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDGroupPrivateMsgReq

// optional uint32 groupId = 1;
void CMDGroupPrivateMsgReq::clear_groupid() {
  groupid_ = 0u;
}
 ::google::protobuf::uint32 CMDGroupPrivateMsgReq::groupid() const {
  // @@protoc_insertion_point(field_get:CMDGroupPrivateMsgReq.groupId)
  return groupid_;
}
 void CMDGroupPrivateMsgReq::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDGroupPrivateMsgReq.groupId)
}

// optional .ChatMsg_t msg = 20;
bool CMDGroupPrivateMsgReq::has_msg() const {
  return !_is_default_instance_ && msg_ != NULL;
}
void CMDGroupPrivateMsgReq::clear_msg() {
  if (GetArenaNoVirtual() == NULL && msg_ != NULL) delete msg_;
  msg_ = NULL;
}
const ::ChatMsg_t& CMDGroupPrivateMsgReq::msg() const {
  // @@protoc_insertion_point(field_get:CMDGroupPrivateMsgReq.msg)
  return msg_ != NULL ? *msg_ : *default_instance_->msg_;
}
::ChatMsg_t* CMDGroupPrivateMsgReq::mutable_msg() {
  
  if (msg_ == NULL) {
    msg_ = new ::ChatMsg_t;
  }
  // @@protoc_insertion_point(field_mutable:CMDGroupPrivateMsgReq.msg)
  return msg_;
}
::ChatMsg_t* CMDGroupPrivateMsgReq::release_msg() {
  // @@protoc_insertion_point(field_release:CMDGroupPrivateMsgReq.msg)
  
  ::ChatMsg_t* temp = msg_;
  msg_ = NULL;
  return temp;
}
void CMDGroupPrivateMsgReq::set_allocated_msg(::ChatMsg_t* msg) {
  delete msg_;
  msg_ = msg;
  if (msg) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDGroupPrivateMsgReq.msg)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDGroupPrivateMsgRecv::kGroupIdFieldNumber;
const int CMDGroupPrivateMsgRecv::kDstUIdFieldNumber;
const int CMDGroupPrivateMsgRecv::kMsgIdFieldNumber;
const int CMDGroupPrivateMsgRecv::kClientMSgIdFieldNumber;
const int CMDGroupPrivateMsgRecv::kErrInfoFieldNumber;
const int CMDGroupPrivateMsgRecv::kThresholdFieldNumber;
const int CMDGroupPrivateMsgRecv::kIntimacyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDGroupPrivateMsgRecv::CMDGroupPrivateMsgRecv()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDGroupPrivateMsgRecv)
}

void CMDGroupPrivateMsgRecv::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  errinfo_ = const_cast< ::CMDErrCode*>(&::CMDErrCode::default_instance());
}

CMDGroupPrivateMsgRecv::CMDGroupPrivateMsgRecv(const CMDGroupPrivateMsgRecv& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDGroupPrivateMsgRecv)
}

void CMDGroupPrivateMsgRecv::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  groupid_ = 0u;
  dstuid_ = 0u;
  msgid_ = 0u;
  clientmsgid_ = GOOGLE_ULONGLONG(0);
  errinfo_ = NULL;
  threshold_ = 0u;
  intimacy_ = 0u;
}

CMDGroupPrivateMsgRecv::~CMDGroupPrivateMsgRecv() {
  // @@protoc_insertion_point(destructor:CMDGroupPrivateMsgRecv)
  SharedDtor();
}

void CMDGroupPrivateMsgRecv::SharedDtor() {
  if (this != default_instance_) {
    delete errinfo_;
  }
}

void CMDGroupPrivateMsgRecv::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDGroupPrivateMsgRecv::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDGroupPrivateMsgRecv_descriptor_;
}

const CMDGroupPrivateMsgRecv& CMDGroupPrivateMsgRecv::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ChatSvr_2eproto();
  return *default_instance_;
}

CMDGroupPrivateMsgRecv* CMDGroupPrivateMsgRecv::default_instance_ = NULL;

CMDGroupPrivateMsgRecv* CMDGroupPrivateMsgRecv::New(::google::protobuf::Arena* arena) const {
  CMDGroupPrivateMsgRecv* n = new CMDGroupPrivateMsgRecv;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDGroupPrivateMsgRecv::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDGroupPrivateMsgRecv)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDGroupPrivateMsgRecv, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDGroupPrivateMsgRecv*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(groupid_, threshold_);
  if (GetArenaNoVirtual() == NULL && errinfo_ != NULL) delete errinfo_;
  errinfo_ = NULL;
  intimacy_ = 0u;

#undef ZR_HELPER_
#undef ZR_

}

bool CMDGroupPrivateMsgRecv::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDGroupPrivateMsgRecv)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 groupId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &groupid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_dstUId;
        break;
      }

      // optional uint32 dstUId = 2;
      case 2: {
        if (tag == 16) {
         parse_dstUId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dstuid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_msgId;
        break;
      }

      // optional uint32 msgId = 3;
      case 3: {
        if (tag == 24) {
         parse_msgId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msgid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_clientMSgId;
        break;
      }

      // optional uint64 clientMSgId = 4;
      case 4: {
        if (tag == 32) {
         parse_clientMSgId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &clientmsgid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_errInfo;
        break;
      }

      // optional .CMDErrCode errInfo = 5;
      case 5: {
        if (tag == 42) {
         parse_errInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_errinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_threshold;
        break;
      }

      // optional uint32 threshold = 6;
      case 6: {
        if (tag == 48) {
         parse_threshold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &threshold_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_intimacy;
        break;
      }

      // optional uint32 intimacy = 7;
      case 7: {
        if (tag == 56) {
         parse_intimacy:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &intimacy_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDGroupPrivateMsgRecv)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDGroupPrivateMsgRecv)
  return false;
#undef DO_
}

void CMDGroupPrivateMsgRecv::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDGroupPrivateMsgRecv)
  // optional uint32 groupId = 1;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->groupid(), output);
  }

  // optional uint32 dstUId = 2;
  if (this->dstuid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->dstuid(), output);
  }

  // optional uint32 msgId = 3;
  if (this->msgid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->msgid(), output);
  }

  // optional uint64 clientMSgId = 4;
  if (this->clientmsgid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->clientmsgid(), output);
  }

  // optional .CMDErrCode errInfo = 5;
  if (this->has_errinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->errinfo_, output);
  }

  // optional uint32 threshold = 6;
  if (this->threshold() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->threshold(), output);
  }

  // optional uint32 intimacy = 7;
  if (this->intimacy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->intimacy(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDGroupPrivateMsgRecv)
}

::google::protobuf::uint8* CMDGroupPrivateMsgRecv::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDGroupPrivateMsgRecv)
  // optional uint32 groupId = 1;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->groupid(), target);
  }

  // optional uint32 dstUId = 2;
  if (this->dstuid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->dstuid(), target);
  }

  // optional uint32 msgId = 3;
  if (this->msgid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->msgid(), target);
  }

  // optional uint64 clientMSgId = 4;
  if (this->clientmsgid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->clientmsgid(), target);
  }

  // optional .CMDErrCode errInfo = 5;
  if (this->has_errinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->errinfo_, false, target);
  }

  // optional uint32 threshold = 6;
  if (this->threshold() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->threshold(), target);
  }

  // optional uint32 intimacy = 7;
  if (this->intimacy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->intimacy(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDGroupPrivateMsgRecv)
  return target;
}

int CMDGroupPrivateMsgRecv::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDGroupPrivateMsgRecv)
  int total_size = 0;

  // optional uint32 groupId = 1;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->groupid());
  }

  // optional uint32 dstUId = 2;
  if (this->dstuid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dstuid());
  }

  // optional uint32 msgId = 3;
  if (this->msgid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->msgid());
  }

  // optional uint64 clientMSgId = 4;
  if (this->clientmsgid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->clientmsgid());
  }

  // optional .CMDErrCode errInfo = 5;
  if (this->has_errinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->errinfo_);
  }

  // optional uint32 threshold = 6;
  if (this->threshold() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->threshold());
  }

  // optional uint32 intimacy = 7;
  if (this->intimacy() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->intimacy());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDGroupPrivateMsgRecv::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDGroupPrivateMsgRecv)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDGroupPrivateMsgRecv* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDGroupPrivateMsgRecv>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDGroupPrivateMsgRecv)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDGroupPrivateMsgRecv)
    MergeFrom(*source);
  }
}

void CMDGroupPrivateMsgRecv::MergeFrom(const CMDGroupPrivateMsgRecv& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDGroupPrivateMsgRecv)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
  if (from.dstuid() != 0) {
    set_dstuid(from.dstuid());
  }
  if (from.msgid() != 0) {
    set_msgid(from.msgid());
  }
  if (from.clientmsgid() != 0) {
    set_clientmsgid(from.clientmsgid());
  }
  if (from.has_errinfo()) {
    mutable_errinfo()->::CMDErrCode::MergeFrom(from.errinfo());
  }
  if (from.threshold() != 0) {
    set_threshold(from.threshold());
  }
  if (from.intimacy() != 0) {
    set_intimacy(from.intimacy());
  }
}

void CMDGroupPrivateMsgRecv::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDGroupPrivateMsgRecv)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDGroupPrivateMsgRecv::CopyFrom(const CMDGroupPrivateMsgRecv& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDGroupPrivateMsgRecv)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDGroupPrivateMsgRecv::IsInitialized() const {

  return true;
}

void CMDGroupPrivateMsgRecv::Swap(CMDGroupPrivateMsgRecv* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDGroupPrivateMsgRecv::InternalSwap(CMDGroupPrivateMsgRecv* other) {
  std::swap(groupid_, other->groupid_);
  std::swap(dstuid_, other->dstuid_);
  std::swap(msgid_, other->msgid_);
  std::swap(clientmsgid_, other->clientmsgid_);
  std::swap(errinfo_, other->errinfo_);
  std::swap(threshold_, other->threshold_);
  std::swap(intimacy_, other->intimacy_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDGroupPrivateMsgRecv::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDGroupPrivateMsgRecv_descriptor_;
  metadata.reflection = CMDGroupPrivateMsgRecv_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDGroupPrivateMsgRecv

// optional uint32 groupId = 1;
void CMDGroupPrivateMsgRecv::clear_groupid() {
  groupid_ = 0u;
}
 ::google::protobuf::uint32 CMDGroupPrivateMsgRecv::groupid() const {
  // @@protoc_insertion_point(field_get:CMDGroupPrivateMsgRecv.groupId)
  return groupid_;
}
 void CMDGroupPrivateMsgRecv::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDGroupPrivateMsgRecv.groupId)
}

// optional uint32 dstUId = 2;
void CMDGroupPrivateMsgRecv::clear_dstuid() {
  dstuid_ = 0u;
}
 ::google::protobuf::uint32 CMDGroupPrivateMsgRecv::dstuid() const {
  // @@protoc_insertion_point(field_get:CMDGroupPrivateMsgRecv.dstUId)
  return dstuid_;
}
 void CMDGroupPrivateMsgRecv::set_dstuid(::google::protobuf::uint32 value) {
  
  dstuid_ = value;
  // @@protoc_insertion_point(field_set:CMDGroupPrivateMsgRecv.dstUId)
}

// optional uint32 msgId = 3;
void CMDGroupPrivateMsgRecv::clear_msgid() {
  msgid_ = 0u;
}
 ::google::protobuf::uint32 CMDGroupPrivateMsgRecv::msgid() const {
  // @@protoc_insertion_point(field_get:CMDGroupPrivateMsgRecv.msgId)
  return msgid_;
}
 void CMDGroupPrivateMsgRecv::set_msgid(::google::protobuf::uint32 value) {
  
  msgid_ = value;
  // @@protoc_insertion_point(field_set:CMDGroupPrivateMsgRecv.msgId)
}

// optional uint64 clientMSgId = 4;
void CMDGroupPrivateMsgRecv::clear_clientmsgid() {
  clientmsgid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 CMDGroupPrivateMsgRecv::clientmsgid() const {
  // @@protoc_insertion_point(field_get:CMDGroupPrivateMsgRecv.clientMSgId)
  return clientmsgid_;
}
 void CMDGroupPrivateMsgRecv::set_clientmsgid(::google::protobuf::uint64 value) {
  
  clientmsgid_ = value;
  // @@protoc_insertion_point(field_set:CMDGroupPrivateMsgRecv.clientMSgId)
}

// optional .CMDErrCode errInfo = 5;
bool CMDGroupPrivateMsgRecv::has_errinfo() const {
  return !_is_default_instance_ && errinfo_ != NULL;
}
void CMDGroupPrivateMsgRecv::clear_errinfo() {
  if (GetArenaNoVirtual() == NULL && errinfo_ != NULL) delete errinfo_;
  errinfo_ = NULL;
}
const ::CMDErrCode& CMDGroupPrivateMsgRecv::errinfo() const {
  // @@protoc_insertion_point(field_get:CMDGroupPrivateMsgRecv.errInfo)
  return errinfo_ != NULL ? *errinfo_ : *default_instance_->errinfo_;
}
::CMDErrCode* CMDGroupPrivateMsgRecv::mutable_errinfo() {
  
  if (errinfo_ == NULL) {
    errinfo_ = new ::CMDErrCode;
  }
  // @@protoc_insertion_point(field_mutable:CMDGroupPrivateMsgRecv.errInfo)
  return errinfo_;
}
::CMDErrCode* CMDGroupPrivateMsgRecv::release_errinfo() {
  // @@protoc_insertion_point(field_release:CMDGroupPrivateMsgRecv.errInfo)
  
  ::CMDErrCode* temp = errinfo_;
  errinfo_ = NULL;
  return temp;
}
void CMDGroupPrivateMsgRecv::set_allocated_errinfo(::CMDErrCode* errinfo) {
  delete errinfo_;
  errinfo_ = errinfo;
  if (errinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDGroupPrivateMsgRecv.errInfo)
}

// optional uint32 threshold = 6;
void CMDGroupPrivateMsgRecv::clear_threshold() {
  threshold_ = 0u;
}
 ::google::protobuf::uint32 CMDGroupPrivateMsgRecv::threshold() const {
  // @@protoc_insertion_point(field_get:CMDGroupPrivateMsgRecv.threshold)
  return threshold_;
}
 void CMDGroupPrivateMsgRecv::set_threshold(::google::protobuf::uint32 value) {
  
  threshold_ = value;
  // @@protoc_insertion_point(field_set:CMDGroupPrivateMsgRecv.threshold)
}

// optional uint32 intimacy = 7;
void CMDGroupPrivateMsgRecv::clear_intimacy() {
  intimacy_ = 0u;
}
 ::google::protobuf::uint32 CMDGroupPrivateMsgRecv::intimacy() const {
  // @@protoc_insertion_point(field_get:CMDGroupPrivateMsgRecv.intimacy)
  return intimacy_;
}
 void CMDGroupPrivateMsgRecv::set_intimacy(::google::protobuf::uint32 value) {
  
  intimacy_ = value;
  // @@protoc_insertion_point(field_set:CMDGroupPrivateMsgRecv.intimacy)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDGroupPrivateMsgNotify::kGroupIdFieldNumber;
const int CMDGroupPrivateMsgNotify::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDGroupPrivateMsgNotify::CMDGroupPrivateMsgNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDGroupPrivateMsgNotify)
}

void CMDGroupPrivateMsgNotify::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  msg_ = const_cast< ::ChatMsg_t*>(&::ChatMsg_t::default_instance());
}

CMDGroupPrivateMsgNotify::CMDGroupPrivateMsgNotify(const CMDGroupPrivateMsgNotify& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDGroupPrivateMsgNotify)
}

void CMDGroupPrivateMsgNotify::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  groupid_ = 0u;
  msg_ = NULL;
}

CMDGroupPrivateMsgNotify::~CMDGroupPrivateMsgNotify() {
  // @@protoc_insertion_point(destructor:CMDGroupPrivateMsgNotify)
  SharedDtor();
}

void CMDGroupPrivateMsgNotify::SharedDtor() {
  if (this != default_instance_) {
    delete msg_;
  }
}

void CMDGroupPrivateMsgNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDGroupPrivateMsgNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDGroupPrivateMsgNotify_descriptor_;
}

const CMDGroupPrivateMsgNotify& CMDGroupPrivateMsgNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ChatSvr_2eproto();
  return *default_instance_;
}

CMDGroupPrivateMsgNotify* CMDGroupPrivateMsgNotify::default_instance_ = NULL;

CMDGroupPrivateMsgNotify* CMDGroupPrivateMsgNotify::New(::google::protobuf::Arena* arena) const {
  CMDGroupPrivateMsgNotify* n = new CMDGroupPrivateMsgNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDGroupPrivateMsgNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDGroupPrivateMsgNotify)
  groupid_ = 0u;
  if (GetArenaNoVirtual() == NULL && msg_ != NULL) delete msg_;
  msg_ = NULL;
}

bool CMDGroupPrivateMsgNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDGroupPrivateMsgNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 groupId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &groupid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(162)) goto parse_msg;
        break;
      }

      // optional .ChatMsg_t msg = 20;
      case 20: {
        if (tag == 162) {
         parse_msg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msg()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDGroupPrivateMsgNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDGroupPrivateMsgNotify)
  return false;
#undef DO_
}

void CMDGroupPrivateMsgNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDGroupPrivateMsgNotify)
  // optional uint32 groupId = 1;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->groupid(), output);
  }

  // optional .ChatMsg_t msg = 20;
  if (this->has_msg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, *this->msg_, output);
  }

  // @@protoc_insertion_point(serialize_end:CMDGroupPrivateMsgNotify)
}

::google::protobuf::uint8* CMDGroupPrivateMsgNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDGroupPrivateMsgNotify)
  // optional uint32 groupId = 1;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->groupid(), target);
  }

  // optional .ChatMsg_t msg = 20;
  if (this->has_msg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        20, *this->msg_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDGroupPrivateMsgNotify)
  return target;
}

int CMDGroupPrivateMsgNotify::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDGroupPrivateMsgNotify)
  int total_size = 0;

  // optional uint32 groupId = 1;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->groupid());
  }

  // optional .ChatMsg_t msg = 20;
  if (this->has_msg()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msg_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDGroupPrivateMsgNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDGroupPrivateMsgNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDGroupPrivateMsgNotify* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDGroupPrivateMsgNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDGroupPrivateMsgNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDGroupPrivateMsgNotify)
    MergeFrom(*source);
  }
}

void CMDGroupPrivateMsgNotify::MergeFrom(const CMDGroupPrivateMsgNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDGroupPrivateMsgNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
  if (from.has_msg()) {
    mutable_msg()->::ChatMsg_t::MergeFrom(from.msg());
  }
}

void CMDGroupPrivateMsgNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDGroupPrivateMsgNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDGroupPrivateMsgNotify::CopyFrom(const CMDGroupPrivateMsgNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDGroupPrivateMsgNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDGroupPrivateMsgNotify::IsInitialized() const {

  return true;
}

void CMDGroupPrivateMsgNotify::Swap(CMDGroupPrivateMsgNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDGroupPrivateMsgNotify::InternalSwap(CMDGroupPrivateMsgNotify* other) {
  std::swap(groupid_, other->groupid_);
  std::swap(msg_, other->msg_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDGroupPrivateMsgNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDGroupPrivateMsgNotify_descriptor_;
  metadata.reflection = CMDGroupPrivateMsgNotify_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDGroupPrivateMsgNotify

// optional uint32 groupId = 1;
void CMDGroupPrivateMsgNotify::clear_groupid() {
  groupid_ = 0u;
}
 ::google::protobuf::uint32 CMDGroupPrivateMsgNotify::groupid() const {
  // @@protoc_insertion_point(field_get:CMDGroupPrivateMsgNotify.groupId)
  return groupid_;
}
 void CMDGroupPrivateMsgNotify::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDGroupPrivateMsgNotify.groupId)
}

// optional .ChatMsg_t msg = 20;
bool CMDGroupPrivateMsgNotify::has_msg() const {
  return !_is_default_instance_ && msg_ != NULL;
}
void CMDGroupPrivateMsgNotify::clear_msg() {
  if (GetArenaNoVirtual() == NULL && msg_ != NULL) delete msg_;
  msg_ = NULL;
}
const ::ChatMsg_t& CMDGroupPrivateMsgNotify::msg() const {
  // @@protoc_insertion_point(field_get:CMDGroupPrivateMsgNotify.msg)
  return msg_ != NULL ? *msg_ : *default_instance_->msg_;
}
::ChatMsg_t* CMDGroupPrivateMsgNotify::mutable_msg() {
  
  if (msg_ == NULL) {
    msg_ = new ::ChatMsg_t;
  }
  // @@protoc_insertion_point(field_mutable:CMDGroupPrivateMsgNotify.msg)
  return msg_;
}
::ChatMsg_t* CMDGroupPrivateMsgNotify::release_msg() {
  // @@protoc_insertion_point(field_release:CMDGroupPrivateMsgNotify.msg)
  
  ::ChatMsg_t* temp = msg_;
  msg_ = NULL;
  return temp;
}
void CMDGroupPrivateMsgNotify::set_allocated_msg(::ChatMsg_t* msg) {
  delete msg_;
  msg_ = msg;
  if (msg) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDGroupPrivateMsgNotify.msg)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDGroupPrivateMsgNotifyRecv::kGroupIdFieldNumber;
const int CMDGroupPrivateMsgNotifyRecv::kRcvUIdFieldNumber;
const int CMDGroupPrivateMsgNotifyRecv::kSrcUIdFieldNumber;
const int CMDGroupPrivateMsgNotifyRecv::kDstUIdFieldNumber;
const int CMDGroupPrivateMsgNotifyRecv::kMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDGroupPrivateMsgNotifyRecv::CMDGroupPrivateMsgNotifyRecv()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDGroupPrivateMsgNotifyRecv)
}

void CMDGroupPrivateMsgNotifyRecv::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDGroupPrivateMsgNotifyRecv::CMDGroupPrivateMsgNotifyRecv(const CMDGroupPrivateMsgNotifyRecv& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDGroupPrivateMsgNotifyRecv)
}

void CMDGroupPrivateMsgNotifyRecv::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  groupid_ = 0u;
  rcvuid_ = 0u;
  srcuid_ = 0u;
  dstuid_ = 0u;
  msgid_ = 0u;
}

CMDGroupPrivateMsgNotifyRecv::~CMDGroupPrivateMsgNotifyRecv() {
  // @@protoc_insertion_point(destructor:CMDGroupPrivateMsgNotifyRecv)
  SharedDtor();
}

void CMDGroupPrivateMsgNotifyRecv::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMDGroupPrivateMsgNotifyRecv::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDGroupPrivateMsgNotifyRecv::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDGroupPrivateMsgNotifyRecv_descriptor_;
}

const CMDGroupPrivateMsgNotifyRecv& CMDGroupPrivateMsgNotifyRecv::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ChatSvr_2eproto();
  return *default_instance_;
}

CMDGroupPrivateMsgNotifyRecv* CMDGroupPrivateMsgNotifyRecv::default_instance_ = NULL;

CMDGroupPrivateMsgNotifyRecv* CMDGroupPrivateMsgNotifyRecv::New(::google::protobuf::Arena* arena) const {
  CMDGroupPrivateMsgNotifyRecv* n = new CMDGroupPrivateMsgNotifyRecv;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDGroupPrivateMsgNotifyRecv::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDGroupPrivateMsgNotifyRecv)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDGroupPrivateMsgNotifyRecv, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDGroupPrivateMsgNotifyRecv*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(groupid_, msgid_);

#undef ZR_HELPER_
#undef ZR_

}

bool CMDGroupPrivateMsgNotifyRecv::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDGroupPrivateMsgNotifyRecv)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 groupId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &groupid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_rcvUId;
        break;
      }

      // optional uint32 rcvUId = 2;
      case 2: {
        if (tag == 16) {
         parse_rcvUId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rcvuid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_srcUId;
        break;
      }

      // optional uint32 srcUId = 3;
      case 3: {
        if (tag == 24) {
         parse_srcUId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &srcuid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_dstUId;
        break;
      }

      // optional uint32 dstUId = 4;
      case 4: {
        if (tag == 32) {
         parse_dstUId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dstuid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_msgId;
        break;
      }

      // optional uint32 msgId = 5;
      case 5: {
        if (tag == 40) {
         parse_msgId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msgid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDGroupPrivateMsgNotifyRecv)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDGroupPrivateMsgNotifyRecv)
  return false;
#undef DO_
}

void CMDGroupPrivateMsgNotifyRecv::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDGroupPrivateMsgNotifyRecv)
  // optional uint32 groupId = 1;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->groupid(), output);
  }

  // optional uint32 rcvUId = 2;
  if (this->rcvuid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->rcvuid(), output);
  }

  // optional uint32 srcUId = 3;
  if (this->srcuid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->srcuid(), output);
  }

  // optional uint32 dstUId = 4;
  if (this->dstuid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->dstuid(), output);
  }

  // optional uint32 msgId = 5;
  if (this->msgid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->msgid(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDGroupPrivateMsgNotifyRecv)
}

::google::protobuf::uint8* CMDGroupPrivateMsgNotifyRecv::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDGroupPrivateMsgNotifyRecv)
  // optional uint32 groupId = 1;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->groupid(), target);
  }

  // optional uint32 rcvUId = 2;
  if (this->rcvuid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->rcvuid(), target);
  }

  // optional uint32 srcUId = 3;
  if (this->srcuid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->srcuid(), target);
  }

  // optional uint32 dstUId = 4;
  if (this->dstuid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->dstuid(), target);
  }

  // optional uint32 msgId = 5;
  if (this->msgid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->msgid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDGroupPrivateMsgNotifyRecv)
  return target;
}

int CMDGroupPrivateMsgNotifyRecv::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDGroupPrivateMsgNotifyRecv)
  int total_size = 0;

  // optional uint32 groupId = 1;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->groupid());
  }

  // optional uint32 rcvUId = 2;
  if (this->rcvuid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->rcvuid());
  }

  // optional uint32 srcUId = 3;
  if (this->srcuid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->srcuid());
  }

  // optional uint32 dstUId = 4;
  if (this->dstuid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dstuid());
  }

  // optional uint32 msgId = 5;
  if (this->msgid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->msgid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDGroupPrivateMsgNotifyRecv::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDGroupPrivateMsgNotifyRecv)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDGroupPrivateMsgNotifyRecv* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDGroupPrivateMsgNotifyRecv>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDGroupPrivateMsgNotifyRecv)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDGroupPrivateMsgNotifyRecv)
    MergeFrom(*source);
  }
}

void CMDGroupPrivateMsgNotifyRecv::MergeFrom(const CMDGroupPrivateMsgNotifyRecv& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDGroupPrivateMsgNotifyRecv)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
  if (from.rcvuid() != 0) {
    set_rcvuid(from.rcvuid());
  }
  if (from.srcuid() != 0) {
    set_srcuid(from.srcuid());
  }
  if (from.dstuid() != 0) {
    set_dstuid(from.dstuid());
  }
  if (from.msgid() != 0) {
    set_msgid(from.msgid());
  }
}

void CMDGroupPrivateMsgNotifyRecv::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDGroupPrivateMsgNotifyRecv)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDGroupPrivateMsgNotifyRecv::CopyFrom(const CMDGroupPrivateMsgNotifyRecv& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDGroupPrivateMsgNotifyRecv)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDGroupPrivateMsgNotifyRecv::IsInitialized() const {

  return true;
}

void CMDGroupPrivateMsgNotifyRecv::Swap(CMDGroupPrivateMsgNotifyRecv* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDGroupPrivateMsgNotifyRecv::InternalSwap(CMDGroupPrivateMsgNotifyRecv* other) {
  std::swap(groupid_, other->groupid_);
  std::swap(rcvuid_, other->rcvuid_);
  std::swap(srcuid_, other->srcuid_);
  std::swap(dstuid_, other->dstuid_);
  std::swap(msgid_, other->msgid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDGroupPrivateMsgNotifyRecv::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDGroupPrivateMsgNotifyRecv_descriptor_;
  metadata.reflection = CMDGroupPrivateMsgNotifyRecv_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDGroupPrivateMsgNotifyRecv

// optional uint32 groupId = 1;
void CMDGroupPrivateMsgNotifyRecv::clear_groupid() {
  groupid_ = 0u;
}
 ::google::protobuf::uint32 CMDGroupPrivateMsgNotifyRecv::groupid() const {
  // @@protoc_insertion_point(field_get:CMDGroupPrivateMsgNotifyRecv.groupId)
  return groupid_;
}
 void CMDGroupPrivateMsgNotifyRecv::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDGroupPrivateMsgNotifyRecv.groupId)
}

// optional uint32 rcvUId = 2;
void CMDGroupPrivateMsgNotifyRecv::clear_rcvuid() {
  rcvuid_ = 0u;
}
 ::google::protobuf::uint32 CMDGroupPrivateMsgNotifyRecv::rcvuid() const {
  // @@protoc_insertion_point(field_get:CMDGroupPrivateMsgNotifyRecv.rcvUId)
  return rcvuid_;
}
 void CMDGroupPrivateMsgNotifyRecv::set_rcvuid(::google::protobuf::uint32 value) {
  
  rcvuid_ = value;
  // @@protoc_insertion_point(field_set:CMDGroupPrivateMsgNotifyRecv.rcvUId)
}

// optional uint32 srcUId = 3;
void CMDGroupPrivateMsgNotifyRecv::clear_srcuid() {
  srcuid_ = 0u;
}
 ::google::protobuf::uint32 CMDGroupPrivateMsgNotifyRecv::srcuid() const {
  // @@protoc_insertion_point(field_get:CMDGroupPrivateMsgNotifyRecv.srcUId)
  return srcuid_;
}
 void CMDGroupPrivateMsgNotifyRecv::set_srcuid(::google::protobuf::uint32 value) {
  
  srcuid_ = value;
  // @@protoc_insertion_point(field_set:CMDGroupPrivateMsgNotifyRecv.srcUId)
}

// optional uint32 dstUId = 4;
void CMDGroupPrivateMsgNotifyRecv::clear_dstuid() {
  dstuid_ = 0u;
}
 ::google::protobuf::uint32 CMDGroupPrivateMsgNotifyRecv::dstuid() const {
  // @@protoc_insertion_point(field_get:CMDGroupPrivateMsgNotifyRecv.dstUId)
  return dstuid_;
}
 void CMDGroupPrivateMsgNotifyRecv::set_dstuid(::google::protobuf::uint32 value) {
  
  dstuid_ = value;
  // @@protoc_insertion_point(field_set:CMDGroupPrivateMsgNotifyRecv.dstUId)
}

// optional uint32 msgId = 5;
void CMDGroupPrivateMsgNotifyRecv::clear_msgid() {
  msgid_ = 0u;
}
 ::google::protobuf::uint32 CMDGroupPrivateMsgNotifyRecv::msgid() const {
  // @@protoc_insertion_point(field_get:CMDGroupPrivateMsgNotifyRecv.msgId)
  return msgid_;
}
 void CMDGroupPrivateMsgNotifyRecv::set_msgid(::google::protobuf::uint32 value) {
  
  msgid_ = value;
  // @@protoc_insertion_point(field_set:CMDGroupPrivateMsgNotifyRecv.msgId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDUnreadGroupPrivateMsgNotify::kGroupIdFieldNumber;
const int CMDUnreadGroupPrivateMsgNotify::kDstUIdFieldNumber;
const int CMDUnreadGroupPrivateMsgNotify::kUnreadCountFieldNumber;
const int CMDUnreadGroupPrivateMsgNotify::kMsgsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDUnreadGroupPrivateMsgNotify::CMDUnreadGroupPrivateMsgNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDUnreadGroupPrivateMsgNotify)
}

void CMDUnreadGroupPrivateMsgNotify::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDUnreadGroupPrivateMsgNotify::CMDUnreadGroupPrivateMsgNotify(const CMDUnreadGroupPrivateMsgNotify& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDUnreadGroupPrivateMsgNotify)
}

void CMDUnreadGroupPrivateMsgNotify::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  groupid_ = 0u;
  dstuid_ = 0u;
  unreadcount_ = 0u;
}

CMDUnreadGroupPrivateMsgNotify::~CMDUnreadGroupPrivateMsgNotify() {
  // @@protoc_insertion_point(destructor:CMDUnreadGroupPrivateMsgNotify)
  SharedDtor();
}

void CMDUnreadGroupPrivateMsgNotify::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMDUnreadGroupPrivateMsgNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDUnreadGroupPrivateMsgNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDUnreadGroupPrivateMsgNotify_descriptor_;
}

const CMDUnreadGroupPrivateMsgNotify& CMDUnreadGroupPrivateMsgNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ChatSvr_2eproto();
  return *default_instance_;
}

CMDUnreadGroupPrivateMsgNotify* CMDUnreadGroupPrivateMsgNotify::default_instance_ = NULL;

CMDUnreadGroupPrivateMsgNotify* CMDUnreadGroupPrivateMsgNotify::New(::google::protobuf::Arena* arena) const {
  CMDUnreadGroupPrivateMsgNotify* n = new CMDUnreadGroupPrivateMsgNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDUnreadGroupPrivateMsgNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDUnreadGroupPrivateMsgNotify)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDUnreadGroupPrivateMsgNotify, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDUnreadGroupPrivateMsgNotify*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(groupid_, dstuid_);
  unreadcount_ = 0u;

#undef ZR_HELPER_
#undef ZR_

  msgs_.Clear();
}

bool CMDUnreadGroupPrivateMsgNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDUnreadGroupPrivateMsgNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 groupId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &groupid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_dstUId;
        break;
      }

      // optional uint32 dstUId = 2;
      case 2: {
        if (tag == 16) {
         parse_dstUId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dstuid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_unreadCount;
        break;
      }

      // optional uint32 unreadCount = 3;
      case 3: {
        if (tag == 24) {
         parse_unreadCount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &unreadcount_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(162)) goto parse_msgs;
        break;
      }

      // repeated .ChatMsg_t msgs = 20;
      case 20: {
        if (tag == 162) {
         parse_msgs:
          DO_(input->IncrementRecursionDepth());
         parse_loop_msgs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_msgs()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(162)) goto parse_loop_msgs;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDUnreadGroupPrivateMsgNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDUnreadGroupPrivateMsgNotify)
  return false;
#undef DO_
}

void CMDUnreadGroupPrivateMsgNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDUnreadGroupPrivateMsgNotify)
  // optional uint32 groupId = 1;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->groupid(), output);
  }

  // optional uint32 dstUId = 2;
  if (this->dstuid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->dstuid(), output);
  }

  // optional uint32 unreadCount = 3;
  if (this->unreadcount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->unreadcount(), output);
  }

  // repeated .ChatMsg_t msgs = 20;
  for (unsigned int i = 0, n = this->msgs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, this->msgs(i), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDUnreadGroupPrivateMsgNotify)
}

::google::protobuf::uint8* CMDUnreadGroupPrivateMsgNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDUnreadGroupPrivateMsgNotify)
  // optional uint32 groupId = 1;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->groupid(), target);
  }

  // optional uint32 dstUId = 2;
  if (this->dstuid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->dstuid(), target);
  }

  // optional uint32 unreadCount = 3;
  if (this->unreadcount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->unreadcount(), target);
  }

  // repeated .ChatMsg_t msgs = 20;
  for (unsigned int i = 0, n = this->msgs_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        20, this->msgs(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDUnreadGroupPrivateMsgNotify)
  return target;
}

int CMDUnreadGroupPrivateMsgNotify::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDUnreadGroupPrivateMsgNotify)
  int total_size = 0;

  // optional uint32 groupId = 1;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->groupid());
  }

  // optional uint32 dstUId = 2;
  if (this->dstuid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dstuid());
  }

  // optional uint32 unreadCount = 3;
  if (this->unreadcount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->unreadcount());
  }

  // repeated .ChatMsg_t msgs = 20;
  total_size += 2 * this->msgs_size();
  for (int i = 0; i < this->msgs_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->msgs(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDUnreadGroupPrivateMsgNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDUnreadGroupPrivateMsgNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDUnreadGroupPrivateMsgNotify* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDUnreadGroupPrivateMsgNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDUnreadGroupPrivateMsgNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDUnreadGroupPrivateMsgNotify)
    MergeFrom(*source);
  }
}

void CMDUnreadGroupPrivateMsgNotify::MergeFrom(const CMDUnreadGroupPrivateMsgNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDUnreadGroupPrivateMsgNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  msgs_.MergeFrom(from.msgs_);
  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
  if (from.dstuid() != 0) {
    set_dstuid(from.dstuid());
  }
  if (from.unreadcount() != 0) {
    set_unreadcount(from.unreadcount());
  }
}

void CMDUnreadGroupPrivateMsgNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDUnreadGroupPrivateMsgNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDUnreadGroupPrivateMsgNotify::CopyFrom(const CMDUnreadGroupPrivateMsgNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDUnreadGroupPrivateMsgNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDUnreadGroupPrivateMsgNotify::IsInitialized() const {

  return true;
}

void CMDUnreadGroupPrivateMsgNotify::Swap(CMDUnreadGroupPrivateMsgNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDUnreadGroupPrivateMsgNotify::InternalSwap(CMDUnreadGroupPrivateMsgNotify* other) {
  std::swap(groupid_, other->groupid_);
  std::swap(dstuid_, other->dstuid_);
  std::swap(unreadcount_, other->unreadcount_);
  msgs_.UnsafeArenaSwap(&other->msgs_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDUnreadGroupPrivateMsgNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDUnreadGroupPrivateMsgNotify_descriptor_;
  metadata.reflection = CMDUnreadGroupPrivateMsgNotify_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDUnreadGroupPrivateMsgNotify

// optional uint32 groupId = 1;
void CMDUnreadGroupPrivateMsgNotify::clear_groupid() {
  groupid_ = 0u;
}
 ::google::protobuf::uint32 CMDUnreadGroupPrivateMsgNotify::groupid() const {
  // @@protoc_insertion_point(field_get:CMDUnreadGroupPrivateMsgNotify.groupId)
  return groupid_;
}
 void CMDUnreadGroupPrivateMsgNotify::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDUnreadGroupPrivateMsgNotify.groupId)
}

// optional uint32 dstUId = 2;
void CMDUnreadGroupPrivateMsgNotify::clear_dstuid() {
  dstuid_ = 0u;
}
 ::google::protobuf::uint32 CMDUnreadGroupPrivateMsgNotify::dstuid() const {
  // @@protoc_insertion_point(field_get:CMDUnreadGroupPrivateMsgNotify.dstUId)
  return dstuid_;
}
 void CMDUnreadGroupPrivateMsgNotify::set_dstuid(::google::protobuf::uint32 value) {
  
  dstuid_ = value;
  // @@protoc_insertion_point(field_set:CMDUnreadGroupPrivateMsgNotify.dstUId)
}

// optional uint32 unreadCount = 3;
void CMDUnreadGroupPrivateMsgNotify::clear_unreadcount() {
  unreadcount_ = 0u;
}
 ::google::protobuf::uint32 CMDUnreadGroupPrivateMsgNotify::unreadcount() const {
  // @@protoc_insertion_point(field_get:CMDUnreadGroupPrivateMsgNotify.unreadCount)
  return unreadcount_;
}
 void CMDUnreadGroupPrivateMsgNotify::set_unreadcount(::google::protobuf::uint32 value) {
  
  unreadcount_ = value;
  // @@protoc_insertion_point(field_set:CMDUnreadGroupPrivateMsgNotify.unreadCount)
}

// repeated .ChatMsg_t msgs = 20;
int CMDUnreadGroupPrivateMsgNotify::msgs_size() const {
  return msgs_.size();
}
void CMDUnreadGroupPrivateMsgNotify::clear_msgs() {
  msgs_.Clear();
}
const ::ChatMsg_t& CMDUnreadGroupPrivateMsgNotify::msgs(int index) const {
  // @@protoc_insertion_point(field_get:CMDUnreadGroupPrivateMsgNotify.msgs)
  return msgs_.Get(index);
}
::ChatMsg_t* CMDUnreadGroupPrivateMsgNotify::mutable_msgs(int index) {
  // @@protoc_insertion_point(field_mutable:CMDUnreadGroupPrivateMsgNotify.msgs)
  return msgs_.Mutable(index);
}
::ChatMsg_t* CMDUnreadGroupPrivateMsgNotify::add_msgs() {
  // @@protoc_insertion_point(field_add:CMDUnreadGroupPrivateMsgNotify.msgs)
  return msgs_.Add();
}
::google::protobuf::RepeatedPtrField< ::ChatMsg_t >*
CMDUnreadGroupPrivateMsgNotify::mutable_msgs() {
  // @@protoc_insertion_point(field_mutable_list:CMDUnreadGroupPrivateMsgNotify.msgs)
  return &msgs_;
}
const ::google::protobuf::RepeatedPtrField< ::ChatMsg_t >&
CMDUnreadGroupPrivateMsgNotify::msgs() const {
  // @@protoc_insertion_point(field_list:CMDUnreadGroupPrivateMsgNotify.msgs)
  return msgs_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDGroupPrivateMsgHisReq::kGroupIdFieldNumber;
const int CMDGroupPrivateMsgHisReq::kReqUIdFieldNumber;
const int CMDGroupPrivateMsgHisReq::kDstUIdFieldNumber;
const int CMDGroupPrivateMsgHisReq::kForwardFieldNumber;
const int CMDGroupPrivateMsgHisReq::kMsgIdFieldNumber;
const int CMDGroupPrivateMsgHisReq::kCountFieldNumber;
const int CMDGroupPrivateMsgHisReq::kReverseMsgOrderFieldNumber;
const int CMDGroupPrivateMsgHisReq::kReqTagFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDGroupPrivateMsgHisReq::CMDGroupPrivateMsgHisReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDGroupPrivateMsgHisReq)
}

void CMDGroupPrivateMsgHisReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDGroupPrivateMsgHisReq::CMDGroupPrivateMsgHisReq(const CMDGroupPrivateMsgHisReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDGroupPrivateMsgHisReq)
}

void CMDGroupPrivateMsgHisReq::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  groupid_ = 0u;
  requid_ = 0u;
  dstuid_ = 0u;
  forward_ = false;
  msgid_ = 0u;
  count_ = 0u;
  reversemsgorder_ = false;
  reqtag_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CMDGroupPrivateMsgHisReq::~CMDGroupPrivateMsgHisReq() {
  // @@protoc_insertion_point(destructor:CMDGroupPrivateMsgHisReq)
  SharedDtor();
}

void CMDGroupPrivateMsgHisReq::SharedDtor() {
  reqtag_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CMDGroupPrivateMsgHisReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDGroupPrivateMsgHisReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDGroupPrivateMsgHisReq_descriptor_;
}

const CMDGroupPrivateMsgHisReq& CMDGroupPrivateMsgHisReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ChatSvr_2eproto();
  return *default_instance_;
}

CMDGroupPrivateMsgHisReq* CMDGroupPrivateMsgHisReq::default_instance_ = NULL;

CMDGroupPrivateMsgHisReq* CMDGroupPrivateMsgHisReq::New(::google::protobuf::Arena* arena) const {
  CMDGroupPrivateMsgHisReq* n = new CMDGroupPrivateMsgHisReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDGroupPrivateMsgHisReq::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDGroupPrivateMsgHisReq)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDGroupPrivateMsgHisReq, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDGroupPrivateMsgHisReq*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(groupid_, count_);
  reqtag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool CMDGroupPrivateMsgHisReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDGroupPrivateMsgHisReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 groupId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &groupid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_reqUId;
        break;
      }

      // optional uint32 reqUId = 2;
      case 2: {
        if (tag == 16) {
         parse_reqUId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &requid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_dstUId;
        break;
      }

      // optional uint32 dstUId = 3;
      case 3: {
        if (tag == 24) {
         parse_dstUId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dstuid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_forward;
        break;
      }

      // optional bool forward = 4;
      case 4: {
        if (tag == 32) {
         parse_forward:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &forward_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_msgId;
        break;
      }

      // optional uint32 msgId = 5;
      case 5: {
        if (tag == 40) {
         parse_msgId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msgid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_count;
        break;
      }

      // optional uint32 count = 6;
      case 6: {
        if (tag == 48) {
         parse_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_reverseMsgOrder;
        break;
      }

      // optional bool reverseMsgOrder = 7;
      case 7: {
        if (tag == 56) {
         parse_reverseMsgOrder:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &reversemsgorder_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_reqTag;
        break;
      }

      // optional string reqTag = 8;
      case 8: {
        if (tag == 66) {
         parse_reqTag:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reqtag()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->reqtag().data(), this->reqtag().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMDGroupPrivateMsgHisReq.reqTag"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDGroupPrivateMsgHisReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDGroupPrivateMsgHisReq)
  return false;
#undef DO_
}

void CMDGroupPrivateMsgHisReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDGroupPrivateMsgHisReq)
  // optional uint32 groupId = 1;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->groupid(), output);
  }

  // optional uint32 reqUId = 2;
  if (this->requid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->requid(), output);
  }

  // optional uint32 dstUId = 3;
  if (this->dstuid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->dstuid(), output);
  }

  // optional bool forward = 4;
  if (this->forward() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->forward(), output);
  }

  // optional uint32 msgId = 5;
  if (this->msgid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->msgid(), output);
  }

  // optional uint32 count = 6;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->count(), output);
  }

  // optional bool reverseMsgOrder = 7;
  if (this->reversemsgorder() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->reversemsgorder(), output);
  }

  // optional string reqTag = 8;
  if (this->reqtag().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reqtag().data(), this->reqtag().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDGroupPrivateMsgHisReq.reqTag");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->reqtag(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDGroupPrivateMsgHisReq)
}

::google::protobuf::uint8* CMDGroupPrivateMsgHisReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDGroupPrivateMsgHisReq)
  // optional uint32 groupId = 1;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->groupid(), target);
  }

  // optional uint32 reqUId = 2;
  if (this->requid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->requid(), target);
  }

  // optional uint32 dstUId = 3;
  if (this->dstuid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->dstuid(), target);
  }

  // optional bool forward = 4;
  if (this->forward() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->forward(), target);
  }

  // optional uint32 msgId = 5;
  if (this->msgid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->msgid(), target);
  }

  // optional uint32 count = 6;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->count(), target);
  }

  // optional bool reverseMsgOrder = 7;
  if (this->reversemsgorder() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->reversemsgorder(), target);
  }

  // optional string reqTag = 8;
  if (this->reqtag().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reqtag().data(), this->reqtag().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDGroupPrivateMsgHisReq.reqTag");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->reqtag(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDGroupPrivateMsgHisReq)
  return target;
}

int CMDGroupPrivateMsgHisReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDGroupPrivateMsgHisReq)
  int total_size = 0;

  // optional uint32 groupId = 1;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->groupid());
  }

  // optional uint32 reqUId = 2;
  if (this->requid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->requid());
  }

  // optional uint32 dstUId = 3;
  if (this->dstuid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dstuid());
  }

  // optional bool forward = 4;
  if (this->forward() != 0) {
    total_size += 1 + 1;
  }

  // optional uint32 msgId = 5;
  if (this->msgid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->msgid());
  }

  // optional uint32 count = 6;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  // optional bool reverseMsgOrder = 7;
  if (this->reversemsgorder() != 0) {
    total_size += 1 + 1;
  }

  // optional string reqTag = 8;
  if (this->reqtag().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->reqtag());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDGroupPrivateMsgHisReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDGroupPrivateMsgHisReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDGroupPrivateMsgHisReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDGroupPrivateMsgHisReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDGroupPrivateMsgHisReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDGroupPrivateMsgHisReq)
    MergeFrom(*source);
  }
}

void CMDGroupPrivateMsgHisReq::MergeFrom(const CMDGroupPrivateMsgHisReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDGroupPrivateMsgHisReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
  if (from.requid() != 0) {
    set_requid(from.requid());
  }
  if (from.dstuid() != 0) {
    set_dstuid(from.dstuid());
  }
  if (from.forward() != 0) {
    set_forward(from.forward());
  }
  if (from.msgid() != 0) {
    set_msgid(from.msgid());
  }
  if (from.count() != 0) {
    set_count(from.count());
  }
  if (from.reversemsgorder() != 0) {
    set_reversemsgorder(from.reversemsgorder());
  }
  if (from.reqtag().size() > 0) {

    reqtag_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reqtag_);
  }
}

void CMDGroupPrivateMsgHisReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDGroupPrivateMsgHisReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDGroupPrivateMsgHisReq::CopyFrom(const CMDGroupPrivateMsgHisReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDGroupPrivateMsgHisReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDGroupPrivateMsgHisReq::IsInitialized() const {

  return true;
}

void CMDGroupPrivateMsgHisReq::Swap(CMDGroupPrivateMsgHisReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDGroupPrivateMsgHisReq::InternalSwap(CMDGroupPrivateMsgHisReq* other) {
  std::swap(groupid_, other->groupid_);
  std::swap(requid_, other->requid_);
  std::swap(dstuid_, other->dstuid_);
  std::swap(forward_, other->forward_);
  std::swap(msgid_, other->msgid_);
  std::swap(count_, other->count_);
  std::swap(reversemsgorder_, other->reversemsgorder_);
  reqtag_.Swap(&other->reqtag_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDGroupPrivateMsgHisReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDGroupPrivateMsgHisReq_descriptor_;
  metadata.reflection = CMDGroupPrivateMsgHisReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDGroupPrivateMsgHisReq

// optional uint32 groupId = 1;
void CMDGroupPrivateMsgHisReq::clear_groupid() {
  groupid_ = 0u;
}
 ::google::protobuf::uint32 CMDGroupPrivateMsgHisReq::groupid() const {
  // @@protoc_insertion_point(field_get:CMDGroupPrivateMsgHisReq.groupId)
  return groupid_;
}
 void CMDGroupPrivateMsgHisReq::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDGroupPrivateMsgHisReq.groupId)
}

// optional uint32 reqUId = 2;
void CMDGroupPrivateMsgHisReq::clear_requid() {
  requid_ = 0u;
}
 ::google::protobuf::uint32 CMDGroupPrivateMsgHisReq::requid() const {
  // @@protoc_insertion_point(field_get:CMDGroupPrivateMsgHisReq.reqUId)
  return requid_;
}
 void CMDGroupPrivateMsgHisReq::set_requid(::google::protobuf::uint32 value) {
  
  requid_ = value;
  // @@protoc_insertion_point(field_set:CMDGroupPrivateMsgHisReq.reqUId)
}

// optional uint32 dstUId = 3;
void CMDGroupPrivateMsgHisReq::clear_dstuid() {
  dstuid_ = 0u;
}
 ::google::protobuf::uint32 CMDGroupPrivateMsgHisReq::dstuid() const {
  // @@protoc_insertion_point(field_get:CMDGroupPrivateMsgHisReq.dstUId)
  return dstuid_;
}
 void CMDGroupPrivateMsgHisReq::set_dstuid(::google::protobuf::uint32 value) {
  
  dstuid_ = value;
  // @@protoc_insertion_point(field_set:CMDGroupPrivateMsgHisReq.dstUId)
}

// optional bool forward = 4;
void CMDGroupPrivateMsgHisReq::clear_forward() {
  forward_ = false;
}
 bool CMDGroupPrivateMsgHisReq::forward() const {
  // @@protoc_insertion_point(field_get:CMDGroupPrivateMsgHisReq.forward)
  return forward_;
}
 void CMDGroupPrivateMsgHisReq::set_forward(bool value) {
  
  forward_ = value;
  // @@protoc_insertion_point(field_set:CMDGroupPrivateMsgHisReq.forward)
}

// optional uint32 msgId = 5;
void CMDGroupPrivateMsgHisReq::clear_msgid() {
  msgid_ = 0u;
}
 ::google::protobuf::uint32 CMDGroupPrivateMsgHisReq::msgid() const {
  // @@protoc_insertion_point(field_get:CMDGroupPrivateMsgHisReq.msgId)
  return msgid_;
}
 void CMDGroupPrivateMsgHisReq::set_msgid(::google::protobuf::uint32 value) {
  
  msgid_ = value;
  // @@protoc_insertion_point(field_set:CMDGroupPrivateMsgHisReq.msgId)
}

// optional uint32 count = 6;
void CMDGroupPrivateMsgHisReq::clear_count() {
  count_ = 0u;
}
 ::google::protobuf::uint32 CMDGroupPrivateMsgHisReq::count() const {
  // @@protoc_insertion_point(field_get:CMDGroupPrivateMsgHisReq.count)
  return count_;
}
 void CMDGroupPrivateMsgHisReq::set_count(::google::protobuf::uint32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:CMDGroupPrivateMsgHisReq.count)
}

// optional bool reverseMsgOrder = 7;
void CMDGroupPrivateMsgHisReq::clear_reversemsgorder() {
  reversemsgorder_ = false;
}
 bool CMDGroupPrivateMsgHisReq::reversemsgorder() const {
  // @@protoc_insertion_point(field_get:CMDGroupPrivateMsgHisReq.reverseMsgOrder)
  return reversemsgorder_;
}
 void CMDGroupPrivateMsgHisReq::set_reversemsgorder(bool value) {
  
  reversemsgorder_ = value;
  // @@protoc_insertion_point(field_set:CMDGroupPrivateMsgHisReq.reverseMsgOrder)
}

// optional string reqTag = 8;
void CMDGroupPrivateMsgHisReq::clear_reqtag() {
  reqtag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CMDGroupPrivateMsgHisReq::reqtag() const {
  // @@protoc_insertion_point(field_get:CMDGroupPrivateMsgHisReq.reqTag)
  return reqtag_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDGroupPrivateMsgHisReq::set_reqtag(const ::std::string& value) {
  
  reqtag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDGroupPrivateMsgHisReq.reqTag)
}
 void CMDGroupPrivateMsgHisReq::set_reqtag(const char* value) {
  
  reqtag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDGroupPrivateMsgHisReq.reqTag)
}
 void CMDGroupPrivateMsgHisReq::set_reqtag(const char* value, size_t size) {
  
  reqtag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDGroupPrivateMsgHisReq.reqTag)
}
 ::std::string* CMDGroupPrivateMsgHisReq::mutable_reqtag() {
  
  // @@protoc_insertion_point(field_mutable:CMDGroupPrivateMsgHisReq.reqTag)
  return reqtag_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMDGroupPrivateMsgHisReq::release_reqtag() {
  // @@protoc_insertion_point(field_release:CMDGroupPrivateMsgHisReq.reqTag)
  
  return reqtag_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDGroupPrivateMsgHisReq::set_allocated_reqtag(::std::string* reqtag) {
  if (reqtag != NULL) {
    
  } else {
    
  }
  reqtag_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reqtag);
  // @@protoc_insertion_point(field_set_allocated:CMDGroupPrivateMsgHisReq.reqTag)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDGroupPrivateMsgHisResp::kGroupIdFieldNumber;
const int CMDGroupPrivateMsgHisResp::kReqUIdFieldNumber;
const int CMDGroupPrivateMsgHisResp::kDstUIdFieldNumber;
const int CMDGroupPrivateMsgHisResp::kNeedClearFieldNumber;
const int CMDGroupPrivateMsgHisResp::kMsgsFieldNumber;
const int CMDGroupPrivateMsgHisResp::kReverseMsgOrderFieldNumber;
const int CMDGroupPrivateMsgHisResp::kReqTagFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDGroupPrivateMsgHisResp::CMDGroupPrivateMsgHisResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDGroupPrivateMsgHisResp)
}

void CMDGroupPrivateMsgHisResp::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDGroupPrivateMsgHisResp::CMDGroupPrivateMsgHisResp(const CMDGroupPrivateMsgHisResp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDGroupPrivateMsgHisResp)
}

void CMDGroupPrivateMsgHisResp::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  groupid_ = 0u;
  requid_ = 0u;
  dstuid_ = 0u;
  needclear_ = false;
  reversemsgorder_ = false;
  reqtag_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CMDGroupPrivateMsgHisResp::~CMDGroupPrivateMsgHisResp() {
  // @@protoc_insertion_point(destructor:CMDGroupPrivateMsgHisResp)
  SharedDtor();
}

void CMDGroupPrivateMsgHisResp::SharedDtor() {
  reqtag_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CMDGroupPrivateMsgHisResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDGroupPrivateMsgHisResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDGroupPrivateMsgHisResp_descriptor_;
}

const CMDGroupPrivateMsgHisResp& CMDGroupPrivateMsgHisResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ChatSvr_2eproto();
  return *default_instance_;
}

CMDGroupPrivateMsgHisResp* CMDGroupPrivateMsgHisResp::default_instance_ = NULL;

CMDGroupPrivateMsgHisResp* CMDGroupPrivateMsgHisResp::New(::google::protobuf::Arena* arena) const {
  CMDGroupPrivateMsgHisResp* n = new CMDGroupPrivateMsgHisResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDGroupPrivateMsgHisResp::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDGroupPrivateMsgHisResp)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDGroupPrivateMsgHisResp, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDGroupPrivateMsgHisResp*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(groupid_, reversemsgorder_);
  reqtag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

  msgs_.Clear();
}

bool CMDGroupPrivateMsgHisResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDGroupPrivateMsgHisResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 groupId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &groupid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_reqUId;
        break;
      }

      // optional uint32 reqUId = 2;
      case 2: {
        if (tag == 16) {
         parse_reqUId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &requid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_dstUId;
        break;
      }

      // optional uint32 dstUId = 3;
      case 3: {
        if (tag == 24) {
         parse_dstUId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dstuid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_needClear;
        break;
      }

      // optional bool needClear = 4;
      case 4: {
        if (tag == 32) {
         parse_needClear:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &needclear_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(162)) goto parse_msgs;
        break;
      }

      // repeated .ChatMsg_t msgs = 20;
      case 20: {
        if (tag == 162) {
         parse_msgs:
          DO_(input->IncrementRecursionDepth());
         parse_loop_msgs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_msgs()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(162)) goto parse_loop_msgs;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(168)) goto parse_reverseMsgOrder;
        break;
      }

      // optional bool reverseMsgOrder = 21;
      case 21: {
        if (tag == 168) {
         parse_reverseMsgOrder:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &reversemsgorder_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(178)) goto parse_reqTag;
        break;
      }

      // optional string reqTag = 22;
      case 22: {
        if (tag == 178) {
         parse_reqTag:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reqtag()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->reqtag().data(), this->reqtag().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMDGroupPrivateMsgHisResp.reqTag"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDGroupPrivateMsgHisResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDGroupPrivateMsgHisResp)
  return false;
#undef DO_
}

void CMDGroupPrivateMsgHisResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDGroupPrivateMsgHisResp)
  // optional uint32 groupId = 1;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->groupid(), output);
  }

  // optional uint32 reqUId = 2;
  if (this->requid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->requid(), output);
  }

  // optional uint32 dstUId = 3;
  if (this->dstuid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->dstuid(), output);
  }

  // optional bool needClear = 4;
  if (this->needclear() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->needclear(), output);
  }

  // repeated .ChatMsg_t msgs = 20;
  for (unsigned int i = 0, n = this->msgs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, this->msgs(i), output);
  }

  // optional bool reverseMsgOrder = 21;
  if (this->reversemsgorder() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(21, this->reversemsgorder(), output);
  }

  // optional string reqTag = 22;
  if (this->reqtag().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reqtag().data(), this->reqtag().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDGroupPrivateMsgHisResp.reqTag");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      22, this->reqtag(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDGroupPrivateMsgHisResp)
}

::google::protobuf::uint8* CMDGroupPrivateMsgHisResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDGroupPrivateMsgHisResp)
  // optional uint32 groupId = 1;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->groupid(), target);
  }

  // optional uint32 reqUId = 2;
  if (this->requid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->requid(), target);
  }

  // optional uint32 dstUId = 3;
  if (this->dstuid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->dstuid(), target);
  }

  // optional bool needClear = 4;
  if (this->needclear() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->needclear(), target);
  }

  // repeated .ChatMsg_t msgs = 20;
  for (unsigned int i = 0, n = this->msgs_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        20, this->msgs(i), false, target);
  }

  // optional bool reverseMsgOrder = 21;
  if (this->reversemsgorder() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(21, this->reversemsgorder(), target);
  }

  // optional string reqTag = 22;
  if (this->reqtag().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reqtag().data(), this->reqtag().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDGroupPrivateMsgHisResp.reqTag");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        22, this->reqtag(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDGroupPrivateMsgHisResp)
  return target;
}

int CMDGroupPrivateMsgHisResp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDGroupPrivateMsgHisResp)
  int total_size = 0;

  // optional uint32 groupId = 1;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->groupid());
  }

  // optional uint32 reqUId = 2;
  if (this->requid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->requid());
  }

  // optional uint32 dstUId = 3;
  if (this->dstuid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dstuid());
  }

  // optional bool needClear = 4;
  if (this->needclear() != 0) {
    total_size += 1 + 1;
  }

  // optional bool reverseMsgOrder = 21;
  if (this->reversemsgorder() != 0) {
    total_size += 2 + 1;
  }

  // optional string reqTag = 22;
  if (this->reqtag().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->reqtag());
  }

  // repeated .ChatMsg_t msgs = 20;
  total_size += 2 * this->msgs_size();
  for (int i = 0; i < this->msgs_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->msgs(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDGroupPrivateMsgHisResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDGroupPrivateMsgHisResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDGroupPrivateMsgHisResp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDGroupPrivateMsgHisResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDGroupPrivateMsgHisResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDGroupPrivateMsgHisResp)
    MergeFrom(*source);
  }
}

void CMDGroupPrivateMsgHisResp::MergeFrom(const CMDGroupPrivateMsgHisResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDGroupPrivateMsgHisResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  msgs_.MergeFrom(from.msgs_);
  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
  if (from.requid() != 0) {
    set_requid(from.requid());
  }
  if (from.dstuid() != 0) {
    set_dstuid(from.dstuid());
  }
  if (from.needclear() != 0) {
    set_needclear(from.needclear());
  }
  if (from.reversemsgorder() != 0) {
    set_reversemsgorder(from.reversemsgorder());
  }
  if (from.reqtag().size() > 0) {

    reqtag_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reqtag_);
  }
}

void CMDGroupPrivateMsgHisResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDGroupPrivateMsgHisResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDGroupPrivateMsgHisResp::CopyFrom(const CMDGroupPrivateMsgHisResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDGroupPrivateMsgHisResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDGroupPrivateMsgHisResp::IsInitialized() const {

  return true;
}

void CMDGroupPrivateMsgHisResp::Swap(CMDGroupPrivateMsgHisResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDGroupPrivateMsgHisResp::InternalSwap(CMDGroupPrivateMsgHisResp* other) {
  std::swap(groupid_, other->groupid_);
  std::swap(requid_, other->requid_);
  std::swap(dstuid_, other->dstuid_);
  std::swap(needclear_, other->needclear_);
  msgs_.UnsafeArenaSwap(&other->msgs_);
  std::swap(reversemsgorder_, other->reversemsgorder_);
  reqtag_.Swap(&other->reqtag_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDGroupPrivateMsgHisResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDGroupPrivateMsgHisResp_descriptor_;
  metadata.reflection = CMDGroupPrivateMsgHisResp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDGroupPrivateMsgHisResp

// optional uint32 groupId = 1;
void CMDGroupPrivateMsgHisResp::clear_groupid() {
  groupid_ = 0u;
}
 ::google::protobuf::uint32 CMDGroupPrivateMsgHisResp::groupid() const {
  // @@protoc_insertion_point(field_get:CMDGroupPrivateMsgHisResp.groupId)
  return groupid_;
}
 void CMDGroupPrivateMsgHisResp::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDGroupPrivateMsgHisResp.groupId)
}

// optional uint32 reqUId = 2;
void CMDGroupPrivateMsgHisResp::clear_requid() {
  requid_ = 0u;
}
 ::google::protobuf::uint32 CMDGroupPrivateMsgHisResp::requid() const {
  // @@protoc_insertion_point(field_get:CMDGroupPrivateMsgHisResp.reqUId)
  return requid_;
}
 void CMDGroupPrivateMsgHisResp::set_requid(::google::protobuf::uint32 value) {
  
  requid_ = value;
  // @@protoc_insertion_point(field_set:CMDGroupPrivateMsgHisResp.reqUId)
}

// optional uint32 dstUId = 3;
void CMDGroupPrivateMsgHisResp::clear_dstuid() {
  dstuid_ = 0u;
}
 ::google::protobuf::uint32 CMDGroupPrivateMsgHisResp::dstuid() const {
  // @@protoc_insertion_point(field_get:CMDGroupPrivateMsgHisResp.dstUId)
  return dstuid_;
}
 void CMDGroupPrivateMsgHisResp::set_dstuid(::google::protobuf::uint32 value) {
  
  dstuid_ = value;
  // @@protoc_insertion_point(field_set:CMDGroupPrivateMsgHisResp.dstUId)
}

// optional bool needClear = 4;
void CMDGroupPrivateMsgHisResp::clear_needclear() {
  needclear_ = false;
}
 bool CMDGroupPrivateMsgHisResp::needclear() const {
  // @@protoc_insertion_point(field_get:CMDGroupPrivateMsgHisResp.needClear)
  return needclear_;
}
 void CMDGroupPrivateMsgHisResp::set_needclear(bool value) {
  
  needclear_ = value;
  // @@protoc_insertion_point(field_set:CMDGroupPrivateMsgHisResp.needClear)
}

// repeated .ChatMsg_t msgs = 20;
int CMDGroupPrivateMsgHisResp::msgs_size() const {
  return msgs_.size();
}
void CMDGroupPrivateMsgHisResp::clear_msgs() {
  msgs_.Clear();
}
const ::ChatMsg_t& CMDGroupPrivateMsgHisResp::msgs(int index) const {
  // @@protoc_insertion_point(field_get:CMDGroupPrivateMsgHisResp.msgs)
  return msgs_.Get(index);
}
::ChatMsg_t* CMDGroupPrivateMsgHisResp::mutable_msgs(int index) {
  // @@protoc_insertion_point(field_mutable:CMDGroupPrivateMsgHisResp.msgs)
  return msgs_.Mutable(index);
}
::ChatMsg_t* CMDGroupPrivateMsgHisResp::add_msgs() {
  // @@protoc_insertion_point(field_add:CMDGroupPrivateMsgHisResp.msgs)
  return msgs_.Add();
}
::google::protobuf::RepeatedPtrField< ::ChatMsg_t >*
CMDGroupPrivateMsgHisResp::mutable_msgs() {
  // @@protoc_insertion_point(field_mutable_list:CMDGroupPrivateMsgHisResp.msgs)
  return &msgs_;
}
const ::google::protobuf::RepeatedPtrField< ::ChatMsg_t >&
CMDGroupPrivateMsgHisResp::msgs() const {
  // @@protoc_insertion_point(field_list:CMDGroupPrivateMsgHisResp.msgs)
  return msgs_;
}

// optional bool reverseMsgOrder = 21;
void CMDGroupPrivateMsgHisResp::clear_reversemsgorder() {
  reversemsgorder_ = false;
}
 bool CMDGroupPrivateMsgHisResp::reversemsgorder() const {
  // @@protoc_insertion_point(field_get:CMDGroupPrivateMsgHisResp.reverseMsgOrder)
  return reversemsgorder_;
}
 void CMDGroupPrivateMsgHisResp::set_reversemsgorder(bool value) {
  
  reversemsgorder_ = value;
  // @@protoc_insertion_point(field_set:CMDGroupPrivateMsgHisResp.reverseMsgOrder)
}

// optional string reqTag = 22;
void CMDGroupPrivateMsgHisResp::clear_reqtag() {
  reqtag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CMDGroupPrivateMsgHisResp::reqtag() const {
  // @@protoc_insertion_point(field_get:CMDGroupPrivateMsgHisResp.reqTag)
  return reqtag_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDGroupPrivateMsgHisResp::set_reqtag(const ::std::string& value) {
  
  reqtag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDGroupPrivateMsgHisResp.reqTag)
}
 void CMDGroupPrivateMsgHisResp::set_reqtag(const char* value) {
  
  reqtag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDGroupPrivateMsgHisResp.reqTag)
}
 void CMDGroupPrivateMsgHisResp::set_reqtag(const char* value, size_t size) {
  
  reqtag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDGroupPrivateMsgHisResp.reqTag)
}
 ::std::string* CMDGroupPrivateMsgHisResp::mutable_reqtag() {
  
  // @@protoc_insertion_point(field_mutable:CMDGroupPrivateMsgHisResp.reqTag)
  return reqtag_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMDGroupPrivateMsgHisResp::release_reqtag() {
  // @@protoc_insertion_point(field_release:CMDGroupPrivateMsgHisResp.reqTag)
  
  return reqtag_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDGroupPrivateMsgHisResp::set_allocated_reqtag(::std::string* reqtag) {
  if (reqtag != NULL) {
    
  } else {
    
  }
  reqtag_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reqtag);
  // @@protoc_insertion_point(field_set_allocated:CMDGroupPrivateMsgHisResp.reqTag)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDGroupPChatQualiticationReq::kGroupidFieldNumber;
const int CMDGroupPChatQualiticationReq::kUseridFieldNumber;
const int CMDGroupPChatQualiticationReq::kDstuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDGroupPChatQualiticationReq::CMDGroupPChatQualiticationReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDGroupPChatQualiticationReq)
}

void CMDGroupPChatQualiticationReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDGroupPChatQualiticationReq::CMDGroupPChatQualiticationReq(const CMDGroupPChatQualiticationReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDGroupPChatQualiticationReq)
}

void CMDGroupPChatQualiticationReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  groupid_ = 0u;
  userid_ = 0u;
  dstuid_ = 0u;
}

CMDGroupPChatQualiticationReq::~CMDGroupPChatQualiticationReq() {
  // @@protoc_insertion_point(destructor:CMDGroupPChatQualiticationReq)
  SharedDtor();
}

void CMDGroupPChatQualiticationReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMDGroupPChatQualiticationReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDGroupPChatQualiticationReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDGroupPChatQualiticationReq_descriptor_;
}

const CMDGroupPChatQualiticationReq& CMDGroupPChatQualiticationReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ChatSvr_2eproto();
  return *default_instance_;
}

CMDGroupPChatQualiticationReq* CMDGroupPChatQualiticationReq::default_instance_ = NULL;

CMDGroupPChatQualiticationReq* CMDGroupPChatQualiticationReq::New(::google::protobuf::Arena* arena) const {
  CMDGroupPChatQualiticationReq* n = new CMDGroupPChatQualiticationReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDGroupPChatQualiticationReq::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDGroupPChatQualiticationReq)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDGroupPChatQualiticationReq, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDGroupPChatQualiticationReq*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(groupid_, dstuid_);

#undef ZR_HELPER_
#undef ZR_

}

bool CMDGroupPChatQualiticationReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDGroupPChatQualiticationReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 groupid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &groupid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_userid;
        break;
      }

      // optional uint32 userid = 2;
      case 2: {
        if (tag == 16) {
         parse_userid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_dstuid;
        break;
      }

      // optional uint32 dstuid = 3;
      case 3: {
        if (tag == 24) {
         parse_dstuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dstuid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDGroupPChatQualiticationReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDGroupPChatQualiticationReq)
  return false;
#undef DO_
}

void CMDGroupPChatQualiticationReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDGroupPChatQualiticationReq)
  // optional uint32 groupid = 1;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->groupid(), output);
  }

  // optional uint32 userid = 2;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->userid(), output);
  }

  // optional uint32 dstuid = 3;
  if (this->dstuid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->dstuid(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDGroupPChatQualiticationReq)
}

::google::protobuf::uint8* CMDGroupPChatQualiticationReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDGroupPChatQualiticationReq)
  // optional uint32 groupid = 1;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->groupid(), target);
  }

  // optional uint32 userid = 2;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->userid(), target);
  }

  // optional uint32 dstuid = 3;
  if (this->dstuid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->dstuid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDGroupPChatQualiticationReq)
  return target;
}

int CMDGroupPChatQualiticationReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDGroupPChatQualiticationReq)
  int total_size = 0;

  // optional uint32 groupid = 1;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->groupid());
  }

  // optional uint32 userid = 2;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userid());
  }

  // optional uint32 dstuid = 3;
  if (this->dstuid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dstuid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDGroupPChatQualiticationReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDGroupPChatQualiticationReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDGroupPChatQualiticationReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDGroupPChatQualiticationReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDGroupPChatQualiticationReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDGroupPChatQualiticationReq)
    MergeFrom(*source);
  }
}

void CMDGroupPChatQualiticationReq::MergeFrom(const CMDGroupPChatQualiticationReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDGroupPChatQualiticationReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.dstuid() != 0) {
    set_dstuid(from.dstuid());
  }
}

void CMDGroupPChatQualiticationReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDGroupPChatQualiticationReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDGroupPChatQualiticationReq::CopyFrom(const CMDGroupPChatQualiticationReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDGroupPChatQualiticationReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDGroupPChatQualiticationReq::IsInitialized() const {

  return true;
}

void CMDGroupPChatQualiticationReq::Swap(CMDGroupPChatQualiticationReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDGroupPChatQualiticationReq::InternalSwap(CMDGroupPChatQualiticationReq* other) {
  std::swap(groupid_, other->groupid_);
  std::swap(userid_, other->userid_);
  std::swap(dstuid_, other->dstuid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDGroupPChatQualiticationReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDGroupPChatQualiticationReq_descriptor_;
  metadata.reflection = CMDGroupPChatQualiticationReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDGroupPChatQualiticationReq

// optional uint32 groupid = 1;
void CMDGroupPChatQualiticationReq::clear_groupid() {
  groupid_ = 0u;
}
 ::google::protobuf::uint32 CMDGroupPChatQualiticationReq::groupid() const {
  // @@protoc_insertion_point(field_get:CMDGroupPChatQualiticationReq.groupid)
  return groupid_;
}
 void CMDGroupPChatQualiticationReq::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDGroupPChatQualiticationReq.groupid)
}

// optional uint32 userid = 2;
void CMDGroupPChatQualiticationReq::clear_userid() {
  userid_ = 0u;
}
 ::google::protobuf::uint32 CMDGroupPChatQualiticationReq::userid() const {
  // @@protoc_insertion_point(field_get:CMDGroupPChatQualiticationReq.userid)
  return userid_;
}
 void CMDGroupPChatQualiticationReq::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDGroupPChatQualiticationReq.userid)
}

// optional uint32 dstuid = 3;
void CMDGroupPChatQualiticationReq::clear_dstuid() {
  dstuid_ = 0u;
}
 ::google::protobuf::uint32 CMDGroupPChatQualiticationReq::dstuid() const {
  // @@protoc_insertion_point(field_get:CMDGroupPChatQualiticationReq.dstuid)
  return dstuid_;
}
 void CMDGroupPChatQualiticationReq::set_dstuid(::google::protobuf::uint32 value) {
  
  dstuid_ = value;
  // @@protoc_insertion_point(field_set:CMDGroupPChatQualiticationReq.dstuid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDGroupPChatQualiticationResp::kErrInfoFieldNumber;
const int CMDGroupPChatQualiticationResp::kGroupidFieldNumber;
const int CMDGroupPChatQualiticationResp::kUseridFieldNumber;
const int CMDGroupPChatQualiticationResp::kDstuidFieldNumber;
const int CMDGroupPChatQualiticationResp::kThresholdFieldNumber;
const int CMDGroupPChatQualiticationResp::kIntimacyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDGroupPChatQualiticationResp::CMDGroupPChatQualiticationResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDGroupPChatQualiticationResp)
}

void CMDGroupPChatQualiticationResp::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  errinfo_ = const_cast< ::CMDErrCode*>(&::CMDErrCode::default_instance());
}

CMDGroupPChatQualiticationResp::CMDGroupPChatQualiticationResp(const CMDGroupPChatQualiticationResp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDGroupPChatQualiticationResp)
}

void CMDGroupPChatQualiticationResp::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  errinfo_ = NULL;
  groupid_ = 0u;
  userid_ = 0u;
  dstuid_ = 0u;
  threshold_ = 0u;
  intimacy_ = 0u;
}

CMDGroupPChatQualiticationResp::~CMDGroupPChatQualiticationResp() {
  // @@protoc_insertion_point(destructor:CMDGroupPChatQualiticationResp)
  SharedDtor();
}

void CMDGroupPChatQualiticationResp::SharedDtor() {
  if (this != default_instance_) {
    delete errinfo_;
  }
}

void CMDGroupPChatQualiticationResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDGroupPChatQualiticationResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDGroupPChatQualiticationResp_descriptor_;
}

const CMDGroupPChatQualiticationResp& CMDGroupPChatQualiticationResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ChatSvr_2eproto();
  return *default_instance_;
}

CMDGroupPChatQualiticationResp* CMDGroupPChatQualiticationResp::default_instance_ = NULL;

CMDGroupPChatQualiticationResp* CMDGroupPChatQualiticationResp::New(::google::protobuf::Arena* arena) const {
  CMDGroupPChatQualiticationResp* n = new CMDGroupPChatQualiticationResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDGroupPChatQualiticationResp::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDGroupPChatQualiticationResp)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDGroupPChatQualiticationResp, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDGroupPChatQualiticationResp*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(groupid_, intimacy_);
  if (GetArenaNoVirtual() == NULL && errinfo_ != NULL) delete errinfo_;
  errinfo_ = NULL;

#undef ZR_HELPER_
#undef ZR_

}

bool CMDGroupPChatQualiticationResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDGroupPChatQualiticationResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CMDErrCode errInfo = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_errinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_groupid;
        break;
      }

      // optional uint32 groupid = 2;
      case 2: {
        if (tag == 16) {
         parse_groupid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &groupid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_userid;
        break;
      }

      // optional uint32 userid = 3;
      case 3: {
        if (tag == 24) {
         parse_userid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_dstuid;
        break;
      }

      // optional uint32 dstuid = 4;
      case 4: {
        if (tag == 32) {
         parse_dstuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dstuid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_threshold;
        break;
      }

      // optional uint32 threshold = 5;
      case 5: {
        if (tag == 40) {
         parse_threshold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &threshold_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_intimacy;
        break;
      }

      // optional uint32 intimacy = 6;
      case 6: {
        if (tag == 48) {
         parse_intimacy:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &intimacy_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDGroupPChatQualiticationResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDGroupPChatQualiticationResp)
  return false;
#undef DO_
}

void CMDGroupPChatQualiticationResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDGroupPChatQualiticationResp)
  // optional .CMDErrCode errInfo = 1;
  if (this->has_errinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->errinfo_, output);
  }

  // optional uint32 groupid = 2;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->groupid(), output);
  }

  // optional uint32 userid = 3;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->userid(), output);
  }

  // optional uint32 dstuid = 4;
  if (this->dstuid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->dstuid(), output);
  }

  // optional uint32 threshold = 5;
  if (this->threshold() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->threshold(), output);
  }

  // optional uint32 intimacy = 6;
  if (this->intimacy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->intimacy(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDGroupPChatQualiticationResp)
}

::google::protobuf::uint8* CMDGroupPChatQualiticationResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDGroupPChatQualiticationResp)
  // optional .CMDErrCode errInfo = 1;
  if (this->has_errinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->errinfo_, false, target);
  }

  // optional uint32 groupid = 2;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->groupid(), target);
  }

  // optional uint32 userid = 3;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->userid(), target);
  }

  // optional uint32 dstuid = 4;
  if (this->dstuid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->dstuid(), target);
  }

  // optional uint32 threshold = 5;
  if (this->threshold() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->threshold(), target);
  }

  // optional uint32 intimacy = 6;
  if (this->intimacy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->intimacy(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDGroupPChatQualiticationResp)
  return target;
}

int CMDGroupPChatQualiticationResp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDGroupPChatQualiticationResp)
  int total_size = 0;

  // optional .CMDErrCode errInfo = 1;
  if (this->has_errinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->errinfo_);
  }

  // optional uint32 groupid = 2;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->groupid());
  }

  // optional uint32 userid = 3;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userid());
  }

  // optional uint32 dstuid = 4;
  if (this->dstuid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dstuid());
  }

  // optional uint32 threshold = 5;
  if (this->threshold() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->threshold());
  }

  // optional uint32 intimacy = 6;
  if (this->intimacy() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->intimacy());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDGroupPChatQualiticationResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDGroupPChatQualiticationResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDGroupPChatQualiticationResp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDGroupPChatQualiticationResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDGroupPChatQualiticationResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDGroupPChatQualiticationResp)
    MergeFrom(*source);
  }
}

void CMDGroupPChatQualiticationResp::MergeFrom(const CMDGroupPChatQualiticationResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDGroupPChatQualiticationResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.has_errinfo()) {
    mutable_errinfo()->::CMDErrCode::MergeFrom(from.errinfo());
  }
  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.dstuid() != 0) {
    set_dstuid(from.dstuid());
  }
  if (from.threshold() != 0) {
    set_threshold(from.threshold());
  }
  if (from.intimacy() != 0) {
    set_intimacy(from.intimacy());
  }
}

void CMDGroupPChatQualiticationResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDGroupPChatQualiticationResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDGroupPChatQualiticationResp::CopyFrom(const CMDGroupPChatQualiticationResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDGroupPChatQualiticationResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDGroupPChatQualiticationResp::IsInitialized() const {

  return true;
}

void CMDGroupPChatQualiticationResp::Swap(CMDGroupPChatQualiticationResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDGroupPChatQualiticationResp::InternalSwap(CMDGroupPChatQualiticationResp* other) {
  std::swap(errinfo_, other->errinfo_);
  std::swap(groupid_, other->groupid_);
  std::swap(userid_, other->userid_);
  std::swap(dstuid_, other->dstuid_);
  std::swap(threshold_, other->threshold_);
  std::swap(intimacy_, other->intimacy_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDGroupPChatQualiticationResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDGroupPChatQualiticationResp_descriptor_;
  metadata.reflection = CMDGroupPChatQualiticationResp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDGroupPChatQualiticationResp

// optional .CMDErrCode errInfo = 1;
bool CMDGroupPChatQualiticationResp::has_errinfo() const {
  return !_is_default_instance_ && errinfo_ != NULL;
}
void CMDGroupPChatQualiticationResp::clear_errinfo() {
  if (GetArenaNoVirtual() == NULL && errinfo_ != NULL) delete errinfo_;
  errinfo_ = NULL;
}
const ::CMDErrCode& CMDGroupPChatQualiticationResp::errinfo() const {
  // @@protoc_insertion_point(field_get:CMDGroupPChatQualiticationResp.errInfo)
  return errinfo_ != NULL ? *errinfo_ : *default_instance_->errinfo_;
}
::CMDErrCode* CMDGroupPChatQualiticationResp::mutable_errinfo() {
  
  if (errinfo_ == NULL) {
    errinfo_ = new ::CMDErrCode;
  }
  // @@protoc_insertion_point(field_mutable:CMDGroupPChatQualiticationResp.errInfo)
  return errinfo_;
}
::CMDErrCode* CMDGroupPChatQualiticationResp::release_errinfo() {
  // @@protoc_insertion_point(field_release:CMDGroupPChatQualiticationResp.errInfo)
  
  ::CMDErrCode* temp = errinfo_;
  errinfo_ = NULL;
  return temp;
}
void CMDGroupPChatQualiticationResp::set_allocated_errinfo(::CMDErrCode* errinfo) {
  delete errinfo_;
  errinfo_ = errinfo;
  if (errinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDGroupPChatQualiticationResp.errInfo)
}

// optional uint32 groupid = 2;
void CMDGroupPChatQualiticationResp::clear_groupid() {
  groupid_ = 0u;
}
 ::google::protobuf::uint32 CMDGroupPChatQualiticationResp::groupid() const {
  // @@protoc_insertion_point(field_get:CMDGroupPChatQualiticationResp.groupid)
  return groupid_;
}
 void CMDGroupPChatQualiticationResp::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDGroupPChatQualiticationResp.groupid)
}

// optional uint32 userid = 3;
void CMDGroupPChatQualiticationResp::clear_userid() {
  userid_ = 0u;
}
 ::google::protobuf::uint32 CMDGroupPChatQualiticationResp::userid() const {
  // @@protoc_insertion_point(field_get:CMDGroupPChatQualiticationResp.userid)
  return userid_;
}
 void CMDGroupPChatQualiticationResp::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDGroupPChatQualiticationResp.userid)
}

// optional uint32 dstuid = 4;
void CMDGroupPChatQualiticationResp::clear_dstuid() {
  dstuid_ = 0u;
}
 ::google::protobuf::uint32 CMDGroupPChatQualiticationResp::dstuid() const {
  // @@protoc_insertion_point(field_get:CMDGroupPChatQualiticationResp.dstuid)
  return dstuid_;
}
 void CMDGroupPChatQualiticationResp::set_dstuid(::google::protobuf::uint32 value) {
  
  dstuid_ = value;
  // @@protoc_insertion_point(field_set:CMDGroupPChatQualiticationResp.dstuid)
}

// optional uint32 threshold = 5;
void CMDGroupPChatQualiticationResp::clear_threshold() {
  threshold_ = 0u;
}
 ::google::protobuf::uint32 CMDGroupPChatQualiticationResp::threshold() const {
  // @@protoc_insertion_point(field_get:CMDGroupPChatQualiticationResp.threshold)
  return threshold_;
}
 void CMDGroupPChatQualiticationResp::set_threshold(::google::protobuf::uint32 value) {
  
  threshold_ = value;
  // @@protoc_insertion_point(field_set:CMDGroupPChatQualiticationResp.threshold)
}

// optional uint32 intimacy = 6;
void CMDGroupPChatQualiticationResp::clear_intimacy() {
  intimacy_ = 0u;
}
 ::google::protobuf::uint32 CMDGroupPChatQualiticationResp::intimacy() const {
  // @@protoc_insertion_point(field_get:CMDGroupPChatQualiticationResp.intimacy)
  return intimacy_;
}
 void CMDGroupPChatQualiticationResp::set_intimacy(::google::protobuf::uint32 value) {
  
  intimacy_ = value;
  // @@protoc_insertion_point(field_set:CMDGroupPChatQualiticationResp.intimacy)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDDeleteChatMsgHis::kGroupidFieldNumber;
const int CMDDeleteChatMsgHis::kUseridFieldNumber;
const int CMDDeleteChatMsgHis::kDstuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDDeleteChatMsgHis::CMDDeleteChatMsgHis()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDDeleteChatMsgHis)
}

void CMDDeleteChatMsgHis::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDDeleteChatMsgHis::CMDDeleteChatMsgHis(const CMDDeleteChatMsgHis& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDDeleteChatMsgHis)
}

void CMDDeleteChatMsgHis::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  groupid_ = 0u;
  userid_ = 0u;
  dstuid_ = 0u;
}

CMDDeleteChatMsgHis::~CMDDeleteChatMsgHis() {
  // @@protoc_insertion_point(destructor:CMDDeleteChatMsgHis)
  SharedDtor();
}

void CMDDeleteChatMsgHis::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMDDeleteChatMsgHis::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDDeleteChatMsgHis::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDDeleteChatMsgHis_descriptor_;
}

const CMDDeleteChatMsgHis& CMDDeleteChatMsgHis::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ChatSvr_2eproto();
  return *default_instance_;
}

CMDDeleteChatMsgHis* CMDDeleteChatMsgHis::default_instance_ = NULL;

CMDDeleteChatMsgHis* CMDDeleteChatMsgHis::New(::google::protobuf::Arena* arena) const {
  CMDDeleteChatMsgHis* n = new CMDDeleteChatMsgHis;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDDeleteChatMsgHis::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDDeleteChatMsgHis)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDDeleteChatMsgHis, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDDeleteChatMsgHis*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(groupid_, dstuid_);

#undef ZR_HELPER_
#undef ZR_

}

bool CMDDeleteChatMsgHis::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDDeleteChatMsgHis)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 groupid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &groupid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_userid;
        break;
      }

      // optional uint32 userid = 2;
      case 2: {
        if (tag == 16) {
         parse_userid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_dstuid;
        break;
      }

      // optional uint32 dstuid = 3;
      case 3: {
        if (tag == 24) {
         parse_dstuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dstuid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDDeleteChatMsgHis)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDDeleteChatMsgHis)
  return false;
#undef DO_
}

void CMDDeleteChatMsgHis::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDDeleteChatMsgHis)
  // optional uint32 groupid = 1;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->groupid(), output);
  }

  // optional uint32 userid = 2;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->userid(), output);
  }

  // optional uint32 dstuid = 3;
  if (this->dstuid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->dstuid(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDDeleteChatMsgHis)
}

::google::protobuf::uint8* CMDDeleteChatMsgHis::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDDeleteChatMsgHis)
  // optional uint32 groupid = 1;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->groupid(), target);
  }

  // optional uint32 userid = 2;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->userid(), target);
  }

  // optional uint32 dstuid = 3;
  if (this->dstuid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->dstuid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDDeleteChatMsgHis)
  return target;
}

int CMDDeleteChatMsgHis::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDDeleteChatMsgHis)
  int total_size = 0;

  // optional uint32 groupid = 1;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->groupid());
  }

  // optional uint32 userid = 2;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userid());
  }

  // optional uint32 dstuid = 3;
  if (this->dstuid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dstuid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDDeleteChatMsgHis::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDDeleteChatMsgHis)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDDeleteChatMsgHis* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDDeleteChatMsgHis>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDDeleteChatMsgHis)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDDeleteChatMsgHis)
    MergeFrom(*source);
  }
}

void CMDDeleteChatMsgHis::MergeFrom(const CMDDeleteChatMsgHis& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDDeleteChatMsgHis)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.dstuid() != 0) {
    set_dstuid(from.dstuid());
  }
}

void CMDDeleteChatMsgHis::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDDeleteChatMsgHis)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDDeleteChatMsgHis::CopyFrom(const CMDDeleteChatMsgHis& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDDeleteChatMsgHis)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDDeleteChatMsgHis::IsInitialized() const {

  return true;
}

void CMDDeleteChatMsgHis::Swap(CMDDeleteChatMsgHis* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDDeleteChatMsgHis::InternalSwap(CMDDeleteChatMsgHis* other) {
  std::swap(groupid_, other->groupid_);
  std::swap(userid_, other->userid_);
  std::swap(dstuid_, other->dstuid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDDeleteChatMsgHis::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDDeleteChatMsgHis_descriptor_;
  metadata.reflection = CMDDeleteChatMsgHis_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDDeleteChatMsgHis

// optional uint32 groupid = 1;
void CMDDeleteChatMsgHis::clear_groupid() {
  groupid_ = 0u;
}
 ::google::protobuf::uint32 CMDDeleteChatMsgHis::groupid() const {
  // @@protoc_insertion_point(field_get:CMDDeleteChatMsgHis.groupid)
  return groupid_;
}
 void CMDDeleteChatMsgHis::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDDeleteChatMsgHis.groupid)
}

// optional uint32 userid = 2;
void CMDDeleteChatMsgHis::clear_userid() {
  userid_ = 0u;
}
 ::google::protobuf::uint32 CMDDeleteChatMsgHis::userid() const {
  // @@protoc_insertion_point(field_get:CMDDeleteChatMsgHis.userid)
  return userid_;
}
 void CMDDeleteChatMsgHis::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDDeleteChatMsgHis.userid)
}

// optional uint32 dstuid = 3;
void CMDDeleteChatMsgHis::clear_dstuid() {
  dstuid_ = 0u;
}
 ::google::protobuf::uint32 CMDDeleteChatMsgHis::dstuid() const {
  // @@protoc_insertion_point(field_get:CMDDeleteChatMsgHis.dstuid)
  return dstuid_;
}
 void CMDDeleteChatMsgHis::set_dstuid(::google::protobuf::uint32 value) {
  
  dstuid_ = value;
  // @@protoc_insertion_point(field_set:CMDDeleteChatMsgHis.dstuid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDDeleteChatMsgHisResp::kErrInfoFieldNumber;
const int CMDDeleteChatMsgHisResp::kReqFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDDeleteChatMsgHisResp::CMDDeleteChatMsgHisResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDDeleteChatMsgHisResp)
}

void CMDDeleteChatMsgHisResp::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  errinfo_ = const_cast< ::CMDErrCode*>(&::CMDErrCode::default_instance());
  req_ = const_cast< ::CMDDeleteChatMsgHis*>(&::CMDDeleteChatMsgHis::default_instance());
}

CMDDeleteChatMsgHisResp::CMDDeleteChatMsgHisResp(const CMDDeleteChatMsgHisResp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDDeleteChatMsgHisResp)
}

void CMDDeleteChatMsgHisResp::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  errinfo_ = NULL;
  req_ = NULL;
}

CMDDeleteChatMsgHisResp::~CMDDeleteChatMsgHisResp() {
  // @@protoc_insertion_point(destructor:CMDDeleteChatMsgHisResp)
  SharedDtor();
}

void CMDDeleteChatMsgHisResp::SharedDtor() {
  if (this != default_instance_) {
    delete errinfo_;
    delete req_;
  }
}

void CMDDeleteChatMsgHisResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDDeleteChatMsgHisResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDDeleteChatMsgHisResp_descriptor_;
}

const CMDDeleteChatMsgHisResp& CMDDeleteChatMsgHisResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ChatSvr_2eproto();
  return *default_instance_;
}

CMDDeleteChatMsgHisResp* CMDDeleteChatMsgHisResp::default_instance_ = NULL;

CMDDeleteChatMsgHisResp* CMDDeleteChatMsgHisResp::New(::google::protobuf::Arena* arena) const {
  CMDDeleteChatMsgHisResp* n = new CMDDeleteChatMsgHisResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDDeleteChatMsgHisResp::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDDeleteChatMsgHisResp)
  if (GetArenaNoVirtual() == NULL && errinfo_ != NULL) delete errinfo_;
  errinfo_ = NULL;
  if (GetArenaNoVirtual() == NULL && req_ != NULL) delete req_;
  req_ = NULL;
}

bool CMDDeleteChatMsgHisResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDDeleteChatMsgHisResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CMDErrCode errInfo = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_errinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_req;
        break;
      }

      // optional .CMDDeleteChatMsgHis req = 2;
      case 2: {
        if (tag == 18) {
         parse_req:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_req()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDDeleteChatMsgHisResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDDeleteChatMsgHisResp)
  return false;
#undef DO_
}

void CMDDeleteChatMsgHisResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDDeleteChatMsgHisResp)
  // optional .CMDErrCode errInfo = 1;
  if (this->has_errinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->errinfo_, output);
  }

  // optional .CMDDeleteChatMsgHis req = 2;
  if (this->has_req()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->req_, output);
  }

  // @@protoc_insertion_point(serialize_end:CMDDeleteChatMsgHisResp)
}

::google::protobuf::uint8* CMDDeleteChatMsgHisResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDDeleteChatMsgHisResp)
  // optional .CMDErrCode errInfo = 1;
  if (this->has_errinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->errinfo_, false, target);
  }

  // optional .CMDDeleteChatMsgHis req = 2;
  if (this->has_req()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->req_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDDeleteChatMsgHisResp)
  return target;
}

int CMDDeleteChatMsgHisResp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDDeleteChatMsgHisResp)
  int total_size = 0;

  // optional .CMDErrCode errInfo = 1;
  if (this->has_errinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->errinfo_);
  }

  // optional .CMDDeleteChatMsgHis req = 2;
  if (this->has_req()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->req_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDDeleteChatMsgHisResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDDeleteChatMsgHisResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDDeleteChatMsgHisResp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDDeleteChatMsgHisResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDDeleteChatMsgHisResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDDeleteChatMsgHisResp)
    MergeFrom(*source);
  }
}

void CMDDeleteChatMsgHisResp::MergeFrom(const CMDDeleteChatMsgHisResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDDeleteChatMsgHisResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.has_errinfo()) {
    mutable_errinfo()->::CMDErrCode::MergeFrom(from.errinfo());
  }
  if (from.has_req()) {
    mutable_req()->::CMDDeleteChatMsgHis::MergeFrom(from.req());
  }
}

void CMDDeleteChatMsgHisResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDDeleteChatMsgHisResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDDeleteChatMsgHisResp::CopyFrom(const CMDDeleteChatMsgHisResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDDeleteChatMsgHisResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDDeleteChatMsgHisResp::IsInitialized() const {

  return true;
}

void CMDDeleteChatMsgHisResp::Swap(CMDDeleteChatMsgHisResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDDeleteChatMsgHisResp::InternalSwap(CMDDeleteChatMsgHisResp* other) {
  std::swap(errinfo_, other->errinfo_);
  std::swap(req_, other->req_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDDeleteChatMsgHisResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDDeleteChatMsgHisResp_descriptor_;
  metadata.reflection = CMDDeleteChatMsgHisResp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDDeleteChatMsgHisResp

// optional .CMDErrCode errInfo = 1;
bool CMDDeleteChatMsgHisResp::has_errinfo() const {
  return !_is_default_instance_ && errinfo_ != NULL;
}
void CMDDeleteChatMsgHisResp::clear_errinfo() {
  if (GetArenaNoVirtual() == NULL && errinfo_ != NULL) delete errinfo_;
  errinfo_ = NULL;
}
const ::CMDErrCode& CMDDeleteChatMsgHisResp::errinfo() const {
  // @@protoc_insertion_point(field_get:CMDDeleteChatMsgHisResp.errInfo)
  return errinfo_ != NULL ? *errinfo_ : *default_instance_->errinfo_;
}
::CMDErrCode* CMDDeleteChatMsgHisResp::mutable_errinfo() {
  
  if (errinfo_ == NULL) {
    errinfo_ = new ::CMDErrCode;
  }
  // @@protoc_insertion_point(field_mutable:CMDDeleteChatMsgHisResp.errInfo)
  return errinfo_;
}
::CMDErrCode* CMDDeleteChatMsgHisResp::release_errinfo() {
  // @@protoc_insertion_point(field_release:CMDDeleteChatMsgHisResp.errInfo)
  
  ::CMDErrCode* temp = errinfo_;
  errinfo_ = NULL;
  return temp;
}
void CMDDeleteChatMsgHisResp::set_allocated_errinfo(::CMDErrCode* errinfo) {
  delete errinfo_;
  errinfo_ = errinfo;
  if (errinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDDeleteChatMsgHisResp.errInfo)
}

// optional .CMDDeleteChatMsgHis req = 2;
bool CMDDeleteChatMsgHisResp::has_req() const {
  return !_is_default_instance_ && req_ != NULL;
}
void CMDDeleteChatMsgHisResp::clear_req() {
  if (GetArenaNoVirtual() == NULL && req_ != NULL) delete req_;
  req_ = NULL;
}
const ::CMDDeleteChatMsgHis& CMDDeleteChatMsgHisResp::req() const {
  // @@protoc_insertion_point(field_get:CMDDeleteChatMsgHisResp.req)
  return req_ != NULL ? *req_ : *default_instance_->req_;
}
::CMDDeleteChatMsgHis* CMDDeleteChatMsgHisResp::mutable_req() {
  
  if (req_ == NULL) {
    req_ = new ::CMDDeleteChatMsgHis;
  }
  // @@protoc_insertion_point(field_mutable:CMDDeleteChatMsgHisResp.req)
  return req_;
}
::CMDDeleteChatMsgHis* CMDDeleteChatMsgHisResp::release_req() {
  // @@protoc_insertion_point(field_release:CMDDeleteChatMsgHisResp.req)
  
  ::CMDDeleteChatMsgHis* temp = req_;
  req_ = NULL;
  return temp;
}
void CMDDeleteChatMsgHisResp::set_allocated_req(::CMDDeleteChatMsgHis* req) {
  delete req_;
  req_ = req;
  if (req) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDDeleteChatMsgHisResp.req)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GPAssistMsg_t::kMsgIdFieldNumber;
const int GPAssistMsg_t::kMsgTimeFieldNumber;
const int GPAssistMsg_t::kMsgFieldNumber;
const int GPAssistMsg_t::kUrlFieldNumber;
const int GPAssistMsg_t::kStateFieldNumber;
const int GPAssistMsg_t::kTitleFieldNumber;
const int GPAssistMsg_t::kIconFieldNumber;
const int GPAssistMsg_t::kMsgTypeFieldNumber;
const int GPAssistMsg_t::kAuthIDFieldNumber;
const int GPAssistMsg_t::kActionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GPAssistMsg_t::GPAssistMsg_t()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:GPAssistMsg_t)
}

void GPAssistMsg_t::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

GPAssistMsg_t::GPAssistMsg_t(const GPAssistMsg_t& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:GPAssistMsg_t)
}

void GPAssistMsg_t::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  msgid_ = 0u;
  msgtime_ = 0u;
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  state_ = 0;
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  icon_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgtype_ = 0;
  authid_ = 0u;
  action_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GPAssistMsg_t::~GPAssistMsg_t() {
  // @@protoc_insertion_point(destructor:GPAssistMsg_t)
  SharedDtor();
}

void GPAssistMsg_t::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  icon_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  action_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void GPAssistMsg_t::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GPAssistMsg_t::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GPAssistMsg_t_descriptor_;
}

const GPAssistMsg_t& GPAssistMsg_t::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ChatSvr_2eproto();
  return *default_instance_;
}

GPAssistMsg_t* GPAssistMsg_t::default_instance_ = NULL;

GPAssistMsg_t* GPAssistMsg_t::New(::google::protobuf::Arena* arena) const {
  GPAssistMsg_t* n = new GPAssistMsg_t;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GPAssistMsg_t::Clear() {
// @@protoc_insertion_point(message_clear_start:GPAssistMsg_t)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(GPAssistMsg_t, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<GPAssistMsg_t*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(msgid_, msgtime_);
  ZR_(state_, msgtype_);
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  icon_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  authid_ = 0u;
  action_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool GPAssistMsg_t::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GPAssistMsg_t)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 msgId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msgid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_msgTime;
        break;
      }

      // optional uint32 msgTime = 2;
      case 2: {
        if (tag == 16) {
         parse_msgTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msgtime_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_msg;
        break;
      }

      // optional string msg = 3;
      case 3: {
        if (tag == 26) {
         parse_msg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg().data(), this->msg().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "GPAssistMsg_t.msg"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_url;
        break;
      }

      // optional string url = 4;
      case 4: {
        if (tag == 34) {
         parse_url:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->url().data(), this->url().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "GPAssistMsg_t.url"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_state;
        break;
      }

      // optional .e_MsgState state = 5;
      case 5: {
        if (tag == 40) {
         parse_state:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_state(static_cast< ::e_MsgState >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_title;
        break;
      }

      // optional string title = 6;
      case 6: {
        if (tag == 50) {
         parse_title:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->title().data(), this->title().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "GPAssistMsg_t.title"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_icon;
        break;
      }

      // optional string icon = 7;
      case 7: {
        if (tag == 58) {
         parse_icon:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_icon()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->icon().data(), this->icon().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "GPAssistMsg_t.icon"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_msgType;
        break;
      }

      // optional .e_AssistMsgType msgType = 8;
      case 8: {
        if (tag == 64) {
         parse_msgType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_msgtype(static_cast< ::e_AssistMsgType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_authID;
        break;
      }

      // optional uint32 authID = 9;
      case 9: {
        if (tag == 72) {
         parse_authID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &authid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_action;
        break;
      }

      // optional string action = 10;
      case 10: {
        if (tag == 82) {
         parse_action:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_action()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->action().data(), this->action().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "GPAssistMsg_t.action"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GPAssistMsg_t)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GPAssistMsg_t)
  return false;
#undef DO_
}

void GPAssistMsg_t::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GPAssistMsg_t)
  // optional uint32 msgId = 1;
  if (this->msgid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->msgid(), output);
  }

  // optional uint32 msgTime = 2;
  if (this->msgtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->msgtime(), output);
  }

  // optional string msg = 3;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "GPAssistMsg_t.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->msg(), output);
  }

  // optional string url = 4;
  if (this->url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url().data(), this->url().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "GPAssistMsg_t.url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->url(), output);
  }

  // optional .e_MsgState state = 5;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->state(), output);
  }

  // optional string title = 6;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "GPAssistMsg_t.title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->title(), output);
  }

  // optional string icon = 7;
  if (this->icon().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->icon().data(), this->icon().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "GPAssistMsg_t.icon");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->icon(), output);
  }

  // optional .e_AssistMsgType msgType = 8;
  if (this->msgtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->msgtype(), output);
  }

  // optional uint32 authID = 9;
  if (this->authid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->authid(), output);
  }

  // optional string action = 10;
  if (this->action().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->action().data(), this->action().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "GPAssistMsg_t.action");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->action(), output);
  }

  // @@protoc_insertion_point(serialize_end:GPAssistMsg_t)
}

::google::protobuf::uint8* GPAssistMsg_t::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:GPAssistMsg_t)
  // optional uint32 msgId = 1;
  if (this->msgid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->msgid(), target);
  }

  // optional uint32 msgTime = 2;
  if (this->msgtime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->msgtime(), target);
  }

  // optional string msg = 3;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "GPAssistMsg_t.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->msg(), target);
  }

  // optional string url = 4;
  if (this->url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url().data(), this->url().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "GPAssistMsg_t.url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->url(), target);
  }

  // optional .e_MsgState state = 5;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->state(), target);
  }

  // optional string title = 6;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "GPAssistMsg_t.title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->title(), target);
  }

  // optional string icon = 7;
  if (this->icon().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->icon().data(), this->icon().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "GPAssistMsg_t.icon");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->icon(), target);
  }

  // optional .e_AssistMsgType msgType = 8;
  if (this->msgtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->msgtype(), target);
  }

  // optional uint32 authID = 9;
  if (this->authid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->authid(), target);
  }

  // optional string action = 10;
  if (this->action().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->action().data(), this->action().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "GPAssistMsg_t.action");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->action(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:GPAssistMsg_t)
  return target;
}

int GPAssistMsg_t::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:GPAssistMsg_t)
  int total_size = 0;

  // optional uint32 msgId = 1;
  if (this->msgid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->msgid());
  }

  // optional uint32 msgTime = 2;
  if (this->msgtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->msgtime());
  }

  // optional string msg = 3;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  // optional string url = 4;
  if (this->url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->url());
  }

  // optional .e_MsgState state = 5;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->state());
  }

  // optional string title = 6;
  if (this->title().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->title());
  }

  // optional string icon = 7;
  if (this->icon().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->icon());
  }

  // optional .e_AssistMsgType msgType = 8;
  if (this->msgtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
  }

  // optional uint32 authID = 9;
  if (this->authid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->authid());
  }

  // optional string action = 10;
  if (this->action().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->action());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GPAssistMsg_t::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GPAssistMsg_t)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const GPAssistMsg_t* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GPAssistMsg_t>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GPAssistMsg_t)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GPAssistMsg_t)
    MergeFrom(*source);
  }
}

void GPAssistMsg_t::MergeFrom(const GPAssistMsg_t& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GPAssistMsg_t)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.msgid() != 0) {
    set_msgid(from.msgid());
  }
  if (from.msgtime() != 0) {
    set_msgtime(from.msgtime());
  }
  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.url().size() > 0) {

    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
  if (from.title().size() > 0) {

    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  if (from.icon().size() > 0) {

    icon_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.icon_);
  }
  if (from.msgtype() != 0) {
    set_msgtype(from.msgtype());
  }
  if (from.authid() != 0) {
    set_authid(from.authid());
  }
  if (from.action().size() > 0) {

    action_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.action_);
  }
}

void GPAssistMsg_t::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GPAssistMsg_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GPAssistMsg_t::CopyFrom(const GPAssistMsg_t& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GPAssistMsg_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GPAssistMsg_t::IsInitialized() const {

  return true;
}

void GPAssistMsg_t::Swap(GPAssistMsg_t* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GPAssistMsg_t::InternalSwap(GPAssistMsg_t* other) {
  std::swap(msgid_, other->msgid_);
  std::swap(msgtime_, other->msgtime_);
  msg_.Swap(&other->msg_);
  url_.Swap(&other->url_);
  std::swap(state_, other->state_);
  title_.Swap(&other->title_);
  icon_.Swap(&other->icon_);
  std::swap(msgtype_, other->msgtype_);
  std::swap(authid_, other->authid_);
  action_.Swap(&other->action_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GPAssistMsg_t::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GPAssistMsg_t_descriptor_;
  metadata.reflection = GPAssistMsg_t_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GPAssistMsg_t

// optional uint32 msgId = 1;
void GPAssistMsg_t::clear_msgid() {
  msgid_ = 0u;
}
 ::google::protobuf::uint32 GPAssistMsg_t::msgid() const {
  // @@protoc_insertion_point(field_get:GPAssistMsg_t.msgId)
  return msgid_;
}
 void GPAssistMsg_t::set_msgid(::google::protobuf::uint32 value) {
  
  msgid_ = value;
  // @@protoc_insertion_point(field_set:GPAssistMsg_t.msgId)
}

// optional uint32 msgTime = 2;
void GPAssistMsg_t::clear_msgtime() {
  msgtime_ = 0u;
}
 ::google::protobuf::uint32 GPAssistMsg_t::msgtime() const {
  // @@protoc_insertion_point(field_get:GPAssistMsg_t.msgTime)
  return msgtime_;
}
 void GPAssistMsg_t::set_msgtime(::google::protobuf::uint32 value) {
  
  msgtime_ = value;
  // @@protoc_insertion_point(field_set:GPAssistMsg_t.msgTime)
}

// optional string msg = 3;
void GPAssistMsg_t::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GPAssistMsg_t::msg() const {
  // @@protoc_insertion_point(field_get:GPAssistMsg_t.msg)
  return msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GPAssistMsg_t::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GPAssistMsg_t.msg)
}
 void GPAssistMsg_t::set_msg(const char* value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GPAssistMsg_t.msg)
}
 void GPAssistMsg_t::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GPAssistMsg_t.msg)
}
 ::std::string* GPAssistMsg_t::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:GPAssistMsg_t.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GPAssistMsg_t::release_msg() {
  // @@protoc_insertion_point(field_release:GPAssistMsg_t.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GPAssistMsg_t::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:GPAssistMsg_t.msg)
}

// optional string url = 4;
void GPAssistMsg_t::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GPAssistMsg_t::url() const {
  // @@protoc_insertion_point(field_get:GPAssistMsg_t.url)
  return url_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GPAssistMsg_t::set_url(const ::std::string& value) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GPAssistMsg_t.url)
}
 void GPAssistMsg_t::set_url(const char* value) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GPAssistMsg_t.url)
}
 void GPAssistMsg_t::set_url(const char* value, size_t size) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GPAssistMsg_t.url)
}
 ::std::string* GPAssistMsg_t::mutable_url() {
  
  // @@protoc_insertion_point(field_mutable:GPAssistMsg_t.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GPAssistMsg_t::release_url() {
  // @@protoc_insertion_point(field_release:GPAssistMsg_t.url)
  
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GPAssistMsg_t::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    
  } else {
    
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:GPAssistMsg_t.url)
}

// optional .e_MsgState state = 5;
void GPAssistMsg_t::clear_state() {
  state_ = 0;
}
 ::e_MsgState GPAssistMsg_t::state() const {
  // @@protoc_insertion_point(field_get:GPAssistMsg_t.state)
  return static_cast< ::e_MsgState >(state_);
}
 void GPAssistMsg_t::set_state(::e_MsgState value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:GPAssistMsg_t.state)
}

// optional string title = 6;
void GPAssistMsg_t::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GPAssistMsg_t::title() const {
  // @@protoc_insertion_point(field_get:GPAssistMsg_t.title)
  return title_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GPAssistMsg_t::set_title(const ::std::string& value) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GPAssistMsg_t.title)
}
 void GPAssistMsg_t::set_title(const char* value) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GPAssistMsg_t.title)
}
 void GPAssistMsg_t::set_title(const char* value, size_t size) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GPAssistMsg_t.title)
}
 ::std::string* GPAssistMsg_t::mutable_title() {
  
  // @@protoc_insertion_point(field_mutable:GPAssistMsg_t.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GPAssistMsg_t::release_title() {
  // @@protoc_insertion_point(field_release:GPAssistMsg_t.title)
  
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GPAssistMsg_t::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    
  } else {
    
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:GPAssistMsg_t.title)
}

// optional string icon = 7;
void GPAssistMsg_t::clear_icon() {
  icon_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GPAssistMsg_t::icon() const {
  // @@protoc_insertion_point(field_get:GPAssistMsg_t.icon)
  return icon_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GPAssistMsg_t::set_icon(const ::std::string& value) {
  
  icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GPAssistMsg_t.icon)
}
 void GPAssistMsg_t::set_icon(const char* value) {
  
  icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GPAssistMsg_t.icon)
}
 void GPAssistMsg_t::set_icon(const char* value, size_t size) {
  
  icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GPAssistMsg_t.icon)
}
 ::std::string* GPAssistMsg_t::mutable_icon() {
  
  // @@protoc_insertion_point(field_mutable:GPAssistMsg_t.icon)
  return icon_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GPAssistMsg_t::release_icon() {
  // @@protoc_insertion_point(field_release:GPAssistMsg_t.icon)
  
  return icon_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GPAssistMsg_t::set_allocated_icon(::std::string* icon) {
  if (icon != NULL) {
    
  } else {
    
  }
  icon_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), icon);
  // @@protoc_insertion_point(field_set_allocated:GPAssistMsg_t.icon)
}

// optional .e_AssistMsgType msgType = 8;
void GPAssistMsg_t::clear_msgtype() {
  msgtype_ = 0;
}
 ::e_AssistMsgType GPAssistMsg_t::msgtype() const {
  // @@protoc_insertion_point(field_get:GPAssistMsg_t.msgType)
  return static_cast< ::e_AssistMsgType >(msgtype_);
}
 void GPAssistMsg_t::set_msgtype(::e_AssistMsgType value) {
  
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:GPAssistMsg_t.msgType)
}

// optional uint32 authID = 9;
void GPAssistMsg_t::clear_authid() {
  authid_ = 0u;
}
 ::google::protobuf::uint32 GPAssistMsg_t::authid() const {
  // @@protoc_insertion_point(field_get:GPAssistMsg_t.authID)
  return authid_;
}
 void GPAssistMsg_t::set_authid(::google::protobuf::uint32 value) {
  
  authid_ = value;
  // @@protoc_insertion_point(field_set:GPAssistMsg_t.authID)
}

// optional string action = 10;
void GPAssistMsg_t::clear_action() {
  action_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GPAssistMsg_t::action() const {
  // @@protoc_insertion_point(field_get:GPAssistMsg_t.action)
  return action_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GPAssistMsg_t::set_action(const ::std::string& value) {
  
  action_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GPAssistMsg_t.action)
}
 void GPAssistMsg_t::set_action(const char* value) {
  
  action_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GPAssistMsg_t.action)
}
 void GPAssistMsg_t::set_action(const char* value, size_t size) {
  
  action_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GPAssistMsg_t.action)
}
 ::std::string* GPAssistMsg_t::mutable_action() {
  
  // @@protoc_insertion_point(field_mutable:GPAssistMsg_t.action)
  return action_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GPAssistMsg_t::release_action() {
  // @@protoc_insertion_point(field_release:GPAssistMsg_t.action)
  
  return action_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GPAssistMsg_t::set_allocated_action(::std::string* action) {
  if (action != NULL) {
    
  } else {
    
  }
  action_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), action);
  // @@protoc_insertion_point(field_set_allocated:GPAssistMsg_t.action)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDUnreadAssistMsgReq::kUseridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDUnreadAssistMsgReq::CMDUnreadAssistMsgReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDUnreadAssistMsgReq)
}

void CMDUnreadAssistMsgReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDUnreadAssistMsgReq::CMDUnreadAssistMsgReq(const CMDUnreadAssistMsgReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDUnreadAssistMsgReq)
}

void CMDUnreadAssistMsgReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  userid_ = 0u;
}

CMDUnreadAssistMsgReq::~CMDUnreadAssistMsgReq() {
  // @@protoc_insertion_point(destructor:CMDUnreadAssistMsgReq)
  SharedDtor();
}

void CMDUnreadAssistMsgReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMDUnreadAssistMsgReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDUnreadAssistMsgReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDUnreadAssistMsgReq_descriptor_;
}

const CMDUnreadAssistMsgReq& CMDUnreadAssistMsgReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ChatSvr_2eproto();
  return *default_instance_;
}

CMDUnreadAssistMsgReq* CMDUnreadAssistMsgReq::default_instance_ = NULL;

CMDUnreadAssistMsgReq* CMDUnreadAssistMsgReq::New(::google::protobuf::Arena* arena) const {
  CMDUnreadAssistMsgReq* n = new CMDUnreadAssistMsgReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDUnreadAssistMsgReq::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDUnreadAssistMsgReq)
  userid_ = 0u;
}

bool CMDUnreadAssistMsgReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDUnreadAssistMsgReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 userid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDUnreadAssistMsgReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDUnreadAssistMsgReq)
  return false;
#undef DO_
}

void CMDUnreadAssistMsgReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDUnreadAssistMsgReq)
  // optional uint32 userid = 1;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->userid(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDUnreadAssistMsgReq)
}

::google::protobuf::uint8* CMDUnreadAssistMsgReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDUnreadAssistMsgReq)
  // optional uint32 userid = 1;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->userid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDUnreadAssistMsgReq)
  return target;
}

int CMDUnreadAssistMsgReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDUnreadAssistMsgReq)
  int total_size = 0;

  // optional uint32 userid = 1;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDUnreadAssistMsgReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDUnreadAssistMsgReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDUnreadAssistMsgReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDUnreadAssistMsgReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDUnreadAssistMsgReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDUnreadAssistMsgReq)
    MergeFrom(*source);
  }
}

void CMDUnreadAssistMsgReq::MergeFrom(const CMDUnreadAssistMsgReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDUnreadAssistMsgReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
}

void CMDUnreadAssistMsgReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDUnreadAssistMsgReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDUnreadAssistMsgReq::CopyFrom(const CMDUnreadAssistMsgReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDUnreadAssistMsgReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDUnreadAssistMsgReq::IsInitialized() const {

  return true;
}

void CMDUnreadAssistMsgReq::Swap(CMDUnreadAssistMsgReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDUnreadAssistMsgReq::InternalSwap(CMDUnreadAssistMsgReq* other) {
  std::swap(userid_, other->userid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDUnreadAssistMsgReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDUnreadAssistMsgReq_descriptor_;
  metadata.reflection = CMDUnreadAssistMsgReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDUnreadAssistMsgReq

// optional uint32 userid = 1;
void CMDUnreadAssistMsgReq::clear_userid() {
  userid_ = 0u;
}
 ::google::protobuf::uint32 CMDUnreadAssistMsgReq::userid() const {
  // @@protoc_insertion_point(field_get:CMDUnreadAssistMsgReq.userid)
  return userid_;
}
 void CMDUnreadAssistMsgReq::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDUnreadAssistMsgReq.userid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDUnreadAssistMsgNotify::kUnreadCountFieldNumber;
const int CMDUnreadAssistMsgNotify::kMsgsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDUnreadAssistMsgNotify::CMDUnreadAssistMsgNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDUnreadAssistMsgNotify)
}

void CMDUnreadAssistMsgNotify::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDUnreadAssistMsgNotify::CMDUnreadAssistMsgNotify(const CMDUnreadAssistMsgNotify& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDUnreadAssistMsgNotify)
}

void CMDUnreadAssistMsgNotify::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  unreadcount_ = 0u;
}

CMDUnreadAssistMsgNotify::~CMDUnreadAssistMsgNotify() {
  // @@protoc_insertion_point(destructor:CMDUnreadAssistMsgNotify)
  SharedDtor();
}

void CMDUnreadAssistMsgNotify::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMDUnreadAssistMsgNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDUnreadAssistMsgNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDUnreadAssistMsgNotify_descriptor_;
}

const CMDUnreadAssistMsgNotify& CMDUnreadAssistMsgNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ChatSvr_2eproto();
  return *default_instance_;
}

CMDUnreadAssistMsgNotify* CMDUnreadAssistMsgNotify::default_instance_ = NULL;

CMDUnreadAssistMsgNotify* CMDUnreadAssistMsgNotify::New(::google::protobuf::Arena* arena) const {
  CMDUnreadAssistMsgNotify* n = new CMDUnreadAssistMsgNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDUnreadAssistMsgNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDUnreadAssistMsgNotify)
  unreadcount_ = 0u;
  msgs_.Clear();
}

bool CMDUnreadAssistMsgNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDUnreadAssistMsgNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 unreadCount = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &unreadcount_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_msgs;
        break;
      }

      // repeated .GPAssistMsg_t msgs = 2;
      case 2: {
        if (tag == 18) {
         parse_msgs:
          DO_(input->IncrementRecursionDepth());
         parse_loop_msgs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_msgs()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_msgs;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDUnreadAssistMsgNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDUnreadAssistMsgNotify)
  return false;
#undef DO_
}

void CMDUnreadAssistMsgNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDUnreadAssistMsgNotify)
  // optional uint32 unreadCount = 1;
  if (this->unreadcount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->unreadcount(), output);
  }

  // repeated .GPAssistMsg_t msgs = 2;
  for (unsigned int i = 0, n = this->msgs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->msgs(i), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDUnreadAssistMsgNotify)
}

::google::protobuf::uint8* CMDUnreadAssistMsgNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDUnreadAssistMsgNotify)
  // optional uint32 unreadCount = 1;
  if (this->unreadcount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->unreadcount(), target);
  }

  // repeated .GPAssistMsg_t msgs = 2;
  for (unsigned int i = 0, n = this->msgs_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->msgs(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDUnreadAssistMsgNotify)
  return target;
}

int CMDUnreadAssistMsgNotify::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDUnreadAssistMsgNotify)
  int total_size = 0;

  // optional uint32 unreadCount = 1;
  if (this->unreadcount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->unreadcount());
  }

  // repeated .GPAssistMsg_t msgs = 2;
  total_size += 1 * this->msgs_size();
  for (int i = 0; i < this->msgs_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->msgs(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDUnreadAssistMsgNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDUnreadAssistMsgNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDUnreadAssistMsgNotify* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDUnreadAssistMsgNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDUnreadAssistMsgNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDUnreadAssistMsgNotify)
    MergeFrom(*source);
  }
}

void CMDUnreadAssistMsgNotify::MergeFrom(const CMDUnreadAssistMsgNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDUnreadAssistMsgNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  msgs_.MergeFrom(from.msgs_);
  if (from.unreadcount() != 0) {
    set_unreadcount(from.unreadcount());
  }
}

void CMDUnreadAssistMsgNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDUnreadAssistMsgNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDUnreadAssistMsgNotify::CopyFrom(const CMDUnreadAssistMsgNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDUnreadAssistMsgNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDUnreadAssistMsgNotify::IsInitialized() const {

  return true;
}

void CMDUnreadAssistMsgNotify::Swap(CMDUnreadAssistMsgNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDUnreadAssistMsgNotify::InternalSwap(CMDUnreadAssistMsgNotify* other) {
  std::swap(unreadcount_, other->unreadcount_);
  msgs_.UnsafeArenaSwap(&other->msgs_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDUnreadAssistMsgNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDUnreadAssistMsgNotify_descriptor_;
  metadata.reflection = CMDUnreadAssistMsgNotify_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDUnreadAssistMsgNotify

// optional uint32 unreadCount = 1;
void CMDUnreadAssistMsgNotify::clear_unreadcount() {
  unreadcount_ = 0u;
}
 ::google::protobuf::uint32 CMDUnreadAssistMsgNotify::unreadcount() const {
  // @@protoc_insertion_point(field_get:CMDUnreadAssistMsgNotify.unreadCount)
  return unreadcount_;
}
 void CMDUnreadAssistMsgNotify::set_unreadcount(::google::protobuf::uint32 value) {
  
  unreadcount_ = value;
  // @@protoc_insertion_point(field_set:CMDUnreadAssistMsgNotify.unreadCount)
}

// repeated .GPAssistMsg_t msgs = 2;
int CMDUnreadAssistMsgNotify::msgs_size() const {
  return msgs_.size();
}
void CMDUnreadAssistMsgNotify::clear_msgs() {
  msgs_.Clear();
}
const ::GPAssistMsg_t& CMDUnreadAssistMsgNotify::msgs(int index) const {
  // @@protoc_insertion_point(field_get:CMDUnreadAssistMsgNotify.msgs)
  return msgs_.Get(index);
}
::GPAssistMsg_t* CMDUnreadAssistMsgNotify::mutable_msgs(int index) {
  // @@protoc_insertion_point(field_mutable:CMDUnreadAssistMsgNotify.msgs)
  return msgs_.Mutable(index);
}
::GPAssistMsg_t* CMDUnreadAssistMsgNotify::add_msgs() {
  // @@protoc_insertion_point(field_add:CMDUnreadAssistMsgNotify.msgs)
  return msgs_.Add();
}
::google::protobuf::RepeatedPtrField< ::GPAssistMsg_t >*
CMDUnreadAssistMsgNotify::mutable_msgs() {
  // @@protoc_insertion_point(field_mutable_list:CMDUnreadAssistMsgNotify.msgs)
  return &msgs_;
}
const ::google::protobuf::RepeatedPtrField< ::GPAssistMsg_t >&
CMDUnreadAssistMsgNotify::msgs() const {
  // @@protoc_insertion_point(field_list:CMDUnreadAssistMsgNotify.msgs)
  return msgs_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDGroupAssistMsgNotify::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDGroupAssistMsgNotify::CMDGroupAssistMsgNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDGroupAssistMsgNotify)
}

void CMDGroupAssistMsgNotify::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  msg_ = const_cast< ::GPAssistMsg_t*>(&::GPAssistMsg_t::default_instance());
}

CMDGroupAssistMsgNotify::CMDGroupAssistMsgNotify(const CMDGroupAssistMsgNotify& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDGroupAssistMsgNotify)
}

void CMDGroupAssistMsgNotify::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  msg_ = NULL;
}

CMDGroupAssistMsgNotify::~CMDGroupAssistMsgNotify() {
  // @@protoc_insertion_point(destructor:CMDGroupAssistMsgNotify)
  SharedDtor();
}

void CMDGroupAssistMsgNotify::SharedDtor() {
  if (this != default_instance_) {
    delete msg_;
  }
}

void CMDGroupAssistMsgNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDGroupAssistMsgNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDGroupAssistMsgNotify_descriptor_;
}

const CMDGroupAssistMsgNotify& CMDGroupAssistMsgNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ChatSvr_2eproto();
  return *default_instance_;
}

CMDGroupAssistMsgNotify* CMDGroupAssistMsgNotify::default_instance_ = NULL;

CMDGroupAssistMsgNotify* CMDGroupAssistMsgNotify::New(::google::protobuf::Arena* arena) const {
  CMDGroupAssistMsgNotify* n = new CMDGroupAssistMsgNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDGroupAssistMsgNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDGroupAssistMsgNotify)
  if (GetArenaNoVirtual() == NULL && msg_ != NULL) delete msg_;
  msg_ = NULL;
}

bool CMDGroupAssistMsgNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDGroupAssistMsgNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .GPAssistMsg_t msg = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msg()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDGroupAssistMsgNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDGroupAssistMsgNotify)
  return false;
#undef DO_
}

void CMDGroupAssistMsgNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDGroupAssistMsgNotify)
  // optional .GPAssistMsg_t msg = 1;
  if (this->has_msg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->msg_, output);
  }

  // @@protoc_insertion_point(serialize_end:CMDGroupAssistMsgNotify)
}

::google::protobuf::uint8* CMDGroupAssistMsgNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDGroupAssistMsgNotify)
  // optional .GPAssistMsg_t msg = 1;
  if (this->has_msg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->msg_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDGroupAssistMsgNotify)
  return target;
}

int CMDGroupAssistMsgNotify::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDGroupAssistMsgNotify)
  int total_size = 0;

  // optional .GPAssistMsg_t msg = 1;
  if (this->has_msg()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msg_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDGroupAssistMsgNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDGroupAssistMsgNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDGroupAssistMsgNotify* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDGroupAssistMsgNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDGroupAssistMsgNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDGroupAssistMsgNotify)
    MergeFrom(*source);
  }
}

void CMDGroupAssistMsgNotify::MergeFrom(const CMDGroupAssistMsgNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDGroupAssistMsgNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.has_msg()) {
    mutable_msg()->::GPAssistMsg_t::MergeFrom(from.msg());
  }
}

void CMDGroupAssistMsgNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDGroupAssistMsgNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDGroupAssistMsgNotify::CopyFrom(const CMDGroupAssistMsgNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDGroupAssistMsgNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDGroupAssistMsgNotify::IsInitialized() const {

  return true;
}

void CMDGroupAssistMsgNotify::Swap(CMDGroupAssistMsgNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDGroupAssistMsgNotify::InternalSwap(CMDGroupAssistMsgNotify* other) {
  std::swap(msg_, other->msg_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDGroupAssistMsgNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDGroupAssistMsgNotify_descriptor_;
  metadata.reflection = CMDGroupAssistMsgNotify_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDGroupAssistMsgNotify

// optional .GPAssistMsg_t msg = 1;
bool CMDGroupAssistMsgNotify::has_msg() const {
  return !_is_default_instance_ && msg_ != NULL;
}
void CMDGroupAssistMsgNotify::clear_msg() {
  if (GetArenaNoVirtual() == NULL && msg_ != NULL) delete msg_;
  msg_ = NULL;
}
const ::GPAssistMsg_t& CMDGroupAssistMsgNotify::msg() const {
  // @@protoc_insertion_point(field_get:CMDGroupAssistMsgNotify.msg)
  return msg_ != NULL ? *msg_ : *default_instance_->msg_;
}
::GPAssistMsg_t* CMDGroupAssistMsgNotify::mutable_msg() {
  
  if (msg_ == NULL) {
    msg_ = new ::GPAssistMsg_t;
  }
  // @@protoc_insertion_point(field_mutable:CMDGroupAssistMsgNotify.msg)
  return msg_;
}
::GPAssistMsg_t* CMDGroupAssistMsgNotify::release_msg() {
  // @@protoc_insertion_point(field_release:CMDGroupAssistMsgNotify.msg)
  
  ::GPAssistMsg_t* temp = msg_;
  msg_ = NULL;
  return temp;
}
void CMDGroupAssistMsgNotify::set_allocated_msg(::GPAssistMsg_t* msg) {
  delete msg_;
  msg_ = msg;
  if (msg) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDGroupAssistMsgNotify.msg)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDAssistMsgNotifyRecv::kRcvUIdFieldNumber;
const int CMDAssistMsgNotifyRecv::kMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDAssistMsgNotifyRecv::CMDAssistMsgNotifyRecv()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDAssistMsgNotifyRecv)
}

void CMDAssistMsgNotifyRecv::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDAssistMsgNotifyRecv::CMDAssistMsgNotifyRecv(const CMDAssistMsgNotifyRecv& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDAssistMsgNotifyRecv)
}

void CMDAssistMsgNotifyRecv::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  rcvuid_ = 0u;
  msgid_ = 0u;
}

CMDAssistMsgNotifyRecv::~CMDAssistMsgNotifyRecv() {
  // @@protoc_insertion_point(destructor:CMDAssistMsgNotifyRecv)
  SharedDtor();
}

void CMDAssistMsgNotifyRecv::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMDAssistMsgNotifyRecv::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDAssistMsgNotifyRecv::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDAssistMsgNotifyRecv_descriptor_;
}

const CMDAssistMsgNotifyRecv& CMDAssistMsgNotifyRecv::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ChatSvr_2eproto();
  return *default_instance_;
}

CMDAssistMsgNotifyRecv* CMDAssistMsgNotifyRecv::default_instance_ = NULL;

CMDAssistMsgNotifyRecv* CMDAssistMsgNotifyRecv::New(::google::protobuf::Arena* arena) const {
  CMDAssistMsgNotifyRecv* n = new CMDAssistMsgNotifyRecv;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDAssistMsgNotifyRecv::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDAssistMsgNotifyRecv)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDAssistMsgNotifyRecv, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDAssistMsgNotifyRecv*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(rcvuid_, msgid_);

#undef ZR_HELPER_
#undef ZR_

}

bool CMDAssistMsgNotifyRecv::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDAssistMsgNotifyRecv)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 rcvUId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rcvuid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_msgId;
        break;
      }

      // optional uint32 msgId = 2;
      case 2: {
        if (tag == 16) {
         parse_msgId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msgid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDAssistMsgNotifyRecv)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDAssistMsgNotifyRecv)
  return false;
#undef DO_
}

void CMDAssistMsgNotifyRecv::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDAssistMsgNotifyRecv)
  // optional uint32 rcvUId = 1;
  if (this->rcvuid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->rcvuid(), output);
  }

  // optional uint32 msgId = 2;
  if (this->msgid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->msgid(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDAssistMsgNotifyRecv)
}

::google::protobuf::uint8* CMDAssistMsgNotifyRecv::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDAssistMsgNotifyRecv)
  // optional uint32 rcvUId = 1;
  if (this->rcvuid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->rcvuid(), target);
  }

  // optional uint32 msgId = 2;
  if (this->msgid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->msgid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDAssistMsgNotifyRecv)
  return target;
}

int CMDAssistMsgNotifyRecv::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDAssistMsgNotifyRecv)
  int total_size = 0;

  // optional uint32 rcvUId = 1;
  if (this->rcvuid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->rcvuid());
  }

  // optional uint32 msgId = 2;
  if (this->msgid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->msgid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDAssistMsgNotifyRecv::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDAssistMsgNotifyRecv)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDAssistMsgNotifyRecv* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDAssistMsgNotifyRecv>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDAssistMsgNotifyRecv)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDAssistMsgNotifyRecv)
    MergeFrom(*source);
  }
}

void CMDAssistMsgNotifyRecv::MergeFrom(const CMDAssistMsgNotifyRecv& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDAssistMsgNotifyRecv)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.rcvuid() != 0) {
    set_rcvuid(from.rcvuid());
  }
  if (from.msgid() != 0) {
    set_msgid(from.msgid());
  }
}

void CMDAssistMsgNotifyRecv::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDAssistMsgNotifyRecv)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDAssistMsgNotifyRecv::CopyFrom(const CMDAssistMsgNotifyRecv& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDAssistMsgNotifyRecv)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDAssistMsgNotifyRecv::IsInitialized() const {

  return true;
}

void CMDAssistMsgNotifyRecv::Swap(CMDAssistMsgNotifyRecv* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDAssistMsgNotifyRecv::InternalSwap(CMDAssistMsgNotifyRecv* other) {
  std::swap(rcvuid_, other->rcvuid_);
  std::swap(msgid_, other->msgid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDAssistMsgNotifyRecv::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDAssistMsgNotifyRecv_descriptor_;
  metadata.reflection = CMDAssistMsgNotifyRecv_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDAssistMsgNotifyRecv

// optional uint32 rcvUId = 1;
void CMDAssistMsgNotifyRecv::clear_rcvuid() {
  rcvuid_ = 0u;
}
 ::google::protobuf::uint32 CMDAssistMsgNotifyRecv::rcvuid() const {
  // @@protoc_insertion_point(field_get:CMDAssistMsgNotifyRecv.rcvUId)
  return rcvuid_;
}
 void CMDAssistMsgNotifyRecv::set_rcvuid(::google::protobuf::uint32 value) {
  
  rcvuid_ = value;
  // @@protoc_insertion_point(field_set:CMDAssistMsgNotifyRecv.rcvUId)
}

// optional uint32 msgId = 2;
void CMDAssistMsgNotifyRecv::clear_msgid() {
  msgid_ = 0u;
}
 ::google::protobuf::uint32 CMDAssistMsgNotifyRecv::msgid() const {
  // @@protoc_insertion_point(field_get:CMDAssistMsgNotifyRecv.msgId)
  return msgid_;
}
 void CMDAssistMsgNotifyRecv::set_msgid(::google::protobuf::uint32 value) {
  
  msgid_ = value;
  // @@protoc_insertion_point(field_set:CMDAssistMsgNotifyRecv.msgId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDGroupAssistMsgStateReq::kUserIDFieldNumber;
const int CMDGroupAssistMsgStateReq::kMsgIdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDGroupAssistMsgStateReq::CMDGroupAssistMsgStateReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDGroupAssistMsgStateReq)
}

void CMDGroupAssistMsgStateReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDGroupAssistMsgStateReq::CMDGroupAssistMsgStateReq(const CMDGroupAssistMsgStateReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDGroupAssistMsgStateReq)
}

void CMDGroupAssistMsgStateReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  userid_ = 0u;
}

CMDGroupAssistMsgStateReq::~CMDGroupAssistMsgStateReq() {
  // @@protoc_insertion_point(destructor:CMDGroupAssistMsgStateReq)
  SharedDtor();
}

void CMDGroupAssistMsgStateReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMDGroupAssistMsgStateReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDGroupAssistMsgStateReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDGroupAssistMsgStateReq_descriptor_;
}

const CMDGroupAssistMsgStateReq& CMDGroupAssistMsgStateReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ChatSvr_2eproto();
  return *default_instance_;
}

CMDGroupAssistMsgStateReq* CMDGroupAssistMsgStateReq::default_instance_ = NULL;

CMDGroupAssistMsgStateReq* CMDGroupAssistMsgStateReq::New(::google::protobuf::Arena* arena) const {
  CMDGroupAssistMsgStateReq* n = new CMDGroupAssistMsgStateReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDGroupAssistMsgStateReq::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDGroupAssistMsgStateReq)
  userid_ = 0u;
  msgids_.Clear();
}

bool CMDGroupAssistMsgStateReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDGroupAssistMsgStateReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 userID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_msgIds;
        break;
      }

      // repeated uint32 msgIds = 2;
      case 2: {
        if (tag == 18) {
         parse_msgIds:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_msgids())));
        } else if (tag == 16) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18, input, this->mutable_msgids())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDGroupAssistMsgStateReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDGroupAssistMsgStateReq)
  return false;
#undef DO_
}

void CMDGroupAssistMsgStateReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDGroupAssistMsgStateReq)
  // optional uint32 userID = 1;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->userid(), output);
  }

  // repeated uint32 msgIds = 2;
  if (this->msgids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_msgids_cached_byte_size_);
  }
  for (int i = 0; i < this->msgids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->msgids(i), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDGroupAssistMsgStateReq)
}

::google::protobuf::uint8* CMDGroupAssistMsgStateReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDGroupAssistMsgStateReq)
  // optional uint32 userID = 1;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->userid(), target);
  }

  // repeated uint32 msgIds = 2;
  if (this->msgids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _msgids_cached_byte_size_, target);
  }
  for (int i = 0; i < this->msgids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->msgids(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDGroupAssistMsgStateReq)
  return target;
}

int CMDGroupAssistMsgStateReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDGroupAssistMsgStateReq)
  int total_size = 0;

  // optional uint32 userID = 1;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userid());
  }

  // repeated uint32 msgIds = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->msgids_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->msgids(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _msgids_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDGroupAssistMsgStateReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDGroupAssistMsgStateReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDGroupAssistMsgStateReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDGroupAssistMsgStateReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDGroupAssistMsgStateReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDGroupAssistMsgStateReq)
    MergeFrom(*source);
  }
}

void CMDGroupAssistMsgStateReq::MergeFrom(const CMDGroupAssistMsgStateReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDGroupAssistMsgStateReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  msgids_.MergeFrom(from.msgids_);
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
}

void CMDGroupAssistMsgStateReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDGroupAssistMsgStateReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDGroupAssistMsgStateReq::CopyFrom(const CMDGroupAssistMsgStateReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDGroupAssistMsgStateReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDGroupAssistMsgStateReq::IsInitialized() const {

  return true;
}

void CMDGroupAssistMsgStateReq::Swap(CMDGroupAssistMsgStateReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDGroupAssistMsgStateReq::InternalSwap(CMDGroupAssistMsgStateReq* other) {
  std::swap(userid_, other->userid_);
  msgids_.UnsafeArenaSwap(&other->msgids_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDGroupAssistMsgStateReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDGroupAssistMsgStateReq_descriptor_;
  metadata.reflection = CMDGroupAssistMsgStateReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDGroupAssistMsgStateReq

// optional uint32 userID = 1;
void CMDGroupAssistMsgStateReq::clear_userid() {
  userid_ = 0u;
}
 ::google::protobuf::uint32 CMDGroupAssistMsgStateReq::userid() const {
  // @@protoc_insertion_point(field_get:CMDGroupAssistMsgStateReq.userID)
  return userid_;
}
 void CMDGroupAssistMsgStateReq::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDGroupAssistMsgStateReq.userID)
}

// repeated uint32 msgIds = 2;
int CMDGroupAssistMsgStateReq::msgids_size() const {
  return msgids_.size();
}
void CMDGroupAssistMsgStateReq::clear_msgids() {
  msgids_.Clear();
}
 ::google::protobuf::uint32 CMDGroupAssistMsgStateReq::msgids(int index) const {
  // @@protoc_insertion_point(field_get:CMDGroupAssistMsgStateReq.msgIds)
  return msgids_.Get(index);
}
 void CMDGroupAssistMsgStateReq::set_msgids(int index, ::google::protobuf::uint32 value) {
  msgids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMDGroupAssistMsgStateReq.msgIds)
}
 void CMDGroupAssistMsgStateReq::add_msgids(::google::protobuf::uint32 value) {
  msgids_.Add(value);
  // @@protoc_insertion_point(field_add:CMDGroupAssistMsgStateReq.msgIds)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMDGroupAssistMsgStateReq::msgids() const {
  // @@protoc_insertion_point(field_list:CMDGroupAssistMsgStateReq.msgIds)
  return msgids_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMDGroupAssistMsgStateReq::mutable_msgids() {
  // @@protoc_insertion_point(field_mutable_list:CMDGroupAssistMsgStateReq.msgIds)
  return &msgids_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgState_t::kMsgIdFieldNumber;
const int MsgState_t::kStateFieldNumber;
const int MsgState_t::kMsgTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgState_t::MsgState_t()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgState_t)
}

void MsgState_t::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MsgState_t::MsgState_t(const MsgState_t& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgState_t)
}

void MsgState_t::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  msgid_ = 0u;
  state_ = 0;
  msgtype_ = 0;
}

MsgState_t::~MsgState_t() {
  // @@protoc_insertion_point(destructor:MsgState_t)
  SharedDtor();
}

void MsgState_t::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgState_t::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgState_t::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgState_t_descriptor_;
}

const MsgState_t& MsgState_t::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ChatSvr_2eproto();
  return *default_instance_;
}

MsgState_t* MsgState_t::default_instance_ = NULL;

MsgState_t* MsgState_t::New(::google::protobuf::Arena* arena) const {
  MsgState_t* n = new MsgState_t;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgState_t::Clear() {
// @@protoc_insertion_point(message_clear_start:MsgState_t)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(MsgState_t, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<MsgState_t*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(msgid_, msgtype_);

#undef ZR_HELPER_
#undef ZR_

}

bool MsgState_t::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgState_t)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 msgId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msgid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_state;
        break;
      }

      // optional .e_MsgState state = 2;
      case 2: {
        if (tag == 16) {
         parse_state:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_state(static_cast< ::e_MsgState >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_msgType;
        break;
      }

      // optional .e_MsgType msgType = 3;
      case 3: {
        if (tag == 24) {
         parse_msgType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_msgtype(static_cast< ::e_MsgType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgState_t)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgState_t)
  return false;
#undef DO_
}

void MsgState_t::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgState_t)
  // optional uint32 msgId = 1;
  if (this->msgid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->msgid(), output);
  }

  // optional .e_MsgState state = 2;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->state(), output);
  }

  // optional .e_MsgType msgType = 3;
  if (this->msgtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->msgtype(), output);
  }

  // @@protoc_insertion_point(serialize_end:MsgState_t)
}

::google::protobuf::uint8* MsgState_t::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgState_t)
  // optional uint32 msgId = 1;
  if (this->msgid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->msgid(), target);
  }

  // optional .e_MsgState state = 2;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->state(), target);
  }

  // optional .e_MsgType msgType = 3;
  if (this->msgtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->msgtype(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:MsgState_t)
  return target;
}

int MsgState_t::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:MsgState_t)
  int total_size = 0;

  // optional uint32 msgId = 1;
  if (this->msgid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->msgid());
  }

  // optional .e_MsgState state = 2;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->state());
  }

  // optional .e_MsgType msgType = 3;
  if (this->msgtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgState_t::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MsgState_t)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MsgState_t* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgState_t>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MsgState_t)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MsgState_t)
    MergeFrom(*source);
  }
}

void MsgState_t::MergeFrom(const MsgState_t& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MsgState_t)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.msgid() != 0) {
    set_msgid(from.msgid());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
  if (from.msgtype() != 0) {
    set_msgtype(from.msgtype());
  }
}

void MsgState_t::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MsgState_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgState_t::CopyFrom(const MsgState_t& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MsgState_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgState_t::IsInitialized() const {

  return true;
}

void MsgState_t::Swap(MsgState_t* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgState_t::InternalSwap(MsgState_t* other) {
  std::swap(msgid_, other->msgid_);
  std::swap(state_, other->state_);
  std::swap(msgtype_, other->msgtype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgState_t::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgState_t_descriptor_;
  metadata.reflection = MsgState_t_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgState_t

// optional uint32 msgId = 1;
void MsgState_t::clear_msgid() {
  msgid_ = 0u;
}
 ::google::protobuf::uint32 MsgState_t::msgid() const {
  // @@protoc_insertion_point(field_get:MsgState_t.msgId)
  return msgid_;
}
 void MsgState_t::set_msgid(::google::protobuf::uint32 value) {
  
  msgid_ = value;
  // @@protoc_insertion_point(field_set:MsgState_t.msgId)
}

// optional .e_MsgState state = 2;
void MsgState_t::clear_state() {
  state_ = 0;
}
 ::e_MsgState MsgState_t::state() const {
  // @@protoc_insertion_point(field_get:MsgState_t.state)
  return static_cast< ::e_MsgState >(state_);
}
 void MsgState_t::set_state(::e_MsgState value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:MsgState_t.state)
}

// optional .e_MsgType msgType = 3;
void MsgState_t::clear_msgtype() {
  msgtype_ = 0;
}
 ::e_MsgType MsgState_t::msgtype() const {
  // @@protoc_insertion_point(field_get:MsgState_t.msgType)
  return static_cast< ::e_MsgType >(msgtype_);
}
 void MsgState_t::set_msgtype(::e_MsgType value) {
  
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:MsgState_t.msgType)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDGroupAssistMsgStateResp::kUserIDFieldNumber;
const int CMDGroupAssistMsgStateResp::kMsgIdStatesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDGroupAssistMsgStateResp::CMDGroupAssistMsgStateResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDGroupAssistMsgStateResp)
}

void CMDGroupAssistMsgStateResp::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDGroupAssistMsgStateResp::CMDGroupAssistMsgStateResp(const CMDGroupAssistMsgStateResp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDGroupAssistMsgStateResp)
}

void CMDGroupAssistMsgStateResp::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  userid_ = 0u;
}

CMDGroupAssistMsgStateResp::~CMDGroupAssistMsgStateResp() {
  // @@protoc_insertion_point(destructor:CMDGroupAssistMsgStateResp)
  SharedDtor();
}

void CMDGroupAssistMsgStateResp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMDGroupAssistMsgStateResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDGroupAssistMsgStateResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDGroupAssistMsgStateResp_descriptor_;
}

const CMDGroupAssistMsgStateResp& CMDGroupAssistMsgStateResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ChatSvr_2eproto();
  return *default_instance_;
}

CMDGroupAssistMsgStateResp* CMDGroupAssistMsgStateResp::default_instance_ = NULL;

CMDGroupAssistMsgStateResp* CMDGroupAssistMsgStateResp::New(::google::protobuf::Arena* arena) const {
  CMDGroupAssistMsgStateResp* n = new CMDGroupAssistMsgStateResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDGroupAssistMsgStateResp::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDGroupAssistMsgStateResp)
  userid_ = 0u;
  msgidstates_.Clear();
}

bool CMDGroupAssistMsgStateResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDGroupAssistMsgStateResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 userID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_msgIdStates;
        break;
      }

      // repeated .MsgState_t msgIdStates = 2;
      case 2: {
        if (tag == 18) {
         parse_msgIdStates:
          DO_(input->IncrementRecursionDepth());
         parse_loop_msgIdStates:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_msgidstates()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_msgIdStates;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDGroupAssistMsgStateResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDGroupAssistMsgStateResp)
  return false;
#undef DO_
}

void CMDGroupAssistMsgStateResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDGroupAssistMsgStateResp)
  // optional uint32 userID = 1;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->userid(), output);
  }

  // repeated .MsgState_t msgIdStates = 2;
  for (unsigned int i = 0, n = this->msgidstates_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->msgidstates(i), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDGroupAssistMsgStateResp)
}

::google::protobuf::uint8* CMDGroupAssistMsgStateResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDGroupAssistMsgStateResp)
  // optional uint32 userID = 1;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->userid(), target);
  }

  // repeated .MsgState_t msgIdStates = 2;
  for (unsigned int i = 0, n = this->msgidstates_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->msgidstates(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDGroupAssistMsgStateResp)
  return target;
}

int CMDGroupAssistMsgStateResp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDGroupAssistMsgStateResp)
  int total_size = 0;

  // optional uint32 userID = 1;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userid());
  }

  // repeated .MsgState_t msgIdStates = 2;
  total_size += 1 * this->msgidstates_size();
  for (int i = 0; i < this->msgidstates_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->msgidstates(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDGroupAssistMsgStateResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDGroupAssistMsgStateResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDGroupAssistMsgStateResp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDGroupAssistMsgStateResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDGroupAssistMsgStateResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDGroupAssistMsgStateResp)
    MergeFrom(*source);
  }
}

void CMDGroupAssistMsgStateResp::MergeFrom(const CMDGroupAssistMsgStateResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDGroupAssistMsgStateResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  msgidstates_.MergeFrom(from.msgidstates_);
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
}

void CMDGroupAssistMsgStateResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDGroupAssistMsgStateResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDGroupAssistMsgStateResp::CopyFrom(const CMDGroupAssistMsgStateResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDGroupAssistMsgStateResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDGroupAssistMsgStateResp::IsInitialized() const {

  return true;
}

void CMDGroupAssistMsgStateResp::Swap(CMDGroupAssistMsgStateResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDGroupAssistMsgStateResp::InternalSwap(CMDGroupAssistMsgStateResp* other) {
  std::swap(userid_, other->userid_);
  msgidstates_.UnsafeArenaSwap(&other->msgidstates_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDGroupAssistMsgStateResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDGroupAssistMsgStateResp_descriptor_;
  metadata.reflection = CMDGroupAssistMsgStateResp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDGroupAssistMsgStateResp

// optional uint32 userID = 1;
void CMDGroupAssistMsgStateResp::clear_userid() {
  userid_ = 0u;
}
 ::google::protobuf::uint32 CMDGroupAssistMsgStateResp::userid() const {
  // @@protoc_insertion_point(field_get:CMDGroupAssistMsgStateResp.userID)
  return userid_;
}
 void CMDGroupAssistMsgStateResp::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDGroupAssistMsgStateResp.userID)
}

// repeated .MsgState_t msgIdStates = 2;
int CMDGroupAssistMsgStateResp::msgidstates_size() const {
  return msgidstates_.size();
}
void CMDGroupAssistMsgStateResp::clear_msgidstates() {
  msgidstates_.Clear();
}
const ::MsgState_t& CMDGroupAssistMsgStateResp::msgidstates(int index) const {
  // @@protoc_insertion_point(field_get:CMDGroupAssistMsgStateResp.msgIdStates)
  return msgidstates_.Get(index);
}
::MsgState_t* CMDGroupAssistMsgStateResp::mutable_msgidstates(int index) {
  // @@protoc_insertion_point(field_mutable:CMDGroupAssistMsgStateResp.msgIdStates)
  return msgidstates_.Mutable(index);
}
::MsgState_t* CMDGroupAssistMsgStateResp::add_msgidstates() {
  // @@protoc_insertion_point(field_add:CMDGroupAssistMsgStateResp.msgIdStates)
  return msgidstates_.Add();
}
::google::protobuf::RepeatedPtrField< ::MsgState_t >*
CMDGroupAssistMsgStateResp::mutable_msgidstates() {
  // @@protoc_insertion_point(field_mutable_list:CMDGroupAssistMsgStateResp.msgIdStates)
  return &msgidstates_;
}
const ::google::protobuf::RepeatedPtrField< ::MsgState_t >&
CMDGroupAssistMsgStateResp::msgidstates() const {
  // @@protoc_insertion_point(field_list:CMDGroupAssistMsgStateResp.msgIdStates)
  return msgidstates_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDGPAssistMsgHisReq::kUserIDFieldNumber;
const int CMDGPAssistMsgHisReq::kForwardFieldNumber;
const int CMDGPAssistMsgHisReq::kMsgIdFieldNumber;
const int CMDGPAssistMsgHisReq::kCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDGPAssistMsgHisReq::CMDGPAssistMsgHisReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDGPAssistMsgHisReq)
}

void CMDGPAssistMsgHisReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDGPAssistMsgHisReq::CMDGPAssistMsgHisReq(const CMDGPAssistMsgHisReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDGPAssistMsgHisReq)
}

void CMDGPAssistMsgHisReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  userid_ = 0u;
  forward_ = false;
  msgid_ = 0u;
  count_ = 0u;
}

CMDGPAssistMsgHisReq::~CMDGPAssistMsgHisReq() {
  // @@protoc_insertion_point(destructor:CMDGPAssistMsgHisReq)
  SharedDtor();
}

void CMDGPAssistMsgHisReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMDGPAssistMsgHisReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDGPAssistMsgHisReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDGPAssistMsgHisReq_descriptor_;
}

const CMDGPAssistMsgHisReq& CMDGPAssistMsgHisReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ChatSvr_2eproto();
  return *default_instance_;
}

CMDGPAssistMsgHisReq* CMDGPAssistMsgHisReq::default_instance_ = NULL;

CMDGPAssistMsgHisReq* CMDGPAssistMsgHisReq::New(::google::protobuf::Arena* arena) const {
  CMDGPAssistMsgHisReq* n = new CMDGPAssistMsgHisReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDGPAssistMsgHisReq::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDGPAssistMsgHisReq)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDGPAssistMsgHisReq, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDGPAssistMsgHisReq*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(userid_, count_);

#undef ZR_HELPER_
#undef ZR_

}

bool CMDGPAssistMsgHisReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDGPAssistMsgHisReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 userID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_forward;
        break;
      }

      // optional bool forward = 2;
      case 2: {
        if (tag == 16) {
         parse_forward:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &forward_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_msgId;
        break;
      }

      // optional uint32 msgId = 3;
      case 3: {
        if (tag == 24) {
         parse_msgId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msgid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_count;
        break;
      }

      // optional uint32 count = 4;
      case 4: {
        if (tag == 32) {
         parse_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDGPAssistMsgHisReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDGPAssistMsgHisReq)
  return false;
#undef DO_
}

void CMDGPAssistMsgHisReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDGPAssistMsgHisReq)
  // optional uint32 userID = 1;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->userid(), output);
  }

  // optional bool forward = 2;
  if (this->forward() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->forward(), output);
  }

  // optional uint32 msgId = 3;
  if (this->msgid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->msgid(), output);
  }

  // optional uint32 count = 4;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->count(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDGPAssistMsgHisReq)
}

::google::protobuf::uint8* CMDGPAssistMsgHisReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDGPAssistMsgHisReq)
  // optional uint32 userID = 1;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->userid(), target);
  }

  // optional bool forward = 2;
  if (this->forward() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->forward(), target);
  }

  // optional uint32 msgId = 3;
  if (this->msgid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->msgid(), target);
  }

  // optional uint32 count = 4;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->count(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDGPAssistMsgHisReq)
  return target;
}

int CMDGPAssistMsgHisReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDGPAssistMsgHisReq)
  int total_size = 0;

  // optional uint32 userID = 1;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userid());
  }

  // optional bool forward = 2;
  if (this->forward() != 0) {
    total_size += 1 + 1;
  }

  // optional uint32 msgId = 3;
  if (this->msgid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->msgid());
  }

  // optional uint32 count = 4;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDGPAssistMsgHisReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDGPAssistMsgHisReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDGPAssistMsgHisReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDGPAssistMsgHisReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDGPAssistMsgHisReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDGPAssistMsgHisReq)
    MergeFrom(*source);
  }
}

void CMDGPAssistMsgHisReq::MergeFrom(const CMDGPAssistMsgHisReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDGPAssistMsgHisReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.forward() != 0) {
    set_forward(from.forward());
  }
  if (from.msgid() != 0) {
    set_msgid(from.msgid());
  }
  if (from.count() != 0) {
    set_count(from.count());
  }
}

void CMDGPAssistMsgHisReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDGPAssistMsgHisReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDGPAssistMsgHisReq::CopyFrom(const CMDGPAssistMsgHisReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDGPAssistMsgHisReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDGPAssistMsgHisReq::IsInitialized() const {

  return true;
}

void CMDGPAssistMsgHisReq::Swap(CMDGPAssistMsgHisReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDGPAssistMsgHisReq::InternalSwap(CMDGPAssistMsgHisReq* other) {
  std::swap(userid_, other->userid_);
  std::swap(forward_, other->forward_);
  std::swap(msgid_, other->msgid_);
  std::swap(count_, other->count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDGPAssistMsgHisReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDGPAssistMsgHisReq_descriptor_;
  metadata.reflection = CMDGPAssistMsgHisReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDGPAssistMsgHisReq

// optional uint32 userID = 1;
void CMDGPAssistMsgHisReq::clear_userid() {
  userid_ = 0u;
}
 ::google::protobuf::uint32 CMDGPAssistMsgHisReq::userid() const {
  // @@protoc_insertion_point(field_get:CMDGPAssistMsgHisReq.userID)
  return userid_;
}
 void CMDGPAssistMsgHisReq::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDGPAssistMsgHisReq.userID)
}

// optional bool forward = 2;
void CMDGPAssistMsgHisReq::clear_forward() {
  forward_ = false;
}
 bool CMDGPAssistMsgHisReq::forward() const {
  // @@protoc_insertion_point(field_get:CMDGPAssistMsgHisReq.forward)
  return forward_;
}
 void CMDGPAssistMsgHisReq::set_forward(bool value) {
  
  forward_ = value;
  // @@protoc_insertion_point(field_set:CMDGPAssistMsgHisReq.forward)
}

// optional uint32 msgId = 3;
void CMDGPAssistMsgHisReq::clear_msgid() {
  msgid_ = 0u;
}
 ::google::protobuf::uint32 CMDGPAssistMsgHisReq::msgid() const {
  // @@protoc_insertion_point(field_get:CMDGPAssistMsgHisReq.msgId)
  return msgid_;
}
 void CMDGPAssistMsgHisReq::set_msgid(::google::protobuf::uint32 value) {
  
  msgid_ = value;
  // @@protoc_insertion_point(field_set:CMDGPAssistMsgHisReq.msgId)
}

// optional uint32 count = 4;
void CMDGPAssistMsgHisReq::clear_count() {
  count_ = 0u;
}
 ::google::protobuf::uint32 CMDGPAssistMsgHisReq::count() const {
  // @@protoc_insertion_point(field_get:CMDGPAssistMsgHisReq.count)
  return count_;
}
 void CMDGPAssistMsgHisReq::set_count(::google::protobuf::uint32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:CMDGPAssistMsgHisReq.count)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDGPAssistMsgHisResp::kUserIDFieldNumber;
const int CMDGPAssistMsgHisResp::kMsgsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDGPAssistMsgHisResp::CMDGPAssistMsgHisResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDGPAssistMsgHisResp)
}

void CMDGPAssistMsgHisResp::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDGPAssistMsgHisResp::CMDGPAssistMsgHisResp(const CMDGPAssistMsgHisResp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDGPAssistMsgHisResp)
}

void CMDGPAssistMsgHisResp::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  userid_ = 0u;
}

CMDGPAssistMsgHisResp::~CMDGPAssistMsgHisResp() {
  // @@protoc_insertion_point(destructor:CMDGPAssistMsgHisResp)
  SharedDtor();
}

void CMDGPAssistMsgHisResp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMDGPAssistMsgHisResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDGPAssistMsgHisResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDGPAssistMsgHisResp_descriptor_;
}

const CMDGPAssistMsgHisResp& CMDGPAssistMsgHisResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ChatSvr_2eproto();
  return *default_instance_;
}

CMDGPAssistMsgHisResp* CMDGPAssistMsgHisResp::default_instance_ = NULL;

CMDGPAssistMsgHisResp* CMDGPAssistMsgHisResp::New(::google::protobuf::Arena* arena) const {
  CMDGPAssistMsgHisResp* n = new CMDGPAssistMsgHisResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDGPAssistMsgHisResp::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDGPAssistMsgHisResp)
  userid_ = 0u;
  msgs_.Clear();
}

bool CMDGPAssistMsgHisResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDGPAssistMsgHisResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 userID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_msgs;
        break;
      }

      // repeated .GPAssistMsg_t msgs = 2;
      case 2: {
        if (tag == 18) {
         parse_msgs:
          DO_(input->IncrementRecursionDepth());
         parse_loop_msgs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_msgs()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_msgs;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDGPAssistMsgHisResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDGPAssistMsgHisResp)
  return false;
#undef DO_
}

void CMDGPAssistMsgHisResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDGPAssistMsgHisResp)
  // optional uint32 userID = 1;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->userid(), output);
  }

  // repeated .GPAssistMsg_t msgs = 2;
  for (unsigned int i = 0, n = this->msgs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->msgs(i), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDGPAssistMsgHisResp)
}

::google::protobuf::uint8* CMDGPAssistMsgHisResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDGPAssistMsgHisResp)
  // optional uint32 userID = 1;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->userid(), target);
  }

  // repeated .GPAssistMsg_t msgs = 2;
  for (unsigned int i = 0, n = this->msgs_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->msgs(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDGPAssistMsgHisResp)
  return target;
}

int CMDGPAssistMsgHisResp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDGPAssistMsgHisResp)
  int total_size = 0;

  // optional uint32 userID = 1;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userid());
  }

  // repeated .GPAssistMsg_t msgs = 2;
  total_size += 1 * this->msgs_size();
  for (int i = 0; i < this->msgs_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->msgs(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDGPAssistMsgHisResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDGPAssistMsgHisResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDGPAssistMsgHisResp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDGPAssistMsgHisResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDGPAssistMsgHisResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDGPAssistMsgHisResp)
    MergeFrom(*source);
  }
}

void CMDGPAssistMsgHisResp::MergeFrom(const CMDGPAssistMsgHisResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDGPAssistMsgHisResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  msgs_.MergeFrom(from.msgs_);
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
}

void CMDGPAssistMsgHisResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDGPAssistMsgHisResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDGPAssistMsgHisResp::CopyFrom(const CMDGPAssistMsgHisResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDGPAssistMsgHisResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDGPAssistMsgHisResp::IsInitialized() const {

  return true;
}

void CMDGPAssistMsgHisResp::Swap(CMDGPAssistMsgHisResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDGPAssistMsgHisResp::InternalSwap(CMDGPAssistMsgHisResp* other) {
  std::swap(userid_, other->userid_);
  msgs_.UnsafeArenaSwap(&other->msgs_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDGPAssistMsgHisResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDGPAssistMsgHisResp_descriptor_;
  metadata.reflection = CMDGPAssistMsgHisResp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDGPAssistMsgHisResp

// optional uint32 userID = 1;
void CMDGPAssistMsgHisResp::clear_userid() {
  userid_ = 0u;
}
 ::google::protobuf::uint32 CMDGPAssistMsgHisResp::userid() const {
  // @@protoc_insertion_point(field_get:CMDGPAssistMsgHisResp.userID)
  return userid_;
}
 void CMDGPAssistMsgHisResp::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDGPAssistMsgHisResp.userID)
}

// repeated .GPAssistMsg_t msgs = 2;
int CMDGPAssistMsgHisResp::msgs_size() const {
  return msgs_.size();
}
void CMDGPAssistMsgHisResp::clear_msgs() {
  msgs_.Clear();
}
const ::GPAssistMsg_t& CMDGPAssistMsgHisResp::msgs(int index) const {
  // @@protoc_insertion_point(field_get:CMDGPAssistMsgHisResp.msgs)
  return msgs_.Get(index);
}
::GPAssistMsg_t* CMDGPAssistMsgHisResp::mutable_msgs(int index) {
  // @@protoc_insertion_point(field_mutable:CMDGPAssistMsgHisResp.msgs)
  return msgs_.Mutable(index);
}
::GPAssistMsg_t* CMDGPAssistMsgHisResp::add_msgs() {
  // @@protoc_insertion_point(field_add:CMDGPAssistMsgHisResp.msgs)
  return msgs_.Add();
}
::google::protobuf::RepeatedPtrField< ::GPAssistMsg_t >*
CMDGPAssistMsgHisResp::mutable_msgs() {
  // @@protoc_insertion_point(field_mutable_list:CMDGPAssistMsgHisResp.msgs)
  return &msgs_;
}
const ::google::protobuf::RepeatedPtrField< ::GPAssistMsg_t >&
CMDGPAssistMsgHisResp::msgs() const {
  // @@protoc_insertion_point(field_list:CMDGPAssistMsgHisResp.msgs)
  return msgs_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDGroupInvestUserReq::kGroupIDFieldNumber;
const int CMDGroupInvestUserReq::kToUserIDFieldNumber;
const int CMDGroupInvestUserReq::kInvestTypeFieldNumber;
const int CMDGroupInvestUserReq::kRunUserIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDGroupInvestUserReq::CMDGroupInvestUserReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDGroupInvestUserReq)
}

void CMDGroupInvestUserReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDGroupInvestUserReq::CMDGroupInvestUserReq(const CMDGroupInvestUserReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDGroupInvestUserReq)
}

void CMDGroupInvestUserReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  groupid_ = 0u;
  to_userid_ = 0u;
  investtype_ = 0;
  run_userid_ = 0u;
}

CMDGroupInvestUserReq::~CMDGroupInvestUserReq() {
  // @@protoc_insertion_point(destructor:CMDGroupInvestUserReq)
  SharedDtor();
}

void CMDGroupInvestUserReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMDGroupInvestUserReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDGroupInvestUserReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDGroupInvestUserReq_descriptor_;
}

const CMDGroupInvestUserReq& CMDGroupInvestUserReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ChatSvr_2eproto();
  return *default_instance_;
}

CMDGroupInvestUserReq* CMDGroupInvestUserReq::default_instance_ = NULL;

CMDGroupInvestUserReq* CMDGroupInvestUserReq::New(::google::protobuf::Arena* arena) const {
  CMDGroupInvestUserReq* n = new CMDGroupInvestUserReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDGroupInvestUserReq::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDGroupInvestUserReq)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDGroupInvestUserReq, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDGroupInvestUserReq*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(groupid_, run_userid_);

#undef ZR_HELPER_
#undef ZR_

}

bool CMDGroupInvestUserReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDGroupInvestUserReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 groupID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &groupid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_to_userID;
        break;
      }

      // optional uint32 to_userID = 2;
      case 2: {
        if (tag == 16) {
         parse_to_userID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &to_userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_investType;
        break;
      }

      // optional .e_InvestType investType = 3;
      case 3: {
        if (tag == 24) {
         parse_investType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_investtype(static_cast< ::e_InvestType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_run_userID;
        break;
      }

      // optional uint32 run_userID = 4;
      case 4: {
        if (tag == 32) {
         parse_run_userID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &run_userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDGroupInvestUserReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDGroupInvestUserReq)
  return false;
#undef DO_
}

void CMDGroupInvestUserReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDGroupInvestUserReq)
  // optional uint32 groupID = 1;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->groupid(), output);
  }

  // optional uint32 to_userID = 2;
  if (this->to_userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->to_userid(), output);
  }

  // optional .e_InvestType investType = 3;
  if (this->investtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->investtype(), output);
  }

  // optional uint32 run_userID = 4;
  if (this->run_userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->run_userid(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDGroupInvestUserReq)
}

::google::protobuf::uint8* CMDGroupInvestUserReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDGroupInvestUserReq)
  // optional uint32 groupID = 1;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->groupid(), target);
  }

  // optional uint32 to_userID = 2;
  if (this->to_userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->to_userid(), target);
  }

  // optional .e_InvestType investType = 3;
  if (this->investtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->investtype(), target);
  }

  // optional uint32 run_userID = 4;
  if (this->run_userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->run_userid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDGroupInvestUserReq)
  return target;
}

int CMDGroupInvestUserReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDGroupInvestUserReq)
  int total_size = 0;

  // optional uint32 groupID = 1;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->groupid());
  }

  // optional uint32 to_userID = 2;
  if (this->to_userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->to_userid());
  }

  // optional .e_InvestType investType = 3;
  if (this->investtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->investtype());
  }

  // optional uint32 run_userID = 4;
  if (this->run_userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->run_userid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDGroupInvestUserReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDGroupInvestUserReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDGroupInvestUserReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDGroupInvestUserReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDGroupInvestUserReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDGroupInvestUserReq)
    MergeFrom(*source);
  }
}

void CMDGroupInvestUserReq::MergeFrom(const CMDGroupInvestUserReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDGroupInvestUserReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
  if (from.to_userid() != 0) {
    set_to_userid(from.to_userid());
  }
  if (from.investtype() != 0) {
    set_investtype(from.investtype());
  }
  if (from.run_userid() != 0) {
    set_run_userid(from.run_userid());
  }
}

void CMDGroupInvestUserReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDGroupInvestUserReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDGroupInvestUserReq::CopyFrom(const CMDGroupInvestUserReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDGroupInvestUserReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDGroupInvestUserReq::IsInitialized() const {

  return true;
}

void CMDGroupInvestUserReq::Swap(CMDGroupInvestUserReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDGroupInvestUserReq::InternalSwap(CMDGroupInvestUserReq* other) {
  std::swap(groupid_, other->groupid_);
  std::swap(to_userid_, other->to_userid_);
  std::swap(investtype_, other->investtype_);
  std::swap(run_userid_, other->run_userid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDGroupInvestUserReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDGroupInvestUserReq_descriptor_;
  metadata.reflection = CMDGroupInvestUserReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDGroupInvestUserReq

// optional uint32 groupID = 1;
void CMDGroupInvestUserReq::clear_groupid() {
  groupid_ = 0u;
}
 ::google::protobuf::uint32 CMDGroupInvestUserReq::groupid() const {
  // @@protoc_insertion_point(field_get:CMDGroupInvestUserReq.groupID)
  return groupid_;
}
 void CMDGroupInvestUserReq::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDGroupInvestUserReq.groupID)
}

// optional uint32 to_userID = 2;
void CMDGroupInvestUserReq::clear_to_userid() {
  to_userid_ = 0u;
}
 ::google::protobuf::uint32 CMDGroupInvestUserReq::to_userid() const {
  // @@protoc_insertion_point(field_get:CMDGroupInvestUserReq.to_userID)
  return to_userid_;
}
 void CMDGroupInvestUserReq::set_to_userid(::google::protobuf::uint32 value) {
  
  to_userid_ = value;
  // @@protoc_insertion_point(field_set:CMDGroupInvestUserReq.to_userID)
}

// optional .e_InvestType investType = 3;
void CMDGroupInvestUserReq::clear_investtype() {
  investtype_ = 0;
}
 ::e_InvestType CMDGroupInvestUserReq::investtype() const {
  // @@protoc_insertion_point(field_get:CMDGroupInvestUserReq.investType)
  return static_cast< ::e_InvestType >(investtype_);
}
 void CMDGroupInvestUserReq::set_investtype(::e_InvestType value) {
  
  investtype_ = value;
  // @@protoc_insertion_point(field_set:CMDGroupInvestUserReq.investType)
}

// optional uint32 run_userID = 4;
void CMDGroupInvestUserReq::clear_run_userid() {
  run_userid_ = 0u;
}
 ::google::protobuf::uint32 CMDGroupInvestUserReq::run_userid() const {
  // @@protoc_insertion_point(field_get:CMDGroupInvestUserReq.run_userID)
  return run_userid_;
}
 void CMDGroupInvestUserReq::set_run_userid(::google::protobuf::uint32 value) {
  
  run_userid_ = value;
  // @@protoc_insertion_point(field_set:CMDGroupInvestUserReq.run_userID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDGroupInvestUserResp::kGroupIDFieldNumber;
const int CMDGroupInvestUserResp::kToUserIDFieldNumber;
const int CMDGroupInvestUserResp::kInvestTypeFieldNumber;
const int CMDGroupInvestUserResp::kErrInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDGroupInvestUserResp::CMDGroupInvestUserResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDGroupInvestUserResp)
}

void CMDGroupInvestUserResp::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  errinfo_ = const_cast< ::CMDErrCode*>(&::CMDErrCode::default_instance());
}

CMDGroupInvestUserResp::CMDGroupInvestUserResp(const CMDGroupInvestUserResp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDGroupInvestUserResp)
}

void CMDGroupInvestUserResp::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  groupid_ = 0u;
  to_userid_ = 0u;
  investtype_ = 0;
  errinfo_ = NULL;
}

CMDGroupInvestUserResp::~CMDGroupInvestUserResp() {
  // @@protoc_insertion_point(destructor:CMDGroupInvestUserResp)
  SharedDtor();
}

void CMDGroupInvestUserResp::SharedDtor() {
  if (this != default_instance_) {
    delete errinfo_;
  }
}

void CMDGroupInvestUserResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDGroupInvestUserResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDGroupInvestUserResp_descriptor_;
}

const CMDGroupInvestUserResp& CMDGroupInvestUserResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ChatSvr_2eproto();
  return *default_instance_;
}

CMDGroupInvestUserResp* CMDGroupInvestUserResp::default_instance_ = NULL;

CMDGroupInvestUserResp* CMDGroupInvestUserResp::New(::google::protobuf::Arena* arena) const {
  CMDGroupInvestUserResp* n = new CMDGroupInvestUserResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDGroupInvestUserResp::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDGroupInvestUserResp)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDGroupInvestUserResp, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDGroupInvestUserResp*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(groupid_, to_userid_);
  investtype_ = 0;
  if (GetArenaNoVirtual() == NULL && errinfo_ != NULL) delete errinfo_;
  errinfo_ = NULL;

#undef ZR_HELPER_
#undef ZR_

}

bool CMDGroupInvestUserResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDGroupInvestUserResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 groupID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &groupid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_to_userID;
        break;
      }

      // optional uint32 to_userID = 2;
      case 2: {
        if (tag == 16) {
         parse_to_userID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &to_userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_investType;
        break;
      }

      // optional .e_InvestType investType = 3;
      case 3: {
        if (tag == 24) {
         parse_investType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_investtype(static_cast< ::e_InvestType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_errInfo;
        break;
      }

      // optional .CMDErrCode errInfo = 4;
      case 4: {
        if (tag == 34) {
         parse_errInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_errinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDGroupInvestUserResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDGroupInvestUserResp)
  return false;
#undef DO_
}

void CMDGroupInvestUserResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDGroupInvestUserResp)
  // optional uint32 groupID = 1;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->groupid(), output);
  }

  // optional uint32 to_userID = 2;
  if (this->to_userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->to_userid(), output);
  }

  // optional .e_InvestType investType = 3;
  if (this->investtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->investtype(), output);
  }

  // optional .CMDErrCode errInfo = 4;
  if (this->has_errinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->errinfo_, output);
  }

  // @@protoc_insertion_point(serialize_end:CMDGroupInvestUserResp)
}

::google::protobuf::uint8* CMDGroupInvestUserResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDGroupInvestUserResp)
  // optional uint32 groupID = 1;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->groupid(), target);
  }

  // optional uint32 to_userID = 2;
  if (this->to_userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->to_userid(), target);
  }

  // optional .e_InvestType investType = 3;
  if (this->investtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->investtype(), target);
  }

  // optional .CMDErrCode errInfo = 4;
  if (this->has_errinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->errinfo_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDGroupInvestUserResp)
  return target;
}

int CMDGroupInvestUserResp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDGroupInvestUserResp)
  int total_size = 0;

  // optional uint32 groupID = 1;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->groupid());
  }

  // optional uint32 to_userID = 2;
  if (this->to_userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->to_userid());
  }

  // optional .e_InvestType investType = 3;
  if (this->investtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->investtype());
  }

  // optional .CMDErrCode errInfo = 4;
  if (this->has_errinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->errinfo_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDGroupInvestUserResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDGroupInvestUserResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDGroupInvestUserResp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDGroupInvestUserResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDGroupInvestUserResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDGroupInvestUserResp)
    MergeFrom(*source);
  }
}

void CMDGroupInvestUserResp::MergeFrom(const CMDGroupInvestUserResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDGroupInvestUserResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
  if (from.to_userid() != 0) {
    set_to_userid(from.to_userid());
  }
  if (from.investtype() != 0) {
    set_investtype(from.investtype());
  }
  if (from.has_errinfo()) {
    mutable_errinfo()->::CMDErrCode::MergeFrom(from.errinfo());
  }
}

void CMDGroupInvestUserResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDGroupInvestUserResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDGroupInvestUserResp::CopyFrom(const CMDGroupInvestUserResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDGroupInvestUserResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDGroupInvestUserResp::IsInitialized() const {

  return true;
}

void CMDGroupInvestUserResp::Swap(CMDGroupInvestUserResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDGroupInvestUserResp::InternalSwap(CMDGroupInvestUserResp* other) {
  std::swap(groupid_, other->groupid_);
  std::swap(to_userid_, other->to_userid_);
  std::swap(investtype_, other->investtype_);
  std::swap(errinfo_, other->errinfo_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDGroupInvestUserResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDGroupInvestUserResp_descriptor_;
  metadata.reflection = CMDGroupInvestUserResp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDGroupInvestUserResp

// optional uint32 groupID = 1;
void CMDGroupInvestUserResp::clear_groupid() {
  groupid_ = 0u;
}
 ::google::protobuf::uint32 CMDGroupInvestUserResp::groupid() const {
  // @@protoc_insertion_point(field_get:CMDGroupInvestUserResp.groupID)
  return groupid_;
}
 void CMDGroupInvestUserResp::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDGroupInvestUserResp.groupID)
}

// optional uint32 to_userID = 2;
void CMDGroupInvestUserResp::clear_to_userid() {
  to_userid_ = 0u;
}
 ::google::protobuf::uint32 CMDGroupInvestUserResp::to_userid() const {
  // @@protoc_insertion_point(field_get:CMDGroupInvestUserResp.to_userID)
  return to_userid_;
}
 void CMDGroupInvestUserResp::set_to_userid(::google::protobuf::uint32 value) {
  
  to_userid_ = value;
  // @@protoc_insertion_point(field_set:CMDGroupInvestUserResp.to_userID)
}

// optional .e_InvestType investType = 3;
void CMDGroupInvestUserResp::clear_investtype() {
  investtype_ = 0;
}
 ::e_InvestType CMDGroupInvestUserResp::investtype() const {
  // @@protoc_insertion_point(field_get:CMDGroupInvestUserResp.investType)
  return static_cast< ::e_InvestType >(investtype_);
}
 void CMDGroupInvestUserResp::set_investtype(::e_InvestType value) {
  
  investtype_ = value;
  // @@protoc_insertion_point(field_set:CMDGroupInvestUserResp.investType)
}

// optional .CMDErrCode errInfo = 4;
bool CMDGroupInvestUserResp::has_errinfo() const {
  return !_is_default_instance_ && errinfo_ != NULL;
}
void CMDGroupInvestUserResp::clear_errinfo() {
  if (GetArenaNoVirtual() == NULL && errinfo_ != NULL) delete errinfo_;
  errinfo_ = NULL;
}
const ::CMDErrCode& CMDGroupInvestUserResp::errinfo() const {
  // @@protoc_insertion_point(field_get:CMDGroupInvestUserResp.errInfo)
  return errinfo_ != NULL ? *errinfo_ : *default_instance_->errinfo_;
}
::CMDErrCode* CMDGroupInvestUserResp::mutable_errinfo() {
  
  if (errinfo_ == NULL) {
    errinfo_ = new ::CMDErrCode;
  }
  // @@protoc_insertion_point(field_mutable:CMDGroupInvestUserResp.errInfo)
  return errinfo_;
}
::CMDErrCode* CMDGroupInvestUserResp::release_errinfo() {
  // @@protoc_insertion_point(field_release:CMDGroupInvestUserResp.errInfo)
  
  ::CMDErrCode* temp = errinfo_;
  errinfo_ = NULL;
  return temp;
}
void CMDGroupInvestUserResp::set_allocated_errinfo(::CMDErrCode* errinfo) {
  delete errinfo_;
  errinfo_ = errinfo;
  if (errinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDGroupInvestUserResp.errInfo)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDNoticeMsg::kMsgidFieldNumber;
const int CMDNoticeMsg::kTypeFieldNumber;
const int CMDNoticeMsg::kContentFieldNumber;
const int CMDNoticeMsg::kActionFieldNumber;
const int CMDNoticeMsg::kTimeFieldNumber;
const int CMDNoticeMsg::kEndTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDNoticeMsg::CMDNoticeMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDNoticeMsg)
}

void CMDNoticeMsg::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDNoticeMsg::CMDNoticeMsg(const CMDNoticeMsg& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDNoticeMsg)
}

void CMDNoticeMsg::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  msgid_ = 0u;
  type_ = 0u;
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  action_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_ = 0u;
  endtime_ = 0u;
}

CMDNoticeMsg::~CMDNoticeMsg() {
  // @@protoc_insertion_point(destructor:CMDNoticeMsg)
  SharedDtor();
}

void CMDNoticeMsg::SharedDtor() {
  content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  action_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CMDNoticeMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDNoticeMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDNoticeMsg_descriptor_;
}

const CMDNoticeMsg& CMDNoticeMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ChatSvr_2eproto();
  return *default_instance_;
}

CMDNoticeMsg* CMDNoticeMsg::default_instance_ = NULL;

CMDNoticeMsg* CMDNoticeMsg::New(::google::protobuf::Arena* arena) const {
  CMDNoticeMsg* n = new CMDNoticeMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDNoticeMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDNoticeMsg)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDNoticeMsg, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDNoticeMsg*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(msgid_, type_);
  ZR_(time_, endtime_);
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  action_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool CMDNoticeMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDNoticeMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 msgid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msgid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }

      // optional uint32 type = 2;
      case 2: {
        if (tag == 16) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_content;
        break;
      }

      // optional string content = 3;
      case 3: {
        if (tag == 26) {
         parse_content:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->content().data(), this->content().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMDNoticeMsg.content"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_action;
        break;
      }

      // optional string action = 4;
      case 4: {
        if (tag == 34) {
         parse_action:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_action()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->action().data(), this->action().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMDNoticeMsg.action"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_time;
        break;
      }

      // optional uint32 time = 5;
      case 5: {
        if (tag == 40) {
         parse_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &time_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_endTime;
        break;
      }

      // optional uint32 endTime = 6;
      case 6: {
        if (tag == 48) {
         parse_endTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &endtime_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDNoticeMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDNoticeMsg)
  return false;
#undef DO_
}

void CMDNoticeMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDNoticeMsg)
  // optional uint32 msgid = 1;
  if (this->msgid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->msgid(), output);
  }

  // optional uint32 type = 2;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->type(), output);
  }

  // optional string content = 3;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDNoticeMsg.content");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->content(), output);
  }

  // optional string action = 4;
  if (this->action().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->action().data(), this->action().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDNoticeMsg.action");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->action(), output);
  }

  // optional uint32 time = 5;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->time(), output);
  }

  // optional uint32 endTime = 6;
  if (this->endtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->endtime(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDNoticeMsg)
}

::google::protobuf::uint8* CMDNoticeMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDNoticeMsg)
  // optional uint32 msgid = 1;
  if (this->msgid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->msgid(), target);
  }

  // optional uint32 type = 2;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->type(), target);
  }

  // optional string content = 3;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDNoticeMsg.content");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->content(), target);
  }

  // optional string action = 4;
  if (this->action().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->action().data(), this->action().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDNoticeMsg.action");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->action(), target);
  }

  // optional uint32 time = 5;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->time(), target);
  }

  // optional uint32 endTime = 6;
  if (this->endtime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->endtime(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDNoticeMsg)
  return target;
}

int CMDNoticeMsg::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDNoticeMsg)
  int total_size = 0;

  // optional uint32 msgid = 1;
  if (this->msgid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->msgid());
  }

  // optional uint32 type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type());
  }

  // optional string content = 3;
  if (this->content().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->content());
  }

  // optional string action = 4;
  if (this->action().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->action());
  }

  // optional uint32 time = 5;
  if (this->time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->time());
  }

  // optional uint32 endTime = 6;
  if (this->endtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->endtime());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDNoticeMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDNoticeMsg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDNoticeMsg* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDNoticeMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDNoticeMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDNoticeMsg)
    MergeFrom(*source);
  }
}

void CMDNoticeMsg::MergeFrom(const CMDNoticeMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDNoticeMsg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.msgid() != 0) {
    set_msgid(from.msgid());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.content().size() > 0) {

    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  if (from.action().size() > 0) {

    action_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.action_);
  }
  if (from.time() != 0) {
    set_time(from.time());
  }
  if (from.endtime() != 0) {
    set_endtime(from.endtime());
  }
}

void CMDNoticeMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDNoticeMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDNoticeMsg::CopyFrom(const CMDNoticeMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDNoticeMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDNoticeMsg::IsInitialized() const {

  return true;
}

void CMDNoticeMsg::Swap(CMDNoticeMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDNoticeMsg::InternalSwap(CMDNoticeMsg* other) {
  std::swap(msgid_, other->msgid_);
  std::swap(type_, other->type_);
  content_.Swap(&other->content_);
  action_.Swap(&other->action_);
  std::swap(time_, other->time_);
  std::swap(endtime_, other->endtime_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDNoticeMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDNoticeMsg_descriptor_;
  metadata.reflection = CMDNoticeMsg_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDNoticeMsg

// optional uint32 msgid = 1;
void CMDNoticeMsg::clear_msgid() {
  msgid_ = 0u;
}
 ::google::protobuf::uint32 CMDNoticeMsg::msgid() const {
  // @@protoc_insertion_point(field_get:CMDNoticeMsg.msgid)
  return msgid_;
}
 void CMDNoticeMsg::set_msgid(::google::protobuf::uint32 value) {
  
  msgid_ = value;
  // @@protoc_insertion_point(field_set:CMDNoticeMsg.msgid)
}

// optional uint32 type = 2;
void CMDNoticeMsg::clear_type() {
  type_ = 0u;
}
 ::google::protobuf::uint32 CMDNoticeMsg::type() const {
  // @@protoc_insertion_point(field_get:CMDNoticeMsg.type)
  return type_;
}
 void CMDNoticeMsg::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:CMDNoticeMsg.type)
}

// optional string content = 3;
void CMDNoticeMsg::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CMDNoticeMsg::content() const {
  // @@protoc_insertion_point(field_get:CMDNoticeMsg.content)
  return content_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDNoticeMsg::set_content(const ::std::string& value) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDNoticeMsg.content)
}
 void CMDNoticeMsg::set_content(const char* value) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDNoticeMsg.content)
}
 void CMDNoticeMsg::set_content(const char* value, size_t size) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDNoticeMsg.content)
}
 ::std::string* CMDNoticeMsg::mutable_content() {
  
  // @@protoc_insertion_point(field_mutable:CMDNoticeMsg.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMDNoticeMsg::release_content() {
  // @@protoc_insertion_point(field_release:CMDNoticeMsg.content)
  
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDNoticeMsg::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    
  } else {
    
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:CMDNoticeMsg.content)
}

// optional string action = 4;
void CMDNoticeMsg::clear_action() {
  action_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CMDNoticeMsg::action() const {
  // @@protoc_insertion_point(field_get:CMDNoticeMsg.action)
  return action_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDNoticeMsg::set_action(const ::std::string& value) {
  
  action_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDNoticeMsg.action)
}
 void CMDNoticeMsg::set_action(const char* value) {
  
  action_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDNoticeMsg.action)
}
 void CMDNoticeMsg::set_action(const char* value, size_t size) {
  
  action_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDNoticeMsg.action)
}
 ::std::string* CMDNoticeMsg::mutable_action() {
  
  // @@protoc_insertion_point(field_mutable:CMDNoticeMsg.action)
  return action_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMDNoticeMsg::release_action() {
  // @@protoc_insertion_point(field_release:CMDNoticeMsg.action)
  
  return action_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDNoticeMsg::set_allocated_action(::std::string* action) {
  if (action != NULL) {
    
  } else {
    
  }
  action_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), action);
  // @@protoc_insertion_point(field_set_allocated:CMDNoticeMsg.action)
}

// optional uint32 time = 5;
void CMDNoticeMsg::clear_time() {
  time_ = 0u;
}
 ::google::protobuf::uint32 CMDNoticeMsg::time() const {
  // @@protoc_insertion_point(field_get:CMDNoticeMsg.time)
  return time_;
}
 void CMDNoticeMsg::set_time(::google::protobuf::uint32 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:CMDNoticeMsg.time)
}

// optional uint32 endTime = 6;
void CMDNoticeMsg::clear_endtime() {
  endtime_ = 0u;
}
 ::google::protobuf::uint32 CMDNoticeMsg::endtime() const {
  // @@protoc_insertion_point(field_get:CMDNoticeMsg.endTime)
  return endtime_;
}
 void CMDNoticeMsg::set_endtime(::google::protobuf::uint32 value) {
  
  endtime_ = value;
  // @@protoc_insertion_point(field_set:CMDNoticeMsg.endTime)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDSysNoticeMsgNotify::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDSysNoticeMsgNotify::CMDSysNoticeMsgNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDSysNoticeMsgNotify)
}

void CMDSysNoticeMsgNotify::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  msg_ = const_cast< ::CMDNoticeMsg*>(&::CMDNoticeMsg::default_instance());
}

CMDSysNoticeMsgNotify::CMDSysNoticeMsgNotify(const CMDSysNoticeMsgNotify& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDSysNoticeMsgNotify)
}

void CMDSysNoticeMsgNotify::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  msg_ = NULL;
}

CMDSysNoticeMsgNotify::~CMDSysNoticeMsgNotify() {
  // @@protoc_insertion_point(destructor:CMDSysNoticeMsgNotify)
  SharedDtor();
}

void CMDSysNoticeMsgNotify::SharedDtor() {
  if (this != default_instance_) {
    delete msg_;
  }
}

void CMDSysNoticeMsgNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDSysNoticeMsgNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDSysNoticeMsgNotify_descriptor_;
}

const CMDSysNoticeMsgNotify& CMDSysNoticeMsgNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ChatSvr_2eproto();
  return *default_instance_;
}

CMDSysNoticeMsgNotify* CMDSysNoticeMsgNotify::default_instance_ = NULL;

CMDSysNoticeMsgNotify* CMDSysNoticeMsgNotify::New(::google::protobuf::Arena* arena) const {
  CMDSysNoticeMsgNotify* n = new CMDSysNoticeMsgNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDSysNoticeMsgNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDSysNoticeMsgNotify)
  if (GetArenaNoVirtual() == NULL && msg_ != NULL) delete msg_;
  msg_ = NULL;
}

bool CMDSysNoticeMsgNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDSysNoticeMsgNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CMDNoticeMsg msg = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msg()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDSysNoticeMsgNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDSysNoticeMsgNotify)
  return false;
#undef DO_
}

void CMDSysNoticeMsgNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDSysNoticeMsgNotify)
  // optional .CMDNoticeMsg msg = 1;
  if (this->has_msg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->msg_, output);
  }

  // @@protoc_insertion_point(serialize_end:CMDSysNoticeMsgNotify)
}

::google::protobuf::uint8* CMDSysNoticeMsgNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDSysNoticeMsgNotify)
  // optional .CMDNoticeMsg msg = 1;
  if (this->has_msg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->msg_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDSysNoticeMsgNotify)
  return target;
}

int CMDSysNoticeMsgNotify::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDSysNoticeMsgNotify)
  int total_size = 0;

  // optional .CMDNoticeMsg msg = 1;
  if (this->has_msg()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msg_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDSysNoticeMsgNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDSysNoticeMsgNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDSysNoticeMsgNotify* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDSysNoticeMsgNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDSysNoticeMsgNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDSysNoticeMsgNotify)
    MergeFrom(*source);
  }
}

void CMDSysNoticeMsgNotify::MergeFrom(const CMDSysNoticeMsgNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDSysNoticeMsgNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.has_msg()) {
    mutable_msg()->::CMDNoticeMsg::MergeFrom(from.msg());
  }
}

void CMDSysNoticeMsgNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDSysNoticeMsgNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDSysNoticeMsgNotify::CopyFrom(const CMDSysNoticeMsgNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDSysNoticeMsgNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDSysNoticeMsgNotify::IsInitialized() const {

  return true;
}

void CMDSysNoticeMsgNotify::Swap(CMDSysNoticeMsgNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDSysNoticeMsgNotify::InternalSwap(CMDSysNoticeMsgNotify* other) {
  std::swap(msg_, other->msg_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDSysNoticeMsgNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDSysNoticeMsgNotify_descriptor_;
  metadata.reflection = CMDSysNoticeMsgNotify_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDSysNoticeMsgNotify

// optional .CMDNoticeMsg msg = 1;
bool CMDSysNoticeMsgNotify::has_msg() const {
  return !_is_default_instance_ && msg_ != NULL;
}
void CMDSysNoticeMsgNotify::clear_msg() {
  if (GetArenaNoVirtual() == NULL && msg_ != NULL) delete msg_;
  msg_ = NULL;
}
const ::CMDNoticeMsg& CMDSysNoticeMsgNotify::msg() const {
  // @@protoc_insertion_point(field_get:CMDSysNoticeMsgNotify.msg)
  return msg_ != NULL ? *msg_ : *default_instance_->msg_;
}
::CMDNoticeMsg* CMDSysNoticeMsgNotify::mutable_msg() {
  
  if (msg_ == NULL) {
    msg_ = new ::CMDNoticeMsg;
  }
  // @@protoc_insertion_point(field_mutable:CMDSysNoticeMsgNotify.msg)
  return msg_;
}
::CMDNoticeMsg* CMDSysNoticeMsgNotify::release_msg() {
  // @@protoc_insertion_point(field_release:CMDSysNoticeMsgNotify.msg)
  
  ::CMDNoticeMsg* temp = msg_;
  msg_ = NULL;
  return temp;
}
void CMDSysNoticeMsgNotify::set_allocated_msg(::CMDNoticeMsg* msg) {
  delete msg_;
  msg_ = msg;
  if (msg) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDSysNoticeMsgNotify.msg)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDUnreadSysNoticeMsgNotify::kMsgsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDUnreadSysNoticeMsgNotify::CMDUnreadSysNoticeMsgNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDUnreadSysNoticeMsgNotify)
}

void CMDUnreadSysNoticeMsgNotify::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDUnreadSysNoticeMsgNotify::CMDUnreadSysNoticeMsgNotify(const CMDUnreadSysNoticeMsgNotify& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDUnreadSysNoticeMsgNotify)
}

void CMDUnreadSysNoticeMsgNotify::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

CMDUnreadSysNoticeMsgNotify::~CMDUnreadSysNoticeMsgNotify() {
  // @@protoc_insertion_point(destructor:CMDUnreadSysNoticeMsgNotify)
  SharedDtor();
}

void CMDUnreadSysNoticeMsgNotify::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMDUnreadSysNoticeMsgNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDUnreadSysNoticeMsgNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDUnreadSysNoticeMsgNotify_descriptor_;
}

const CMDUnreadSysNoticeMsgNotify& CMDUnreadSysNoticeMsgNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ChatSvr_2eproto();
  return *default_instance_;
}

CMDUnreadSysNoticeMsgNotify* CMDUnreadSysNoticeMsgNotify::default_instance_ = NULL;

CMDUnreadSysNoticeMsgNotify* CMDUnreadSysNoticeMsgNotify::New(::google::protobuf::Arena* arena) const {
  CMDUnreadSysNoticeMsgNotify* n = new CMDUnreadSysNoticeMsgNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDUnreadSysNoticeMsgNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDUnreadSysNoticeMsgNotify)
  msgs_.Clear();
}

bool CMDUnreadSysNoticeMsgNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDUnreadSysNoticeMsgNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CMDNoticeMsg msgs = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_msgs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_msgs()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_msgs;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDUnreadSysNoticeMsgNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDUnreadSysNoticeMsgNotify)
  return false;
#undef DO_
}

void CMDUnreadSysNoticeMsgNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDUnreadSysNoticeMsgNotify)
  // repeated .CMDNoticeMsg msgs = 1;
  for (unsigned int i = 0, n = this->msgs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->msgs(i), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDUnreadSysNoticeMsgNotify)
}

::google::protobuf::uint8* CMDUnreadSysNoticeMsgNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDUnreadSysNoticeMsgNotify)
  // repeated .CMDNoticeMsg msgs = 1;
  for (unsigned int i = 0, n = this->msgs_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->msgs(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDUnreadSysNoticeMsgNotify)
  return target;
}

int CMDUnreadSysNoticeMsgNotify::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDUnreadSysNoticeMsgNotify)
  int total_size = 0;

  // repeated .CMDNoticeMsg msgs = 1;
  total_size += 1 * this->msgs_size();
  for (int i = 0; i < this->msgs_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->msgs(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDUnreadSysNoticeMsgNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDUnreadSysNoticeMsgNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDUnreadSysNoticeMsgNotify* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDUnreadSysNoticeMsgNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDUnreadSysNoticeMsgNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDUnreadSysNoticeMsgNotify)
    MergeFrom(*source);
  }
}

void CMDUnreadSysNoticeMsgNotify::MergeFrom(const CMDUnreadSysNoticeMsgNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDUnreadSysNoticeMsgNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  msgs_.MergeFrom(from.msgs_);
}

void CMDUnreadSysNoticeMsgNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDUnreadSysNoticeMsgNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDUnreadSysNoticeMsgNotify::CopyFrom(const CMDUnreadSysNoticeMsgNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDUnreadSysNoticeMsgNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDUnreadSysNoticeMsgNotify::IsInitialized() const {

  return true;
}

void CMDUnreadSysNoticeMsgNotify::Swap(CMDUnreadSysNoticeMsgNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDUnreadSysNoticeMsgNotify::InternalSwap(CMDUnreadSysNoticeMsgNotify* other) {
  msgs_.UnsafeArenaSwap(&other->msgs_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDUnreadSysNoticeMsgNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDUnreadSysNoticeMsgNotify_descriptor_;
  metadata.reflection = CMDUnreadSysNoticeMsgNotify_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDUnreadSysNoticeMsgNotify

// repeated .CMDNoticeMsg msgs = 1;
int CMDUnreadSysNoticeMsgNotify::msgs_size() const {
  return msgs_.size();
}
void CMDUnreadSysNoticeMsgNotify::clear_msgs() {
  msgs_.Clear();
}
const ::CMDNoticeMsg& CMDUnreadSysNoticeMsgNotify::msgs(int index) const {
  // @@protoc_insertion_point(field_get:CMDUnreadSysNoticeMsgNotify.msgs)
  return msgs_.Get(index);
}
::CMDNoticeMsg* CMDUnreadSysNoticeMsgNotify::mutable_msgs(int index) {
  // @@protoc_insertion_point(field_mutable:CMDUnreadSysNoticeMsgNotify.msgs)
  return msgs_.Mutable(index);
}
::CMDNoticeMsg* CMDUnreadSysNoticeMsgNotify::add_msgs() {
  // @@protoc_insertion_point(field_add:CMDUnreadSysNoticeMsgNotify.msgs)
  return msgs_.Add();
}
::google::protobuf::RepeatedPtrField< ::CMDNoticeMsg >*
CMDUnreadSysNoticeMsgNotify::mutable_msgs() {
  // @@protoc_insertion_point(field_mutable_list:CMDUnreadSysNoticeMsgNotify.msgs)
  return &msgs_;
}
const ::google::protobuf::RepeatedPtrField< ::CMDNoticeMsg >&
CMDUnreadSysNoticeMsgNotify::msgs() const {
  // @@protoc_insertion_point(field_list:CMDUnreadSysNoticeMsgNotify.msgs)
  return msgs_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDNoticeMsgNotifyRecv::kUseridFieldNumber;
const int CMDNoticeMsgNotifyRecv::kMsgidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDNoticeMsgNotifyRecv::CMDNoticeMsgNotifyRecv()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDNoticeMsgNotifyRecv)
}

void CMDNoticeMsgNotifyRecv::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDNoticeMsgNotifyRecv::CMDNoticeMsgNotifyRecv(const CMDNoticeMsgNotifyRecv& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDNoticeMsgNotifyRecv)
}

void CMDNoticeMsgNotifyRecv::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  userid_ = 0u;
  msgid_ = 0u;
}

CMDNoticeMsgNotifyRecv::~CMDNoticeMsgNotifyRecv() {
  // @@protoc_insertion_point(destructor:CMDNoticeMsgNotifyRecv)
  SharedDtor();
}

void CMDNoticeMsgNotifyRecv::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMDNoticeMsgNotifyRecv::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDNoticeMsgNotifyRecv::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDNoticeMsgNotifyRecv_descriptor_;
}

const CMDNoticeMsgNotifyRecv& CMDNoticeMsgNotifyRecv::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ChatSvr_2eproto();
  return *default_instance_;
}

CMDNoticeMsgNotifyRecv* CMDNoticeMsgNotifyRecv::default_instance_ = NULL;

CMDNoticeMsgNotifyRecv* CMDNoticeMsgNotifyRecv::New(::google::protobuf::Arena* arena) const {
  CMDNoticeMsgNotifyRecv* n = new CMDNoticeMsgNotifyRecv;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDNoticeMsgNotifyRecv::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDNoticeMsgNotifyRecv)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDNoticeMsgNotifyRecv, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDNoticeMsgNotifyRecv*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(userid_, msgid_);

#undef ZR_HELPER_
#undef ZR_

}

bool CMDNoticeMsgNotifyRecv::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDNoticeMsgNotifyRecv)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 userid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_msgid;
        break;
      }

      // optional uint32 msgid = 2;
      case 2: {
        if (tag == 16) {
         parse_msgid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msgid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDNoticeMsgNotifyRecv)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDNoticeMsgNotifyRecv)
  return false;
#undef DO_
}

void CMDNoticeMsgNotifyRecv::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDNoticeMsgNotifyRecv)
  // optional uint32 userid = 1;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->userid(), output);
  }

  // optional uint32 msgid = 2;
  if (this->msgid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->msgid(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDNoticeMsgNotifyRecv)
}

::google::protobuf::uint8* CMDNoticeMsgNotifyRecv::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDNoticeMsgNotifyRecv)
  // optional uint32 userid = 1;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->userid(), target);
  }

  // optional uint32 msgid = 2;
  if (this->msgid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->msgid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDNoticeMsgNotifyRecv)
  return target;
}

int CMDNoticeMsgNotifyRecv::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDNoticeMsgNotifyRecv)
  int total_size = 0;

  // optional uint32 userid = 1;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userid());
  }

  // optional uint32 msgid = 2;
  if (this->msgid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->msgid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDNoticeMsgNotifyRecv::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDNoticeMsgNotifyRecv)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDNoticeMsgNotifyRecv* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDNoticeMsgNotifyRecv>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDNoticeMsgNotifyRecv)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDNoticeMsgNotifyRecv)
    MergeFrom(*source);
  }
}

void CMDNoticeMsgNotifyRecv::MergeFrom(const CMDNoticeMsgNotifyRecv& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDNoticeMsgNotifyRecv)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.msgid() != 0) {
    set_msgid(from.msgid());
  }
}

void CMDNoticeMsgNotifyRecv::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDNoticeMsgNotifyRecv)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDNoticeMsgNotifyRecv::CopyFrom(const CMDNoticeMsgNotifyRecv& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDNoticeMsgNotifyRecv)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDNoticeMsgNotifyRecv::IsInitialized() const {

  return true;
}

void CMDNoticeMsgNotifyRecv::Swap(CMDNoticeMsgNotifyRecv* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDNoticeMsgNotifyRecv::InternalSwap(CMDNoticeMsgNotifyRecv* other) {
  std::swap(userid_, other->userid_);
  std::swap(msgid_, other->msgid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDNoticeMsgNotifyRecv::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDNoticeMsgNotifyRecv_descriptor_;
  metadata.reflection = CMDNoticeMsgNotifyRecv_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDNoticeMsgNotifyRecv

// optional uint32 userid = 1;
void CMDNoticeMsgNotifyRecv::clear_userid() {
  userid_ = 0u;
}
 ::google::protobuf::uint32 CMDNoticeMsgNotifyRecv::userid() const {
  // @@protoc_insertion_point(field_get:CMDNoticeMsgNotifyRecv.userid)
  return userid_;
}
 void CMDNoticeMsgNotifyRecv::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDNoticeMsgNotifyRecv.userid)
}

// optional uint32 msgid = 2;
void CMDNoticeMsgNotifyRecv::clear_msgid() {
  msgid_ = 0u;
}
 ::google::protobuf::uint32 CMDNoticeMsgNotifyRecv::msgid() const {
  // @@protoc_insertion_point(field_get:CMDNoticeMsgNotifyRecv.msgid)
  return msgid_;
}
 void CMDNoticeMsgNotifyRecv::set_msgid(::google::protobuf::uint32 value) {
  
  msgid_ = value;
  // @@protoc_insertion_point(field_set:CMDNoticeMsgNotifyRecv.msgid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDUserNoticeMsgNotify::kUseridFieldNumber;
const int CMDUserNoticeMsgNotify::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDUserNoticeMsgNotify::CMDUserNoticeMsgNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDUserNoticeMsgNotify)
}

void CMDUserNoticeMsgNotify::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  msg_ = const_cast< ::CMDNoticeMsg*>(&::CMDNoticeMsg::default_instance());
}

CMDUserNoticeMsgNotify::CMDUserNoticeMsgNotify(const CMDUserNoticeMsgNotify& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDUserNoticeMsgNotify)
}

void CMDUserNoticeMsgNotify::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  userid_ = 0u;
  msg_ = NULL;
}

CMDUserNoticeMsgNotify::~CMDUserNoticeMsgNotify() {
  // @@protoc_insertion_point(destructor:CMDUserNoticeMsgNotify)
  SharedDtor();
}

void CMDUserNoticeMsgNotify::SharedDtor() {
  if (this != default_instance_) {
    delete msg_;
  }
}

void CMDUserNoticeMsgNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDUserNoticeMsgNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDUserNoticeMsgNotify_descriptor_;
}

const CMDUserNoticeMsgNotify& CMDUserNoticeMsgNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ChatSvr_2eproto();
  return *default_instance_;
}

CMDUserNoticeMsgNotify* CMDUserNoticeMsgNotify::default_instance_ = NULL;

CMDUserNoticeMsgNotify* CMDUserNoticeMsgNotify::New(::google::protobuf::Arena* arena) const {
  CMDUserNoticeMsgNotify* n = new CMDUserNoticeMsgNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDUserNoticeMsgNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDUserNoticeMsgNotify)
  userid_ = 0u;
  if (GetArenaNoVirtual() == NULL && msg_ != NULL) delete msg_;
  msg_ = NULL;
}

bool CMDUserNoticeMsgNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDUserNoticeMsgNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 userid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_msg;
        break;
      }

      // optional .CMDNoticeMsg msg = 2;
      case 2: {
        if (tag == 18) {
         parse_msg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msg()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDUserNoticeMsgNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDUserNoticeMsgNotify)
  return false;
#undef DO_
}

void CMDUserNoticeMsgNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDUserNoticeMsgNotify)
  // optional uint32 userid = 1;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->userid(), output);
  }

  // optional .CMDNoticeMsg msg = 2;
  if (this->has_msg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->msg_, output);
  }

  // @@protoc_insertion_point(serialize_end:CMDUserNoticeMsgNotify)
}

::google::protobuf::uint8* CMDUserNoticeMsgNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDUserNoticeMsgNotify)
  // optional uint32 userid = 1;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->userid(), target);
  }

  // optional .CMDNoticeMsg msg = 2;
  if (this->has_msg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->msg_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDUserNoticeMsgNotify)
  return target;
}

int CMDUserNoticeMsgNotify::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDUserNoticeMsgNotify)
  int total_size = 0;

  // optional uint32 userid = 1;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userid());
  }

  // optional .CMDNoticeMsg msg = 2;
  if (this->has_msg()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msg_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDUserNoticeMsgNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDUserNoticeMsgNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDUserNoticeMsgNotify* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDUserNoticeMsgNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDUserNoticeMsgNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDUserNoticeMsgNotify)
    MergeFrom(*source);
  }
}

void CMDUserNoticeMsgNotify::MergeFrom(const CMDUserNoticeMsgNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDUserNoticeMsgNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.has_msg()) {
    mutable_msg()->::CMDNoticeMsg::MergeFrom(from.msg());
  }
}

void CMDUserNoticeMsgNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDUserNoticeMsgNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDUserNoticeMsgNotify::CopyFrom(const CMDUserNoticeMsgNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDUserNoticeMsgNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDUserNoticeMsgNotify::IsInitialized() const {

  return true;
}

void CMDUserNoticeMsgNotify::Swap(CMDUserNoticeMsgNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDUserNoticeMsgNotify::InternalSwap(CMDUserNoticeMsgNotify* other) {
  std::swap(userid_, other->userid_);
  std::swap(msg_, other->msg_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDUserNoticeMsgNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDUserNoticeMsgNotify_descriptor_;
  metadata.reflection = CMDUserNoticeMsgNotify_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDUserNoticeMsgNotify

// optional uint32 userid = 1;
void CMDUserNoticeMsgNotify::clear_userid() {
  userid_ = 0u;
}
 ::google::protobuf::uint32 CMDUserNoticeMsgNotify::userid() const {
  // @@protoc_insertion_point(field_get:CMDUserNoticeMsgNotify.userid)
  return userid_;
}
 void CMDUserNoticeMsgNotify::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDUserNoticeMsgNotify.userid)
}

// optional .CMDNoticeMsg msg = 2;
bool CMDUserNoticeMsgNotify::has_msg() const {
  return !_is_default_instance_ && msg_ != NULL;
}
void CMDUserNoticeMsgNotify::clear_msg() {
  if (GetArenaNoVirtual() == NULL && msg_ != NULL) delete msg_;
  msg_ = NULL;
}
const ::CMDNoticeMsg& CMDUserNoticeMsgNotify::msg() const {
  // @@protoc_insertion_point(field_get:CMDUserNoticeMsgNotify.msg)
  return msg_ != NULL ? *msg_ : *default_instance_->msg_;
}
::CMDNoticeMsg* CMDUserNoticeMsgNotify::mutable_msg() {
  
  if (msg_ == NULL) {
    msg_ = new ::CMDNoticeMsg;
  }
  // @@protoc_insertion_point(field_mutable:CMDUserNoticeMsgNotify.msg)
  return msg_;
}
::CMDNoticeMsg* CMDUserNoticeMsgNotify::release_msg() {
  // @@protoc_insertion_point(field_release:CMDUserNoticeMsgNotify.msg)
  
  ::CMDNoticeMsg* temp = msg_;
  msg_ = NULL;
  return temp;
}
void CMDUserNoticeMsgNotify::set_allocated_msg(::CMDNoticeMsg* msg) {
  delete msg_;
  msg_ = msg;
  if (msg) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDUserNoticeMsgNotify.msg)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDUnreadUserNoticeMsgNotify::kUseridFieldNumber;
const int CMDUnreadUserNoticeMsgNotify::kMsgsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDUnreadUserNoticeMsgNotify::CMDUnreadUserNoticeMsgNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDUnreadUserNoticeMsgNotify)
}

void CMDUnreadUserNoticeMsgNotify::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDUnreadUserNoticeMsgNotify::CMDUnreadUserNoticeMsgNotify(const CMDUnreadUserNoticeMsgNotify& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDUnreadUserNoticeMsgNotify)
}

void CMDUnreadUserNoticeMsgNotify::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  userid_ = 0u;
}

CMDUnreadUserNoticeMsgNotify::~CMDUnreadUserNoticeMsgNotify() {
  // @@protoc_insertion_point(destructor:CMDUnreadUserNoticeMsgNotify)
  SharedDtor();
}

void CMDUnreadUserNoticeMsgNotify::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMDUnreadUserNoticeMsgNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDUnreadUserNoticeMsgNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDUnreadUserNoticeMsgNotify_descriptor_;
}

const CMDUnreadUserNoticeMsgNotify& CMDUnreadUserNoticeMsgNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ChatSvr_2eproto();
  return *default_instance_;
}

CMDUnreadUserNoticeMsgNotify* CMDUnreadUserNoticeMsgNotify::default_instance_ = NULL;

CMDUnreadUserNoticeMsgNotify* CMDUnreadUserNoticeMsgNotify::New(::google::protobuf::Arena* arena) const {
  CMDUnreadUserNoticeMsgNotify* n = new CMDUnreadUserNoticeMsgNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDUnreadUserNoticeMsgNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDUnreadUserNoticeMsgNotify)
  userid_ = 0u;
  msgs_.Clear();
}

bool CMDUnreadUserNoticeMsgNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDUnreadUserNoticeMsgNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 userid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_msgs;
        break;
      }

      // repeated .CMDNoticeMsg msgs = 2;
      case 2: {
        if (tag == 18) {
         parse_msgs:
          DO_(input->IncrementRecursionDepth());
         parse_loop_msgs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_msgs()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_msgs;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDUnreadUserNoticeMsgNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDUnreadUserNoticeMsgNotify)
  return false;
#undef DO_
}

void CMDUnreadUserNoticeMsgNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDUnreadUserNoticeMsgNotify)
  // optional uint32 userid = 1;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->userid(), output);
  }

  // repeated .CMDNoticeMsg msgs = 2;
  for (unsigned int i = 0, n = this->msgs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->msgs(i), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDUnreadUserNoticeMsgNotify)
}

::google::protobuf::uint8* CMDUnreadUserNoticeMsgNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDUnreadUserNoticeMsgNotify)
  // optional uint32 userid = 1;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->userid(), target);
  }

  // repeated .CMDNoticeMsg msgs = 2;
  for (unsigned int i = 0, n = this->msgs_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->msgs(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDUnreadUserNoticeMsgNotify)
  return target;
}

int CMDUnreadUserNoticeMsgNotify::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDUnreadUserNoticeMsgNotify)
  int total_size = 0;

  // optional uint32 userid = 1;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userid());
  }

  // repeated .CMDNoticeMsg msgs = 2;
  total_size += 1 * this->msgs_size();
  for (int i = 0; i < this->msgs_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->msgs(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDUnreadUserNoticeMsgNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDUnreadUserNoticeMsgNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDUnreadUserNoticeMsgNotify* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDUnreadUserNoticeMsgNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDUnreadUserNoticeMsgNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDUnreadUserNoticeMsgNotify)
    MergeFrom(*source);
  }
}

void CMDUnreadUserNoticeMsgNotify::MergeFrom(const CMDUnreadUserNoticeMsgNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDUnreadUserNoticeMsgNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  msgs_.MergeFrom(from.msgs_);
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
}

void CMDUnreadUserNoticeMsgNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDUnreadUserNoticeMsgNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDUnreadUserNoticeMsgNotify::CopyFrom(const CMDUnreadUserNoticeMsgNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDUnreadUserNoticeMsgNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDUnreadUserNoticeMsgNotify::IsInitialized() const {

  return true;
}

void CMDUnreadUserNoticeMsgNotify::Swap(CMDUnreadUserNoticeMsgNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDUnreadUserNoticeMsgNotify::InternalSwap(CMDUnreadUserNoticeMsgNotify* other) {
  std::swap(userid_, other->userid_);
  msgs_.UnsafeArenaSwap(&other->msgs_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDUnreadUserNoticeMsgNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDUnreadUserNoticeMsgNotify_descriptor_;
  metadata.reflection = CMDUnreadUserNoticeMsgNotify_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDUnreadUserNoticeMsgNotify

// optional uint32 userid = 1;
void CMDUnreadUserNoticeMsgNotify::clear_userid() {
  userid_ = 0u;
}
 ::google::protobuf::uint32 CMDUnreadUserNoticeMsgNotify::userid() const {
  // @@protoc_insertion_point(field_get:CMDUnreadUserNoticeMsgNotify.userid)
  return userid_;
}
 void CMDUnreadUserNoticeMsgNotify::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDUnreadUserNoticeMsgNotify.userid)
}

// repeated .CMDNoticeMsg msgs = 2;
int CMDUnreadUserNoticeMsgNotify::msgs_size() const {
  return msgs_.size();
}
void CMDUnreadUserNoticeMsgNotify::clear_msgs() {
  msgs_.Clear();
}
const ::CMDNoticeMsg& CMDUnreadUserNoticeMsgNotify::msgs(int index) const {
  // @@protoc_insertion_point(field_get:CMDUnreadUserNoticeMsgNotify.msgs)
  return msgs_.Get(index);
}
::CMDNoticeMsg* CMDUnreadUserNoticeMsgNotify::mutable_msgs(int index) {
  // @@protoc_insertion_point(field_mutable:CMDUnreadUserNoticeMsgNotify.msgs)
  return msgs_.Mutable(index);
}
::CMDNoticeMsg* CMDUnreadUserNoticeMsgNotify::add_msgs() {
  // @@protoc_insertion_point(field_add:CMDUnreadUserNoticeMsgNotify.msgs)
  return msgs_.Add();
}
::google::protobuf::RepeatedPtrField< ::CMDNoticeMsg >*
CMDUnreadUserNoticeMsgNotify::mutable_msgs() {
  // @@protoc_insertion_point(field_mutable_list:CMDUnreadUserNoticeMsgNotify.msgs)
  return &msgs_;
}
const ::google::protobuf::RepeatedPtrField< ::CMDNoticeMsg >&
CMDUnreadUserNoticeMsgNotify::msgs() const {
  // @@protoc_insertion_point(field_list:CMDUnreadUserNoticeMsgNotify.msgs)
  return msgs_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDUnreadNoticeMsgReq::kUseridFieldNumber;
const int CMDUnreadNoticeMsgReq::kAppVersionFieldNumber;
const int CMDUnreadNoticeMsgReq::kOsPlatformFieldNumber;
const int CMDUnreadNoticeMsgReq::kOsVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDUnreadNoticeMsgReq::CMDUnreadNoticeMsgReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDUnreadNoticeMsgReq)
}

void CMDUnreadNoticeMsgReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDUnreadNoticeMsgReq::CMDUnreadNoticeMsgReq(const CMDUnreadNoticeMsgReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDUnreadNoticeMsgReq)
}

void CMDUnreadNoticeMsgReq::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  userid_ = 0u;
  appversion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  osplatform_ = 0u;
  osversion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CMDUnreadNoticeMsgReq::~CMDUnreadNoticeMsgReq() {
  // @@protoc_insertion_point(destructor:CMDUnreadNoticeMsgReq)
  SharedDtor();
}

void CMDUnreadNoticeMsgReq::SharedDtor() {
  appversion_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  osversion_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CMDUnreadNoticeMsgReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDUnreadNoticeMsgReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDUnreadNoticeMsgReq_descriptor_;
}

const CMDUnreadNoticeMsgReq& CMDUnreadNoticeMsgReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ChatSvr_2eproto();
  return *default_instance_;
}

CMDUnreadNoticeMsgReq* CMDUnreadNoticeMsgReq::default_instance_ = NULL;

CMDUnreadNoticeMsgReq* CMDUnreadNoticeMsgReq::New(::google::protobuf::Arena* arena) const {
  CMDUnreadNoticeMsgReq* n = new CMDUnreadNoticeMsgReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDUnreadNoticeMsgReq::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDUnreadNoticeMsgReq)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDUnreadNoticeMsgReq, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDUnreadNoticeMsgReq*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(userid_, osplatform_);
  appversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  osversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool CMDUnreadNoticeMsgReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDUnreadNoticeMsgReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 userid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_appVersion;
        break;
      }

      // optional string appVersion = 2;
      case 2: {
        if (tag == 18) {
         parse_appVersion:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appversion()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appversion().data(), this->appversion().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMDUnreadNoticeMsgReq.appVersion"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_osPlatform;
        break;
      }

      // optional uint32 osPlatform = 3;
      case 3: {
        if (tag == 24) {
         parse_osPlatform:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &osplatform_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_osVersion;
        break;
      }

      // optional string osVersion = 4;
      case 4: {
        if (tag == 34) {
         parse_osVersion:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_osversion()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->osversion().data(), this->osversion().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMDUnreadNoticeMsgReq.osVersion"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDUnreadNoticeMsgReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDUnreadNoticeMsgReq)
  return false;
#undef DO_
}

void CMDUnreadNoticeMsgReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDUnreadNoticeMsgReq)
  // optional uint32 userid = 1;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->userid(), output);
  }

  // optional string appVersion = 2;
  if (this->appversion().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appversion().data(), this->appversion().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDUnreadNoticeMsgReq.appVersion");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->appversion(), output);
  }

  // optional uint32 osPlatform = 3;
  if (this->osplatform() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->osplatform(), output);
  }

  // optional string osVersion = 4;
  if (this->osversion().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->osversion().data(), this->osversion().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDUnreadNoticeMsgReq.osVersion");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->osversion(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDUnreadNoticeMsgReq)
}

::google::protobuf::uint8* CMDUnreadNoticeMsgReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDUnreadNoticeMsgReq)
  // optional uint32 userid = 1;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->userid(), target);
  }

  // optional string appVersion = 2;
  if (this->appversion().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appversion().data(), this->appversion().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDUnreadNoticeMsgReq.appVersion");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->appversion(), target);
  }

  // optional uint32 osPlatform = 3;
  if (this->osplatform() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->osplatform(), target);
  }

  // optional string osVersion = 4;
  if (this->osversion().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->osversion().data(), this->osversion().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDUnreadNoticeMsgReq.osVersion");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->osversion(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDUnreadNoticeMsgReq)
  return target;
}

int CMDUnreadNoticeMsgReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDUnreadNoticeMsgReq)
  int total_size = 0;

  // optional uint32 userid = 1;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userid());
  }

  // optional string appVersion = 2;
  if (this->appversion().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appversion());
  }

  // optional uint32 osPlatform = 3;
  if (this->osplatform() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->osplatform());
  }

  // optional string osVersion = 4;
  if (this->osversion().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->osversion());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDUnreadNoticeMsgReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDUnreadNoticeMsgReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDUnreadNoticeMsgReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDUnreadNoticeMsgReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDUnreadNoticeMsgReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDUnreadNoticeMsgReq)
    MergeFrom(*source);
  }
}

void CMDUnreadNoticeMsgReq::MergeFrom(const CMDUnreadNoticeMsgReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDUnreadNoticeMsgReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.appversion().size() > 0) {

    appversion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appversion_);
  }
  if (from.osplatform() != 0) {
    set_osplatform(from.osplatform());
  }
  if (from.osversion().size() > 0) {

    osversion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.osversion_);
  }
}

void CMDUnreadNoticeMsgReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDUnreadNoticeMsgReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDUnreadNoticeMsgReq::CopyFrom(const CMDUnreadNoticeMsgReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDUnreadNoticeMsgReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDUnreadNoticeMsgReq::IsInitialized() const {

  return true;
}

void CMDUnreadNoticeMsgReq::Swap(CMDUnreadNoticeMsgReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDUnreadNoticeMsgReq::InternalSwap(CMDUnreadNoticeMsgReq* other) {
  std::swap(userid_, other->userid_);
  appversion_.Swap(&other->appversion_);
  std::swap(osplatform_, other->osplatform_);
  osversion_.Swap(&other->osversion_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDUnreadNoticeMsgReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDUnreadNoticeMsgReq_descriptor_;
  metadata.reflection = CMDUnreadNoticeMsgReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDUnreadNoticeMsgReq

// optional uint32 userid = 1;
void CMDUnreadNoticeMsgReq::clear_userid() {
  userid_ = 0u;
}
 ::google::protobuf::uint32 CMDUnreadNoticeMsgReq::userid() const {
  // @@protoc_insertion_point(field_get:CMDUnreadNoticeMsgReq.userid)
  return userid_;
}
 void CMDUnreadNoticeMsgReq::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDUnreadNoticeMsgReq.userid)
}

// optional string appVersion = 2;
void CMDUnreadNoticeMsgReq::clear_appversion() {
  appversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CMDUnreadNoticeMsgReq::appversion() const {
  // @@protoc_insertion_point(field_get:CMDUnreadNoticeMsgReq.appVersion)
  return appversion_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDUnreadNoticeMsgReq::set_appversion(const ::std::string& value) {
  
  appversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDUnreadNoticeMsgReq.appVersion)
}
 void CMDUnreadNoticeMsgReq::set_appversion(const char* value) {
  
  appversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDUnreadNoticeMsgReq.appVersion)
}
 void CMDUnreadNoticeMsgReq::set_appversion(const char* value, size_t size) {
  
  appversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDUnreadNoticeMsgReq.appVersion)
}
 ::std::string* CMDUnreadNoticeMsgReq::mutable_appversion() {
  
  // @@protoc_insertion_point(field_mutable:CMDUnreadNoticeMsgReq.appVersion)
  return appversion_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMDUnreadNoticeMsgReq::release_appversion() {
  // @@protoc_insertion_point(field_release:CMDUnreadNoticeMsgReq.appVersion)
  
  return appversion_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDUnreadNoticeMsgReq::set_allocated_appversion(::std::string* appversion) {
  if (appversion != NULL) {
    
  } else {
    
  }
  appversion_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appversion);
  // @@protoc_insertion_point(field_set_allocated:CMDUnreadNoticeMsgReq.appVersion)
}

// optional uint32 osPlatform = 3;
void CMDUnreadNoticeMsgReq::clear_osplatform() {
  osplatform_ = 0u;
}
 ::google::protobuf::uint32 CMDUnreadNoticeMsgReq::osplatform() const {
  // @@protoc_insertion_point(field_get:CMDUnreadNoticeMsgReq.osPlatform)
  return osplatform_;
}
 void CMDUnreadNoticeMsgReq::set_osplatform(::google::protobuf::uint32 value) {
  
  osplatform_ = value;
  // @@protoc_insertion_point(field_set:CMDUnreadNoticeMsgReq.osPlatform)
}

// optional string osVersion = 4;
void CMDUnreadNoticeMsgReq::clear_osversion() {
  osversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CMDUnreadNoticeMsgReq::osversion() const {
  // @@protoc_insertion_point(field_get:CMDUnreadNoticeMsgReq.osVersion)
  return osversion_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDUnreadNoticeMsgReq::set_osversion(const ::std::string& value) {
  
  osversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDUnreadNoticeMsgReq.osVersion)
}
 void CMDUnreadNoticeMsgReq::set_osversion(const char* value) {
  
  osversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDUnreadNoticeMsgReq.osVersion)
}
 void CMDUnreadNoticeMsgReq::set_osversion(const char* value, size_t size) {
  
  osversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDUnreadNoticeMsgReq.osVersion)
}
 ::std::string* CMDUnreadNoticeMsgReq::mutable_osversion() {
  
  // @@protoc_insertion_point(field_mutable:CMDUnreadNoticeMsgReq.osVersion)
  return osversion_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMDUnreadNoticeMsgReq::release_osversion() {
  // @@protoc_insertion_point(field_release:CMDUnreadNoticeMsgReq.osVersion)
  
  return osversion_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDUnreadNoticeMsgReq::set_allocated_osversion(::std::string* osversion) {
  if (osversion != NULL) {
    
  } else {
    
  }
  osversion_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), osversion);
  // @@protoc_insertion_point(field_set_allocated:CMDUnreadNoticeMsgReq.osVersion)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PPTCoursePicInfo::kPicIdFieldNumber;
const int PPTCoursePicInfo::kGroupIdFieldNumber;
const int PPTCoursePicInfo::kRankFieldNumber;
const int PPTCoursePicInfo::kPicurlFieldNumber;
const int PPTCoursePicInfo::kDbIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PPTCoursePicInfo::PPTCoursePicInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PPTCoursePicInfo)
}

void PPTCoursePicInfo::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PPTCoursePicInfo::PPTCoursePicInfo(const PPTCoursePicInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PPTCoursePicInfo)
}

void PPTCoursePicInfo::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  picid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  groupid_ = 0u;
  rank_ = 0;
  picurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dbid_ = 0u;
}

PPTCoursePicInfo::~PPTCoursePicInfo() {
  // @@protoc_insertion_point(destructor:PPTCoursePicInfo)
  SharedDtor();
}

void PPTCoursePicInfo::SharedDtor() {
  picid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  picurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PPTCoursePicInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PPTCoursePicInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PPTCoursePicInfo_descriptor_;
}

const PPTCoursePicInfo& PPTCoursePicInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ChatSvr_2eproto();
  return *default_instance_;
}

PPTCoursePicInfo* PPTCoursePicInfo::default_instance_ = NULL;

PPTCoursePicInfo* PPTCoursePicInfo::New(::google::protobuf::Arena* arena) const {
  PPTCoursePicInfo* n = new PPTCoursePicInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PPTCoursePicInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:PPTCoursePicInfo)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PPTCoursePicInfo, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PPTCoursePicInfo*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(groupid_, rank_);
  picid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  picurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dbid_ = 0u;

#undef ZR_HELPER_
#undef ZR_

}

bool PPTCoursePicInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PPTCoursePicInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string picId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_picid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->picid().data(), this->picid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PPTCoursePicInfo.picId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_groupId;
        break;
      }

      // optional uint32 groupId = 2;
      case 2: {
        if (tag == 16) {
         parse_groupId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &groupid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_rank;
        break;
      }

      // optional int32 rank = 3;
      case 3: {
        if (tag == 24) {
         parse_rank:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rank_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_picurl;
        break;
      }

      // optional string picurl = 4;
      case 4: {
        if (tag == 34) {
         parse_picurl:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_picurl()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->picurl().data(), this->picurl().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PPTCoursePicInfo.picurl"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_dbId;
        break;
      }

      // optional uint32 dbId = 5;
      case 5: {
        if (tag == 40) {
         parse_dbId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dbid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PPTCoursePicInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PPTCoursePicInfo)
  return false;
#undef DO_
}

void PPTCoursePicInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PPTCoursePicInfo)
  // optional string picId = 1;
  if (this->picid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->picid().data(), this->picid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PPTCoursePicInfo.picId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->picid(), output);
  }

  // optional uint32 groupId = 2;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->groupid(), output);
  }

  // optional int32 rank = 3;
  if (this->rank() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->rank(), output);
  }

  // optional string picurl = 4;
  if (this->picurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->picurl().data(), this->picurl().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PPTCoursePicInfo.picurl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->picurl(), output);
  }

  // optional uint32 dbId = 5;
  if (this->dbid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->dbid(), output);
  }

  // @@protoc_insertion_point(serialize_end:PPTCoursePicInfo)
}

::google::protobuf::uint8* PPTCoursePicInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PPTCoursePicInfo)
  // optional string picId = 1;
  if (this->picid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->picid().data(), this->picid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PPTCoursePicInfo.picId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->picid(), target);
  }

  // optional uint32 groupId = 2;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->groupid(), target);
  }

  // optional int32 rank = 3;
  if (this->rank() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->rank(), target);
  }

  // optional string picurl = 4;
  if (this->picurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->picurl().data(), this->picurl().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PPTCoursePicInfo.picurl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->picurl(), target);
  }

  // optional uint32 dbId = 5;
  if (this->dbid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->dbid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PPTCoursePicInfo)
  return target;
}

int PPTCoursePicInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:PPTCoursePicInfo)
  int total_size = 0;

  // optional string picId = 1;
  if (this->picid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->picid());
  }

  // optional uint32 groupId = 2;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->groupid());
  }

  // optional int32 rank = 3;
  if (this->rank() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rank());
  }

  // optional string picurl = 4;
  if (this->picurl().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->picurl());
  }

  // optional uint32 dbId = 5;
  if (this->dbid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dbid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PPTCoursePicInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PPTCoursePicInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PPTCoursePicInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PPTCoursePicInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PPTCoursePicInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PPTCoursePicInfo)
    MergeFrom(*source);
  }
}

void PPTCoursePicInfo::MergeFrom(const PPTCoursePicInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PPTCoursePicInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.picid().size() > 0) {

    picid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.picid_);
  }
  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
  if (from.rank() != 0) {
    set_rank(from.rank());
  }
  if (from.picurl().size() > 0) {

    picurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.picurl_);
  }
  if (from.dbid() != 0) {
    set_dbid(from.dbid());
  }
}

void PPTCoursePicInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PPTCoursePicInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PPTCoursePicInfo::CopyFrom(const PPTCoursePicInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PPTCoursePicInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PPTCoursePicInfo::IsInitialized() const {

  return true;
}

void PPTCoursePicInfo::Swap(PPTCoursePicInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PPTCoursePicInfo::InternalSwap(PPTCoursePicInfo* other) {
  picid_.Swap(&other->picid_);
  std::swap(groupid_, other->groupid_);
  std::swap(rank_, other->rank_);
  picurl_.Swap(&other->picurl_);
  std::swap(dbid_, other->dbid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PPTCoursePicInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PPTCoursePicInfo_descriptor_;
  metadata.reflection = PPTCoursePicInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PPTCoursePicInfo

// optional string picId = 1;
void PPTCoursePicInfo::clear_picid() {
  picid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PPTCoursePicInfo::picid() const {
  // @@protoc_insertion_point(field_get:PPTCoursePicInfo.picId)
  return picid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PPTCoursePicInfo::set_picid(const ::std::string& value) {
  
  picid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PPTCoursePicInfo.picId)
}
 void PPTCoursePicInfo::set_picid(const char* value) {
  
  picid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PPTCoursePicInfo.picId)
}
 void PPTCoursePicInfo::set_picid(const char* value, size_t size) {
  
  picid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PPTCoursePicInfo.picId)
}
 ::std::string* PPTCoursePicInfo::mutable_picid() {
  
  // @@protoc_insertion_point(field_mutable:PPTCoursePicInfo.picId)
  return picid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PPTCoursePicInfo::release_picid() {
  // @@protoc_insertion_point(field_release:PPTCoursePicInfo.picId)
  
  return picid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PPTCoursePicInfo::set_allocated_picid(::std::string* picid) {
  if (picid != NULL) {
    
  } else {
    
  }
  picid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), picid);
  // @@protoc_insertion_point(field_set_allocated:PPTCoursePicInfo.picId)
}

// optional uint32 groupId = 2;
void PPTCoursePicInfo::clear_groupid() {
  groupid_ = 0u;
}
 ::google::protobuf::uint32 PPTCoursePicInfo::groupid() const {
  // @@protoc_insertion_point(field_get:PPTCoursePicInfo.groupId)
  return groupid_;
}
 void PPTCoursePicInfo::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:PPTCoursePicInfo.groupId)
}

// optional int32 rank = 3;
void PPTCoursePicInfo::clear_rank() {
  rank_ = 0;
}
 ::google::protobuf::int32 PPTCoursePicInfo::rank() const {
  // @@protoc_insertion_point(field_get:PPTCoursePicInfo.rank)
  return rank_;
}
 void PPTCoursePicInfo::set_rank(::google::protobuf::int32 value) {
  
  rank_ = value;
  // @@protoc_insertion_point(field_set:PPTCoursePicInfo.rank)
}

// optional string picurl = 4;
void PPTCoursePicInfo::clear_picurl() {
  picurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PPTCoursePicInfo::picurl() const {
  // @@protoc_insertion_point(field_get:PPTCoursePicInfo.picurl)
  return picurl_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PPTCoursePicInfo::set_picurl(const ::std::string& value) {
  
  picurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PPTCoursePicInfo.picurl)
}
 void PPTCoursePicInfo::set_picurl(const char* value) {
  
  picurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PPTCoursePicInfo.picurl)
}
 void PPTCoursePicInfo::set_picurl(const char* value, size_t size) {
  
  picurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PPTCoursePicInfo.picurl)
}
 ::std::string* PPTCoursePicInfo::mutable_picurl() {
  
  // @@protoc_insertion_point(field_mutable:PPTCoursePicInfo.picurl)
  return picurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PPTCoursePicInfo::release_picurl() {
  // @@protoc_insertion_point(field_release:PPTCoursePicInfo.picurl)
  
  return picurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PPTCoursePicInfo::set_allocated_picurl(::std::string* picurl) {
  if (picurl != NULL) {
    
  } else {
    
  }
  picurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), picurl);
  // @@protoc_insertion_point(field_set_allocated:PPTCoursePicInfo.picurl)
}

// optional uint32 dbId = 5;
void PPTCoursePicInfo::clear_dbid() {
  dbid_ = 0u;
}
 ::google::protobuf::uint32 PPTCoursePicInfo::dbid() const {
  // @@protoc_insertion_point(field_get:PPTCoursePicInfo.dbId)
  return dbid_;
}
 void PPTCoursePicInfo::set_dbid(::google::protobuf::uint32 value) {
  
  dbid_ = value;
  // @@protoc_insertion_point(field_set:PPTCoursePicInfo.dbId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDPPTPicChangeMsgNotify::kOptTypeFieldNumber;
const int CMDPPTPicChangeMsgNotify::kVecpicsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDPPTPicChangeMsgNotify::CMDPPTPicChangeMsgNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDPPTPicChangeMsgNotify)
}

void CMDPPTPicChangeMsgNotify::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDPPTPicChangeMsgNotify::CMDPPTPicChangeMsgNotify(const CMDPPTPicChangeMsgNotify& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDPPTPicChangeMsgNotify)
}

void CMDPPTPicChangeMsgNotify::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  opttype_ = 0u;
}

CMDPPTPicChangeMsgNotify::~CMDPPTPicChangeMsgNotify() {
  // @@protoc_insertion_point(destructor:CMDPPTPicChangeMsgNotify)
  SharedDtor();
}

void CMDPPTPicChangeMsgNotify::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMDPPTPicChangeMsgNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDPPTPicChangeMsgNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDPPTPicChangeMsgNotify_descriptor_;
}

const CMDPPTPicChangeMsgNotify& CMDPPTPicChangeMsgNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ChatSvr_2eproto();
  return *default_instance_;
}

CMDPPTPicChangeMsgNotify* CMDPPTPicChangeMsgNotify::default_instance_ = NULL;

CMDPPTPicChangeMsgNotify* CMDPPTPicChangeMsgNotify::New(::google::protobuf::Arena* arena) const {
  CMDPPTPicChangeMsgNotify* n = new CMDPPTPicChangeMsgNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDPPTPicChangeMsgNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDPPTPicChangeMsgNotify)
  opttype_ = 0u;
  vecpics_.Clear();
}

bool CMDPPTPicChangeMsgNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDPPTPicChangeMsgNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 optType = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &opttype_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_vecpics;
        break;
      }

      // repeated .PPTCoursePicInfo vecpics = 2;
      case 2: {
        if (tag == 18) {
         parse_vecpics:
          DO_(input->IncrementRecursionDepth());
         parse_loop_vecpics:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_vecpics()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_vecpics;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDPPTPicChangeMsgNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDPPTPicChangeMsgNotify)
  return false;
#undef DO_
}

void CMDPPTPicChangeMsgNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDPPTPicChangeMsgNotify)
  // optional uint32 optType = 1;
  if (this->opttype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->opttype(), output);
  }

  // repeated .PPTCoursePicInfo vecpics = 2;
  for (unsigned int i = 0, n = this->vecpics_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->vecpics(i), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDPPTPicChangeMsgNotify)
}

::google::protobuf::uint8* CMDPPTPicChangeMsgNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDPPTPicChangeMsgNotify)
  // optional uint32 optType = 1;
  if (this->opttype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->opttype(), target);
  }

  // repeated .PPTCoursePicInfo vecpics = 2;
  for (unsigned int i = 0, n = this->vecpics_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->vecpics(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDPPTPicChangeMsgNotify)
  return target;
}

int CMDPPTPicChangeMsgNotify::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDPPTPicChangeMsgNotify)
  int total_size = 0;

  // optional uint32 optType = 1;
  if (this->opttype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->opttype());
  }

  // repeated .PPTCoursePicInfo vecpics = 2;
  total_size += 1 * this->vecpics_size();
  for (int i = 0; i < this->vecpics_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->vecpics(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDPPTPicChangeMsgNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDPPTPicChangeMsgNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDPPTPicChangeMsgNotify* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDPPTPicChangeMsgNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDPPTPicChangeMsgNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDPPTPicChangeMsgNotify)
    MergeFrom(*source);
  }
}

void CMDPPTPicChangeMsgNotify::MergeFrom(const CMDPPTPicChangeMsgNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDPPTPicChangeMsgNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  vecpics_.MergeFrom(from.vecpics_);
  if (from.opttype() != 0) {
    set_opttype(from.opttype());
  }
}

void CMDPPTPicChangeMsgNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDPPTPicChangeMsgNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDPPTPicChangeMsgNotify::CopyFrom(const CMDPPTPicChangeMsgNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDPPTPicChangeMsgNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDPPTPicChangeMsgNotify::IsInitialized() const {

  return true;
}

void CMDPPTPicChangeMsgNotify::Swap(CMDPPTPicChangeMsgNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDPPTPicChangeMsgNotify::InternalSwap(CMDPPTPicChangeMsgNotify* other) {
  std::swap(opttype_, other->opttype_);
  vecpics_.UnsafeArenaSwap(&other->vecpics_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDPPTPicChangeMsgNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDPPTPicChangeMsgNotify_descriptor_;
  metadata.reflection = CMDPPTPicChangeMsgNotify_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDPPTPicChangeMsgNotify

// optional uint32 optType = 1;
void CMDPPTPicChangeMsgNotify::clear_opttype() {
  opttype_ = 0u;
}
 ::google::protobuf::uint32 CMDPPTPicChangeMsgNotify::opttype() const {
  // @@protoc_insertion_point(field_get:CMDPPTPicChangeMsgNotify.optType)
  return opttype_;
}
 void CMDPPTPicChangeMsgNotify::set_opttype(::google::protobuf::uint32 value) {
  
  opttype_ = value;
  // @@protoc_insertion_point(field_set:CMDPPTPicChangeMsgNotify.optType)
}

// repeated .PPTCoursePicInfo vecpics = 2;
int CMDPPTPicChangeMsgNotify::vecpics_size() const {
  return vecpics_.size();
}
void CMDPPTPicChangeMsgNotify::clear_vecpics() {
  vecpics_.Clear();
}
const ::PPTCoursePicInfo& CMDPPTPicChangeMsgNotify::vecpics(int index) const {
  // @@protoc_insertion_point(field_get:CMDPPTPicChangeMsgNotify.vecpics)
  return vecpics_.Get(index);
}
::PPTCoursePicInfo* CMDPPTPicChangeMsgNotify::mutable_vecpics(int index) {
  // @@protoc_insertion_point(field_mutable:CMDPPTPicChangeMsgNotify.vecpics)
  return vecpics_.Mutable(index);
}
::PPTCoursePicInfo* CMDPPTPicChangeMsgNotify::add_vecpics() {
  // @@protoc_insertion_point(field_add:CMDPPTPicChangeMsgNotify.vecpics)
  return vecpics_.Add();
}
::google::protobuf::RepeatedPtrField< ::PPTCoursePicInfo >*
CMDPPTPicChangeMsgNotify::mutable_vecpics() {
  // @@protoc_insertion_point(field_mutable_list:CMDPPTPicChangeMsgNotify.vecpics)
  return &vecpics_;
}
const ::google::protobuf::RepeatedPtrField< ::PPTCoursePicInfo >&
CMDPPTPicChangeMsgNotify::vecpics() const {
  // @@protoc_insertion_point(field_list:CMDPPTPicChangeMsgNotify.vecpics)
  return vecpics_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
