// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: RoomSvr.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "RoomSvr.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* CMDJoinRoomReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDJoinRoomReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDJoinRoomResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDJoinRoomResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDGateJoinRoomReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDGateJoinRoomReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDGateJoinRoomResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDGateJoinRoomResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDJoinRoomErr_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDJoinRoomErr_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDUserMicState_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDUserMicState_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDUpWaitMic_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDUpWaitMic_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDUpWaitMicList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDUpWaitMicList_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDMicStateListReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDMicStateListReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDMicStateListResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDMicStateListResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDMicStateListResp_PubMic_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDMicStateListResp_PubMic_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDRoomUserInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDRoomUserInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDRoomUserInfos_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDRoomUserInfos_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDUserExitRoomInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDUserExitRoomInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDUserExitRoomInfo_ext_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDUserExitRoomInfo_ext_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDUserExceptExitRoomInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDUserExceptExitRoomInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDOperateWaitMic_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDOperateWaitMic_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDChangeWaitMicIndexResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDChangeWaitMicIndexResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDChangeWaitMicIndexNoty_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDChangeWaitMicIndexNoty_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDRoomMicModSet_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDRoomMicModSet_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDUserKickoutRoomInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDUserKickoutRoomInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDUserKickoutRoomResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDUserKickoutRoomResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDRoomInfoReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDRoomInfoReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDRoomInfoResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDRoomInfoResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDNoticeInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDNoticeInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDRoomBaseInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDRoomBaseInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDGroupMemberReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDGroupMemberReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDUserGroupInfoReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDUserGroupInfoReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDUserGroupInfoResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDUserGroupInfoResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDSetGroupMsgMuteReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDSetGroupMsgMuteReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDSetGroupMsgMuteResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDSetGroupMsgMuteResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDQuitGroupReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDQuitGroupReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDQuitGroupResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDQuitGroupResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDSetUserPriorityReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDSetUserPriorityReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDSetUserPriorityResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDSetUserPriorityResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDSetUserPriorityNoty_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDSetUserPriorityNoty_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDQryGroupVisitCountReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDQryGroupVisitCountReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDQryGroupVisitCountResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDQryGroupVisitCountResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDJoinGroupReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDJoinGroupReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDJoinGroupResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDJoinGroupResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDForbidJoinGroupKillVisitor_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDForbidJoinGroupKillVisitor_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDSettingStat_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDSettingStat_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDGroupSettingStatNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDGroupSettingStatNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDGroupSettingStatReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDGroupSettingStatReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDQryJoinGroupCondReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDQryJoinGroupCondReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDQryJoinGroupCondResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDQryJoinGroupCondResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDApplyJoinGroupAuthReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDApplyJoinGroupAuthReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDApplyJoinGroupAuthResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDApplyJoinGroupAuthResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDHandleJoinGroupAuthReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDHandleJoinGroupAuthReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDHandleJoinGroupAuthResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDHandleJoinGroupAuthResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDSetMicModeReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDSetMicModeReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDSetMicModeResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDSetMicModeResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDSetMicModeNoty_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDSetMicModeNoty_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDSetMicPosStatusReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDSetMicPosStatusReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDSetMicPosStatusResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDSetMicPosStatusResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDSetMicPosStatusNoty_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDSetMicPosStatusNoty_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDRoomInfoExtReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDRoomInfoExtReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDRoomInfoExtResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDRoomInfoExtResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDInviteOnMic_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDInviteOnMic_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDGroupUserSettingReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDGroupUserSettingReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDGroupUserSettingResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDGroupUserSettingResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDAuthStateNoty_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDAuthStateNoty_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDAuthReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDAuthReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDAuthResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDAuthResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDGroupOnlineMemberList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDGroupOnlineMemberList_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDMemberEnterGroup_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDMemberEnterGroup_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDMemberExitGroup_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDMemberExitGroup_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDForbidUserChat_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDForbidUserChat_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDCourseFinish_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDCourseFinish_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDSilenceNoty_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDSilenceNoty_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDSilenceNoty_tipUser_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDSilenceNoty_tipUser_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDNoticeNoty_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDNoticeNoty_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDCloseLiveAndCourseeNoty_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDCloseLiveAndCourseeNoty_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDLiveStartNoty_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDLiveStartNoty_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDLiveStopNoty_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDLiveStopNoty_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDCourseStartNoty_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDCourseStartNoty_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDNewSubCourseNoty_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDNewSubCourseNoty_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDNewCourseNoty_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDNewCourseNoty_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* e_SettingType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* e_UserJoinGroupAuthType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* e_MicMode_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_RoomSvr_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_RoomSvr_2eproto() {
  protobuf_AddDesc_RoomSvr_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "RoomSvr.proto");
  GOOGLE_CHECK(file != NULL);
  CMDJoinRoomReq_descriptor_ = file->message_type(0);
  static const int CMDJoinRoomReq_offsets_[14] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDJoinRoomReq, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDJoinRoomReq, vcbid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDJoinRoomReq, devtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDJoinRoomReq, time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDJoinRoomReq, crc32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDJoinRoomReq, coremessagever_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDJoinRoomReq, cuserpwd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDJoinRoomReq, croompwd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDJoinRoomReq, cserial_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDJoinRoomReq, cmacaddr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDJoinRoomReq, cipaddr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDJoinRoomReq, bloginsource_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDJoinRoomReq, reserve1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDJoinRoomReq, reserve2_),
  };
  CMDJoinRoomReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDJoinRoomReq_descriptor_,
      CMDJoinRoomReq::default_instance_,
      CMDJoinRoomReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDJoinRoomReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDJoinRoomReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDJoinRoomReq, _is_default_instance_));
  CMDJoinRoomResp_descriptor_ = file->message_type(1);
  static const int CMDJoinRoomResp_offsets_[29] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDJoinRoomResp, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDJoinRoomResp, vcbid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDJoinRoomResp, roomtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDJoinRoomResp, busepwd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDJoinRoomResp, biscollectroom_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDJoinRoomResp, devtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDJoinRoomResp, seats_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDJoinRoomResp, groupid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDJoinRoomResp, runstate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDJoinRoomResp, creatorid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDJoinRoomResp, op1id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDJoinRoomResp, op2id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDJoinRoomResp, op3id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDJoinRoomResp, op4id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDJoinRoomResp, inroomstate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDJoinRoomResp, nk_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDJoinRoomResp, nb_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDJoinRoomResp, nlotterypool_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDJoinRoomResp, nchestnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDJoinRoomResp, cname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDJoinRoomResp, cmediaaddr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDJoinRoomResp, cpwd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDJoinRoomResp, npopularity__),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDJoinRoomResp, ncollect_times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDJoinRoomResp, userroletype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDJoinRoomResp, groupicon_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDJoinRoomResp, groupshowid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDJoinRoomResp, muteswitch_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDJoinRoomResp, liveurl_),
  };
  CMDJoinRoomResp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDJoinRoomResp_descriptor_,
      CMDJoinRoomResp::default_instance_,
      CMDJoinRoomResp_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDJoinRoomResp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDJoinRoomResp, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDJoinRoomResp, _is_default_instance_));
  CMDGateJoinRoomReq_descriptor_ = file->message_type(2);
  static const int CMDGateJoinRoomReq_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGateJoinRoomReq, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGateJoinRoomReq, vcbid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGateJoinRoomReq, cipaddr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGateJoinRoomReq, uuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGateJoinRoomReq, devtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGateJoinRoomReq, micuserid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGateJoinRoomReq, micstate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGateJoinRoomReq, micindex_),
  };
  CMDGateJoinRoomReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDGateJoinRoomReq_descriptor_,
      CMDGateJoinRoomReq::default_instance_,
      CMDGateJoinRoomReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDGateJoinRoomReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGateJoinRoomReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGateJoinRoomReq, _is_default_instance_));
  CMDGateJoinRoomResp_descriptor_ = file->message_type(3);
  static const int CMDGateJoinRoomResp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGateJoinRoomResp, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGateJoinRoomResp, vcbid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGateJoinRoomResp, errinfo_),
  };
  CMDGateJoinRoomResp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDGateJoinRoomResp_descriptor_,
      CMDGateJoinRoomResp::default_instance_,
      CMDGateJoinRoomResp_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDGateJoinRoomResp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGateJoinRoomResp, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGateJoinRoomResp, _is_default_instance_));
  CMDJoinRoomErr_descriptor_ = file->message_type(4);
  static const int CMDJoinRoomErr_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDJoinRoomErr, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDJoinRoomErr, vcbid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDJoinRoomErr, errinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDJoinRoomErr, data1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDJoinRoomErr, data2_),
  };
  CMDJoinRoomErr_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDJoinRoomErr_descriptor_,
      CMDJoinRoomErr::default_instance_,
      CMDJoinRoomErr_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDJoinRoomErr),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDJoinRoomErr, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDJoinRoomErr, _is_default_instance_));
  CMDUserMicState_descriptor_ = file->message_type(5);
  static const int CMDUserMicState_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserMicState, vcbid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserMicState, runid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserMicState, toid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserMicState, giftid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserMicState, giftnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserMicState, micstate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserMicState, micindex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserMicState, optype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserMicState, reserve11_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserMicState, errinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserMicState, micsecond_),
  };
  CMDUserMicState_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDUserMicState_descriptor_,
      CMDUserMicState::default_instance_,
      CMDUserMicState_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDUserMicState),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserMicState, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserMicState, _is_default_instance_));
  CMDUpWaitMic_descriptor_ = file->message_type(6);
  static const int CMDUpWaitMic_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUpWaitMic, vcbid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUpWaitMic, ruunerid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUpWaitMic, touser_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUpWaitMic, nmicindex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUpWaitMic, errinfo_),
  };
  CMDUpWaitMic_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDUpWaitMic_descriptor_,
      CMDUpWaitMic::default_instance_,
      CMDUpWaitMic_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDUpWaitMic),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUpWaitMic, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUpWaitMic, _is_default_instance_));
  CMDUpWaitMicList_descriptor_ = file->message_type(7);
  static const int CMDUpWaitMicList_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUpWaitMicList, size_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUpWaitMicList, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUpWaitMicList, vcbid_),
  };
  CMDUpWaitMicList_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDUpWaitMicList_descriptor_,
      CMDUpWaitMicList::default_instance_,
      CMDUpWaitMicList_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDUpWaitMicList),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUpWaitMicList, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUpWaitMicList, _is_default_instance_));
  CMDMicStateListReq_descriptor_ = file->message_type(8);
  static const int CMDMicStateListReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDMicStateListReq, vcbid_),
  };
  CMDMicStateListReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDMicStateListReq_descriptor_,
      CMDMicStateListReq::default_instance_,
      CMDMicStateListReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDMicStateListReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDMicStateListReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDMicStateListReq, _is_default_instance_));
  CMDMicStateListResp_descriptor_ = file->message_type(9);
  static const int CMDMicStateListResp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDMicStateListResp, vcbid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDMicStateListResp, pubmic_),
  };
  CMDMicStateListResp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDMicStateListResp_descriptor_,
      CMDMicStateListResp::default_instance_,
      CMDMicStateListResp_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDMicStateListResp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDMicStateListResp, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDMicStateListResp, _is_default_instance_));
  CMDMicStateListResp_PubMic_descriptor_ = CMDMicStateListResp_descriptor_->nested_type(0);
  static const int CMDMicStateListResp_PubMic_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDMicStateListResp_PubMic, userinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDMicStateListResp_PubMic, status_),
  };
  CMDMicStateListResp_PubMic_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDMicStateListResp_PubMic_descriptor_,
      CMDMicStateListResp_PubMic::default_instance_,
      CMDMicStateListResp_PubMic_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDMicStateListResp_PubMic),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDMicStateListResp_PubMic, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDMicStateListResp_PubMic, _is_default_instance_));
  CMDRoomUserInfo_descriptor_ = file->message_type(10);
  static const int CMDRoomUserInfo_offsets_[16] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDRoomUserInfo, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDRoomUserInfo, vcbid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDRoomUserInfo, userlevel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDRoomUserInfo, userviplevel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDRoomUserInfo, gender_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDRoomUserInfo, devtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDRoomUserInfo, pubmicindex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDRoomUserInfo, roomlevel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDRoomUserInfo, usertype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDRoomUserInfo, cometime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDRoomUserInfo, chead_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDRoomUserInfo, userstate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDRoomUserInfo, bforbidchat_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDRoomUserInfo, useralias_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDRoomUserInfo, authstate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDRoomUserInfo, videourl_),
  };
  CMDRoomUserInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDRoomUserInfo_descriptor_,
      CMDRoomUserInfo::default_instance_,
      CMDRoomUserInfo_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDRoomUserInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDRoomUserInfo, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDRoomUserInfo, _is_default_instance_));
  CMDRoomUserInfos_descriptor_ = file->message_type(11);
  static const int CMDRoomUserInfos_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDRoomUserInfos, userinfo_),
  };
  CMDRoomUserInfos_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDRoomUserInfos_descriptor_,
      CMDRoomUserInfos::default_instance_,
      CMDRoomUserInfos_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDRoomUserInfos),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDRoomUserInfos, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDRoomUserInfos, _is_default_instance_));
  CMDUserExitRoomInfo_descriptor_ = file->message_type(12);
  static const int CMDUserExitRoomInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserExitRoomInfo, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserExitRoomInfo, vcbid_),
  };
  CMDUserExitRoomInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDUserExitRoomInfo_descriptor_,
      CMDUserExitRoomInfo::default_instance_,
      CMDUserExitRoomInfo_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDUserExitRoomInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserExitRoomInfo, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserExitRoomInfo, _is_default_instance_));
  CMDUserExitRoomInfo_ext_descriptor_ = file->message_type(13);
  static const int CMDUserExitRoomInfo_ext_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserExitRoomInfo_ext, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserExitRoomInfo_ext, vcbid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserExitRoomInfo_ext, roletype_),
  };
  CMDUserExitRoomInfo_ext_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDUserExitRoomInfo_ext_descriptor_,
      CMDUserExitRoomInfo_ext::default_instance_,
      CMDUserExitRoomInfo_ext_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDUserExitRoomInfo_ext),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserExitRoomInfo_ext, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserExitRoomInfo_ext, _is_default_instance_));
  CMDUserExceptExitRoomInfo_descriptor_ = file->message_type(14);
  static const int CMDUserExceptExitRoomInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserExceptExitRoomInfo, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserExceptExitRoomInfo, vcbid_),
  };
  CMDUserExceptExitRoomInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDUserExceptExitRoomInfo_descriptor_,
      CMDUserExceptExitRoomInfo::default_instance_,
      CMDUserExceptExitRoomInfo_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDUserExceptExitRoomInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserExceptExitRoomInfo, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserExceptExitRoomInfo, _is_default_instance_));
  CMDOperateWaitMic_descriptor_ = file->message_type(15);
  static const int CMDOperateWaitMic_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDOperateWaitMic, vcbid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDOperateWaitMic, ruunerid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDOperateWaitMic, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDOperateWaitMic, micid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDOperateWaitMic, optype_),
  };
  CMDOperateWaitMic_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDOperateWaitMic_descriptor_,
      CMDOperateWaitMic::default_instance_,
      CMDOperateWaitMic_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDOperateWaitMic),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDOperateWaitMic, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDOperateWaitMic, _is_default_instance_));
  CMDChangeWaitMicIndexResp_descriptor_ = file->message_type(16);
  static const int CMDChangeWaitMicIndexResp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDChangeWaitMicIndexResp, vcbid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDChangeWaitMicIndexResp, errinfo_),
  };
  CMDChangeWaitMicIndexResp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDChangeWaitMicIndexResp_descriptor_,
      CMDChangeWaitMicIndexResp::default_instance_,
      CMDChangeWaitMicIndexResp_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDChangeWaitMicIndexResp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDChangeWaitMicIndexResp, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDChangeWaitMicIndexResp, _is_default_instance_));
  CMDChangeWaitMicIndexNoty_descriptor_ = file->message_type(17);
  static const int CMDChangeWaitMicIndexNoty_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDChangeWaitMicIndexNoty, vcbid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDChangeWaitMicIndexNoty, ruunerid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDChangeWaitMicIndexNoty, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDChangeWaitMicIndexNoty, micid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDChangeWaitMicIndexNoty, optype_),
  };
  CMDChangeWaitMicIndexNoty_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDChangeWaitMicIndexNoty_descriptor_,
      CMDChangeWaitMicIndexNoty::default_instance_,
      CMDChangeWaitMicIndexNoty_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDChangeWaitMicIndexNoty),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDChangeWaitMicIndexNoty, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDChangeWaitMicIndexNoty, _is_default_instance_));
  CMDRoomMicModSet_descriptor_ = file->message_type(18);
  static const int CMDRoomMicModSet_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDRoomMicModSet, vcbid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDRoomMicModSet, micstatus_),
  };
  CMDRoomMicModSet_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDRoomMicModSet_descriptor_,
      CMDRoomMicModSet::default_instance_,
      CMDRoomMicModSet_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDRoomMicModSet),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDRoomMicModSet, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDRoomMicModSet, _is_default_instance_));
  CMDUserKickoutRoomInfo_descriptor_ = file->message_type(19);
  static const int CMDUserKickoutRoomInfo_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserKickoutRoomInfo, vcbid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserKickoutRoomInfo, srcid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserKickoutRoomInfo, toid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserKickoutRoomInfo, resonid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserKickoutRoomInfo, mins_),
  };
  CMDUserKickoutRoomInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDUserKickoutRoomInfo_descriptor_,
      CMDUserKickoutRoomInfo::default_instance_,
      CMDUserKickoutRoomInfo_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDUserKickoutRoomInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserKickoutRoomInfo, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserKickoutRoomInfo, _is_default_instance_));
  CMDUserKickoutRoomResp_descriptor_ = file->message_type(20);
  static const int CMDUserKickoutRoomResp_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserKickoutRoomResp, errinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserKickoutRoomResp, vcbid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserKickoutRoomResp, srcid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserKickoutRoomResp, toid_),
  };
  CMDUserKickoutRoomResp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDUserKickoutRoomResp_descriptor_,
      CMDUserKickoutRoomResp::default_instance_,
      CMDUserKickoutRoomResp_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDUserKickoutRoomResp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserKickoutRoomResp, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserKickoutRoomResp, _is_default_instance_));
  CMDRoomInfoReq_descriptor_ = file->message_type(21);
  static const int CMDRoomInfoReq_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDRoomInfoReq, vcbid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDRoomInfoReq, runnerid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDRoomInfoReq, roomname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDRoomInfoReq, roomnotice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDRoomInfoReq, roomremark_),
  };
  CMDRoomInfoReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDRoomInfoReq_descriptor_,
      CMDRoomInfoReq::default_instance_,
      CMDRoomInfoReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDRoomInfoReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDRoomInfoReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDRoomInfoReq, _is_default_instance_));
  CMDRoomInfoResp_descriptor_ = file->message_type(22);
  static const int CMDRoomInfoResp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDRoomInfoResp, vcbid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDRoomInfoResp, runnerid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDRoomInfoResp, errinfo_),
  };
  CMDRoomInfoResp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDRoomInfoResp_descriptor_,
      CMDRoomInfoResp::default_instance_,
      CMDRoomInfoResp_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDRoomInfoResp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDRoomInfoResp, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDRoomInfoResp, _is_default_instance_));
  CMDNoticeInfo_descriptor_ = file->message_type(23);
  static const int CMDNoticeInfo_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDNoticeInfo, noticeuserid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDNoticeInfo, roomnotice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDNoticeInfo, noticetime_),
  };
  CMDNoticeInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDNoticeInfo_descriptor_,
      CMDNoticeInfo::default_instance_,
      CMDNoticeInfo_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDNoticeInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDNoticeInfo, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDNoticeInfo, _is_default_instance_));
  CMDRoomBaseInfo_descriptor_ = file->message_type(24);
  static const int CMDRoomBaseInfo_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDRoomBaseInfo, vcbid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDRoomBaseInfo, seats_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDRoomBaseInfo, creatorid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDRoomBaseInfo, opstate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDRoomBaseInfo, roomname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDRoomBaseInfo, icon_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDRoomBaseInfo, noticeinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDRoomBaseInfo, roomremark_),
  };
  CMDRoomBaseInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDRoomBaseInfo_descriptor_,
      CMDRoomBaseInfo::default_instance_,
      CMDRoomBaseInfo_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDRoomBaseInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDRoomBaseInfo, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDRoomBaseInfo, _is_default_instance_));
  CMDGroupMemberReq_descriptor_ = file->message_type(25);
  static const int CMDGroupMemberReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupMemberReq, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupMemberReq, groupid_),
  };
  CMDGroupMemberReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDGroupMemberReq_descriptor_,
      CMDGroupMemberReq::default_instance_,
      CMDGroupMemberReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDGroupMemberReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupMemberReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupMemberReq, _is_default_instance_));
  CMDUserGroupInfoReq_descriptor_ = file->message_type(26);
  static const int CMDUserGroupInfoReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserGroupInfoReq, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserGroupInfoReq, groupid_),
  };
  CMDUserGroupInfoReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDUserGroupInfoReq_descriptor_,
      CMDUserGroupInfoReq::default_instance_,
      CMDUserGroupInfoReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDUserGroupInfoReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserGroupInfoReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserGroupInfoReq, _is_default_instance_));
  CMDUserGroupInfoResp_descriptor_ = file->message_type(27);
  static const int CMDUserGroupInfoResp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserGroupInfoResp, errinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserGroupInfoResp, userinfo_),
  };
  CMDUserGroupInfoResp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDUserGroupInfoResp_descriptor_,
      CMDUserGroupInfoResp::default_instance_,
      CMDUserGroupInfoResp_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDUserGroupInfoResp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserGroupInfoResp, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserGroupInfoResp, _is_default_instance_));
  CMDSetGroupMsgMuteReq_descriptor_ = file->message_type(28);
  static const int CMDSetGroupMsgMuteReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSetGroupMsgMuteReq, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSetGroupMsgMuteReq, groupid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSetGroupMsgMuteReq, muteset_),
  };
  CMDSetGroupMsgMuteReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDSetGroupMsgMuteReq_descriptor_,
      CMDSetGroupMsgMuteReq::default_instance_,
      CMDSetGroupMsgMuteReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDSetGroupMsgMuteReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSetGroupMsgMuteReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSetGroupMsgMuteReq, _is_default_instance_));
  CMDSetGroupMsgMuteResp_descriptor_ = file->message_type(29);
  static const int CMDSetGroupMsgMuteResp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSetGroupMsgMuteResp, errinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSetGroupMsgMuteResp, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSetGroupMsgMuteResp, groupid_),
  };
  CMDSetGroupMsgMuteResp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDSetGroupMsgMuteResp_descriptor_,
      CMDSetGroupMsgMuteResp::default_instance_,
      CMDSetGroupMsgMuteResp_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDSetGroupMsgMuteResp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSetGroupMsgMuteResp, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSetGroupMsgMuteResp, _is_default_instance_));
  CMDQuitGroupReq_descriptor_ = file->message_type(30);
  static const int CMDQuitGroupReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDQuitGroupReq, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDQuitGroupReq, groupid_),
  };
  CMDQuitGroupReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDQuitGroupReq_descriptor_,
      CMDQuitGroupReq::default_instance_,
      CMDQuitGroupReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDQuitGroupReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDQuitGroupReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDQuitGroupReq, _is_default_instance_));
  CMDQuitGroupResp_descriptor_ = file->message_type(31);
  static const int CMDQuitGroupResp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDQuitGroupResp, errinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDQuitGroupResp, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDQuitGroupResp, groupid_),
  };
  CMDQuitGroupResp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDQuitGroupResp_descriptor_,
      CMDQuitGroupResp::default_instance_,
      CMDQuitGroupResp_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDQuitGroupResp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDQuitGroupResp, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDQuitGroupResp, _is_default_instance_));
  CMDSetUserPriorityReq_descriptor_ = file->message_type(32);
  static const int CMDSetUserPriorityReq_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSetUserPriorityReq, run_userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSetUserPriorityReq, to_userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSetUserPriorityReq, groupid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSetUserPriorityReq, roletype_),
  };
  CMDSetUserPriorityReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDSetUserPriorityReq_descriptor_,
      CMDSetUserPriorityReq::default_instance_,
      CMDSetUserPriorityReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDSetUserPriorityReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSetUserPriorityReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSetUserPriorityReq, _is_default_instance_));
  CMDSetUserPriorityResp_descriptor_ = file->message_type(33);
  static const int CMDSetUserPriorityResp_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSetUserPriorityResp, errinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSetUserPriorityResp, run_userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSetUserPriorityResp, to_userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSetUserPriorityResp, groupid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSetUserPriorityResp, roletype_),
  };
  CMDSetUserPriorityResp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDSetUserPriorityResp_descriptor_,
      CMDSetUserPriorityResp::default_instance_,
      CMDSetUserPriorityResp_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDSetUserPriorityResp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSetUserPriorityResp, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSetUserPriorityResp, _is_default_instance_));
  CMDSetUserPriorityNoty_descriptor_ = file->message_type(34);
  static const int CMDSetUserPriorityNoty_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSetUserPriorityNoty, run_userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSetUserPriorityNoty, to_userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSetUserPriorityNoty, groupid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSetUserPriorityNoty, roletype_),
  };
  CMDSetUserPriorityNoty_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDSetUserPriorityNoty_descriptor_,
      CMDSetUserPriorityNoty::default_instance_,
      CMDSetUserPriorityNoty_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDSetUserPriorityNoty),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSetUserPriorityNoty, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSetUserPriorityNoty, _is_default_instance_));
  CMDQryGroupVisitCountReq_descriptor_ = file->message_type(35);
  static const int CMDQryGroupVisitCountReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDQryGroupVisitCountReq, groupid_),
  };
  CMDQryGroupVisitCountReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDQryGroupVisitCountReq_descriptor_,
      CMDQryGroupVisitCountReq::default_instance_,
      CMDQryGroupVisitCountReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDQryGroupVisitCountReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDQryGroupVisitCountReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDQryGroupVisitCountReq, _is_default_instance_));
  CMDQryGroupVisitCountResp_descriptor_ = file->message_type(36);
  static const int CMDQryGroupVisitCountResp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDQryGroupVisitCountResp, groupid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDQryGroupVisitCountResp, visitcount_),
  };
  CMDQryGroupVisitCountResp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDQryGroupVisitCountResp_descriptor_,
      CMDQryGroupVisitCountResp::default_instance_,
      CMDQryGroupVisitCountResp_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDQryGroupVisitCountResp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDQryGroupVisitCountResp, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDQryGroupVisitCountResp, _is_default_instance_));
  CMDJoinGroupReq_descriptor_ = file->message_type(37);
  static const int CMDJoinGroupReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDJoinGroupReq, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDJoinGroupReq, groupid_),
  };
  CMDJoinGroupReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDJoinGroupReq_descriptor_,
      CMDJoinGroupReq::default_instance_,
      CMDJoinGroupReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDJoinGroupReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDJoinGroupReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDJoinGroupReq, _is_default_instance_));
  CMDJoinGroupResp_descriptor_ = file->message_type(38);
  static const int CMDJoinGroupResp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDJoinGroupResp, errinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDJoinGroupResp, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDJoinGroupResp, groupid_),
  };
  CMDJoinGroupResp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDJoinGroupResp_descriptor_,
      CMDJoinGroupResp::default_instance_,
      CMDJoinGroupResp_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDJoinGroupResp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDJoinGroupResp, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDJoinGroupResp, _is_default_instance_));
  CMDForbidJoinGroupKillVisitor_descriptor_ = file->message_type(39);
  static const int CMDForbidJoinGroupKillVisitor_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDForbidJoinGroupKillVisitor, groupid_),
  };
  CMDForbidJoinGroupKillVisitor_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDForbidJoinGroupKillVisitor_descriptor_,
      CMDForbidJoinGroupKillVisitor::default_instance_,
      CMDForbidJoinGroupKillVisitor_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDForbidJoinGroupKillVisitor),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDForbidJoinGroupKillVisitor, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDForbidJoinGroupKillVisitor, _is_default_instance_));
  CMDSettingStat_descriptor_ = file->message_type(40);
  static const int CMDSettingStat_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSettingStat, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSettingStat, stat_),
  };
  CMDSettingStat_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDSettingStat_descriptor_,
      CMDSettingStat::default_instance_,
      CMDSettingStat_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDSettingStat),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSettingStat, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSettingStat, _is_default_instance_));
  CMDGroupSettingStatNotify_descriptor_ = file->message_type(41);
  static const int CMDGroupSettingStatNotify_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupSettingStatNotify, runid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupSettingStatNotify, groupid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupSettingStatNotify, list_),
  };
  CMDGroupSettingStatNotify_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDGroupSettingStatNotify_descriptor_,
      CMDGroupSettingStatNotify::default_instance_,
      CMDGroupSettingStatNotify_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDGroupSettingStatNotify),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupSettingStatNotify, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupSettingStatNotify, _is_default_instance_));
  CMDGroupSettingStatReq_descriptor_ = file->message_type(42);
  static const int CMDGroupSettingStatReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupSettingStatReq, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupSettingStatReq, groupid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupSettingStatReq, type_),
  };
  CMDGroupSettingStatReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDGroupSettingStatReq_descriptor_,
      CMDGroupSettingStatReq::default_instance_,
      CMDGroupSettingStatReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDGroupSettingStatReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupSettingStatReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupSettingStatReq, _is_default_instance_));
  CMDQryJoinGroupCondReq_descriptor_ = file->message_type(43);
  static const int CMDQryJoinGroupCondReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDQryJoinGroupCondReq, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDQryJoinGroupCondReq, groupid_),
  };
  CMDQryJoinGroupCondReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDQryJoinGroupCondReq_descriptor_,
      CMDQryJoinGroupCondReq::default_instance_,
      CMDQryJoinGroupCondReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDQryJoinGroupCondReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDQryJoinGroupCondReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDQryJoinGroupCondReq, _is_default_instance_));
  CMDQryJoinGroupCondResp_descriptor_ = file->message_type(44);
  static const int CMDQryJoinGroupCondResp_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDQryJoinGroupCondResp, errinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDQryJoinGroupCondResp, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDQryJoinGroupCondResp, groupid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDQryJoinGroupCondResp, action_),
  };
  CMDQryJoinGroupCondResp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDQryJoinGroupCondResp_descriptor_,
      CMDQryJoinGroupCondResp::default_instance_,
      CMDQryJoinGroupCondResp_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDQryJoinGroupCondResp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDQryJoinGroupCondResp, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDQryJoinGroupCondResp, _is_default_instance_));
  CMDApplyJoinGroupAuthReq_descriptor_ = file->message_type(45);
  static const int CMDApplyJoinGroupAuthReq_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDApplyJoinGroupAuthReq, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDApplyJoinGroupAuthReq, groupid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDApplyJoinGroupAuthReq, authtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDApplyJoinGroupAuthReq, msg_),
  };
  CMDApplyJoinGroupAuthReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDApplyJoinGroupAuthReq_descriptor_,
      CMDApplyJoinGroupAuthReq::default_instance_,
      CMDApplyJoinGroupAuthReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDApplyJoinGroupAuthReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDApplyJoinGroupAuthReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDApplyJoinGroupAuthReq, _is_default_instance_));
  CMDApplyJoinGroupAuthResp_descriptor_ = file->message_type(46);
  static const int CMDApplyJoinGroupAuthResp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDApplyJoinGroupAuthResp, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDApplyJoinGroupAuthResp, groupid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDApplyJoinGroupAuthResp, errinfo_),
  };
  CMDApplyJoinGroupAuthResp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDApplyJoinGroupAuthResp_descriptor_,
      CMDApplyJoinGroupAuthResp::default_instance_,
      CMDApplyJoinGroupAuthResp_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDApplyJoinGroupAuthResp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDApplyJoinGroupAuthResp, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDApplyJoinGroupAuthResp, _is_default_instance_));
  CMDHandleJoinGroupAuthReq_descriptor_ = file->message_type(47);
  static const int CMDHandleJoinGroupAuthReq_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDHandleJoinGroupAuthReq, run_userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDHandleJoinGroupAuthReq, groupid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDHandleJoinGroupAuthReq, apply_userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDHandleJoinGroupAuthReq, authid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDHandleJoinGroupAuthReq, agree_),
  };
  CMDHandleJoinGroupAuthReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDHandleJoinGroupAuthReq_descriptor_,
      CMDHandleJoinGroupAuthReq::default_instance_,
      CMDHandleJoinGroupAuthReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDHandleJoinGroupAuthReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDHandleJoinGroupAuthReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDHandleJoinGroupAuthReq, _is_default_instance_));
  CMDHandleJoinGroupAuthResp_descriptor_ = file->message_type(48);
  static const int CMDHandleJoinGroupAuthResp_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDHandleJoinGroupAuthResp, run_userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDHandleJoinGroupAuthResp, groupid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDHandleJoinGroupAuthResp, apply_userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDHandleJoinGroupAuthResp, authid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDHandleJoinGroupAuthResp, agree_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDHandleJoinGroupAuthResp, errinfo_),
  };
  CMDHandleJoinGroupAuthResp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDHandleJoinGroupAuthResp_descriptor_,
      CMDHandleJoinGroupAuthResp::default_instance_,
      CMDHandleJoinGroupAuthResp_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDHandleJoinGroupAuthResp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDHandleJoinGroupAuthResp, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDHandleJoinGroupAuthResp, _is_default_instance_));
  CMDSetMicModeReq_descriptor_ = file->message_type(49);
  static const int CMDSetMicModeReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSetMicModeReq, vcbid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSetMicModeReq, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSetMicModeReq, micmode_),
  };
  CMDSetMicModeReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDSetMicModeReq_descriptor_,
      CMDSetMicModeReq::default_instance_,
      CMDSetMicModeReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDSetMicModeReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSetMicModeReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSetMicModeReq, _is_default_instance_));
  CMDSetMicModeResp_descriptor_ = file->message_type(50);
  static const int CMDSetMicModeResp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSetMicModeResp, vcbid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSetMicModeResp, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSetMicModeResp, errinfo_),
  };
  CMDSetMicModeResp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDSetMicModeResp_descriptor_,
      CMDSetMicModeResp::default_instance_,
      CMDSetMicModeResp_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDSetMicModeResp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSetMicModeResp, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSetMicModeResp, _is_default_instance_));
  CMDSetMicModeNoty_descriptor_ = file->message_type(51);
  static const int CMDSetMicModeNoty_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSetMicModeNoty, vcbid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSetMicModeNoty, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSetMicModeNoty, micmode_),
  };
  CMDSetMicModeNoty_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDSetMicModeNoty_descriptor_,
      CMDSetMicModeNoty::default_instance_,
      CMDSetMicModeNoty_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDSetMicModeNoty),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSetMicModeNoty, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSetMicModeNoty, _is_default_instance_));
  CMDSetMicPosStatusReq_descriptor_ = file->message_type(52);
  static const int CMDSetMicPosStatusReq_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSetMicPosStatusReq, vcbid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSetMicPosStatusReq, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSetMicPosStatusReq, index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSetMicPosStatusReq, status_),
  };
  CMDSetMicPosStatusReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDSetMicPosStatusReq_descriptor_,
      CMDSetMicPosStatusReq::default_instance_,
      CMDSetMicPosStatusReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDSetMicPosStatusReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSetMicPosStatusReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSetMicPosStatusReq, _is_default_instance_));
  CMDSetMicPosStatusResp_descriptor_ = file->message_type(53);
  static const int CMDSetMicPosStatusResp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSetMicPosStatusResp, vcbid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSetMicPosStatusResp, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSetMicPosStatusResp, errinfo_),
  };
  CMDSetMicPosStatusResp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDSetMicPosStatusResp_descriptor_,
      CMDSetMicPosStatusResp::default_instance_,
      CMDSetMicPosStatusResp_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDSetMicPosStatusResp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSetMicPosStatusResp, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSetMicPosStatusResp, _is_default_instance_));
  CMDSetMicPosStatusNoty_descriptor_ = file->message_type(54);
  static const int CMDSetMicPosStatusNoty_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSetMicPosStatusNoty, vcbid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSetMicPosStatusNoty, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSetMicPosStatusNoty, index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSetMicPosStatusNoty, status_),
  };
  CMDSetMicPosStatusNoty_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDSetMicPosStatusNoty_descriptor_,
      CMDSetMicPosStatusNoty::default_instance_,
      CMDSetMicPosStatusNoty_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDSetMicPosStatusNoty),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSetMicPosStatusNoty, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSetMicPosStatusNoty, _is_default_instance_));
  CMDRoomInfoExtReq_descriptor_ = file->message_type(55);
  static const int CMDRoomInfoExtReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDRoomInfoExtReq, vcbid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDRoomInfoExtReq, userid_),
  };
  CMDRoomInfoExtReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDRoomInfoExtReq_descriptor_,
      CMDRoomInfoExtReq::default_instance_,
      CMDRoomInfoExtReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDRoomInfoExtReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDRoomInfoExtReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDRoomInfoExtReq, _is_default_instance_));
  CMDRoomInfoExtResp_descriptor_ = file->message_type(56);
  static const int CMDRoomInfoExtResp_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDRoomInfoExtResp, vcbid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDRoomInfoExtResp, micmode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDRoomInfoExtResp, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDRoomInfoExtResp, icon_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDRoomInfoExtResp, micsec_),
  };
  CMDRoomInfoExtResp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDRoomInfoExtResp_descriptor_,
      CMDRoomInfoExtResp::default_instance_,
      CMDRoomInfoExtResp_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDRoomInfoExtResp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDRoomInfoExtResp, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDRoomInfoExtResp, _is_default_instance_));
  CMDInviteOnMic_descriptor_ = file->message_type(57);
  static const int CMDInviteOnMic_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDInviteOnMic, runuserid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDInviteOnMic, touserid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDInviteOnMic, optype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDInviteOnMic, vcbid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDInviteOnMic, sessionid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDInviteOnMic, errinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDInviteOnMic, intimacy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDInviteOnMic, threshold_),
  };
  CMDInviteOnMic_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDInviteOnMic_descriptor_,
      CMDInviteOnMic::default_instance_,
      CMDInviteOnMic_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDInviteOnMic),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDInviteOnMic, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDInviteOnMic, _is_default_instance_));
  CMDGroupUserSettingReq_descriptor_ = file->message_type(58);
  static const int CMDGroupUserSettingReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupUserSettingReq, groupid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupUserSettingReq, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupUserSettingReq, pchatthreshold_),
  };
  CMDGroupUserSettingReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDGroupUserSettingReq_descriptor_,
      CMDGroupUserSettingReq::default_instance_,
      CMDGroupUserSettingReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDGroupUserSettingReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupUserSettingReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupUserSettingReq, _is_default_instance_));
  CMDGroupUserSettingResp_descriptor_ = file->message_type(59);
  static const int CMDGroupUserSettingResp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupUserSettingResp, errinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupUserSettingResp, groupid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupUserSettingResp, userid_),
  };
  CMDGroupUserSettingResp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDGroupUserSettingResp_descriptor_,
      CMDGroupUserSettingResp::default_instance_,
      CMDGroupUserSettingResp_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDGroupUserSettingResp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupUserSettingResp, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupUserSettingResp, _is_default_instance_));
  CMDAuthStateNoty_descriptor_ = file->message_type(60);
  static const int CMDAuthStateNoty_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDAuthStateNoty, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDAuthStateNoty, groupid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDAuthStateNoty, authstate_),
  };
  CMDAuthStateNoty_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDAuthStateNoty_descriptor_,
      CMDAuthStateNoty::default_instance_,
      CMDAuthStateNoty_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDAuthStateNoty),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDAuthStateNoty, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDAuthStateNoty, _is_default_instance_));
  CMDAuthReq_descriptor_ = file->message_type(61);
  static const int CMDAuthReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDAuthReq, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDAuthReq, vcbid_),
  };
  CMDAuthReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDAuthReq_descriptor_,
      CMDAuthReq::default_instance_,
      CMDAuthReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDAuthReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDAuthReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDAuthReq, _is_default_instance_));
  CMDAuthResp_descriptor_ = file->message_type(62);
  static const int CMDAuthResp_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDAuthResp, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDAuthResp, vcbid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDAuthResp, appid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDAuthResp, recvkey_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDAuthResp, sendkey_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDAuthResp, errcode_),
  };
  CMDAuthResp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDAuthResp_descriptor_,
      CMDAuthResp::default_instance_,
      CMDAuthResp_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDAuthResp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDAuthResp, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDAuthResp, _is_default_instance_));
  CMDGroupOnlineMemberList_descriptor_ = file->message_type(63);
  static const int CMDGroupOnlineMemberList_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupOnlineMemberList, groupid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupOnlineMemberList, list_),
  };
  CMDGroupOnlineMemberList_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDGroupOnlineMemberList_descriptor_,
      CMDGroupOnlineMemberList::default_instance_,
      CMDGroupOnlineMemberList_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDGroupOnlineMemberList),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupOnlineMemberList, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupOnlineMemberList, _is_default_instance_));
  CMDMemberEnterGroup_descriptor_ = file->message_type(64);
  static const int CMDMemberEnterGroup_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDMemberEnterGroup, groupid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDMemberEnterGroup, userid_),
  };
  CMDMemberEnterGroup_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDMemberEnterGroup_descriptor_,
      CMDMemberEnterGroup::default_instance_,
      CMDMemberEnterGroup_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDMemberEnterGroup),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDMemberEnterGroup, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDMemberEnterGroup, _is_default_instance_));
  CMDMemberExitGroup_descriptor_ = file->message_type(65);
  static const int CMDMemberExitGroup_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDMemberExitGroup, groupid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDMemberExitGroup, userid_),
  };
  CMDMemberExitGroup_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDMemberExitGroup_descriptor_,
      CMDMemberExitGroup::default_instance_,
      CMDMemberExitGroup_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDMemberExitGroup),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDMemberExitGroup, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDMemberExitGroup, _is_default_instance_));
  CMDForbidUserChat_descriptor_ = file->message_type(66);
  static const int CMDForbidUserChat_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDForbidUserChat, groupid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDForbidUserChat, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDForbidUserChat, toid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDForbidUserChat, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDForbidUserChat, errid_),
  };
  CMDForbidUserChat_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDForbidUserChat_descriptor_,
      CMDForbidUserChat::default_instance_,
      CMDForbidUserChat_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDForbidUserChat),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDForbidUserChat, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDForbidUserChat, _is_default_instance_));
  CMDCourseFinish_descriptor_ = file->message_type(67);
  static const int CMDCourseFinish_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDCourseFinish, groupid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDCourseFinish, userid_),
  };
  CMDCourseFinish_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDCourseFinish_descriptor_,
      CMDCourseFinish::default_instance_,
      CMDCourseFinish_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDCourseFinish),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDCourseFinish, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDCourseFinish, _is_default_instance_));
  CMDSilenceNoty_descriptor_ = file->message_type(68);
  static const int CMDSilenceNoty_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSilenceNoty, groupid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSilenceNoty, user_),
  };
  CMDSilenceNoty_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDSilenceNoty_descriptor_,
      CMDSilenceNoty::default_instance_,
      CMDSilenceNoty_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDSilenceNoty),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSilenceNoty, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSilenceNoty, _is_default_instance_));
  CMDSilenceNoty_tipUser_descriptor_ = CMDSilenceNoty_descriptor_->nested_type(0);
  static const int CMDSilenceNoty_tipUser_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSilenceNoty_tipUser, srcname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSilenceNoty_tipUser, srchead_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSilenceNoty_tipUser, gifname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSilenceNoty_tipUser, gifpicture_),
  };
  CMDSilenceNoty_tipUser_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDSilenceNoty_tipUser_descriptor_,
      CMDSilenceNoty_tipUser::default_instance_,
      CMDSilenceNoty_tipUser_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDSilenceNoty_tipUser),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSilenceNoty_tipUser, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSilenceNoty_tipUser, _is_default_instance_));
  CMDNoticeNoty_descriptor_ = file->message_type(69);
  static const int CMDNoticeNoty_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDNoticeNoty, notice_),
  };
  CMDNoticeNoty_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDNoticeNoty_descriptor_,
      CMDNoticeNoty::default_instance_,
      CMDNoticeNoty_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDNoticeNoty),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDNoticeNoty, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDNoticeNoty, _is_default_instance_));
  CMDCloseLiveAndCourseeNoty_descriptor_ = file->message_type(70);
  static const int CMDCloseLiveAndCourseeNoty_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDCloseLiveAndCourseeNoty, groupid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDCloseLiveAndCourseeNoty, runuserid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDCloseLiveAndCourseeNoty, toid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDCloseLiveAndCourseeNoty, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDCloseLiveAndCourseeNoty, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDCloseLiveAndCourseeNoty, errid_),
  };
  CMDCloseLiveAndCourseeNoty_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDCloseLiveAndCourseeNoty_descriptor_,
      CMDCloseLiveAndCourseeNoty::default_instance_,
      CMDCloseLiveAndCourseeNoty_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDCloseLiveAndCourseeNoty),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDCloseLiveAndCourseeNoty, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDCloseLiveAndCourseeNoty, _is_default_instance_));
  CMDLiveStartNoty_descriptor_ = file->message_type(71);
  static const int CMDLiveStartNoty_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDLiveStartNoty, groupid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDLiveStartNoty, uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDLiveStartNoty, liveurl_),
  };
  CMDLiveStartNoty_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDLiveStartNoty_descriptor_,
      CMDLiveStartNoty::default_instance_,
      CMDLiveStartNoty_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDLiveStartNoty),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDLiveStartNoty, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDLiveStartNoty, _is_default_instance_));
  CMDLiveStopNoty_descriptor_ = file->message_type(72);
  static const int CMDLiveStopNoty_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDLiveStopNoty, groupid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDLiveStopNoty, uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDLiveStopNoty, liveurl_),
  };
  CMDLiveStopNoty_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDLiveStopNoty_descriptor_,
      CMDLiveStopNoty::default_instance_,
      CMDLiveStopNoty_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDLiveStopNoty),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDLiveStopNoty, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDLiveStopNoty, _is_default_instance_));
  CMDCourseStartNoty_descriptor_ = file->message_type(73);
  static const int CMDCourseStartNoty_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDCourseStartNoty, groupid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDCourseStartNoty, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDCourseStartNoty, title_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDCourseStartNoty, content_),
  };
  CMDCourseStartNoty_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDCourseStartNoty_descriptor_,
      CMDCourseStartNoty::default_instance_,
      CMDCourseStartNoty_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDCourseStartNoty),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDCourseStartNoty, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDCourseStartNoty, _is_default_instance_));
  CMDNewSubCourseNoty_descriptor_ = file->message_type(74);
  static const int CMDNewSubCourseNoty_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDNewSubCourseNoty, courseid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDNewSubCourseNoty, subcourseid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDNewSubCourseNoty, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDNewSubCourseNoty, coursename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDNewSubCourseNoty, subcoursename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDNewSubCourseNoty, begintime_),
  };
  CMDNewSubCourseNoty_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDNewSubCourseNoty_descriptor_,
      CMDNewSubCourseNoty::default_instance_,
      CMDNewSubCourseNoty_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDNewSubCourseNoty),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDNewSubCourseNoty, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDNewSubCourseNoty, _is_default_instance_));
  CMDNewCourseNoty_descriptor_ = file->message_type(75);
  static const int CMDNewCourseNoty_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDNewCourseNoty, liveid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDNewCourseNoty, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDNewCourseNoty, courseid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDNewCourseNoty, roomname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDNewCourseNoty, useralias_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDNewCourseNoty, coursename_),
  };
  CMDNewCourseNoty_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDNewCourseNoty_descriptor_,
      CMDNewCourseNoty::default_instance_,
      CMDNewCourseNoty_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDNewCourseNoty),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDNewCourseNoty, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDNewCourseNoty, _is_default_instance_));
  e_SettingType_descriptor_ = file->enum_type(0);
  e_UserJoinGroupAuthType_descriptor_ = file->enum_type(1);
  e_MicMode_descriptor_ = file->enum_type(2);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_RoomSvr_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDJoinRoomReq_descriptor_, &CMDJoinRoomReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDJoinRoomResp_descriptor_, &CMDJoinRoomResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDGateJoinRoomReq_descriptor_, &CMDGateJoinRoomReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDGateJoinRoomResp_descriptor_, &CMDGateJoinRoomResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDJoinRoomErr_descriptor_, &CMDJoinRoomErr::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDUserMicState_descriptor_, &CMDUserMicState::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDUpWaitMic_descriptor_, &CMDUpWaitMic::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDUpWaitMicList_descriptor_, &CMDUpWaitMicList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDMicStateListReq_descriptor_, &CMDMicStateListReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDMicStateListResp_descriptor_, &CMDMicStateListResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDMicStateListResp_PubMic_descriptor_, &CMDMicStateListResp_PubMic::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDRoomUserInfo_descriptor_, &CMDRoomUserInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDRoomUserInfos_descriptor_, &CMDRoomUserInfos::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDUserExitRoomInfo_descriptor_, &CMDUserExitRoomInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDUserExitRoomInfo_ext_descriptor_, &CMDUserExitRoomInfo_ext::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDUserExceptExitRoomInfo_descriptor_, &CMDUserExceptExitRoomInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDOperateWaitMic_descriptor_, &CMDOperateWaitMic::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDChangeWaitMicIndexResp_descriptor_, &CMDChangeWaitMicIndexResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDChangeWaitMicIndexNoty_descriptor_, &CMDChangeWaitMicIndexNoty::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDRoomMicModSet_descriptor_, &CMDRoomMicModSet::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDUserKickoutRoomInfo_descriptor_, &CMDUserKickoutRoomInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDUserKickoutRoomResp_descriptor_, &CMDUserKickoutRoomResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDRoomInfoReq_descriptor_, &CMDRoomInfoReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDRoomInfoResp_descriptor_, &CMDRoomInfoResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDNoticeInfo_descriptor_, &CMDNoticeInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDRoomBaseInfo_descriptor_, &CMDRoomBaseInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDGroupMemberReq_descriptor_, &CMDGroupMemberReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDUserGroupInfoReq_descriptor_, &CMDUserGroupInfoReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDUserGroupInfoResp_descriptor_, &CMDUserGroupInfoResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDSetGroupMsgMuteReq_descriptor_, &CMDSetGroupMsgMuteReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDSetGroupMsgMuteResp_descriptor_, &CMDSetGroupMsgMuteResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDQuitGroupReq_descriptor_, &CMDQuitGroupReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDQuitGroupResp_descriptor_, &CMDQuitGroupResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDSetUserPriorityReq_descriptor_, &CMDSetUserPriorityReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDSetUserPriorityResp_descriptor_, &CMDSetUserPriorityResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDSetUserPriorityNoty_descriptor_, &CMDSetUserPriorityNoty::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDQryGroupVisitCountReq_descriptor_, &CMDQryGroupVisitCountReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDQryGroupVisitCountResp_descriptor_, &CMDQryGroupVisitCountResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDJoinGroupReq_descriptor_, &CMDJoinGroupReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDJoinGroupResp_descriptor_, &CMDJoinGroupResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDForbidJoinGroupKillVisitor_descriptor_, &CMDForbidJoinGroupKillVisitor::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDSettingStat_descriptor_, &CMDSettingStat::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDGroupSettingStatNotify_descriptor_, &CMDGroupSettingStatNotify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDGroupSettingStatReq_descriptor_, &CMDGroupSettingStatReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDQryJoinGroupCondReq_descriptor_, &CMDQryJoinGroupCondReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDQryJoinGroupCondResp_descriptor_, &CMDQryJoinGroupCondResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDApplyJoinGroupAuthReq_descriptor_, &CMDApplyJoinGroupAuthReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDApplyJoinGroupAuthResp_descriptor_, &CMDApplyJoinGroupAuthResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDHandleJoinGroupAuthReq_descriptor_, &CMDHandleJoinGroupAuthReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDHandleJoinGroupAuthResp_descriptor_, &CMDHandleJoinGroupAuthResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDSetMicModeReq_descriptor_, &CMDSetMicModeReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDSetMicModeResp_descriptor_, &CMDSetMicModeResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDSetMicModeNoty_descriptor_, &CMDSetMicModeNoty::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDSetMicPosStatusReq_descriptor_, &CMDSetMicPosStatusReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDSetMicPosStatusResp_descriptor_, &CMDSetMicPosStatusResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDSetMicPosStatusNoty_descriptor_, &CMDSetMicPosStatusNoty::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDRoomInfoExtReq_descriptor_, &CMDRoomInfoExtReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDRoomInfoExtResp_descriptor_, &CMDRoomInfoExtResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDInviteOnMic_descriptor_, &CMDInviteOnMic::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDGroupUserSettingReq_descriptor_, &CMDGroupUserSettingReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDGroupUserSettingResp_descriptor_, &CMDGroupUserSettingResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDAuthStateNoty_descriptor_, &CMDAuthStateNoty::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDAuthReq_descriptor_, &CMDAuthReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDAuthResp_descriptor_, &CMDAuthResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDGroupOnlineMemberList_descriptor_, &CMDGroupOnlineMemberList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDMemberEnterGroup_descriptor_, &CMDMemberEnterGroup::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDMemberExitGroup_descriptor_, &CMDMemberExitGroup::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDForbidUserChat_descriptor_, &CMDForbidUserChat::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDCourseFinish_descriptor_, &CMDCourseFinish::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDSilenceNoty_descriptor_, &CMDSilenceNoty::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDSilenceNoty_tipUser_descriptor_, &CMDSilenceNoty_tipUser::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDNoticeNoty_descriptor_, &CMDNoticeNoty::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDCloseLiveAndCourseeNoty_descriptor_, &CMDCloseLiveAndCourseeNoty::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDLiveStartNoty_descriptor_, &CMDLiveStartNoty::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDLiveStopNoty_descriptor_, &CMDLiveStopNoty::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDCourseStartNoty_descriptor_, &CMDCourseStartNoty::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDNewSubCourseNoty_descriptor_, &CMDNewSubCourseNoty::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDNewCourseNoty_descriptor_, &CMDNewCourseNoty::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_RoomSvr_2eproto() {
  delete CMDJoinRoomReq::default_instance_;
  delete CMDJoinRoomReq_reflection_;
  delete CMDJoinRoomResp::default_instance_;
  delete CMDJoinRoomResp_reflection_;
  delete CMDGateJoinRoomReq::default_instance_;
  delete CMDGateJoinRoomReq_reflection_;
  delete CMDGateJoinRoomResp::default_instance_;
  delete CMDGateJoinRoomResp_reflection_;
  delete CMDJoinRoomErr::default_instance_;
  delete CMDJoinRoomErr_reflection_;
  delete CMDUserMicState::default_instance_;
  delete CMDUserMicState_reflection_;
  delete CMDUpWaitMic::default_instance_;
  delete CMDUpWaitMic_reflection_;
  delete CMDUpWaitMicList::default_instance_;
  delete CMDUpWaitMicList_reflection_;
  delete CMDMicStateListReq::default_instance_;
  delete CMDMicStateListReq_reflection_;
  delete CMDMicStateListResp::default_instance_;
  delete CMDMicStateListResp_reflection_;
  delete CMDMicStateListResp_PubMic::default_instance_;
  delete CMDMicStateListResp_PubMic_reflection_;
  delete CMDRoomUserInfo::default_instance_;
  delete CMDRoomUserInfo_reflection_;
  delete CMDRoomUserInfos::default_instance_;
  delete CMDRoomUserInfos_reflection_;
  delete CMDUserExitRoomInfo::default_instance_;
  delete CMDUserExitRoomInfo_reflection_;
  delete CMDUserExitRoomInfo_ext::default_instance_;
  delete CMDUserExitRoomInfo_ext_reflection_;
  delete CMDUserExceptExitRoomInfo::default_instance_;
  delete CMDUserExceptExitRoomInfo_reflection_;
  delete CMDOperateWaitMic::default_instance_;
  delete CMDOperateWaitMic_reflection_;
  delete CMDChangeWaitMicIndexResp::default_instance_;
  delete CMDChangeWaitMicIndexResp_reflection_;
  delete CMDChangeWaitMicIndexNoty::default_instance_;
  delete CMDChangeWaitMicIndexNoty_reflection_;
  delete CMDRoomMicModSet::default_instance_;
  delete CMDRoomMicModSet_reflection_;
  delete CMDUserKickoutRoomInfo::default_instance_;
  delete CMDUserKickoutRoomInfo_reflection_;
  delete CMDUserKickoutRoomResp::default_instance_;
  delete CMDUserKickoutRoomResp_reflection_;
  delete CMDRoomInfoReq::default_instance_;
  delete CMDRoomInfoReq_reflection_;
  delete CMDRoomInfoResp::default_instance_;
  delete CMDRoomInfoResp_reflection_;
  delete CMDNoticeInfo::default_instance_;
  delete CMDNoticeInfo_reflection_;
  delete CMDRoomBaseInfo::default_instance_;
  delete CMDRoomBaseInfo_reflection_;
  delete CMDGroupMemberReq::default_instance_;
  delete CMDGroupMemberReq_reflection_;
  delete CMDUserGroupInfoReq::default_instance_;
  delete CMDUserGroupInfoReq_reflection_;
  delete CMDUserGroupInfoResp::default_instance_;
  delete CMDUserGroupInfoResp_reflection_;
  delete CMDSetGroupMsgMuteReq::default_instance_;
  delete CMDSetGroupMsgMuteReq_reflection_;
  delete CMDSetGroupMsgMuteResp::default_instance_;
  delete CMDSetGroupMsgMuteResp_reflection_;
  delete CMDQuitGroupReq::default_instance_;
  delete CMDQuitGroupReq_reflection_;
  delete CMDQuitGroupResp::default_instance_;
  delete CMDQuitGroupResp_reflection_;
  delete CMDSetUserPriorityReq::default_instance_;
  delete CMDSetUserPriorityReq_reflection_;
  delete CMDSetUserPriorityResp::default_instance_;
  delete CMDSetUserPriorityResp_reflection_;
  delete CMDSetUserPriorityNoty::default_instance_;
  delete CMDSetUserPriorityNoty_reflection_;
  delete CMDQryGroupVisitCountReq::default_instance_;
  delete CMDQryGroupVisitCountReq_reflection_;
  delete CMDQryGroupVisitCountResp::default_instance_;
  delete CMDQryGroupVisitCountResp_reflection_;
  delete CMDJoinGroupReq::default_instance_;
  delete CMDJoinGroupReq_reflection_;
  delete CMDJoinGroupResp::default_instance_;
  delete CMDJoinGroupResp_reflection_;
  delete CMDForbidJoinGroupKillVisitor::default_instance_;
  delete CMDForbidJoinGroupKillVisitor_reflection_;
  delete CMDSettingStat::default_instance_;
  delete CMDSettingStat_reflection_;
  delete CMDGroupSettingStatNotify::default_instance_;
  delete CMDGroupSettingStatNotify_reflection_;
  delete CMDGroupSettingStatReq::default_instance_;
  delete CMDGroupSettingStatReq_reflection_;
  delete CMDQryJoinGroupCondReq::default_instance_;
  delete CMDQryJoinGroupCondReq_reflection_;
  delete CMDQryJoinGroupCondResp::default_instance_;
  delete CMDQryJoinGroupCondResp_reflection_;
  delete CMDApplyJoinGroupAuthReq::default_instance_;
  delete CMDApplyJoinGroupAuthReq_reflection_;
  delete CMDApplyJoinGroupAuthResp::default_instance_;
  delete CMDApplyJoinGroupAuthResp_reflection_;
  delete CMDHandleJoinGroupAuthReq::default_instance_;
  delete CMDHandleJoinGroupAuthReq_reflection_;
  delete CMDHandleJoinGroupAuthResp::default_instance_;
  delete CMDHandleJoinGroupAuthResp_reflection_;
  delete CMDSetMicModeReq::default_instance_;
  delete CMDSetMicModeReq_reflection_;
  delete CMDSetMicModeResp::default_instance_;
  delete CMDSetMicModeResp_reflection_;
  delete CMDSetMicModeNoty::default_instance_;
  delete CMDSetMicModeNoty_reflection_;
  delete CMDSetMicPosStatusReq::default_instance_;
  delete CMDSetMicPosStatusReq_reflection_;
  delete CMDSetMicPosStatusResp::default_instance_;
  delete CMDSetMicPosStatusResp_reflection_;
  delete CMDSetMicPosStatusNoty::default_instance_;
  delete CMDSetMicPosStatusNoty_reflection_;
  delete CMDRoomInfoExtReq::default_instance_;
  delete CMDRoomInfoExtReq_reflection_;
  delete CMDRoomInfoExtResp::default_instance_;
  delete CMDRoomInfoExtResp_reflection_;
  delete CMDInviteOnMic::default_instance_;
  delete CMDInviteOnMic_reflection_;
  delete CMDGroupUserSettingReq::default_instance_;
  delete CMDGroupUserSettingReq_reflection_;
  delete CMDGroupUserSettingResp::default_instance_;
  delete CMDGroupUserSettingResp_reflection_;
  delete CMDAuthStateNoty::default_instance_;
  delete CMDAuthStateNoty_reflection_;
  delete CMDAuthReq::default_instance_;
  delete CMDAuthReq_reflection_;
  delete CMDAuthResp::default_instance_;
  delete CMDAuthResp_reflection_;
  delete CMDGroupOnlineMemberList::default_instance_;
  delete CMDGroupOnlineMemberList_reflection_;
  delete CMDMemberEnterGroup::default_instance_;
  delete CMDMemberEnterGroup_reflection_;
  delete CMDMemberExitGroup::default_instance_;
  delete CMDMemberExitGroup_reflection_;
  delete CMDForbidUserChat::default_instance_;
  delete CMDForbidUserChat_reflection_;
  delete CMDCourseFinish::default_instance_;
  delete CMDCourseFinish_reflection_;
  delete CMDSilenceNoty::default_instance_;
  delete CMDSilenceNoty_reflection_;
  delete CMDSilenceNoty_tipUser::default_instance_;
  delete CMDSilenceNoty_tipUser_reflection_;
  delete CMDNoticeNoty::default_instance_;
  delete CMDNoticeNoty_reflection_;
  delete CMDCloseLiveAndCourseeNoty::default_instance_;
  delete CMDCloseLiveAndCourseeNoty_reflection_;
  delete CMDLiveStartNoty::default_instance_;
  delete CMDLiveStartNoty_reflection_;
  delete CMDLiveStopNoty::default_instance_;
  delete CMDLiveStopNoty_reflection_;
  delete CMDCourseStartNoty::default_instance_;
  delete CMDCourseStartNoty_reflection_;
  delete CMDNewSubCourseNoty::default_instance_;
  delete CMDNewSubCourseNoty_reflection_;
  delete CMDNewCourseNoty::default_instance_;
  delete CMDNewCourseNoty_reflection_;
}

void protobuf_AddDesc_RoomSvr_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_RoomSvr_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_Common_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\rRoomSvr.proto\032\014Common.proto\"\207\002\n\016CMDJoi"
    "nRoomReq\022\016\n\006userid\030\001 \001(\005\022\r\n\005vcbid\030\002 \001(\005\022"
    "\017\n\007devtype\030\003 \001(\005\022\014\n\004time\030\004 \001(\005\022\r\n\005crc32\030"
    "\005 \001(\005\022\026\n\016coremessagever\030\006 \001(\005\022\020\n\010cuserpw"
    "d\030\007 \001(\t\022\020\n\010croompwd\030\010 \001(\t\022\017\n\007cSerial\030\t \001"
    "(\t\022\020\n\010cMacAddr\030\n \001(\t\022\017\n\007cIpAddr\030\013 \001(\t\022\024\n"
    "\014bloginSource\030\014 \001(\005\022\020\n\010reserve1\030\r \001(\005\022\020\n"
    "\010reserve2\030\016 \001(\005\"\225\004\n\017CMDJoinRoomResp\022\016\n\006u"
    "serid\030\001 \001(\r\022\r\n\005vcbid\030\002 \001(\r\022\020\n\010roomtype\030\003"
    " \001(\r\022\017\n\007busepwd\030\004 \001(\r\022\026\n\016bIsCollectRoom\030"
    "\005 \001(\r\022\017\n\007devtype\030\006 \001(\r\022\r\n\005seats\030\007 \001(\r\022\017\n"
    "\007groupid\030\010 \001(\r\022\020\n\010runstate\030\t \001(\r\022\021\n\tcrea"
    "torid\030\n \001(\r\022\r\n\005op1id\030\013 \001(\r\022\r\n\005op2id\030\014 \001("
    "\r\022\r\n\005op3id\030\r \001(\r\022\r\n\005op4id\030\016 \001(\r\022\023\n\013inroo"
    "mstate\030\017 \001(\r\022\n\n\002nk\030\020 \001(\003\022\n\n\002nb\030\021 \001(\003\022\024\n\014"
    "nlotterypool\030\022 \001(\003\022\021\n\tnchestnum\030\023 \001(\005\022\r\n"
    "\005cname\030\024 \001(\t\022\022\n\ncmediaaddr\030\025 \001(\t\022\014\n\004cpwd"
    "\030\026 \001(\t\022\024\n\014npopularity_\030\027 \001(\004\022\026\n\016ncollect"
    "_times\030\030 \001(\r\022\024\n\014userRoleType\030\031 \001(\r\022\021\n\tgr"
    "oupIcon\030\032 \001(\t\022\023\n\013groupShowID\030\033 \001(\r\022\022\n\nmu"
    "teSwitch\030\034 \001(\r\022\017\n\007liveUrl\030\035 \001(\t\"\232\001\n\022CMDG"
    "ateJoinRoomReq\022\016\n\006userid\030\001 \001(\005\022\r\n\005vcbid\030"
    "\002 \001(\005\022\017\n\007cIpAddr\030\003 \001(\t\022\014\n\004uuid\030\004 \001(\t\022\017\n\007"
    "devtype\030\005 \001(\005\022\021\n\tmicuserid\030\006 \001(\005\022\020\n\010mics"
    "tate\030\007 \001(\005\022\020\n\010micindex\030\010 \001(\005\"R\n\023CMDGateJ"
    "oinRoomResp\022\016\n\006userid\030\001 \001(\005\022\r\n\005vcbid\030\002 \001"
    "(\005\022\034\n\007errInfo\030\003 \001(\0132\013.CMDErrCode\"k\n\016CMDJ"
    "oinRoomErr\022\016\n\006userid\030\001 \001(\005\022\r\n\005vcbid\030\002 \001("
    "\005\022\034\n\007errInfo\030\003 \001(\0132\013.CMDErrCode\022\r\n\005data1"
    "\030\004 \001(\005\022\r\n\005data2\030\005 \001(\005\"\360\001\n\017CMDUserMicStat"
    "e\022\r\n\005vcbid\030\001 \001(\r\022\032\n\005runid\030\002 \001(\0132\013.UserIn"
    "fo_t\022\031\n\004toid\030\003 \001(\0132\013.UserInfo_t\022\016\n\006gifti"
    "d\030\004 \001(\005\022\017\n\007giftnum\030\005 \001(\005\022\020\n\010micstate\030\006 \001"
    "(\005\022\020\n\010micindex\030\007 \001(\005\022\016\n\006optype\030\010 \001(\005\022\021\n\t"
    "reserve11\030\t \001(\005\022\034\n\007errInfo\030\n \001(\0132\013.CMDEr"
    "rCode\022\021\n\tmicsecond\030\013 \001(\005\"p\n\014CMDUpWaitMic"
    "\022\r\n\005vcbid\030\001 \001(\r\022\020\n\010ruunerid\030\002 \001(\r\022\016\n\006tou"
    "ser\030\003 \001(\r\022\021\n\tnmicindex\030\004 \001(\005\022\034\n\007errInfo\030"
    "\005 \001(\0132\013.CMDErrCode\"L\n\020CMDUpWaitMicList\022\014"
    "\n\004size\030\001 \001(\r\022\033\n\006userid\030\002 \003(\0132\013.UserInfo_"
    "t\022\r\n\005vcbid\030\003 \001(\r\"#\n\022CMDMicStateListReq\022\r"
    "\n\005vcbid\030\001 \001(\r\"\212\001\n\023CMDMicStateListResp\022\r\n"
    "\005vcbid\030\001 \001(\r\022+\n\006pubmic\030\002 \003(\0132\033.CMDMicSta"
    "teListResp.PubMic\0327\n\006PubMic\022\035\n\010userinfo\030"
    "\001 \001(\0132\013.UserInfo_t\022\016\n\006status\030\002 \001(\005\"\265\002\n\017C"
    "MDRoomUserInfo\022\016\n\006userid\030\001 \001(\r\022\r\n\005vcbid\030"
    "\002 \001(\r\022\021\n\tuserlevel\030\003 \001(\r\022\024\n\014userviplevel"
    "\030\004 \001(\r\022\016\n\006gender\030\005 \001(\r\022\017\n\007devtype\030\006 \001(\r\022"
    "\023\n\013pubmicindex\030\007 \001(\r\022\021\n\troomlevel\030\010 \001(\r\022"
    "\020\n\010usertype\030\t \001(\r\022\020\n\010cometime\030\n \001(\r\022\r\n\005c"
    "head\030\013 \001(\t\022\021\n\tuserstate\030\014 \001(\r\022\023\n\013bforbid"
    "chat\030\r \001(\005\022\021\n\tuseralias\030\016 \001(\t\022\021\n\tauthSta"
    "te\030\017 \001(\r\022\020\n\010videoUrl\030\020 \001(\t\"6\n\020CMDRoomUse"
    "rInfos\022\"\n\010UserInfo\030\001 \003(\0132\020.CMDRoomUserIn"
    "fo\"4\n\023CMDUserExitRoomInfo\022\016\n\006userid\030\001 \001("
    "\r\022\r\n\005vcbid\030\002 \001(\r\"J\n\027CMDUserExitRoomInfo_"
    "ext\022\016\n\006userid\030\001 \001(\r\022\r\n\005vcbid\030\002 \001(\r\022\020\n\010ro"
    "leType\030\003 \001(\r\":\n\031CMDUserExceptExitRoomInf"
    "o\022\016\n\006userid\030\001 \001(\r\022\r\n\005vcbid\030\002 \001(\r\"c\n\021CMDO"
    "perateWaitMic\022\r\n\005vcbid\030\001 \001(\r\022\020\n\010ruunerid"
    "\030\002 \001(\r\022\016\n\006userid\030\003 \001(\r\022\r\n\005micid\030\004 \001(\005\022\016\n"
    "\006optype\030\005 \001(\005\"H\n\031CMDChangeWaitMicIndexRe"
    "sp\022\r\n\005vcbid\030\001 \001(\r\022\034\n\007errInfo\030\002 \001(\0132\013.CMD"
    "ErrCode\"k\n\031CMDChangeWaitMicIndexNoty\022\r\n\005"
    "vcbid\030\001 \001(\r\022\020\n\010ruunerid\030\002 \001(\r\022\016\n\006userid\030"
    "\003 \001(\r\022\r\n\005micid\030\004 \001(\005\022\016\n\006optype\030\005 \001(\005\"4\n\020"
    "CMDRoomMicModSet\022\r\n\005vcbid\030\001 \001(\005\022\021\n\tmicst"
    "atus\030\002 \001(\005\"c\n\026CMDUserKickoutRoomInfo\022\r\n\005"
    "vcbid\030\001 \001(\r\022\r\n\005srcid\030\002 \001(\r\022\014\n\004toid\030\003 \001(\r"
    "\022\017\n\007resonid\030\004 \001(\005\022\014\n\004mins\030\005 \001(\005\"b\n\026CMDUs"
    "erKickoutRoomResp\022\034\n\007errInfo\030\001 \001(\0132\013.CMD"
    "ErrCode\022\r\n\005vcbid\030\002 \001(\r\022\r\n\005srcid\030\003 \001(\r\022\014\n"
    "\004toid\030\004 \001(\r\"\217\001\n\016CMDRoomInfoReq\022\r\n\005vcbid\030"
    "\001 \001(\r\022\020\n\010runnerid\030\002 \001(\r\022\034\n\010roomname\030\003 \001("
    "\0132\n.CMDString\022\036\n\nroomnotice\030\004 \001(\0132\n.CMDS"
    "tring\022\036\n\nroomremark\030\005 \001(\0132\n.CMDString\"P\n"
    "\017CMDRoomInfoResp\022\r\n\005vcbid\030\001 \001(\r\022\020\n\010runne"
    "rid\030\002 \001(\r\022\034\n\007errInfo\030\003 \001(\0132\013.CMDErrCode\""
    "M\n\rCMDNoticeInfo\022\024\n\014noticeUserID\030\001 \001(\r\022\022"
    "\n\nroomNotice\030\002 \001(\t\022\022\n\nnoticeTime\030\003 \001(\r\"\317"
    "\001\n\017CMDRoomBaseInfo\022\r\n\005vcbid\030\001 \001(\r\022\r\n\005sea"
    "ts\030\002 \001(\r\022\021\n\tcreatorid\030\003 \001(\r\022\017\n\007opstate\030\004"
    " \001(\r\022\034\n\010roomname\030\005 \001(\0132\n.CMDString\022\030\n\004ic"
    "on\030\006 \001(\0132\n.CMDString\022\"\n\nnoticeInfo\030\007 \001(\013"
    "2\016.CMDNoticeInfo\022\036\n\nroomremark\030\010 \001(\0132\n.C"
    "MDString\"4\n\021CMDGroupMemberReq\022\016\n\006userID\030"
    "\001 \001(\r\022\017\n\007groupID\030\002 \001(\r\"6\n\023CMDUserGroupIn"
    "foReq\022\016\n\006userID\030\001 \001(\r\022\017\n\007groupID\030\002 \001(\r\"X"
    "\n\024CMDUserGroupInfoResp\022\034\n\007errInfo\030\001 \001(\0132"
    "\013.CMDErrCode\022\"\n\010userInfo\030\002 \001(\0132\020.CMDRoom"
    "UserInfo\"I\n\025CMDSetGroupMsgMuteReq\022\016\n\006use"
    "rID\030\001 \001(\r\022\017\n\007groupID\030\002 \001(\r\022\017\n\007muteSet\030\003 "
    "\001(\r\"W\n\026CMDSetGroupMsgMuteResp\022\034\n\007errInfo"
    "\030\001 \001(\0132\013.CMDErrCode\022\016\n\006userID\030\002 \001(\r\022\017\n\007g"
    "roupID\030\003 \001(\r\"2\n\017CMDQuitGroupReq\022\016\n\006userI"
    "D\030\001 \001(\r\022\017\n\007groupID\030\002 \001(\r\"Q\n\020CMDQuitGroup"
    "Resp\022\034\n\007errInfo\030\001 \001(\0132\013.CMDErrCode\022\016\n\006us"
    "erID\030\002 \001(\r\022\017\n\007groupID\030\003 \001(\r\"a\n\025CMDSetUse"
    "rPriorityReq\022\022\n\nrun_userID\030\001 \001(\r\022\021\n\tto_u"
    "serID\030\002 \001(\r\022\017\n\007groupID\030\003 \001(\r\022\020\n\010roleType"
    "\030\004 \001(\r\"\200\001\n\026CMDSetUserPriorityResp\022\034\n\007err"
    "Info\030\001 \001(\0132\013.CMDErrCode\022\022\n\nrun_userID\030\002 "
    "\001(\r\022\021\n\tto_userID\030\003 \001(\r\022\017\n\007groupID\030\004 \001(\r\022"
    "\020\n\010roleType\030\005 \001(\r\"b\n\026CMDSetUserPriorityN"
    "oty\022\022\n\nrun_userID\030\001 \001(\r\022\021\n\tto_userID\030\002 \001"
    "(\r\022\017\n\007groupID\030\003 \001(\r\022\020\n\010roleType\030\004 \001(\r\"+\n"
    "\030CMDQryGroupVisitCountReq\022\017\n\007groupID\030\001 \001"
    "(\r\"@\n\031CMDQryGroupVisitCountResp\022\017\n\007group"
    "ID\030\001 \001(\r\022\022\n\nvisitCount\030\002 \001(\r\"2\n\017CMDJoinG"
    "roupReq\022\016\n\006userID\030\001 \001(\r\022\017\n\007groupID\030\002 \001(\r"
    "\"Q\n\020CMDJoinGroupResp\022\034\n\007errInfo\030\001 \001(\0132\013."
    "CMDErrCode\022\016\n\006userID\030\002 \001(\r\022\017\n\007groupID\030\003 "
    "\001(\r\"0\n\035CMDForbidJoinGroupKillVisitor\022\017\n\007"
    "groupID\030\001 \001(\r\"<\n\016CMDSettingStat\022\034\n\004type\030"
    "\001 \001(\0162\016.e_SettingType\022\014\n\004stat\030\002 \001(\005\"Z\n\031C"
    "MDGroupSettingStatNotify\022\r\n\005runID\030\001 \001(\r\022"
    "\017\n\007groupID\030\002 \001(\r\022\035\n\004list\030\003 \003(\0132\017.CMDSett"
    "ingStat\"W\n\026CMDGroupSettingStatReq\022\016\n\006use"
    "rID\030\001 \001(\r\022\017\n\007groupID\030\002 \001(\r\022\034\n\004type\030\003 \001(\016"
    "2\016.e_SettingType\"9\n\026CMDQryJoinGroupCondR"
    "eq\022\016\n\006userID\030\001 \001(\r\022\017\n\007groupID\030\002 \001(\r\"h\n\027C"
    "MDQryJoinGroupCondResp\022\034\n\007errInfo\030\001 \001(\0132"
    "\013.CMDErrCode\022\016\n\006userID\030\002 \001(\r\022\017\n\007groupID\030"
    "\003 \001(\r\022\016\n\006action\030\004 \001(\t\"t\n\030CMDApplyJoinGro"
    "upAuthReq\022\016\n\006userID\030\001 \001(\r\022\017\n\007groupID\030\002 \001"
    "(\r\022*\n\010authType\030\003 \001(\0162\030.e_UserJoinGroupAu"
    "thType\022\013\n\003msg\030\004 \001(\t\"Z\n\031CMDApplyJoinGroup"
    "AuthResp\022\016\n\006userID\030\001 \001(\r\022\017\n\007groupID\030\002 \001("
    "\r\022\034\n\007errInfo\030\003 \001(\0132\013.CMDErrCode\"u\n\031CMDHa"
    "ndleJoinGroupAuthReq\022\022\n\nrun_userID\030\001 \001(\r"
    "\022\017\n\007groupID\030\002 \001(\r\022\024\n\014apply_userID\030\003 \001(\r\022"
    "\016\n\006authID\030\004 \001(\r\022\r\n\005agree\030\005 \001(\010\"\224\001\n\032CMDHa"
    "ndleJoinGroupAuthResp\022\022\n\nrun_userID\030\001 \001("
    "\r\022\017\n\007groupID\030\002 \001(\r\022\024\n\014apply_userID\030\003 \001(\r"
    "\022\016\n\006authID\030\004 \001(\r\022\r\n\005agree\030\005 \001(\010\022\034\n\007errIn"
    "fo\030\006 \001(\0132\013.CMDErrCode\"N\n\020CMDSetMicModeRe"
    "q\022\r\n\005vcbid\030\001 \001(\r\022\016\n\006userid\030\002 \001(\r\022\033\n\007micm"
    "ode\030\003 \001(\0162\n.e_MicMode\"P\n\021CMDSetMicModeRe"
    "sp\022\r\n\005vcbid\030\001 \001(\r\022\016\n\006userid\030\002 \001(\r\022\034\n\007err"
    "Info\030\003 \001(\0132\013.CMDErrCode\"O\n\021CMDSetMicMode"
    "Noty\022\r\n\005vcbid\030\001 \001(\r\022\016\n\006userid\030\002 \001(\r\022\033\n\007m"
    "icmode\030\003 \001(\0162\n.e_MicMode\"U\n\025CMDSetMicPos"
    "StatusReq\022\r\n\005vcbid\030\001 \001(\r\022\016\n\006userid\030\002 \001(\r"
    "\022\r\n\005index\030\003 \001(\r\022\016\n\006status\030\004 \001(\r\"U\n\026CMDSe"
    "tMicPosStatusResp\022\r\n\005vcbid\030\001 \001(\r\022\016\n\006user"
    "id\030\002 \001(\r\022\034\n\007errInfo\030\003 \001(\0132\013.CMDErrCode\"V"
    "\n\026CMDSetMicPosStatusNoty\022\r\n\005vcbid\030\001 \001(\r\022"
    "\016\n\006userid\030\002 \001(\r\022\r\n\005index\030\003 \001(\r\022\016\n\006status"
    "\030\004 \001(\r\"2\n\021CMDRoomInfoExtReq\022\r\n\005vcbid\030\001 \001"
    "(\005\022\016\n\006userid\030\002 \001(\005\"l\n\022CMDRoomInfoExtResp"
    "\022\r\n\005vcbid\030\001 \001(\005\022\033\n\007micmode\030\002 \001(\0162\n.e_Mic"
    "Mode\022\014\n\004name\030\003 \001(\t\022\014\n\004icon\030\004 \001(\t\022\016\n\006mics"
    "ec\030\005 \001(\005\"\252\001\n\016CMDInviteOnMic\022\021\n\trunuserid"
    "\030\001 \001(\005\022\020\n\010touserid\030\002 \001(\005\022\016\n\006optype\030\003 \001(\005"
    "\022\r\n\005vcbid\030\004 \001(\005\022\021\n\tsessionid\030\005 \001(\005\022\034\n\007er"
    "rInfo\030\006 \001(\0132\013.CMDErrCode\022\020\n\010intimacy\030\007 \001"
    "(\005\022\021\n\tthreshold\030\010 \001(\005\"]\n\026CMDGroupUserSet"
    "tingReq\022\017\n\007groupid\030\001 \001(\r\022\016\n\006userid\030\002 \001(\r"
    "\022\"\n\016PChatThreshold\030\003 \001(\0132\n.CMDUInt32\"X\n\027"
    "CMDGroupUserSettingResp\022\034\n\007errInfo\030\001 \001(\013"
    "2\013.CMDErrCode\022\017\n\007groupid\030\002 \001(\r\022\016\n\006userid"
    "\030\003 \001(\r\"F\n\020CMDAuthStateNoty\022\016\n\006userid\030\001 \001"
    "(\r\022\017\n\007groupid\030\002 \001(\r\022\021\n\tauthState\030\003 \001(\r\"+"
    "\n\nCMDAuthReq\022\016\n\006userid\030\001 \001(\r\022\r\n\005vcbid\030\002 "
    "\001(\r\"n\n\013CMDAuthResp\022\016\n\006userid\030\001 \001(\r\022\r\n\005vc"
    "bid\030\002 \001(\r\022\r\n\005appid\030\003 \001(\t\022\017\n\007recvkey\030\004 \001("
    "\t\022\017\n\007sendkey\030\005 \001(\t\022\017\n\007errcode\030\006 \001(\r\"9\n\030C"
    "MDGroupOnlineMemberList\022\017\n\007groupid\030\001 \001(\r"
    "\022\014\n\004list\030\002 \003(\r\"6\n\023CMDMemberEnterGroup\022\017\n"
    "\007groupid\030\001 \001(\r\022\016\n\006userid\030\002 \001(\r\"5\n\022CMDMem"
    "berExitGroup\022\017\n\007groupid\030\001 \001(\r\022\016\n\006userid\030"
    "\002 \001(\r\"a\n\021CMDForbidUserChat\022\017\n\007groupid\030\001 "
    "\001(\r\022\016\n\006userid\030\002 \001(\r\022\014\n\004toid\030\003 \001(\r\022\016\n\006sta"
    "tus\030\004 \001(\r\022\r\n\005errid\030\005 \001(\r\"2\n\017CMDCourseFin"
    "ish\022\017\n\007groupid\030\001 \001(\r\022\016\n\006userid\030\002 \001(\r\"\232\001\n"
    "\016CMDSilenceNoty\022\017\n\007groupid\030\001 \001(\r\022%\n\004user"
    "\030\002 \003(\0132\027.CMDSilenceNoty.tipUser\032P\n\007tipUs"
    "er\022\017\n\007srcname\030\001 \001(\t\022\017\n\007srchead\030\002 \001(\t\022\017\n\007"
    "gifname\030\003 \001(\t\022\022\n\ngifpicture\030\004 \001(\t\"\037\n\rCMD"
    "NoticeNoty\022\016\n\006notice\030\001 \001(\t\"{\n\032CMDCloseLi"
    "veAndCourseeNoty\022\017\n\007groupid\030\001 \001(\r\022\021\n\trun"
    "userid\030\002 \001(\r\022\014\n\004toid\030\003 \001(\r\022\016\n\006status\030\004 \001"
    "(\r\022\014\n\004type\030\005 \001(\r\022\r\n\005errid\030\006 \001(\r\"A\n\020CMDLi"
    "veStartNoty\022\017\n\007groupid\030\001 \001(\r\022\013\n\003uid\030\002 \001("
    "\r\022\017\n\007liveUrl\030\003 \001(\t\"@\n\017CMDLiveStopNoty\022\017\n"
    "\007groupid\030\001 \001(\r\022\013\n\003uid\030\002 \001(\r\022\017\n\007liveUrl\030\003"
    " \001(\t\"U\n\022CMDCourseStartNoty\022\017\n\007groupid\030\001 "
    "\001(\r\022\016\n\006userid\030\002 \001(\r\022\r\n\005title\030\003 \001(\t\022\017\n\007co"
    "ntent\030\004 \001(\t\"\212\001\n\023CMDNewSubCourseNoty\022\020\n\010c"
    "ourseId\030\001 \001(\r\022\023\n\013subCourseId\030\002 \001(\r\022\016\n\006us"
    "erId\030\003 \001(\r\022\022\n\ncourseName\030\004 \001(\t\022\025\n\rsubCou"
    "rseName\030\005 \001(\t\022\021\n\tbeginTime\030\006 \001(\t\"}\n\020CMDN"
    "ewCourseNoty\022\016\n\006liveId\030\001 \001(\r\022\016\n\006userId\030\002"
    " \001(\r\022\020\n\010courseId\030\003 \001(\r\022\020\n\010roomName\030\004 \001(\t"
    "\022\021\n\tuserAlias\030\005 \001(\t\022\022\n\ncourseName\030\006 \001(\t*"
    "\314\001\n\re_SettingType\022\021\n\re_Setting_All\020\000\022\027\n\023"
    "e_Setting_JoinGroup\020\001\022\031\n\025e_Setting_KillV"
    "isitor\020\002\022\036\n\032e_Setting_ContributionList\020\003"
    "\022\027\n\023e_Setting_VoiceChat\020\004\022\037\n\033e_Setting_A"
    "llowVisitorOnMic\020\005\022\032\n\026e_Setting_PChat_Sw"
    "itch\020\010*q\n\027e_UserJoinGroupAuthType\022\020\n\014e_N"
    "oNeedAuth\020\000\022\023\n\017e_RedPacketAuth\020\001\022\017\n\013e_Vi"
    "deoAuth\020\002\022\r\n\te_MsgAuth\020\003\022\017\n\013e_Forbidden\020"
    "\004*@\n\te_MicMode\022\016\n\ne_FreeMode\020\000\022\022\n\016e_Chai"
    "rmanMode\020\001\022\017\n\013e_QueueMode\020\002B\026\n\022com.dream"
    ".cube.tcpH\001b\006proto3", 8219);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "RoomSvr.proto", &protobuf_RegisterTypes);
  CMDJoinRoomReq::default_instance_ = new CMDJoinRoomReq();
  CMDJoinRoomResp::default_instance_ = new CMDJoinRoomResp();
  CMDGateJoinRoomReq::default_instance_ = new CMDGateJoinRoomReq();
  CMDGateJoinRoomResp::default_instance_ = new CMDGateJoinRoomResp();
  CMDJoinRoomErr::default_instance_ = new CMDJoinRoomErr();
  CMDUserMicState::default_instance_ = new CMDUserMicState();
  CMDUpWaitMic::default_instance_ = new CMDUpWaitMic();
  CMDUpWaitMicList::default_instance_ = new CMDUpWaitMicList();
  CMDMicStateListReq::default_instance_ = new CMDMicStateListReq();
  CMDMicStateListResp::default_instance_ = new CMDMicStateListResp();
  CMDMicStateListResp_PubMic::default_instance_ = new CMDMicStateListResp_PubMic();
  CMDRoomUserInfo::default_instance_ = new CMDRoomUserInfo();
  CMDRoomUserInfos::default_instance_ = new CMDRoomUserInfos();
  CMDUserExitRoomInfo::default_instance_ = new CMDUserExitRoomInfo();
  CMDUserExitRoomInfo_ext::default_instance_ = new CMDUserExitRoomInfo_ext();
  CMDUserExceptExitRoomInfo::default_instance_ = new CMDUserExceptExitRoomInfo();
  CMDOperateWaitMic::default_instance_ = new CMDOperateWaitMic();
  CMDChangeWaitMicIndexResp::default_instance_ = new CMDChangeWaitMicIndexResp();
  CMDChangeWaitMicIndexNoty::default_instance_ = new CMDChangeWaitMicIndexNoty();
  CMDRoomMicModSet::default_instance_ = new CMDRoomMicModSet();
  CMDUserKickoutRoomInfo::default_instance_ = new CMDUserKickoutRoomInfo();
  CMDUserKickoutRoomResp::default_instance_ = new CMDUserKickoutRoomResp();
  CMDRoomInfoReq::default_instance_ = new CMDRoomInfoReq();
  CMDRoomInfoResp::default_instance_ = new CMDRoomInfoResp();
  CMDNoticeInfo::default_instance_ = new CMDNoticeInfo();
  CMDRoomBaseInfo::default_instance_ = new CMDRoomBaseInfo();
  CMDGroupMemberReq::default_instance_ = new CMDGroupMemberReq();
  CMDUserGroupInfoReq::default_instance_ = new CMDUserGroupInfoReq();
  CMDUserGroupInfoResp::default_instance_ = new CMDUserGroupInfoResp();
  CMDSetGroupMsgMuteReq::default_instance_ = new CMDSetGroupMsgMuteReq();
  CMDSetGroupMsgMuteResp::default_instance_ = new CMDSetGroupMsgMuteResp();
  CMDQuitGroupReq::default_instance_ = new CMDQuitGroupReq();
  CMDQuitGroupResp::default_instance_ = new CMDQuitGroupResp();
  CMDSetUserPriorityReq::default_instance_ = new CMDSetUserPriorityReq();
  CMDSetUserPriorityResp::default_instance_ = new CMDSetUserPriorityResp();
  CMDSetUserPriorityNoty::default_instance_ = new CMDSetUserPriorityNoty();
  CMDQryGroupVisitCountReq::default_instance_ = new CMDQryGroupVisitCountReq();
  CMDQryGroupVisitCountResp::default_instance_ = new CMDQryGroupVisitCountResp();
  CMDJoinGroupReq::default_instance_ = new CMDJoinGroupReq();
  CMDJoinGroupResp::default_instance_ = new CMDJoinGroupResp();
  CMDForbidJoinGroupKillVisitor::default_instance_ = new CMDForbidJoinGroupKillVisitor();
  CMDSettingStat::default_instance_ = new CMDSettingStat();
  CMDGroupSettingStatNotify::default_instance_ = new CMDGroupSettingStatNotify();
  CMDGroupSettingStatReq::default_instance_ = new CMDGroupSettingStatReq();
  CMDQryJoinGroupCondReq::default_instance_ = new CMDQryJoinGroupCondReq();
  CMDQryJoinGroupCondResp::default_instance_ = new CMDQryJoinGroupCondResp();
  CMDApplyJoinGroupAuthReq::default_instance_ = new CMDApplyJoinGroupAuthReq();
  CMDApplyJoinGroupAuthResp::default_instance_ = new CMDApplyJoinGroupAuthResp();
  CMDHandleJoinGroupAuthReq::default_instance_ = new CMDHandleJoinGroupAuthReq();
  CMDHandleJoinGroupAuthResp::default_instance_ = new CMDHandleJoinGroupAuthResp();
  CMDSetMicModeReq::default_instance_ = new CMDSetMicModeReq();
  CMDSetMicModeResp::default_instance_ = new CMDSetMicModeResp();
  CMDSetMicModeNoty::default_instance_ = new CMDSetMicModeNoty();
  CMDSetMicPosStatusReq::default_instance_ = new CMDSetMicPosStatusReq();
  CMDSetMicPosStatusResp::default_instance_ = new CMDSetMicPosStatusResp();
  CMDSetMicPosStatusNoty::default_instance_ = new CMDSetMicPosStatusNoty();
  CMDRoomInfoExtReq::default_instance_ = new CMDRoomInfoExtReq();
  CMDRoomInfoExtResp::default_instance_ = new CMDRoomInfoExtResp();
  CMDInviteOnMic::default_instance_ = new CMDInviteOnMic();
  CMDGroupUserSettingReq::default_instance_ = new CMDGroupUserSettingReq();
  CMDGroupUserSettingResp::default_instance_ = new CMDGroupUserSettingResp();
  CMDAuthStateNoty::default_instance_ = new CMDAuthStateNoty();
  CMDAuthReq::default_instance_ = new CMDAuthReq();
  CMDAuthResp::default_instance_ = new CMDAuthResp();
  CMDGroupOnlineMemberList::default_instance_ = new CMDGroupOnlineMemberList();
  CMDMemberEnterGroup::default_instance_ = new CMDMemberEnterGroup();
  CMDMemberExitGroup::default_instance_ = new CMDMemberExitGroup();
  CMDForbidUserChat::default_instance_ = new CMDForbidUserChat();
  CMDCourseFinish::default_instance_ = new CMDCourseFinish();
  CMDSilenceNoty::default_instance_ = new CMDSilenceNoty();
  CMDSilenceNoty_tipUser::default_instance_ = new CMDSilenceNoty_tipUser();
  CMDNoticeNoty::default_instance_ = new CMDNoticeNoty();
  CMDCloseLiveAndCourseeNoty::default_instance_ = new CMDCloseLiveAndCourseeNoty();
  CMDLiveStartNoty::default_instance_ = new CMDLiveStartNoty();
  CMDLiveStopNoty::default_instance_ = new CMDLiveStopNoty();
  CMDCourseStartNoty::default_instance_ = new CMDCourseStartNoty();
  CMDNewSubCourseNoty::default_instance_ = new CMDNewSubCourseNoty();
  CMDNewCourseNoty::default_instance_ = new CMDNewCourseNoty();
  CMDJoinRoomReq::default_instance_->InitAsDefaultInstance();
  CMDJoinRoomResp::default_instance_->InitAsDefaultInstance();
  CMDGateJoinRoomReq::default_instance_->InitAsDefaultInstance();
  CMDGateJoinRoomResp::default_instance_->InitAsDefaultInstance();
  CMDJoinRoomErr::default_instance_->InitAsDefaultInstance();
  CMDUserMicState::default_instance_->InitAsDefaultInstance();
  CMDUpWaitMic::default_instance_->InitAsDefaultInstance();
  CMDUpWaitMicList::default_instance_->InitAsDefaultInstance();
  CMDMicStateListReq::default_instance_->InitAsDefaultInstance();
  CMDMicStateListResp::default_instance_->InitAsDefaultInstance();
  CMDMicStateListResp_PubMic::default_instance_->InitAsDefaultInstance();
  CMDRoomUserInfo::default_instance_->InitAsDefaultInstance();
  CMDRoomUserInfos::default_instance_->InitAsDefaultInstance();
  CMDUserExitRoomInfo::default_instance_->InitAsDefaultInstance();
  CMDUserExitRoomInfo_ext::default_instance_->InitAsDefaultInstance();
  CMDUserExceptExitRoomInfo::default_instance_->InitAsDefaultInstance();
  CMDOperateWaitMic::default_instance_->InitAsDefaultInstance();
  CMDChangeWaitMicIndexResp::default_instance_->InitAsDefaultInstance();
  CMDChangeWaitMicIndexNoty::default_instance_->InitAsDefaultInstance();
  CMDRoomMicModSet::default_instance_->InitAsDefaultInstance();
  CMDUserKickoutRoomInfo::default_instance_->InitAsDefaultInstance();
  CMDUserKickoutRoomResp::default_instance_->InitAsDefaultInstance();
  CMDRoomInfoReq::default_instance_->InitAsDefaultInstance();
  CMDRoomInfoResp::default_instance_->InitAsDefaultInstance();
  CMDNoticeInfo::default_instance_->InitAsDefaultInstance();
  CMDRoomBaseInfo::default_instance_->InitAsDefaultInstance();
  CMDGroupMemberReq::default_instance_->InitAsDefaultInstance();
  CMDUserGroupInfoReq::default_instance_->InitAsDefaultInstance();
  CMDUserGroupInfoResp::default_instance_->InitAsDefaultInstance();
  CMDSetGroupMsgMuteReq::default_instance_->InitAsDefaultInstance();
  CMDSetGroupMsgMuteResp::default_instance_->InitAsDefaultInstance();
  CMDQuitGroupReq::default_instance_->InitAsDefaultInstance();
  CMDQuitGroupResp::default_instance_->InitAsDefaultInstance();
  CMDSetUserPriorityReq::default_instance_->InitAsDefaultInstance();
  CMDSetUserPriorityResp::default_instance_->InitAsDefaultInstance();
  CMDSetUserPriorityNoty::default_instance_->InitAsDefaultInstance();
  CMDQryGroupVisitCountReq::default_instance_->InitAsDefaultInstance();
  CMDQryGroupVisitCountResp::default_instance_->InitAsDefaultInstance();
  CMDJoinGroupReq::default_instance_->InitAsDefaultInstance();
  CMDJoinGroupResp::default_instance_->InitAsDefaultInstance();
  CMDForbidJoinGroupKillVisitor::default_instance_->InitAsDefaultInstance();
  CMDSettingStat::default_instance_->InitAsDefaultInstance();
  CMDGroupSettingStatNotify::default_instance_->InitAsDefaultInstance();
  CMDGroupSettingStatReq::default_instance_->InitAsDefaultInstance();
  CMDQryJoinGroupCondReq::default_instance_->InitAsDefaultInstance();
  CMDQryJoinGroupCondResp::default_instance_->InitAsDefaultInstance();
  CMDApplyJoinGroupAuthReq::default_instance_->InitAsDefaultInstance();
  CMDApplyJoinGroupAuthResp::default_instance_->InitAsDefaultInstance();
  CMDHandleJoinGroupAuthReq::default_instance_->InitAsDefaultInstance();
  CMDHandleJoinGroupAuthResp::default_instance_->InitAsDefaultInstance();
  CMDSetMicModeReq::default_instance_->InitAsDefaultInstance();
  CMDSetMicModeResp::default_instance_->InitAsDefaultInstance();
  CMDSetMicModeNoty::default_instance_->InitAsDefaultInstance();
  CMDSetMicPosStatusReq::default_instance_->InitAsDefaultInstance();
  CMDSetMicPosStatusResp::default_instance_->InitAsDefaultInstance();
  CMDSetMicPosStatusNoty::default_instance_->InitAsDefaultInstance();
  CMDRoomInfoExtReq::default_instance_->InitAsDefaultInstance();
  CMDRoomInfoExtResp::default_instance_->InitAsDefaultInstance();
  CMDInviteOnMic::default_instance_->InitAsDefaultInstance();
  CMDGroupUserSettingReq::default_instance_->InitAsDefaultInstance();
  CMDGroupUserSettingResp::default_instance_->InitAsDefaultInstance();
  CMDAuthStateNoty::default_instance_->InitAsDefaultInstance();
  CMDAuthReq::default_instance_->InitAsDefaultInstance();
  CMDAuthResp::default_instance_->InitAsDefaultInstance();
  CMDGroupOnlineMemberList::default_instance_->InitAsDefaultInstance();
  CMDMemberEnterGroup::default_instance_->InitAsDefaultInstance();
  CMDMemberExitGroup::default_instance_->InitAsDefaultInstance();
  CMDForbidUserChat::default_instance_->InitAsDefaultInstance();
  CMDCourseFinish::default_instance_->InitAsDefaultInstance();
  CMDSilenceNoty::default_instance_->InitAsDefaultInstance();
  CMDSilenceNoty_tipUser::default_instance_->InitAsDefaultInstance();
  CMDNoticeNoty::default_instance_->InitAsDefaultInstance();
  CMDCloseLiveAndCourseeNoty::default_instance_->InitAsDefaultInstance();
  CMDLiveStartNoty::default_instance_->InitAsDefaultInstance();
  CMDLiveStopNoty::default_instance_->InitAsDefaultInstance();
  CMDCourseStartNoty::default_instance_->InitAsDefaultInstance();
  CMDNewSubCourseNoty::default_instance_->InitAsDefaultInstance();
  CMDNewCourseNoty::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_RoomSvr_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_RoomSvr_2eproto {
  StaticDescriptorInitializer_RoomSvr_2eproto() {
    protobuf_AddDesc_RoomSvr_2eproto();
  }
} static_descriptor_initializer_RoomSvr_2eproto_;
const ::google::protobuf::EnumDescriptor* e_SettingType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return e_SettingType_descriptor_;
}
bool e_SettingType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 8:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* e_UserJoinGroupAuthType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return e_UserJoinGroupAuthType_descriptor_;
}
bool e_UserJoinGroupAuthType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* e_MicMode_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return e_MicMode_descriptor_;
}
bool e_MicMode_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDJoinRoomReq::kUseridFieldNumber;
const int CMDJoinRoomReq::kVcbidFieldNumber;
const int CMDJoinRoomReq::kDevtypeFieldNumber;
const int CMDJoinRoomReq::kTimeFieldNumber;
const int CMDJoinRoomReq::kCrc32FieldNumber;
const int CMDJoinRoomReq::kCoremessageverFieldNumber;
const int CMDJoinRoomReq::kCuserpwdFieldNumber;
const int CMDJoinRoomReq::kCroompwdFieldNumber;
const int CMDJoinRoomReq::kCSerialFieldNumber;
const int CMDJoinRoomReq::kCMacAddrFieldNumber;
const int CMDJoinRoomReq::kCIpAddrFieldNumber;
const int CMDJoinRoomReq::kBloginSourceFieldNumber;
const int CMDJoinRoomReq::kReserve1FieldNumber;
const int CMDJoinRoomReq::kReserve2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDJoinRoomReq::CMDJoinRoomReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDJoinRoomReq)
}

void CMDJoinRoomReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDJoinRoomReq::CMDJoinRoomReq(const CMDJoinRoomReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDJoinRoomReq)
}

void CMDJoinRoomReq::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  userid_ = 0;
  vcbid_ = 0;
  devtype_ = 0;
  time_ = 0;
  crc32_ = 0;
  coremessagever_ = 0;
  cuserpwd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  croompwd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cserial_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cmacaddr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cipaddr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bloginsource_ = 0;
  reserve1_ = 0;
  reserve2_ = 0;
}

CMDJoinRoomReq::~CMDJoinRoomReq() {
  // @@protoc_insertion_point(destructor:CMDJoinRoomReq)
  SharedDtor();
}

void CMDJoinRoomReq::SharedDtor() {
  cuserpwd_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  croompwd_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cserial_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cmacaddr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cipaddr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CMDJoinRoomReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDJoinRoomReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDJoinRoomReq_descriptor_;
}

const CMDJoinRoomReq& CMDJoinRoomReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RoomSvr_2eproto();
  return *default_instance_;
}

CMDJoinRoomReq* CMDJoinRoomReq::default_instance_ = NULL;

CMDJoinRoomReq* CMDJoinRoomReq::New(::google::protobuf::Arena* arena) const {
  CMDJoinRoomReq* n = new CMDJoinRoomReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDJoinRoomReq::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDJoinRoomReq)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDJoinRoomReq, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDJoinRoomReq*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(userid_, coremessagever_);
  cuserpwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  croompwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ZR_(bloginsource_, reserve2_);
  cserial_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cmacaddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cipaddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool CMDJoinRoomReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDJoinRoomReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 userid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_vcbid;
        break;
      }

      // optional int32 vcbid = 2;
      case 2: {
        if (tag == 16) {
         parse_vcbid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vcbid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_devtype;
        break;
      }

      // optional int32 devtype = 3;
      case 3: {
        if (tag == 24) {
         parse_devtype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &devtype_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_time;
        break;
      }

      // optional int32 time = 4;
      case 4: {
        if (tag == 32) {
         parse_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &time_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_crc32;
        break;
      }

      // optional int32 crc32 = 5;
      case 5: {
        if (tag == 40) {
         parse_crc32:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &crc32_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_coremessagever;
        break;
      }

      // optional int32 coremessagever = 6;
      case 6: {
        if (tag == 48) {
         parse_coremessagever:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &coremessagever_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_cuserpwd;
        break;
      }

      // optional string cuserpwd = 7;
      case 7: {
        if (tag == 58) {
         parse_cuserpwd:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cuserpwd()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cuserpwd().data(), this->cuserpwd().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMDJoinRoomReq.cuserpwd"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_croompwd;
        break;
      }

      // optional string croompwd = 8;
      case 8: {
        if (tag == 66) {
         parse_croompwd:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_croompwd()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->croompwd().data(), this->croompwd().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMDJoinRoomReq.croompwd"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_cSerial;
        break;
      }

      // optional string cSerial = 9;
      case 9: {
        if (tag == 74) {
         parse_cSerial:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cserial()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cserial().data(), this->cserial().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMDJoinRoomReq.cSerial"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_cMacAddr;
        break;
      }

      // optional string cMacAddr = 10;
      case 10: {
        if (tag == 82) {
         parse_cMacAddr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cmacaddr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cmacaddr().data(), this->cmacaddr().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMDJoinRoomReq.cMacAddr"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_cIpAddr;
        break;
      }

      // optional string cIpAddr = 11;
      case 11: {
        if (tag == 90) {
         parse_cIpAddr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cipaddr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cipaddr().data(), this->cipaddr().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMDJoinRoomReq.cIpAddr"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_bloginSource;
        break;
      }

      // optional int32 bloginSource = 12;
      case 12: {
        if (tag == 96) {
         parse_bloginSource:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bloginsource_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_reserve1;
        break;
      }

      // optional int32 reserve1 = 13;
      case 13: {
        if (tag == 104) {
         parse_reserve1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &reserve1_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_reserve2;
        break;
      }

      // optional int32 reserve2 = 14;
      case 14: {
        if (tag == 112) {
         parse_reserve2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &reserve2_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDJoinRoomReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDJoinRoomReq)
  return false;
#undef DO_
}

void CMDJoinRoomReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDJoinRoomReq)
  // optional int32 userid = 1;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->userid(), output);
  }

  // optional int32 vcbid = 2;
  if (this->vcbid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->vcbid(), output);
  }

  // optional int32 devtype = 3;
  if (this->devtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->devtype(), output);
  }

  // optional int32 time = 4;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->time(), output);
  }

  // optional int32 crc32 = 5;
  if (this->crc32() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->crc32(), output);
  }

  // optional int32 coremessagever = 6;
  if (this->coremessagever() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->coremessagever(), output);
  }

  // optional string cuserpwd = 7;
  if (this->cuserpwd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cuserpwd().data(), this->cuserpwd().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDJoinRoomReq.cuserpwd");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->cuserpwd(), output);
  }

  // optional string croompwd = 8;
  if (this->croompwd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->croompwd().data(), this->croompwd().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDJoinRoomReq.croompwd");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->croompwd(), output);
  }

  // optional string cSerial = 9;
  if (this->cserial().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cserial().data(), this->cserial().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDJoinRoomReq.cSerial");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->cserial(), output);
  }

  // optional string cMacAddr = 10;
  if (this->cmacaddr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cmacaddr().data(), this->cmacaddr().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDJoinRoomReq.cMacAddr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->cmacaddr(), output);
  }

  // optional string cIpAddr = 11;
  if (this->cipaddr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cipaddr().data(), this->cipaddr().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDJoinRoomReq.cIpAddr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->cipaddr(), output);
  }

  // optional int32 bloginSource = 12;
  if (this->bloginsource() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->bloginsource(), output);
  }

  // optional int32 reserve1 = 13;
  if (this->reserve1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->reserve1(), output);
  }

  // optional int32 reserve2 = 14;
  if (this->reserve2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->reserve2(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDJoinRoomReq)
}

::google::protobuf::uint8* CMDJoinRoomReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDJoinRoomReq)
  // optional int32 userid = 1;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->userid(), target);
  }

  // optional int32 vcbid = 2;
  if (this->vcbid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->vcbid(), target);
  }

  // optional int32 devtype = 3;
  if (this->devtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->devtype(), target);
  }

  // optional int32 time = 4;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->time(), target);
  }

  // optional int32 crc32 = 5;
  if (this->crc32() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->crc32(), target);
  }

  // optional int32 coremessagever = 6;
  if (this->coremessagever() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->coremessagever(), target);
  }

  // optional string cuserpwd = 7;
  if (this->cuserpwd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cuserpwd().data(), this->cuserpwd().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDJoinRoomReq.cuserpwd");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->cuserpwd(), target);
  }

  // optional string croompwd = 8;
  if (this->croompwd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->croompwd().data(), this->croompwd().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDJoinRoomReq.croompwd");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->croompwd(), target);
  }

  // optional string cSerial = 9;
  if (this->cserial().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cserial().data(), this->cserial().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDJoinRoomReq.cSerial");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->cserial(), target);
  }

  // optional string cMacAddr = 10;
  if (this->cmacaddr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cmacaddr().data(), this->cmacaddr().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDJoinRoomReq.cMacAddr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->cmacaddr(), target);
  }

  // optional string cIpAddr = 11;
  if (this->cipaddr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cipaddr().data(), this->cipaddr().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDJoinRoomReq.cIpAddr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->cipaddr(), target);
  }

  // optional int32 bloginSource = 12;
  if (this->bloginsource() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->bloginsource(), target);
  }

  // optional int32 reserve1 = 13;
  if (this->reserve1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->reserve1(), target);
  }

  // optional int32 reserve2 = 14;
  if (this->reserve2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->reserve2(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDJoinRoomReq)
  return target;
}

int CMDJoinRoomReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDJoinRoomReq)
  int total_size = 0;

  // optional int32 userid = 1;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->userid());
  }

  // optional int32 vcbid = 2;
  if (this->vcbid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->vcbid());
  }

  // optional int32 devtype = 3;
  if (this->devtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->devtype());
  }

  // optional int32 time = 4;
  if (this->time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->time());
  }

  // optional int32 crc32 = 5;
  if (this->crc32() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->crc32());
  }

  // optional int32 coremessagever = 6;
  if (this->coremessagever() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->coremessagever());
  }

  // optional string cuserpwd = 7;
  if (this->cuserpwd().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cuserpwd());
  }

  // optional string croompwd = 8;
  if (this->croompwd().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->croompwd());
  }

  // optional string cSerial = 9;
  if (this->cserial().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cserial());
  }

  // optional string cMacAddr = 10;
  if (this->cmacaddr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cmacaddr());
  }

  // optional string cIpAddr = 11;
  if (this->cipaddr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cipaddr());
  }

  // optional int32 bloginSource = 12;
  if (this->bloginsource() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->bloginsource());
  }

  // optional int32 reserve1 = 13;
  if (this->reserve1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->reserve1());
  }

  // optional int32 reserve2 = 14;
  if (this->reserve2() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->reserve2());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDJoinRoomReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDJoinRoomReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDJoinRoomReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDJoinRoomReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDJoinRoomReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDJoinRoomReq)
    MergeFrom(*source);
  }
}

void CMDJoinRoomReq::MergeFrom(const CMDJoinRoomReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDJoinRoomReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.vcbid() != 0) {
    set_vcbid(from.vcbid());
  }
  if (from.devtype() != 0) {
    set_devtype(from.devtype());
  }
  if (from.time() != 0) {
    set_time(from.time());
  }
  if (from.crc32() != 0) {
    set_crc32(from.crc32());
  }
  if (from.coremessagever() != 0) {
    set_coremessagever(from.coremessagever());
  }
  if (from.cuserpwd().size() > 0) {

    cuserpwd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cuserpwd_);
  }
  if (from.croompwd().size() > 0) {

    croompwd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.croompwd_);
  }
  if (from.cserial().size() > 0) {

    cserial_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cserial_);
  }
  if (from.cmacaddr().size() > 0) {

    cmacaddr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cmacaddr_);
  }
  if (from.cipaddr().size() > 0) {

    cipaddr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cipaddr_);
  }
  if (from.bloginsource() != 0) {
    set_bloginsource(from.bloginsource());
  }
  if (from.reserve1() != 0) {
    set_reserve1(from.reserve1());
  }
  if (from.reserve2() != 0) {
    set_reserve2(from.reserve2());
  }
}

void CMDJoinRoomReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDJoinRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDJoinRoomReq::CopyFrom(const CMDJoinRoomReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDJoinRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDJoinRoomReq::IsInitialized() const {

  return true;
}

void CMDJoinRoomReq::Swap(CMDJoinRoomReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDJoinRoomReq::InternalSwap(CMDJoinRoomReq* other) {
  std::swap(userid_, other->userid_);
  std::swap(vcbid_, other->vcbid_);
  std::swap(devtype_, other->devtype_);
  std::swap(time_, other->time_);
  std::swap(crc32_, other->crc32_);
  std::swap(coremessagever_, other->coremessagever_);
  cuserpwd_.Swap(&other->cuserpwd_);
  croompwd_.Swap(&other->croompwd_);
  cserial_.Swap(&other->cserial_);
  cmacaddr_.Swap(&other->cmacaddr_);
  cipaddr_.Swap(&other->cipaddr_);
  std::swap(bloginsource_, other->bloginsource_);
  std::swap(reserve1_, other->reserve1_);
  std::swap(reserve2_, other->reserve2_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDJoinRoomReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDJoinRoomReq_descriptor_;
  metadata.reflection = CMDJoinRoomReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDJoinRoomReq

// optional int32 userid = 1;
void CMDJoinRoomReq::clear_userid() {
  userid_ = 0;
}
 ::google::protobuf::int32 CMDJoinRoomReq::userid() const {
  // @@protoc_insertion_point(field_get:CMDJoinRoomReq.userid)
  return userid_;
}
 void CMDJoinRoomReq::set_userid(::google::protobuf::int32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDJoinRoomReq.userid)
}

// optional int32 vcbid = 2;
void CMDJoinRoomReq::clear_vcbid() {
  vcbid_ = 0;
}
 ::google::protobuf::int32 CMDJoinRoomReq::vcbid() const {
  // @@protoc_insertion_point(field_get:CMDJoinRoomReq.vcbid)
  return vcbid_;
}
 void CMDJoinRoomReq::set_vcbid(::google::protobuf::int32 value) {
  
  vcbid_ = value;
  // @@protoc_insertion_point(field_set:CMDJoinRoomReq.vcbid)
}

// optional int32 devtype = 3;
void CMDJoinRoomReq::clear_devtype() {
  devtype_ = 0;
}
 ::google::protobuf::int32 CMDJoinRoomReq::devtype() const {
  // @@protoc_insertion_point(field_get:CMDJoinRoomReq.devtype)
  return devtype_;
}
 void CMDJoinRoomReq::set_devtype(::google::protobuf::int32 value) {
  
  devtype_ = value;
  // @@protoc_insertion_point(field_set:CMDJoinRoomReq.devtype)
}

// optional int32 time = 4;
void CMDJoinRoomReq::clear_time() {
  time_ = 0;
}
 ::google::protobuf::int32 CMDJoinRoomReq::time() const {
  // @@protoc_insertion_point(field_get:CMDJoinRoomReq.time)
  return time_;
}
 void CMDJoinRoomReq::set_time(::google::protobuf::int32 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:CMDJoinRoomReq.time)
}

// optional int32 crc32 = 5;
void CMDJoinRoomReq::clear_crc32() {
  crc32_ = 0;
}
 ::google::protobuf::int32 CMDJoinRoomReq::crc32() const {
  // @@protoc_insertion_point(field_get:CMDJoinRoomReq.crc32)
  return crc32_;
}
 void CMDJoinRoomReq::set_crc32(::google::protobuf::int32 value) {
  
  crc32_ = value;
  // @@protoc_insertion_point(field_set:CMDJoinRoomReq.crc32)
}

// optional int32 coremessagever = 6;
void CMDJoinRoomReq::clear_coremessagever() {
  coremessagever_ = 0;
}
 ::google::protobuf::int32 CMDJoinRoomReq::coremessagever() const {
  // @@protoc_insertion_point(field_get:CMDJoinRoomReq.coremessagever)
  return coremessagever_;
}
 void CMDJoinRoomReq::set_coremessagever(::google::protobuf::int32 value) {
  
  coremessagever_ = value;
  // @@protoc_insertion_point(field_set:CMDJoinRoomReq.coremessagever)
}

// optional string cuserpwd = 7;
void CMDJoinRoomReq::clear_cuserpwd() {
  cuserpwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CMDJoinRoomReq::cuserpwd() const {
  // @@protoc_insertion_point(field_get:CMDJoinRoomReq.cuserpwd)
  return cuserpwd_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDJoinRoomReq::set_cuserpwd(const ::std::string& value) {
  
  cuserpwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDJoinRoomReq.cuserpwd)
}
 void CMDJoinRoomReq::set_cuserpwd(const char* value) {
  
  cuserpwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDJoinRoomReq.cuserpwd)
}
 void CMDJoinRoomReq::set_cuserpwd(const char* value, size_t size) {
  
  cuserpwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDJoinRoomReq.cuserpwd)
}
 ::std::string* CMDJoinRoomReq::mutable_cuserpwd() {
  
  // @@protoc_insertion_point(field_mutable:CMDJoinRoomReq.cuserpwd)
  return cuserpwd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMDJoinRoomReq::release_cuserpwd() {
  // @@protoc_insertion_point(field_release:CMDJoinRoomReq.cuserpwd)
  
  return cuserpwd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDJoinRoomReq::set_allocated_cuserpwd(::std::string* cuserpwd) {
  if (cuserpwd != NULL) {
    
  } else {
    
  }
  cuserpwd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cuserpwd);
  // @@protoc_insertion_point(field_set_allocated:CMDJoinRoomReq.cuserpwd)
}

// optional string croompwd = 8;
void CMDJoinRoomReq::clear_croompwd() {
  croompwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CMDJoinRoomReq::croompwd() const {
  // @@protoc_insertion_point(field_get:CMDJoinRoomReq.croompwd)
  return croompwd_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDJoinRoomReq::set_croompwd(const ::std::string& value) {
  
  croompwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDJoinRoomReq.croompwd)
}
 void CMDJoinRoomReq::set_croompwd(const char* value) {
  
  croompwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDJoinRoomReq.croompwd)
}
 void CMDJoinRoomReq::set_croompwd(const char* value, size_t size) {
  
  croompwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDJoinRoomReq.croompwd)
}
 ::std::string* CMDJoinRoomReq::mutable_croompwd() {
  
  // @@protoc_insertion_point(field_mutable:CMDJoinRoomReq.croompwd)
  return croompwd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMDJoinRoomReq::release_croompwd() {
  // @@protoc_insertion_point(field_release:CMDJoinRoomReq.croompwd)
  
  return croompwd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDJoinRoomReq::set_allocated_croompwd(::std::string* croompwd) {
  if (croompwd != NULL) {
    
  } else {
    
  }
  croompwd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), croompwd);
  // @@protoc_insertion_point(field_set_allocated:CMDJoinRoomReq.croompwd)
}

// optional string cSerial = 9;
void CMDJoinRoomReq::clear_cserial() {
  cserial_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CMDJoinRoomReq::cserial() const {
  // @@protoc_insertion_point(field_get:CMDJoinRoomReq.cSerial)
  return cserial_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDJoinRoomReq::set_cserial(const ::std::string& value) {
  
  cserial_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDJoinRoomReq.cSerial)
}
 void CMDJoinRoomReq::set_cserial(const char* value) {
  
  cserial_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDJoinRoomReq.cSerial)
}
 void CMDJoinRoomReq::set_cserial(const char* value, size_t size) {
  
  cserial_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDJoinRoomReq.cSerial)
}
 ::std::string* CMDJoinRoomReq::mutable_cserial() {
  
  // @@protoc_insertion_point(field_mutable:CMDJoinRoomReq.cSerial)
  return cserial_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMDJoinRoomReq::release_cserial() {
  // @@protoc_insertion_point(field_release:CMDJoinRoomReq.cSerial)
  
  return cserial_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDJoinRoomReq::set_allocated_cserial(::std::string* cserial) {
  if (cserial != NULL) {
    
  } else {
    
  }
  cserial_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cserial);
  // @@protoc_insertion_point(field_set_allocated:CMDJoinRoomReq.cSerial)
}

// optional string cMacAddr = 10;
void CMDJoinRoomReq::clear_cmacaddr() {
  cmacaddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CMDJoinRoomReq::cmacaddr() const {
  // @@protoc_insertion_point(field_get:CMDJoinRoomReq.cMacAddr)
  return cmacaddr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDJoinRoomReq::set_cmacaddr(const ::std::string& value) {
  
  cmacaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDJoinRoomReq.cMacAddr)
}
 void CMDJoinRoomReq::set_cmacaddr(const char* value) {
  
  cmacaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDJoinRoomReq.cMacAddr)
}
 void CMDJoinRoomReq::set_cmacaddr(const char* value, size_t size) {
  
  cmacaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDJoinRoomReq.cMacAddr)
}
 ::std::string* CMDJoinRoomReq::mutable_cmacaddr() {
  
  // @@protoc_insertion_point(field_mutable:CMDJoinRoomReq.cMacAddr)
  return cmacaddr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMDJoinRoomReq::release_cmacaddr() {
  // @@protoc_insertion_point(field_release:CMDJoinRoomReq.cMacAddr)
  
  return cmacaddr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDJoinRoomReq::set_allocated_cmacaddr(::std::string* cmacaddr) {
  if (cmacaddr != NULL) {
    
  } else {
    
  }
  cmacaddr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cmacaddr);
  // @@protoc_insertion_point(field_set_allocated:CMDJoinRoomReq.cMacAddr)
}

// optional string cIpAddr = 11;
void CMDJoinRoomReq::clear_cipaddr() {
  cipaddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CMDJoinRoomReq::cipaddr() const {
  // @@protoc_insertion_point(field_get:CMDJoinRoomReq.cIpAddr)
  return cipaddr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDJoinRoomReq::set_cipaddr(const ::std::string& value) {
  
  cipaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDJoinRoomReq.cIpAddr)
}
 void CMDJoinRoomReq::set_cipaddr(const char* value) {
  
  cipaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDJoinRoomReq.cIpAddr)
}
 void CMDJoinRoomReq::set_cipaddr(const char* value, size_t size) {
  
  cipaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDJoinRoomReq.cIpAddr)
}
 ::std::string* CMDJoinRoomReq::mutable_cipaddr() {
  
  // @@protoc_insertion_point(field_mutable:CMDJoinRoomReq.cIpAddr)
  return cipaddr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMDJoinRoomReq::release_cipaddr() {
  // @@protoc_insertion_point(field_release:CMDJoinRoomReq.cIpAddr)
  
  return cipaddr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDJoinRoomReq::set_allocated_cipaddr(::std::string* cipaddr) {
  if (cipaddr != NULL) {
    
  } else {
    
  }
  cipaddr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cipaddr);
  // @@protoc_insertion_point(field_set_allocated:CMDJoinRoomReq.cIpAddr)
}

// optional int32 bloginSource = 12;
void CMDJoinRoomReq::clear_bloginsource() {
  bloginsource_ = 0;
}
 ::google::protobuf::int32 CMDJoinRoomReq::bloginsource() const {
  // @@protoc_insertion_point(field_get:CMDJoinRoomReq.bloginSource)
  return bloginsource_;
}
 void CMDJoinRoomReq::set_bloginsource(::google::protobuf::int32 value) {
  
  bloginsource_ = value;
  // @@protoc_insertion_point(field_set:CMDJoinRoomReq.bloginSource)
}

// optional int32 reserve1 = 13;
void CMDJoinRoomReq::clear_reserve1() {
  reserve1_ = 0;
}
 ::google::protobuf::int32 CMDJoinRoomReq::reserve1() const {
  // @@protoc_insertion_point(field_get:CMDJoinRoomReq.reserve1)
  return reserve1_;
}
 void CMDJoinRoomReq::set_reserve1(::google::protobuf::int32 value) {
  
  reserve1_ = value;
  // @@protoc_insertion_point(field_set:CMDJoinRoomReq.reserve1)
}

// optional int32 reserve2 = 14;
void CMDJoinRoomReq::clear_reserve2() {
  reserve2_ = 0;
}
 ::google::protobuf::int32 CMDJoinRoomReq::reserve2() const {
  // @@protoc_insertion_point(field_get:CMDJoinRoomReq.reserve2)
  return reserve2_;
}
 void CMDJoinRoomReq::set_reserve2(::google::protobuf::int32 value) {
  
  reserve2_ = value;
  // @@protoc_insertion_point(field_set:CMDJoinRoomReq.reserve2)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDJoinRoomResp::kUseridFieldNumber;
const int CMDJoinRoomResp::kVcbidFieldNumber;
const int CMDJoinRoomResp::kRoomtypeFieldNumber;
const int CMDJoinRoomResp::kBusepwdFieldNumber;
const int CMDJoinRoomResp::kBIsCollectRoomFieldNumber;
const int CMDJoinRoomResp::kDevtypeFieldNumber;
const int CMDJoinRoomResp::kSeatsFieldNumber;
const int CMDJoinRoomResp::kGroupidFieldNumber;
const int CMDJoinRoomResp::kRunstateFieldNumber;
const int CMDJoinRoomResp::kCreatoridFieldNumber;
const int CMDJoinRoomResp::kOp1IdFieldNumber;
const int CMDJoinRoomResp::kOp2IdFieldNumber;
const int CMDJoinRoomResp::kOp3IdFieldNumber;
const int CMDJoinRoomResp::kOp4IdFieldNumber;
const int CMDJoinRoomResp::kInroomstateFieldNumber;
const int CMDJoinRoomResp::kNkFieldNumber;
const int CMDJoinRoomResp::kNbFieldNumber;
const int CMDJoinRoomResp::kNlotterypoolFieldNumber;
const int CMDJoinRoomResp::kNchestnumFieldNumber;
const int CMDJoinRoomResp::kCnameFieldNumber;
const int CMDJoinRoomResp::kCmediaaddrFieldNumber;
const int CMDJoinRoomResp::kCpwdFieldNumber;
const int CMDJoinRoomResp::kNpopularityFieldNumber;
const int CMDJoinRoomResp::kNcollectTimesFieldNumber;
const int CMDJoinRoomResp::kUserRoleTypeFieldNumber;
const int CMDJoinRoomResp::kGroupIconFieldNumber;
const int CMDJoinRoomResp::kGroupShowIDFieldNumber;
const int CMDJoinRoomResp::kMuteSwitchFieldNumber;
const int CMDJoinRoomResp::kLiveUrlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDJoinRoomResp::CMDJoinRoomResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDJoinRoomResp)
}

void CMDJoinRoomResp::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDJoinRoomResp::CMDJoinRoomResp(const CMDJoinRoomResp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDJoinRoomResp)
}

void CMDJoinRoomResp::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  userid_ = 0u;
  vcbid_ = 0u;
  roomtype_ = 0u;
  busepwd_ = 0u;
  biscollectroom_ = 0u;
  devtype_ = 0u;
  seats_ = 0u;
  groupid_ = 0u;
  runstate_ = 0u;
  creatorid_ = 0u;
  op1id_ = 0u;
  op2id_ = 0u;
  op3id_ = 0u;
  op4id_ = 0u;
  inroomstate_ = 0u;
  nk_ = GOOGLE_LONGLONG(0);
  nb_ = GOOGLE_LONGLONG(0);
  nlotterypool_ = GOOGLE_LONGLONG(0);
  nchestnum_ = 0;
  cname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cmediaaddr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cpwd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  npopularity__ = GOOGLE_ULONGLONG(0);
  ncollect_times_ = 0u;
  userroletype_ = 0u;
  groupicon_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  groupshowid_ = 0u;
  muteswitch_ = 0u;
  liveurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CMDJoinRoomResp::~CMDJoinRoomResp() {
  // @@protoc_insertion_point(destructor:CMDJoinRoomResp)
  SharedDtor();
}

void CMDJoinRoomResp::SharedDtor() {
  cname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cmediaaddr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cpwd_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  groupicon_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  liveurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CMDJoinRoomResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDJoinRoomResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDJoinRoomResp_descriptor_;
}

const CMDJoinRoomResp& CMDJoinRoomResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RoomSvr_2eproto();
  return *default_instance_;
}

CMDJoinRoomResp* CMDJoinRoomResp::default_instance_ = NULL;

CMDJoinRoomResp* CMDJoinRoomResp::New(::google::protobuf::Arena* arena) const {
  CMDJoinRoomResp* n = new CMDJoinRoomResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDJoinRoomResp::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDJoinRoomResp)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDJoinRoomResp, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDJoinRoomResp*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(userid_, groupid_);
  ZR_(runstate_, nk_);
  inroomstate_ = 0u;
  ZR_(nchestnum_, nlotterypool_);
  ZR_(npopularity__, ncollect_times_);
  nb_ = GOOGLE_LONGLONG(0);
  cname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cmediaaddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cpwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ZR_(groupshowid_, muteswitch_);
  userroletype_ = 0u;
  groupicon_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  liveurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool CMDJoinRoomResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDJoinRoomResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 userid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_vcbid;
        break;
      }

      // optional uint32 vcbid = 2;
      case 2: {
        if (tag == 16) {
         parse_vcbid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &vcbid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_roomtype;
        break;
      }

      // optional uint32 roomtype = 3;
      case 3: {
        if (tag == 24) {
         parse_roomtype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &roomtype_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_busepwd;
        break;
      }

      // optional uint32 busepwd = 4;
      case 4: {
        if (tag == 32) {
         parse_busepwd:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &busepwd_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_bIsCollectRoom;
        break;
      }

      // optional uint32 bIsCollectRoom = 5;
      case 5: {
        if (tag == 40) {
         parse_bIsCollectRoom:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &biscollectroom_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_devtype;
        break;
      }

      // optional uint32 devtype = 6;
      case 6: {
        if (tag == 48) {
         parse_devtype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &devtype_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_seats;
        break;
      }

      // optional uint32 seats = 7;
      case 7: {
        if (tag == 56) {
         parse_seats:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &seats_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_groupid;
        break;
      }

      // optional uint32 groupid = 8;
      case 8: {
        if (tag == 64) {
         parse_groupid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &groupid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_runstate;
        break;
      }

      // optional uint32 runstate = 9;
      case 9: {
        if (tag == 72) {
         parse_runstate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &runstate_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_creatorid;
        break;
      }

      // optional uint32 creatorid = 10;
      case 10: {
        if (tag == 80) {
         parse_creatorid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &creatorid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_op1id;
        break;
      }

      // optional uint32 op1id = 11;
      case 11: {
        if (tag == 88) {
         parse_op1id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &op1id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_op2id;
        break;
      }

      // optional uint32 op2id = 12;
      case 12: {
        if (tag == 96) {
         parse_op2id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &op2id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_op3id;
        break;
      }

      // optional uint32 op3id = 13;
      case 13: {
        if (tag == 104) {
         parse_op3id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &op3id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_op4id;
        break;
      }

      // optional uint32 op4id = 14;
      case 14: {
        if (tag == 112) {
         parse_op4id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &op4id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(120)) goto parse_inroomstate;
        break;
      }

      // optional uint32 inroomstate = 15;
      case 15: {
        if (tag == 120) {
         parse_inroomstate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &inroomstate_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(128)) goto parse_nk;
        break;
      }

      // optional int64 nk = 16;
      case 16: {
        if (tag == 128) {
         parse_nk:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &nk_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(136)) goto parse_nb;
        break;
      }

      // optional int64 nb = 17;
      case 17: {
        if (tag == 136) {
         parse_nb:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &nb_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(144)) goto parse_nlotterypool;
        break;
      }

      // optional int64 nlotterypool = 18;
      case 18: {
        if (tag == 144) {
         parse_nlotterypool:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &nlotterypool_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(152)) goto parse_nchestnum;
        break;
      }

      // optional int32 nchestnum = 19;
      case 19: {
        if (tag == 152) {
         parse_nchestnum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nchestnum_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(162)) goto parse_cname;
        break;
      }

      // optional string cname = 20;
      case 20: {
        if (tag == 162) {
         parse_cname:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cname().data(), this->cname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMDJoinRoomResp.cname"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(170)) goto parse_cmediaaddr;
        break;
      }

      // optional string cmediaaddr = 21;
      case 21: {
        if (tag == 170) {
         parse_cmediaaddr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cmediaaddr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cmediaaddr().data(), this->cmediaaddr().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMDJoinRoomResp.cmediaaddr"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(178)) goto parse_cpwd;
        break;
      }

      // optional string cpwd = 22;
      case 22: {
        if (tag == 178) {
         parse_cpwd:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cpwd()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cpwd().data(), this->cpwd().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMDJoinRoomResp.cpwd"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(184)) goto parse_npopularity_;
        break;
      }

      // optional uint64 npopularity_ = 23;
      case 23: {
        if (tag == 184) {
         parse_npopularity_:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &npopularity__)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(192)) goto parse_ncollect_times;
        break;
      }

      // optional uint32 ncollect_times = 24;
      case 24: {
        if (tag == 192) {
         parse_ncollect_times:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ncollect_times_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(200)) goto parse_userRoleType;
        break;
      }

      // optional uint32 userRoleType = 25;
      case 25: {
        if (tag == 200) {
         parse_userRoleType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userroletype_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(210)) goto parse_groupIcon;
        break;
      }

      // optional string groupIcon = 26;
      case 26: {
        if (tag == 210) {
         parse_groupIcon:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_groupicon()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->groupicon().data(), this->groupicon().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMDJoinRoomResp.groupIcon"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(216)) goto parse_groupShowID;
        break;
      }

      // optional uint32 groupShowID = 27;
      case 27: {
        if (tag == 216) {
         parse_groupShowID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &groupshowid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(224)) goto parse_muteSwitch;
        break;
      }

      // optional uint32 muteSwitch = 28;
      case 28: {
        if (tag == 224) {
         parse_muteSwitch:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &muteswitch_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(234)) goto parse_liveUrl;
        break;
      }

      // optional string liveUrl = 29;
      case 29: {
        if (tag == 234) {
         parse_liveUrl:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_liveurl()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->liveurl().data(), this->liveurl().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMDJoinRoomResp.liveUrl"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDJoinRoomResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDJoinRoomResp)
  return false;
#undef DO_
}

void CMDJoinRoomResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDJoinRoomResp)
  // optional uint32 userid = 1;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->userid(), output);
  }

  // optional uint32 vcbid = 2;
  if (this->vcbid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->vcbid(), output);
  }

  // optional uint32 roomtype = 3;
  if (this->roomtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->roomtype(), output);
  }

  // optional uint32 busepwd = 4;
  if (this->busepwd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->busepwd(), output);
  }

  // optional uint32 bIsCollectRoom = 5;
  if (this->biscollectroom() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->biscollectroom(), output);
  }

  // optional uint32 devtype = 6;
  if (this->devtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->devtype(), output);
  }

  // optional uint32 seats = 7;
  if (this->seats() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->seats(), output);
  }

  // optional uint32 groupid = 8;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->groupid(), output);
  }

  // optional uint32 runstate = 9;
  if (this->runstate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->runstate(), output);
  }

  // optional uint32 creatorid = 10;
  if (this->creatorid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->creatorid(), output);
  }

  // optional uint32 op1id = 11;
  if (this->op1id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->op1id(), output);
  }

  // optional uint32 op2id = 12;
  if (this->op2id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->op2id(), output);
  }

  // optional uint32 op3id = 13;
  if (this->op3id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->op3id(), output);
  }

  // optional uint32 op4id = 14;
  if (this->op4id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->op4id(), output);
  }

  // optional uint32 inroomstate = 15;
  if (this->inroomstate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->inroomstate(), output);
  }

  // optional int64 nk = 16;
  if (this->nk() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(16, this->nk(), output);
  }

  // optional int64 nb = 17;
  if (this->nb() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(17, this->nb(), output);
  }

  // optional int64 nlotterypool = 18;
  if (this->nlotterypool() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(18, this->nlotterypool(), output);
  }

  // optional int32 nchestnum = 19;
  if (this->nchestnum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(19, this->nchestnum(), output);
  }

  // optional string cname = 20;
  if (this->cname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cname().data(), this->cname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDJoinRoomResp.cname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      20, this->cname(), output);
  }

  // optional string cmediaaddr = 21;
  if (this->cmediaaddr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cmediaaddr().data(), this->cmediaaddr().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDJoinRoomResp.cmediaaddr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      21, this->cmediaaddr(), output);
  }

  // optional string cpwd = 22;
  if (this->cpwd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cpwd().data(), this->cpwd().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDJoinRoomResp.cpwd");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      22, this->cpwd(), output);
  }

  // optional uint64 npopularity_ = 23;
  if (this->npopularity_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(23, this->npopularity_(), output);
  }

  // optional uint32 ncollect_times = 24;
  if (this->ncollect_times() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(24, this->ncollect_times(), output);
  }

  // optional uint32 userRoleType = 25;
  if (this->userroletype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(25, this->userroletype(), output);
  }

  // optional string groupIcon = 26;
  if (this->groupicon().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->groupicon().data(), this->groupicon().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDJoinRoomResp.groupIcon");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      26, this->groupicon(), output);
  }

  // optional uint32 groupShowID = 27;
  if (this->groupshowid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(27, this->groupshowid(), output);
  }

  // optional uint32 muteSwitch = 28;
  if (this->muteswitch() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(28, this->muteswitch(), output);
  }

  // optional string liveUrl = 29;
  if (this->liveurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->liveurl().data(), this->liveurl().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDJoinRoomResp.liveUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      29, this->liveurl(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDJoinRoomResp)
}

::google::protobuf::uint8* CMDJoinRoomResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDJoinRoomResp)
  // optional uint32 userid = 1;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->userid(), target);
  }

  // optional uint32 vcbid = 2;
  if (this->vcbid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->vcbid(), target);
  }

  // optional uint32 roomtype = 3;
  if (this->roomtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->roomtype(), target);
  }

  // optional uint32 busepwd = 4;
  if (this->busepwd() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->busepwd(), target);
  }

  // optional uint32 bIsCollectRoom = 5;
  if (this->biscollectroom() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->biscollectroom(), target);
  }

  // optional uint32 devtype = 6;
  if (this->devtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->devtype(), target);
  }

  // optional uint32 seats = 7;
  if (this->seats() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->seats(), target);
  }

  // optional uint32 groupid = 8;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->groupid(), target);
  }

  // optional uint32 runstate = 9;
  if (this->runstate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->runstate(), target);
  }

  // optional uint32 creatorid = 10;
  if (this->creatorid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->creatorid(), target);
  }

  // optional uint32 op1id = 11;
  if (this->op1id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->op1id(), target);
  }

  // optional uint32 op2id = 12;
  if (this->op2id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->op2id(), target);
  }

  // optional uint32 op3id = 13;
  if (this->op3id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->op3id(), target);
  }

  // optional uint32 op4id = 14;
  if (this->op4id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->op4id(), target);
  }

  // optional uint32 inroomstate = 15;
  if (this->inroomstate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->inroomstate(), target);
  }

  // optional int64 nk = 16;
  if (this->nk() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(16, this->nk(), target);
  }

  // optional int64 nb = 17;
  if (this->nb() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(17, this->nb(), target);
  }

  // optional int64 nlotterypool = 18;
  if (this->nlotterypool() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(18, this->nlotterypool(), target);
  }

  // optional int32 nchestnum = 19;
  if (this->nchestnum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(19, this->nchestnum(), target);
  }

  // optional string cname = 20;
  if (this->cname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cname().data(), this->cname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDJoinRoomResp.cname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->cname(), target);
  }

  // optional string cmediaaddr = 21;
  if (this->cmediaaddr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cmediaaddr().data(), this->cmediaaddr().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDJoinRoomResp.cmediaaddr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        21, this->cmediaaddr(), target);
  }

  // optional string cpwd = 22;
  if (this->cpwd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cpwd().data(), this->cpwd().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDJoinRoomResp.cpwd");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        22, this->cpwd(), target);
  }

  // optional uint64 npopularity_ = 23;
  if (this->npopularity_() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(23, this->npopularity_(), target);
  }

  // optional uint32 ncollect_times = 24;
  if (this->ncollect_times() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(24, this->ncollect_times(), target);
  }

  // optional uint32 userRoleType = 25;
  if (this->userroletype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(25, this->userroletype(), target);
  }

  // optional string groupIcon = 26;
  if (this->groupicon().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->groupicon().data(), this->groupicon().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDJoinRoomResp.groupIcon");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        26, this->groupicon(), target);
  }

  // optional uint32 groupShowID = 27;
  if (this->groupshowid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(27, this->groupshowid(), target);
  }

  // optional uint32 muteSwitch = 28;
  if (this->muteswitch() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(28, this->muteswitch(), target);
  }

  // optional string liveUrl = 29;
  if (this->liveurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->liveurl().data(), this->liveurl().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDJoinRoomResp.liveUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        29, this->liveurl(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDJoinRoomResp)
  return target;
}

int CMDJoinRoomResp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDJoinRoomResp)
  int total_size = 0;

  // optional uint32 userid = 1;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userid());
  }

  // optional uint32 vcbid = 2;
  if (this->vcbid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->vcbid());
  }

  // optional uint32 roomtype = 3;
  if (this->roomtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->roomtype());
  }

  // optional uint32 busepwd = 4;
  if (this->busepwd() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->busepwd());
  }

  // optional uint32 bIsCollectRoom = 5;
  if (this->biscollectroom() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->biscollectroom());
  }

  // optional uint32 devtype = 6;
  if (this->devtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->devtype());
  }

  // optional uint32 seats = 7;
  if (this->seats() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->seats());
  }

  // optional uint32 groupid = 8;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->groupid());
  }

  // optional uint32 runstate = 9;
  if (this->runstate() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->runstate());
  }

  // optional uint32 creatorid = 10;
  if (this->creatorid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->creatorid());
  }

  // optional uint32 op1id = 11;
  if (this->op1id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->op1id());
  }

  // optional uint32 op2id = 12;
  if (this->op2id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->op2id());
  }

  // optional uint32 op3id = 13;
  if (this->op3id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->op3id());
  }

  // optional uint32 op4id = 14;
  if (this->op4id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->op4id());
  }

  // optional uint32 inroomstate = 15;
  if (this->inroomstate() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->inroomstate());
  }

  // optional int64 nk = 16;
  if (this->nk() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->nk());
  }

  // optional int64 nb = 17;
  if (this->nb() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->nb());
  }

  // optional int64 nlotterypool = 18;
  if (this->nlotterypool() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->nlotterypool());
  }

  // optional int32 nchestnum = 19;
  if (this->nchestnum() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nchestnum());
  }

  // optional string cname = 20;
  if (this->cname().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cname());
  }

  // optional string cmediaaddr = 21;
  if (this->cmediaaddr().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cmediaaddr());
  }

  // optional string cpwd = 22;
  if (this->cpwd().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cpwd());
  }

  // optional uint64 npopularity_ = 23;
  if (this->npopularity_() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->npopularity_());
  }

  // optional uint32 ncollect_times = 24;
  if (this->ncollect_times() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ncollect_times());
  }

  // optional uint32 userRoleType = 25;
  if (this->userroletype() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userroletype());
  }

  // optional string groupIcon = 26;
  if (this->groupicon().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->groupicon());
  }

  // optional uint32 groupShowID = 27;
  if (this->groupshowid() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->groupshowid());
  }

  // optional uint32 muteSwitch = 28;
  if (this->muteswitch() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->muteswitch());
  }

  // optional string liveUrl = 29;
  if (this->liveurl().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->liveurl());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDJoinRoomResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDJoinRoomResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDJoinRoomResp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDJoinRoomResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDJoinRoomResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDJoinRoomResp)
    MergeFrom(*source);
  }
}

void CMDJoinRoomResp::MergeFrom(const CMDJoinRoomResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDJoinRoomResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.vcbid() != 0) {
    set_vcbid(from.vcbid());
  }
  if (from.roomtype() != 0) {
    set_roomtype(from.roomtype());
  }
  if (from.busepwd() != 0) {
    set_busepwd(from.busepwd());
  }
  if (from.biscollectroom() != 0) {
    set_biscollectroom(from.biscollectroom());
  }
  if (from.devtype() != 0) {
    set_devtype(from.devtype());
  }
  if (from.seats() != 0) {
    set_seats(from.seats());
  }
  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
  if (from.runstate() != 0) {
    set_runstate(from.runstate());
  }
  if (from.creatorid() != 0) {
    set_creatorid(from.creatorid());
  }
  if (from.op1id() != 0) {
    set_op1id(from.op1id());
  }
  if (from.op2id() != 0) {
    set_op2id(from.op2id());
  }
  if (from.op3id() != 0) {
    set_op3id(from.op3id());
  }
  if (from.op4id() != 0) {
    set_op4id(from.op4id());
  }
  if (from.inroomstate() != 0) {
    set_inroomstate(from.inroomstate());
  }
  if (from.nk() != 0) {
    set_nk(from.nk());
  }
  if (from.nb() != 0) {
    set_nb(from.nb());
  }
  if (from.nlotterypool() != 0) {
    set_nlotterypool(from.nlotterypool());
  }
  if (from.nchestnum() != 0) {
    set_nchestnum(from.nchestnum());
  }
  if (from.cname().size() > 0) {

    cname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cname_);
  }
  if (from.cmediaaddr().size() > 0) {

    cmediaaddr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cmediaaddr_);
  }
  if (from.cpwd().size() > 0) {

    cpwd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cpwd_);
  }
  if (from.npopularity_() != 0) {
    set_npopularity_(from.npopularity_());
  }
  if (from.ncollect_times() != 0) {
    set_ncollect_times(from.ncollect_times());
  }
  if (from.userroletype() != 0) {
    set_userroletype(from.userroletype());
  }
  if (from.groupicon().size() > 0) {

    groupicon_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.groupicon_);
  }
  if (from.groupshowid() != 0) {
    set_groupshowid(from.groupshowid());
  }
  if (from.muteswitch() != 0) {
    set_muteswitch(from.muteswitch());
  }
  if (from.liveurl().size() > 0) {

    liveurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.liveurl_);
  }
}

void CMDJoinRoomResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDJoinRoomResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDJoinRoomResp::CopyFrom(const CMDJoinRoomResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDJoinRoomResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDJoinRoomResp::IsInitialized() const {

  return true;
}

void CMDJoinRoomResp::Swap(CMDJoinRoomResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDJoinRoomResp::InternalSwap(CMDJoinRoomResp* other) {
  std::swap(userid_, other->userid_);
  std::swap(vcbid_, other->vcbid_);
  std::swap(roomtype_, other->roomtype_);
  std::swap(busepwd_, other->busepwd_);
  std::swap(biscollectroom_, other->biscollectroom_);
  std::swap(devtype_, other->devtype_);
  std::swap(seats_, other->seats_);
  std::swap(groupid_, other->groupid_);
  std::swap(runstate_, other->runstate_);
  std::swap(creatorid_, other->creatorid_);
  std::swap(op1id_, other->op1id_);
  std::swap(op2id_, other->op2id_);
  std::swap(op3id_, other->op3id_);
  std::swap(op4id_, other->op4id_);
  std::swap(inroomstate_, other->inroomstate_);
  std::swap(nk_, other->nk_);
  std::swap(nb_, other->nb_);
  std::swap(nlotterypool_, other->nlotterypool_);
  std::swap(nchestnum_, other->nchestnum_);
  cname_.Swap(&other->cname_);
  cmediaaddr_.Swap(&other->cmediaaddr_);
  cpwd_.Swap(&other->cpwd_);
  std::swap(npopularity__, other->npopularity__);
  std::swap(ncollect_times_, other->ncollect_times_);
  std::swap(userroletype_, other->userroletype_);
  groupicon_.Swap(&other->groupicon_);
  std::swap(groupshowid_, other->groupshowid_);
  std::swap(muteswitch_, other->muteswitch_);
  liveurl_.Swap(&other->liveurl_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDJoinRoomResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDJoinRoomResp_descriptor_;
  metadata.reflection = CMDJoinRoomResp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDJoinRoomResp

// optional uint32 userid = 1;
void CMDJoinRoomResp::clear_userid() {
  userid_ = 0u;
}
 ::google::protobuf::uint32 CMDJoinRoomResp::userid() const {
  // @@protoc_insertion_point(field_get:CMDJoinRoomResp.userid)
  return userid_;
}
 void CMDJoinRoomResp::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDJoinRoomResp.userid)
}

// optional uint32 vcbid = 2;
void CMDJoinRoomResp::clear_vcbid() {
  vcbid_ = 0u;
}
 ::google::protobuf::uint32 CMDJoinRoomResp::vcbid() const {
  // @@protoc_insertion_point(field_get:CMDJoinRoomResp.vcbid)
  return vcbid_;
}
 void CMDJoinRoomResp::set_vcbid(::google::protobuf::uint32 value) {
  
  vcbid_ = value;
  // @@protoc_insertion_point(field_set:CMDJoinRoomResp.vcbid)
}

// optional uint32 roomtype = 3;
void CMDJoinRoomResp::clear_roomtype() {
  roomtype_ = 0u;
}
 ::google::protobuf::uint32 CMDJoinRoomResp::roomtype() const {
  // @@protoc_insertion_point(field_get:CMDJoinRoomResp.roomtype)
  return roomtype_;
}
 void CMDJoinRoomResp::set_roomtype(::google::protobuf::uint32 value) {
  
  roomtype_ = value;
  // @@protoc_insertion_point(field_set:CMDJoinRoomResp.roomtype)
}

// optional uint32 busepwd = 4;
void CMDJoinRoomResp::clear_busepwd() {
  busepwd_ = 0u;
}
 ::google::protobuf::uint32 CMDJoinRoomResp::busepwd() const {
  // @@protoc_insertion_point(field_get:CMDJoinRoomResp.busepwd)
  return busepwd_;
}
 void CMDJoinRoomResp::set_busepwd(::google::protobuf::uint32 value) {
  
  busepwd_ = value;
  // @@protoc_insertion_point(field_set:CMDJoinRoomResp.busepwd)
}

// optional uint32 bIsCollectRoom = 5;
void CMDJoinRoomResp::clear_biscollectroom() {
  biscollectroom_ = 0u;
}
 ::google::protobuf::uint32 CMDJoinRoomResp::biscollectroom() const {
  // @@protoc_insertion_point(field_get:CMDJoinRoomResp.bIsCollectRoom)
  return biscollectroom_;
}
 void CMDJoinRoomResp::set_biscollectroom(::google::protobuf::uint32 value) {
  
  biscollectroom_ = value;
  // @@protoc_insertion_point(field_set:CMDJoinRoomResp.bIsCollectRoom)
}

// optional uint32 devtype = 6;
void CMDJoinRoomResp::clear_devtype() {
  devtype_ = 0u;
}
 ::google::protobuf::uint32 CMDJoinRoomResp::devtype() const {
  // @@protoc_insertion_point(field_get:CMDJoinRoomResp.devtype)
  return devtype_;
}
 void CMDJoinRoomResp::set_devtype(::google::protobuf::uint32 value) {
  
  devtype_ = value;
  // @@protoc_insertion_point(field_set:CMDJoinRoomResp.devtype)
}

// optional uint32 seats = 7;
void CMDJoinRoomResp::clear_seats() {
  seats_ = 0u;
}
 ::google::protobuf::uint32 CMDJoinRoomResp::seats() const {
  // @@protoc_insertion_point(field_get:CMDJoinRoomResp.seats)
  return seats_;
}
 void CMDJoinRoomResp::set_seats(::google::protobuf::uint32 value) {
  
  seats_ = value;
  // @@protoc_insertion_point(field_set:CMDJoinRoomResp.seats)
}

// optional uint32 groupid = 8;
void CMDJoinRoomResp::clear_groupid() {
  groupid_ = 0u;
}
 ::google::protobuf::uint32 CMDJoinRoomResp::groupid() const {
  // @@protoc_insertion_point(field_get:CMDJoinRoomResp.groupid)
  return groupid_;
}
 void CMDJoinRoomResp::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDJoinRoomResp.groupid)
}

// optional uint32 runstate = 9;
void CMDJoinRoomResp::clear_runstate() {
  runstate_ = 0u;
}
 ::google::protobuf::uint32 CMDJoinRoomResp::runstate() const {
  // @@protoc_insertion_point(field_get:CMDJoinRoomResp.runstate)
  return runstate_;
}
 void CMDJoinRoomResp::set_runstate(::google::protobuf::uint32 value) {
  
  runstate_ = value;
  // @@protoc_insertion_point(field_set:CMDJoinRoomResp.runstate)
}

// optional uint32 creatorid = 10;
void CMDJoinRoomResp::clear_creatorid() {
  creatorid_ = 0u;
}
 ::google::protobuf::uint32 CMDJoinRoomResp::creatorid() const {
  // @@protoc_insertion_point(field_get:CMDJoinRoomResp.creatorid)
  return creatorid_;
}
 void CMDJoinRoomResp::set_creatorid(::google::protobuf::uint32 value) {
  
  creatorid_ = value;
  // @@protoc_insertion_point(field_set:CMDJoinRoomResp.creatorid)
}

// optional uint32 op1id = 11;
void CMDJoinRoomResp::clear_op1id() {
  op1id_ = 0u;
}
 ::google::protobuf::uint32 CMDJoinRoomResp::op1id() const {
  // @@protoc_insertion_point(field_get:CMDJoinRoomResp.op1id)
  return op1id_;
}
 void CMDJoinRoomResp::set_op1id(::google::protobuf::uint32 value) {
  
  op1id_ = value;
  // @@protoc_insertion_point(field_set:CMDJoinRoomResp.op1id)
}

// optional uint32 op2id = 12;
void CMDJoinRoomResp::clear_op2id() {
  op2id_ = 0u;
}
 ::google::protobuf::uint32 CMDJoinRoomResp::op2id() const {
  // @@protoc_insertion_point(field_get:CMDJoinRoomResp.op2id)
  return op2id_;
}
 void CMDJoinRoomResp::set_op2id(::google::protobuf::uint32 value) {
  
  op2id_ = value;
  // @@protoc_insertion_point(field_set:CMDJoinRoomResp.op2id)
}

// optional uint32 op3id = 13;
void CMDJoinRoomResp::clear_op3id() {
  op3id_ = 0u;
}
 ::google::protobuf::uint32 CMDJoinRoomResp::op3id() const {
  // @@protoc_insertion_point(field_get:CMDJoinRoomResp.op3id)
  return op3id_;
}
 void CMDJoinRoomResp::set_op3id(::google::protobuf::uint32 value) {
  
  op3id_ = value;
  // @@protoc_insertion_point(field_set:CMDJoinRoomResp.op3id)
}

// optional uint32 op4id = 14;
void CMDJoinRoomResp::clear_op4id() {
  op4id_ = 0u;
}
 ::google::protobuf::uint32 CMDJoinRoomResp::op4id() const {
  // @@protoc_insertion_point(field_get:CMDJoinRoomResp.op4id)
  return op4id_;
}
 void CMDJoinRoomResp::set_op4id(::google::protobuf::uint32 value) {
  
  op4id_ = value;
  // @@protoc_insertion_point(field_set:CMDJoinRoomResp.op4id)
}

// optional uint32 inroomstate = 15;
void CMDJoinRoomResp::clear_inroomstate() {
  inroomstate_ = 0u;
}
 ::google::protobuf::uint32 CMDJoinRoomResp::inroomstate() const {
  // @@protoc_insertion_point(field_get:CMDJoinRoomResp.inroomstate)
  return inroomstate_;
}
 void CMDJoinRoomResp::set_inroomstate(::google::protobuf::uint32 value) {
  
  inroomstate_ = value;
  // @@protoc_insertion_point(field_set:CMDJoinRoomResp.inroomstate)
}

// optional int64 nk = 16;
void CMDJoinRoomResp::clear_nk() {
  nk_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 CMDJoinRoomResp::nk() const {
  // @@protoc_insertion_point(field_get:CMDJoinRoomResp.nk)
  return nk_;
}
 void CMDJoinRoomResp::set_nk(::google::protobuf::int64 value) {
  
  nk_ = value;
  // @@protoc_insertion_point(field_set:CMDJoinRoomResp.nk)
}

// optional int64 nb = 17;
void CMDJoinRoomResp::clear_nb() {
  nb_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 CMDJoinRoomResp::nb() const {
  // @@protoc_insertion_point(field_get:CMDJoinRoomResp.nb)
  return nb_;
}
 void CMDJoinRoomResp::set_nb(::google::protobuf::int64 value) {
  
  nb_ = value;
  // @@protoc_insertion_point(field_set:CMDJoinRoomResp.nb)
}

// optional int64 nlotterypool = 18;
void CMDJoinRoomResp::clear_nlotterypool() {
  nlotterypool_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 CMDJoinRoomResp::nlotterypool() const {
  // @@protoc_insertion_point(field_get:CMDJoinRoomResp.nlotterypool)
  return nlotterypool_;
}
 void CMDJoinRoomResp::set_nlotterypool(::google::protobuf::int64 value) {
  
  nlotterypool_ = value;
  // @@protoc_insertion_point(field_set:CMDJoinRoomResp.nlotterypool)
}

// optional int32 nchestnum = 19;
void CMDJoinRoomResp::clear_nchestnum() {
  nchestnum_ = 0;
}
 ::google::protobuf::int32 CMDJoinRoomResp::nchestnum() const {
  // @@protoc_insertion_point(field_get:CMDJoinRoomResp.nchestnum)
  return nchestnum_;
}
 void CMDJoinRoomResp::set_nchestnum(::google::protobuf::int32 value) {
  
  nchestnum_ = value;
  // @@protoc_insertion_point(field_set:CMDJoinRoomResp.nchestnum)
}

// optional string cname = 20;
void CMDJoinRoomResp::clear_cname() {
  cname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CMDJoinRoomResp::cname() const {
  // @@protoc_insertion_point(field_get:CMDJoinRoomResp.cname)
  return cname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDJoinRoomResp::set_cname(const ::std::string& value) {
  
  cname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDJoinRoomResp.cname)
}
 void CMDJoinRoomResp::set_cname(const char* value) {
  
  cname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDJoinRoomResp.cname)
}
 void CMDJoinRoomResp::set_cname(const char* value, size_t size) {
  
  cname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDJoinRoomResp.cname)
}
 ::std::string* CMDJoinRoomResp::mutable_cname() {
  
  // @@protoc_insertion_point(field_mutable:CMDJoinRoomResp.cname)
  return cname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMDJoinRoomResp::release_cname() {
  // @@protoc_insertion_point(field_release:CMDJoinRoomResp.cname)
  
  return cname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDJoinRoomResp::set_allocated_cname(::std::string* cname) {
  if (cname != NULL) {
    
  } else {
    
  }
  cname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cname);
  // @@protoc_insertion_point(field_set_allocated:CMDJoinRoomResp.cname)
}

// optional string cmediaaddr = 21;
void CMDJoinRoomResp::clear_cmediaaddr() {
  cmediaaddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CMDJoinRoomResp::cmediaaddr() const {
  // @@protoc_insertion_point(field_get:CMDJoinRoomResp.cmediaaddr)
  return cmediaaddr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDJoinRoomResp::set_cmediaaddr(const ::std::string& value) {
  
  cmediaaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDJoinRoomResp.cmediaaddr)
}
 void CMDJoinRoomResp::set_cmediaaddr(const char* value) {
  
  cmediaaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDJoinRoomResp.cmediaaddr)
}
 void CMDJoinRoomResp::set_cmediaaddr(const char* value, size_t size) {
  
  cmediaaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDJoinRoomResp.cmediaaddr)
}
 ::std::string* CMDJoinRoomResp::mutable_cmediaaddr() {
  
  // @@protoc_insertion_point(field_mutable:CMDJoinRoomResp.cmediaaddr)
  return cmediaaddr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMDJoinRoomResp::release_cmediaaddr() {
  // @@protoc_insertion_point(field_release:CMDJoinRoomResp.cmediaaddr)
  
  return cmediaaddr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDJoinRoomResp::set_allocated_cmediaaddr(::std::string* cmediaaddr) {
  if (cmediaaddr != NULL) {
    
  } else {
    
  }
  cmediaaddr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cmediaaddr);
  // @@protoc_insertion_point(field_set_allocated:CMDJoinRoomResp.cmediaaddr)
}

// optional string cpwd = 22;
void CMDJoinRoomResp::clear_cpwd() {
  cpwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CMDJoinRoomResp::cpwd() const {
  // @@protoc_insertion_point(field_get:CMDJoinRoomResp.cpwd)
  return cpwd_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDJoinRoomResp::set_cpwd(const ::std::string& value) {
  
  cpwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDJoinRoomResp.cpwd)
}
 void CMDJoinRoomResp::set_cpwd(const char* value) {
  
  cpwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDJoinRoomResp.cpwd)
}
 void CMDJoinRoomResp::set_cpwd(const char* value, size_t size) {
  
  cpwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDJoinRoomResp.cpwd)
}
 ::std::string* CMDJoinRoomResp::mutable_cpwd() {
  
  // @@protoc_insertion_point(field_mutable:CMDJoinRoomResp.cpwd)
  return cpwd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMDJoinRoomResp::release_cpwd() {
  // @@protoc_insertion_point(field_release:CMDJoinRoomResp.cpwd)
  
  return cpwd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDJoinRoomResp::set_allocated_cpwd(::std::string* cpwd) {
  if (cpwd != NULL) {
    
  } else {
    
  }
  cpwd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cpwd);
  // @@protoc_insertion_point(field_set_allocated:CMDJoinRoomResp.cpwd)
}

// optional uint64 npopularity_ = 23;
void CMDJoinRoomResp::clear_npopularity_() {
  npopularity__ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 CMDJoinRoomResp::npopularity_() const {
  // @@protoc_insertion_point(field_get:CMDJoinRoomResp.npopularity_)
  return npopularity__;
}
 void CMDJoinRoomResp::set_npopularity_(::google::protobuf::uint64 value) {
  
  npopularity__ = value;
  // @@protoc_insertion_point(field_set:CMDJoinRoomResp.npopularity_)
}

// optional uint32 ncollect_times = 24;
void CMDJoinRoomResp::clear_ncollect_times() {
  ncollect_times_ = 0u;
}
 ::google::protobuf::uint32 CMDJoinRoomResp::ncollect_times() const {
  // @@protoc_insertion_point(field_get:CMDJoinRoomResp.ncollect_times)
  return ncollect_times_;
}
 void CMDJoinRoomResp::set_ncollect_times(::google::protobuf::uint32 value) {
  
  ncollect_times_ = value;
  // @@protoc_insertion_point(field_set:CMDJoinRoomResp.ncollect_times)
}

// optional uint32 userRoleType = 25;
void CMDJoinRoomResp::clear_userroletype() {
  userroletype_ = 0u;
}
 ::google::protobuf::uint32 CMDJoinRoomResp::userroletype() const {
  // @@protoc_insertion_point(field_get:CMDJoinRoomResp.userRoleType)
  return userroletype_;
}
 void CMDJoinRoomResp::set_userroletype(::google::protobuf::uint32 value) {
  
  userroletype_ = value;
  // @@protoc_insertion_point(field_set:CMDJoinRoomResp.userRoleType)
}

// optional string groupIcon = 26;
void CMDJoinRoomResp::clear_groupicon() {
  groupicon_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CMDJoinRoomResp::groupicon() const {
  // @@protoc_insertion_point(field_get:CMDJoinRoomResp.groupIcon)
  return groupicon_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDJoinRoomResp::set_groupicon(const ::std::string& value) {
  
  groupicon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDJoinRoomResp.groupIcon)
}
 void CMDJoinRoomResp::set_groupicon(const char* value) {
  
  groupicon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDJoinRoomResp.groupIcon)
}
 void CMDJoinRoomResp::set_groupicon(const char* value, size_t size) {
  
  groupicon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDJoinRoomResp.groupIcon)
}
 ::std::string* CMDJoinRoomResp::mutable_groupicon() {
  
  // @@protoc_insertion_point(field_mutable:CMDJoinRoomResp.groupIcon)
  return groupicon_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMDJoinRoomResp::release_groupicon() {
  // @@protoc_insertion_point(field_release:CMDJoinRoomResp.groupIcon)
  
  return groupicon_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDJoinRoomResp::set_allocated_groupicon(::std::string* groupicon) {
  if (groupicon != NULL) {
    
  } else {
    
  }
  groupicon_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), groupicon);
  // @@protoc_insertion_point(field_set_allocated:CMDJoinRoomResp.groupIcon)
}

// optional uint32 groupShowID = 27;
void CMDJoinRoomResp::clear_groupshowid() {
  groupshowid_ = 0u;
}
 ::google::protobuf::uint32 CMDJoinRoomResp::groupshowid() const {
  // @@protoc_insertion_point(field_get:CMDJoinRoomResp.groupShowID)
  return groupshowid_;
}
 void CMDJoinRoomResp::set_groupshowid(::google::protobuf::uint32 value) {
  
  groupshowid_ = value;
  // @@protoc_insertion_point(field_set:CMDJoinRoomResp.groupShowID)
}

// optional uint32 muteSwitch = 28;
void CMDJoinRoomResp::clear_muteswitch() {
  muteswitch_ = 0u;
}
 ::google::protobuf::uint32 CMDJoinRoomResp::muteswitch() const {
  // @@protoc_insertion_point(field_get:CMDJoinRoomResp.muteSwitch)
  return muteswitch_;
}
 void CMDJoinRoomResp::set_muteswitch(::google::protobuf::uint32 value) {
  
  muteswitch_ = value;
  // @@protoc_insertion_point(field_set:CMDJoinRoomResp.muteSwitch)
}

// optional string liveUrl = 29;
void CMDJoinRoomResp::clear_liveurl() {
  liveurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CMDJoinRoomResp::liveurl() const {
  // @@protoc_insertion_point(field_get:CMDJoinRoomResp.liveUrl)
  return liveurl_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDJoinRoomResp::set_liveurl(const ::std::string& value) {
  
  liveurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDJoinRoomResp.liveUrl)
}
 void CMDJoinRoomResp::set_liveurl(const char* value) {
  
  liveurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDJoinRoomResp.liveUrl)
}
 void CMDJoinRoomResp::set_liveurl(const char* value, size_t size) {
  
  liveurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDJoinRoomResp.liveUrl)
}
 ::std::string* CMDJoinRoomResp::mutable_liveurl() {
  
  // @@protoc_insertion_point(field_mutable:CMDJoinRoomResp.liveUrl)
  return liveurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMDJoinRoomResp::release_liveurl() {
  // @@protoc_insertion_point(field_release:CMDJoinRoomResp.liveUrl)
  
  return liveurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDJoinRoomResp::set_allocated_liveurl(::std::string* liveurl) {
  if (liveurl != NULL) {
    
  } else {
    
  }
  liveurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), liveurl);
  // @@protoc_insertion_point(field_set_allocated:CMDJoinRoomResp.liveUrl)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDGateJoinRoomReq::kUseridFieldNumber;
const int CMDGateJoinRoomReq::kVcbidFieldNumber;
const int CMDGateJoinRoomReq::kCIpAddrFieldNumber;
const int CMDGateJoinRoomReq::kUuidFieldNumber;
const int CMDGateJoinRoomReq::kDevtypeFieldNumber;
const int CMDGateJoinRoomReq::kMicuseridFieldNumber;
const int CMDGateJoinRoomReq::kMicstateFieldNumber;
const int CMDGateJoinRoomReq::kMicindexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDGateJoinRoomReq::CMDGateJoinRoomReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDGateJoinRoomReq)
}

void CMDGateJoinRoomReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDGateJoinRoomReq::CMDGateJoinRoomReq(const CMDGateJoinRoomReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDGateJoinRoomReq)
}

void CMDGateJoinRoomReq::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  userid_ = 0;
  vcbid_ = 0;
  cipaddr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  devtype_ = 0;
  micuserid_ = 0;
  micstate_ = 0;
  micindex_ = 0;
}

CMDGateJoinRoomReq::~CMDGateJoinRoomReq() {
  // @@protoc_insertion_point(destructor:CMDGateJoinRoomReq)
  SharedDtor();
}

void CMDGateJoinRoomReq::SharedDtor() {
  cipaddr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CMDGateJoinRoomReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDGateJoinRoomReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDGateJoinRoomReq_descriptor_;
}

const CMDGateJoinRoomReq& CMDGateJoinRoomReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RoomSvr_2eproto();
  return *default_instance_;
}

CMDGateJoinRoomReq* CMDGateJoinRoomReq::default_instance_ = NULL;

CMDGateJoinRoomReq* CMDGateJoinRoomReq::New(::google::protobuf::Arena* arena) const {
  CMDGateJoinRoomReq* n = new CMDGateJoinRoomReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDGateJoinRoomReq::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDGateJoinRoomReq)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDGateJoinRoomReq, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDGateJoinRoomReq*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(userid_, vcbid_);
  ZR_(devtype_, micindex_);
  cipaddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool CMDGateJoinRoomReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDGateJoinRoomReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 userid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_vcbid;
        break;
      }

      // optional int32 vcbid = 2;
      case 2: {
        if (tag == 16) {
         parse_vcbid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vcbid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_cIpAddr;
        break;
      }

      // optional string cIpAddr = 3;
      case 3: {
        if (tag == 26) {
         parse_cIpAddr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cipaddr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cipaddr().data(), this->cipaddr().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMDGateJoinRoomReq.cIpAddr"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_uuid;
        break;
      }

      // optional string uuid = 4;
      case 4: {
        if (tag == 34) {
         parse_uuid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uuid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uuid().data(), this->uuid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMDGateJoinRoomReq.uuid"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_devtype;
        break;
      }

      // optional int32 devtype = 5;
      case 5: {
        if (tag == 40) {
         parse_devtype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &devtype_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_micuserid;
        break;
      }

      // optional int32 micuserid = 6;
      case 6: {
        if (tag == 48) {
         parse_micuserid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &micuserid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_micstate;
        break;
      }

      // optional int32 micstate = 7;
      case 7: {
        if (tag == 56) {
         parse_micstate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &micstate_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_micindex;
        break;
      }

      // optional int32 micindex = 8;
      case 8: {
        if (tag == 64) {
         parse_micindex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &micindex_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDGateJoinRoomReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDGateJoinRoomReq)
  return false;
#undef DO_
}

void CMDGateJoinRoomReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDGateJoinRoomReq)
  // optional int32 userid = 1;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->userid(), output);
  }

  // optional int32 vcbid = 2;
  if (this->vcbid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->vcbid(), output);
  }

  // optional string cIpAddr = 3;
  if (this->cipaddr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cipaddr().data(), this->cipaddr().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDGateJoinRoomReq.cIpAddr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->cipaddr(), output);
  }

  // optional string uuid = 4;
  if (this->uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uuid().data(), this->uuid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDGateJoinRoomReq.uuid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->uuid(), output);
  }

  // optional int32 devtype = 5;
  if (this->devtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->devtype(), output);
  }

  // optional int32 micuserid = 6;
  if (this->micuserid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->micuserid(), output);
  }

  // optional int32 micstate = 7;
  if (this->micstate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->micstate(), output);
  }

  // optional int32 micindex = 8;
  if (this->micindex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->micindex(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDGateJoinRoomReq)
}

::google::protobuf::uint8* CMDGateJoinRoomReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDGateJoinRoomReq)
  // optional int32 userid = 1;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->userid(), target);
  }

  // optional int32 vcbid = 2;
  if (this->vcbid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->vcbid(), target);
  }

  // optional string cIpAddr = 3;
  if (this->cipaddr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cipaddr().data(), this->cipaddr().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDGateJoinRoomReq.cIpAddr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->cipaddr(), target);
  }

  // optional string uuid = 4;
  if (this->uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uuid().data(), this->uuid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDGateJoinRoomReq.uuid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->uuid(), target);
  }

  // optional int32 devtype = 5;
  if (this->devtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->devtype(), target);
  }

  // optional int32 micuserid = 6;
  if (this->micuserid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->micuserid(), target);
  }

  // optional int32 micstate = 7;
  if (this->micstate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->micstate(), target);
  }

  // optional int32 micindex = 8;
  if (this->micindex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->micindex(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDGateJoinRoomReq)
  return target;
}

int CMDGateJoinRoomReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDGateJoinRoomReq)
  int total_size = 0;

  // optional int32 userid = 1;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->userid());
  }

  // optional int32 vcbid = 2;
  if (this->vcbid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->vcbid());
  }

  // optional string cIpAddr = 3;
  if (this->cipaddr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cipaddr());
  }

  // optional string uuid = 4;
  if (this->uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uuid());
  }

  // optional int32 devtype = 5;
  if (this->devtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->devtype());
  }

  // optional int32 micuserid = 6;
  if (this->micuserid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->micuserid());
  }

  // optional int32 micstate = 7;
  if (this->micstate() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->micstate());
  }

  // optional int32 micindex = 8;
  if (this->micindex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->micindex());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDGateJoinRoomReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDGateJoinRoomReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDGateJoinRoomReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDGateJoinRoomReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDGateJoinRoomReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDGateJoinRoomReq)
    MergeFrom(*source);
  }
}

void CMDGateJoinRoomReq::MergeFrom(const CMDGateJoinRoomReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDGateJoinRoomReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.vcbid() != 0) {
    set_vcbid(from.vcbid());
  }
  if (from.cipaddr().size() > 0) {

    cipaddr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cipaddr_);
  }
  if (from.uuid().size() > 0) {

    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  if (from.devtype() != 0) {
    set_devtype(from.devtype());
  }
  if (from.micuserid() != 0) {
    set_micuserid(from.micuserid());
  }
  if (from.micstate() != 0) {
    set_micstate(from.micstate());
  }
  if (from.micindex() != 0) {
    set_micindex(from.micindex());
  }
}

void CMDGateJoinRoomReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDGateJoinRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDGateJoinRoomReq::CopyFrom(const CMDGateJoinRoomReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDGateJoinRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDGateJoinRoomReq::IsInitialized() const {

  return true;
}

void CMDGateJoinRoomReq::Swap(CMDGateJoinRoomReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDGateJoinRoomReq::InternalSwap(CMDGateJoinRoomReq* other) {
  std::swap(userid_, other->userid_);
  std::swap(vcbid_, other->vcbid_);
  cipaddr_.Swap(&other->cipaddr_);
  uuid_.Swap(&other->uuid_);
  std::swap(devtype_, other->devtype_);
  std::swap(micuserid_, other->micuserid_);
  std::swap(micstate_, other->micstate_);
  std::swap(micindex_, other->micindex_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDGateJoinRoomReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDGateJoinRoomReq_descriptor_;
  metadata.reflection = CMDGateJoinRoomReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDGateJoinRoomReq

// optional int32 userid = 1;
void CMDGateJoinRoomReq::clear_userid() {
  userid_ = 0;
}
 ::google::protobuf::int32 CMDGateJoinRoomReq::userid() const {
  // @@protoc_insertion_point(field_get:CMDGateJoinRoomReq.userid)
  return userid_;
}
 void CMDGateJoinRoomReq::set_userid(::google::protobuf::int32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDGateJoinRoomReq.userid)
}

// optional int32 vcbid = 2;
void CMDGateJoinRoomReq::clear_vcbid() {
  vcbid_ = 0;
}
 ::google::protobuf::int32 CMDGateJoinRoomReq::vcbid() const {
  // @@protoc_insertion_point(field_get:CMDGateJoinRoomReq.vcbid)
  return vcbid_;
}
 void CMDGateJoinRoomReq::set_vcbid(::google::protobuf::int32 value) {
  
  vcbid_ = value;
  // @@protoc_insertion_point(field_set:CMDGateJoinRoomReq.vcbid)
}

// optional string cIpAddr = 3;
void CMDGateJoinRoomReq::clear_cipaddr() {
  cipaddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CMDGateJoinRoomReq::cipaddr() const {
  // @@protoc_insertion_point(field_get:CMDGateJoinRoomReq.cIpAddr)
  return cipaddr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDGateJoinRoomReq::set_cipaddr(const ::std::string& value) {
  
  cipaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDGateJoinRoomReq.cIpAddr)
}
 void CMDGateJoinRoomReq::set_cipaddr(const char* value) {
  
  cipaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDGateJoinRoomReq.cIpAddr)
}
 void CMDGateJoinRoomReq::set_cipaddr(const char* value, size_t size) {
  
  cipaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDGateJoinRoomReq.cIpAddr)
}
 ::std::string* CMDGateJoinRoomReq::mutable_cipaddr() {
  
  // @@protoc_insertion_point(field_mutable:CMDGateJoinRoomReq.cIpAddr)
  return cipaddr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMDGateJoinRoomReq::release_cipaddr() {
  // @@protoc_insertion_point(field_release:CMDGateJoinRoomReq.cIpAddr)
  
  return cipaddr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDGateJoinRoomReq::set_allocated_cipaddr(::std::string* cipaddr) {
  if (cipaddr != NULL) {
    
  } else {
    
  }
  cipaddr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cipaddr);
  // @@protoc_insertion_point(field_set_allocated:CMDGateJoinRoomReq.cIpAddr)
}

// optional string uuid = 4;
void CMDGateJoinRoomReq::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CMDGateJoinRoomReq::uuid() const {
  // @@protoc_insertion_point(field_get:CMDGateJoinRoomReq.uuid)
  return uuid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDGateJoinRoomReq::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDGateJoinRoomReq.uuid)
}
 void CMDGateJoinRoomReq::set_uuid(const char* value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDGateJoinRoomReq.uuid)
}
 void CMDGateJoinRoomReq::set_uuid(const char* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDGateJoinRoomReq.uuid)
}
 ::std::string* CMDGateJoinRoomReq::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:CMDGateJoinRoomReq.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMDGateJoinRoomReq::release_uuid() {
  // @@protoc_insertion_point(field_release:CMDGateJoinRoomReq.uuid)
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDGateJoinRoomReq::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:CMDGateJoinRoomReq.uuid)
}

// optional int32 devtype = 5;
void CMDGateJoinRoomReq::clear_devtype() {
  devtype_ = 0;
}
 ::google::protobuf::int32 CMDGateJoinRoomReq::devtype() const {
  // @@protoc_insertion_point(field_get:CMDGateJoinRoomReq.devtype)
  return devtype_;
}
 void CMDGateJoinRoomReq::set_devtype(::google::protobuf::int32 value) {
  
  devtype_ = value;
  // @@protoc_insertion_point(field_set:CMDGateJoinRoomReq.devtype)
}

// optional int32 micuserid = 6;
void CMDGateJoinRoomReq::clear_micuserid() {
  micuserid_ = 0;
}
 ::google::protobuf::int32 CMDGateJoinRoomReq::micuserid() const {
  // @@protoc_insertion_point(field_get:CMDGateJoinRoomReq.micuserid)
  return micuserid_;
}
 void CMDGateJoinRoomReq::set_micuserid(::google::protobuf::int32 value) {
  
  micuserid_ = value;
  // @@protoc_insertion_point(field_set:CMDGateJoinRoomReq.micuserid)
}

// optional int32 micstate = 7;
void CMDGateJoinRoomReq::clear_micstate() {
  micstate_ = 0;
}
 ::google::protobuf::int32 CMDGateJoinRoomReq::micstate() const {
  // @@protoc_insertion_point(field_get:CMDGateJoinRoomReq.micstate)
  return micstate_;
}
 void CMDGateJoinRoomReq::set_micstate(::google::protobuf::int32 value) {
  
  micstate_ = value;
  // @@protoc_insertion_point(field_set:CMDGateJoinRoomReq.micstate)
}

// optional int32 micindex = 8;
void CMDGateJoinRoomReq::clear_micindex() {
  micindex_ = 0;
}
 ::google::protobuf::int32 CMDGateJoinRoomReq::micindex() const {
  // @@protoc_insertion_point(field_get:CMDGateJoinRoomReq.micindex)
  return micindex_;
}
 void CMDGateJoinRoomReq::set_micindex(::google::protobuf::int32 value) {
  
  micindex_ = value;
  // @@protoc_insertion_point(field_set:CMDGateJoinRoomReq.micindex)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDGateJoinRoomResp::kUseridFieldNumber;
const int CMDGateJoinRoomResp::kVcbidFieldNumber;
const int CMDGateJoinRoomResp::kErrInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDGateJoinRoomResp::CMDGateJoinRoomResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDGateJoinRoomResp)
}

void CMDGateJoinRoomResp::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  errinfo_ = const_cast< ::CMDErrCode*>(&::CMDErrCode::default_instance());
}

CMDGateJoinRoomResp::CMDGateJoinRoomResp(const CMDGateJoinRoomResp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDGateJoinRoomResp)
}

void CMDGateJoinRoomResp::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  userid_ = 0;
  vcbid_ = 0;
  errinfo_ = NULL;
}

CMDGateJoinRoomResp::~CMDGateJoinRoomResp() {
  // @@protoc_insertion_point(destructor:CMDGateJoinRoomResp)
  SharedDtor();
}

void CMDGateJoinRoomResp::SharedDtor() {
  if (this != default_instance_) {
    delete errinfo_;
  }
}

void CMDGateJoinRoomResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDGateJoinRoomResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDGateJoinRoomResp_descriptor_;
}

const CMDGateJoinRoomResp& CMDGateJoinRoomResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RoomSvr_2eproto();
  return *default_instance_;
}

CMDGateJoinRoomResp* CMDGateJoinRoomResp::default_instance_ = NULL;

CMDGateJoinRoomResp* CMDGateJoinRoomResp::New(::google::protobuf::Arena* arena) const {
  CMDGateJoinRoomResp* n = new CMDGateJoinRoomResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDGateJoinRoomResp::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDGateJoinRoomResp)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDGateJoinRoomResp, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDGateJoinRoomResp*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(userid_, vcbid_);
  if (GetArenaNoVirtual() == NULL && errinfo_ != NULL) delete errinfo_;
  errinfo_ = NULL;

#undef ZR_HELPER_
#undef ZR_

}

bool CMDGateJoinRoomResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDGateJoinRoomResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 userid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_vcbid;
        break;
      }

      // optional int32 vcbid = 2;
      case 2: {
        if (tag == 16) {
         parse_vcbid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vcbid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_errInfo;
        break;
      }

      // optional .CMDErrCode errInfo = 3;
      case 3: {
        if (tag == 26) {
         parse_errInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_errinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDGateJoinRoomResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDGateJoinRoomResp)
  return false;
#undef DO_
}

void CMDGateJoinRoomResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDGateJoinRoomResp)
  // optional int32 userid = 1;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->userid(), output);
  }

  // optional int32 vcbid = 2;
  if (this->vcbid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->vcbid(), output);
  }

  // optional .CMDErrCode errInfo = 3;
  if (this->has_errinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->errinfo_, output);
  }

  // @@protoc_insertion_point(serialize_end:CMDGateJoinRoomResp)
}

::google::protobuf::uint8* CMDGateJoinRoomResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDGateJoinRoomResp)
  // optional int32 userid = 1;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->userid(), target);
  }

  // optional int32 vcbid = 2;
  if (this->vcbid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->vcbid(), target);
  }

  // optional .CMDErrCode errInfo = 3;
  if (this->has_errinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->errinfo_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDGateJoinRoomResp)
  return target;
}

int CMDGateJoinRoomResp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDGateJoinRoomResp)
  int total_size = 0;

  // optional int32 userid = 1;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->userid());
  }

  // optional int32 vcbid = 2;
  if (this->vcbid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->vcbid());
  }

  // optional .CMDErrCode errInfo = 3;
  if (this->has_errinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->errinfo_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDGateJoinRoomResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDGateJoinRoomResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDGateJoinRoomResp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDGateJoinRoomResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDGateJoinRoomResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDGateJoinRoomResp)
    MergeFrom(*source);
  }
}

void CMDGateJoinRoomResp::MergeFrom(const CMDGateJoinRoomResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDGateJoinRoomResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.vcbid() != 0) {
    set_vcbid(from.vcbid());
  }
  if (from.has_errinfo()) {
    mutable_errinfo()->::CMDErrCode::MergeFrom(from.errinfo());
  }
}

void CMDGateJoinRoomResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDGateJoinRoomResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDGateJoinRoomResp::CopyFrom(const CMDGateJoinRoomResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDGateJoinRoomResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDGateJoinRoomResp::IsInitialized() const {

  return true;
}

void CMDGateJoinRoomResp::Swap(CMDGateJoinRoomResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDGateJoinRoomResp::InternalSwap(CMDGateJoinRoomResp* other) {
  std::swap(userid_, other->userid_);
  std::swap(vcbid_, other->vcbid_);
  std::swap(errinfo_, other->errinfo_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDGateJoinRoomResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDGateJoinRoomResp_descriptor_;
  metadata.reflection = CMDGateJoinRoomResp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDGateJoinRoomResp

// optional int32 userid = 1;
void CMDGateJoinRoomResp::clear_userid() {
  userid_ = 0;
}
 ::google::protobuf::int32 CMDGateJoinRoomResp::userid() const {
  // @@protoc_insertion_point(field_get:CMDGateJoinRoomResp.userid)
  return userid_;
}
 void CMDGateJoinRoomResp::set_userid(::google::protobuf::int32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDGateJoinRoomResp.userid)
}

// optional int32 vcbid = 2;
void CMDGateJoinRoomResp::clear_vcbid() {
  vcbid_ = 0;
}
 ::google::protobuf::int32 CMDGateJoinRoomResp::vcbid() const {
  // @@protoc_insertion_point(field_get:CMDGateJoinRoomResp.vcbid)
  return vcbid_;
}
 void CMDGateJoinRoomResp::set_vcbid(::google::protobuf::int32 value) {
  
  vcbid_ = value;
  // @@protoc_insertion_point(field_set:CMDGateJoinRoomResp.vcbid)
}

// optional .CMDErrCode errInfo = 3;
bool CMDGateJoinRoomResp::has_errinfo() const {
  return !_is_default_instance_ && errinfo_ != NULL;
}
void CMDGateJoinRoomResp::clear_errinfo() {
  if (GetArenaNoVirtual() == NULL && errinfo_ != NULL) delete errinfo_;
  errinfo_ = NULL;
}
const ::CMDErrCode& CMDGateJoinRoomResp::errinfo() const {
  // @@protoc_insertion_point(field_get:CMDGateJoinRoomResp.errInfo)
  return errinfo_ != NULL ? *errinfo_ : *default_instance_->errinfo_;
}
::CMDErrCode* CMDGateJoinRoomResp::mutable_errinfo() {
  
  if (errinfo_ == NULL) {
    errinfo_ = new ::CMDErrCode;
  }
  // @@protoc_insertion_point(field_mutable:CMDGateJoinRoomResp.errInfo)
  return errinfo_;
}
::CMDErrCode* CMDGateJoinRoomResp::release_errinfo() {
  // @@protoc_insertion_point(field_release:CMDGateJoinRoomResp.errInfo)
  
  ::CMDErrCode* temp = errinfo_;
  errinfo_ = NULL;
  return temp;
}
void CMDGateJoinRoomResp::set_allocated_errinfo(::CMDErrCode* errinfo) {
  delete errinfo_;
  errinfo_ = errinfo;
  if (errinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDGateJoinRoomResp.errInfo)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDJoinRoomErr::kUseridFieldNumber;
const int CMDJoinRoomErr::kVcbidFieldNumber;
const int CMDJoinRoomErr::kErrInfoFieldNumber;
const int CMDJoinRoomErr::kData1FieldNumber;
const int CMDJoinRoomErr::kData2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDJoinRoomErr::CMDJoinRoomErr()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDJoinRoomErr)
}

void CMDJoinRoomErr::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  errinfo_ = const_cast< ::CMDErrCode*>(&::CMDErrCode::default_instance());
}

CMDJoinRoomErr::CMDJoinRoomErr(const CMDJoinRoomErr& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDJoinRoomErr)
}

void CMDJoinRoomErr::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  userid_ = 0;
  vcbid_ = 0;
  errinfo_ = NULL;
  data1_ = 0;
  data2_ = 0;
}

CMDJoinRoomErr::~CMDJoinRoomErr() {
  // @@protoc_insertion_point(destructor:CMDJoinRoomErr)
  SharedDtor();
}

void CMDJoinRoomErr::SharedDtor() {
  if (this != default_instance_) {
    delete errinfo_;
  }
}

void CMDJoinRoomErr::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDJoinRoomErr::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDJoinRoomErr_descriptor_;
}

const CMDJoinRoomErr& CMDJoinRoomErr::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RoomSvr_2eproto();
  return *default_instance_;
}

CMDJoinRoomErr* CMDJoinRoomErr::default_instance_ = NULL;

CMDJoinRoomErr* CMDJoinRoomErr::New(::google::protobuf::Arena* arena) const {
  CMDJoinRoomErr* n = new CMDJoinRoomErr;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDJoinRoomErr::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDJoinRoomErr)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDJoinRoomErr, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDJoinRoomErr*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(userid_, vcbid_);
  ZR_(data1_, data2_);
  if (GetArenaNoVirtual() == NULL && errinfo_ != NULL) delete errinfo_;
  errinfo_ = NULL;

#undef ZR_HELPER_
#undef ZR_

}

bool CMDJoinRoomErr::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDJoinRoomErr)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 userid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_vcbid;
        break;
      }

      // optional int32 vcbid = 2;
      case 2: {
        if (tag == 16) {
         parse_vcbid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vcbid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_errInfo;
        break;
      }

      // optional .CMDErrCode errInfo = 3;
      case 3: {
        if (tag == 26) {
         parse_errInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_errinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_data1;
        break;
      }

      // optional int32 data1 = 4;
      case 4: {
        if (tag == 32) {
         parse_data1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &data1_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_data2;
        break;
      }

      // optional int32 data2 = 5;
      case 5: {
        if (tag == 40) {
         parse_data2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &data2_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDJoinRoomErr)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDJoinRoomErr)
  return false;
#undef DO_
}

void CMDJoinRoomErr::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDJoinRoomErr)
  // optional int32 userid = 1;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->userid(), output);
  }

  // optional int32 vcbid = 2;
  if (this->vcbid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->vcbid(), output);
  }

  // optional .CMDErrCode errInfo = 3;
  if (this->has_errinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->errinfo_, output);
  }

  // optional int32 data1 = 4;
  if (this->data1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->data1(), output);
  }

  // optional int32 data2 = 5;
  if (this->data2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->data2(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDJoinRoomErr)
}

::google::protobuf::uint8* CMDJoinRoomErr::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDJoinRoomErr)
  // optional int32 userid = 1;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->userid(), target);
  }

  // optional int32 vcbid = 2;
  if (this->vcbid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->vcbid(), target);
  }

  // optional .CMDErrCode errInfo = 3;
  if (this->has_errinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->errinfo_, false, target);
  }

  // optional int32 data1 = 4;
  if (this->data1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->data1(), target);
  }

  // optional int32 data2 = 5;
  if (this->data2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->data2(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDJoinRoomErr)
  return target;
}

int CMDJoinRoomErr::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDJoinRoomErr)
  int total_size = 0;

  // optional int32 userid = 1;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->userid());
  }

  // optional int32 vcbid = 2;
  if (this->vcbid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->vcbid());
  }

  // optional .CMDErrCode errInfo = 3;
  if (this->has_errinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->errinfo_);
  }

  // optional int32 data1 = 4;
  if (this->data1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->data1());
  }

  // optional int32 data2 = 5;
  if (this->data2() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->data2());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDJoinRoomErr::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDJoinRoomErr)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDJoinRoomErr* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDJoinRoomErr>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDJoinRoomErr)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDJoinRoomErr)
    MergeFrom(*source);
  }
}

void CMDJoinRoomErr::MergeFrom(const CMDJoinRoomErr& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDJoinRoomErr)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.vcbid() != 0) {
    set_vcbid(from.vcbid());
  }
  if (from.has_errinfo()) {
    mutable_errinfo()->::CMDErrCode::MergeFrom(from.errinfo());
  }
  if (from.data1() != 0) {
    set_data1(from.data1());
  }
  if (from.data2() != 0) {
    set_data2(from.data2());
  }
}

void CMDJoinRoomErr::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDJoinRoomErr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDJoinRoomErr::CopyFrom(const CMDJoinRoomErr& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDJoinRoomErr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDJoinRoomErr::IsInitialized() const {

  return true;
}

void CMDJoinRoomErr::Swap(CMDJoinRoomErr* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDJoinRoomErr::InternalSwap(CMDJoinRoomErr* other) {
  std::swap(userid_, other->userid_);
  std::swap(vcbid_, other->vcbid_);
  std::swap(errinfo_, other->errinfo_);
  std::swap(data1_, other->data1_);
  std::swap(data2_, other->data2_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDJoinRoomErr::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDJoinRoomErr_descriptor_;
  metadata.reflection = CMDJoinRoomErr_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDJoinRoomErr

// optional int32 userid = 1;
void CMDJoinRoomErr::clear_userid() {
  userid_ = 0;
}
 ::google::protobuf::int32 CMDJoinRoomErr::userid() const {
  // @@protoc_insertion_point(field_get:CMDJoinRoomErr.userid)
  return userid_;
}
 void CMDJoinRoomErr::set_userid(::google::protobuf::int32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDJoinRoomErr.userid)
}

// optional int32 vcbid = 2;
void CMDJoinRoomErr::clear_vcbid() {
  vcbid_ = 0;
}
 ::google::protobuf::int32 CMDJoinRoomErr::vcbid() const {
  // @@protoc_insertion_point(field_get:CMDJoinRoomErr.vcbid)
  return vcbid_;
}
 void CMDJoinRoomErr::set_vcbid(::google::protobuf::int32 value) {
  
  vcbid_ = value;
  // @@protoc_insertion_point(field_set:CMDJoinRoomErr.vcbid)
}

// optional .CMDErrCode errInfo = 3;
bool CMDJoinRoomErr::has_errinfo() const {
  return !_is_default_instance_ && errinfo_ != NULL;
}
void CMDJoinRoomErr::clear_errinfo() {
  if (GetArenaNoVirtual() == NULL && errinfo_ != NULL) delete errinfo_;
  errinfo_ = NULL;
}
const ::CMDErrCode& CMDJoinRoomErr::errinfo() const {
  // @@protoc_insertion_point(field_get:CMDJoinRoomErr.errInfo)
  return errinfo_ != NULL ? *errinfo_ : *default_instance_->errinfo_;
}
::CMDErrCode* CMDJoinRoomErr::mutable_errinfo() {
  
  if (errinfo_ == NULL) {
    errinfo_ = new ::CMDErrCode;
  }
  // @@protoc_insertion_point(field_mutable:CMDJoinRoomErr.errInfo)
  return errinfo_;
}
::CMDErrCode* CMDJoinRoomErr::release_errinfo() {
  // @@protoc_insertion_point(field_release:CMDJoinRoomErr.errInfo)
  
  ::CMDErrCode* temp = errinfo_;
  errinfo_ = NULL;
  return temp;
}
void CMDJoinRoomErr::set_allocated_errinfo(::CMDErrCode* errinfo) {
  delete errinfo_;
  errinfo_ = errinfo;
  if (errinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDJoinRoomErr.errInfo)
}

// optional int32 data1 = 4;
void CMDJoinRoomErr::clear_data1() {
  data1_ = 0;
}
 ::google::protobuf::int32 CMDJoinRoomErr::data1() const {
  // @@protoc_insertion_point(field_get:CMDJoinRoomErr.data1)
  return data1_;
}
 void CMDJoinRoomErr::set_data1(::google::protobuf::int32 value) {
  
  data1_ = value;
  // @@protoc_insertion_point(field_set:CMDJoinRoomErr.data1)
}

// optional int32 data2 = 5;
void CMDJoinRoomErr::clear_data2() {
  data2_ = 0;
}
 ::google::protobuf::int32 CMDJoinRoomErr::data2() const {
  // @@protoc_insertion_point(field_get:CMDJoinRoomErr.data2)
  return data2_;
}
 void CMDJoinRoomErr::set_data2(::google::protobuf::int32 value) {
  
  data2_ = value;
  // @@protoc_insertion_point(field_set:CMDJoinRoomErr.data2)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDUserMicState::kVcbidFieldNumber;
const int CMDUserMicState::kRunidFieldNumber;
const int CMDUserMicState::kToidFieldNumber;
const int CMDUserMicState::kGiftidFieldNumber;
const int CMDUserMicState::kGiftnumFieldNumber;
const int CMDUserMicState::kMicstateFieldNumber;
const int CMDUserMicState::kMicindexFieldNumber;
const int CMDUserMicState::kOptypeFieldNumber;
const int CMDUserMicState::kReserve11FieldNumber;
const int CMDUserMicState::kErrInfoFieldNumber;
const int CMDUserMicState::kMicsecondFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDUserMicState::CMDUserMicState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDUserMicState)
}

void CMDUserMicState::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  runid_ = const_cast< ::UserInfo_t*>(&::UserInfo_t::default_instance());
  toid_ = const_cast< ::UserInfo_t*>(&::UserInfo_t::default_instance());
  errinfo_ = const_cast< ::CMDErrCode*>(&::CMDErrCode::default_instance());
}

CMDUserMicState::CMDUserMicState(const CMDUserMicState& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDUserMicState)
}

void CMDUserMicState::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  vcbid_ = 0u;
  runid_ = NULL;
  toid_ = NULL;
  giftid_ = 0;
  giftnum_ = 0;
  micstate_ = 0;
  micindex_ = 0;
  optype_ = 0;
  reserve11_ = 0;
  errinfo_ = NULL;
  micsecond_ = 0;
}

CMDUserMicState::~CMDUserMicState() {
  // @@protoc_insertion_point(destructor:CMDUserMicState)
  SharedDtor();
}

void CMDUserMicState::SharedDtor() {
  if (this != default_instance_) {
    delete runid_;
    delete toid_;
    delete errinfo_;
  }
}

void CMDUserMicState::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDUserMicState::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDUserMicState_descriptor_;
}

const CMDUserMicState& CMDUserMicState::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RoomSvr_2eproto();
  return *default_instance_;
}

CMDUserMicState* CMDUserMicState::default_instance_ = NULL;

CMDUserMicState* CMDUserMicState::New(::google::protobuf::Arena* arena) const {
  CMDUserMicState* n = new CMDUserMicState;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDUserMicState::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDUserMicState)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDUserMicState, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDUserMicState*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(vcbid_, giftid_);
  ZR_(giftnum_, optype_);
  if (GetArenaNoVirtual() == NULL && runid_ != NULL) delete runid_;
  runid_ = NULL;
  if (GetArenaNoVirtual() == NULL && toid_ != NULL) delete toid_;
  toid_ = NULL;
  ZR_(reserve11_, micsecond_);
  if (GetArenaNoVirtual() == NULL && errinfo_ != NULL) delete errinfo_;
  errinfo_ = NULL;

#undef ZR_HELPER_
#undef ZR_

}

bool CMDUserMicState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDUserMicState)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 vcbid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &vcbid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_runid;
        break;
      }

      // optional .UserInfo_t runid = 2;
      case 2: {
        if (tag == 18) {
         parse_runid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_runid()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_toid;
        break;
      }

      // optional .UserInfo_t toid = 3;
      case 3: {
        if (tag == 26) {
         parse_toid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_toid()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_giftid;
        break;
      }

      // optional int32 giftid = 4;
      case 4: {
        if (tag == 32) {
         parse_giftid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &giftid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_giftnum;
        break;
      }

      // optional int32 giftnum = 5;
      case 5: {
        if (tag == 40) {
         parse_giftnum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &giftnum_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_micstate;
        break;
      }

      // optional int32 micstate = 6;
      case 6: {
        if (tag == 48) {
         parse_micstate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &micstate_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_micindex;
        break;
      }

      // optional int32 micindex = 7;
      case 7: {
        if (tag == 56) {
         parse_micindex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &micindex_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_optype;
        break;
      }

      // optional int32 optype = 8;
      case 8: {
        if (tag == 64) {
         parse_optype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &optype_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_reserve11;
        break;
      }

      // optional int32 reserve11 = 9;
      case 9: {
        if (tag == 72) {
         parse_reserve11:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &reserve11_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_errInfo;
        break;
      }

      // optional .CMDErrCode errInfo = 10;
      case 10: {
        if (tag == 82) {
         parse_errInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_errinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_micsecond;
        break;
      }

      // optional int32 micsecond = 11;
      case 11: {
        if (tag == 88) {
         parse_micsecond:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &micsecond_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDUserMicState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDUserMicState)
  return false;
#undef DO_
}

void CMDUserMicState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDUserMicState)
  // optional uint32 vcbid = 1;
  if (this->vcbid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->vcbid(), output);
  }

  // optional .UserInfo_t runid = 2;
  if (this->has_runid()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->runid_, output);
  }

  // optional .UserInfo_t toid = 3;
  if (this->has_toid()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->toid_, output);
  }

  // optional int32 giftid = 4;
  if (this->giftid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->giftid(), output);
  }

  // optional int32 giftnum = 5;
  if (this->giftnum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->giftnum(), output);
  }

  // optional int32 micstate = 6;
  if (this->micstate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->micstate(), output);
  }

  // optional int32 micindex = 7;
  if (this->micindex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->micindex(), output);
  }

  // optional int32 optype = 8;
  if (this->optype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->optype(), output);
  }

  // optional int32 reserve11 = 9;
  if (this->reserve11() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->reserve11(), output);
  }

  // optional .CMDErrCode errInfo = 10;
  if (this->has_errinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *this->errinfo_, output);
  }

  // optional int32 micsecond = 11;
  if (this->micsecond() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->micsecond(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDUserMicState)
}

::google::protobuf::uint8* CMDUserMicState::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDUserMicState)
  // optional uint32 vcbid = 1;
  if (this->vcbid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->vcbid(), target);
  }

  // optional .UserInfo_t runid = 2;
  if (this->has_runid()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->runid_, false, target);
  }

  // optional .UserInfo_t toid = 3;
  if (this->has_toid()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->toid_, false, target);
  }

  // optional int32 giftid = 4;
  if (this->giftid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->giftid(), target);
  }

  // optional int32 giftnum = 5;
  if (this->giftnum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->giftnum(), target);
  }

  // optional int32 micstate = 6;
  if (this->micstate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->micstate(), target);
  }

  // optional int32 micindex = 7;
  if (this->micindex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->micindex(), target);
  }

  // optional int32 optype = 8;
  if (this->optype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->optype(), target);
  }

  // optional int32 reserve11 = 9;
  if (this->reserve11() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->reserve11(), target);
  }

  // optional .CMDErrCode errInfo = 10;
  if (this->has_errinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, *this->errinfo_, false, target);
  }

  // optional int32 micsecond = 11;
  if (this->micsecond() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->micsecond(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDUserMicState)
  return target;
}

int CMDUserMicState::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDUserMicState)
  int total_size = 0;

  // optional uint32 vcbid = 1;
  if (this->vcbid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->vcbid());
  }

  // optional .UserInfo_t runid = 2;
  if (this->has_runid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->runid_);
  }

  // optional .UserInfo_t toid = 3;
  if (this->has_toid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->toid_);
  }

  // optional int32 giftid = 4;
  if (this->giftid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->giftid());
  }

  // optional int32 giftnum = 5;
  if (this->giftnum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->giftnum());
  }

  // optional int32 micstate = 6;
  if (this->micstate() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->micstate());
  }

  // optional int32 micindex = 7;
  if (this->micindex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->micindex());
  }

  // optional int32 optype = 8;
  if (this->optype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->optype());
  }

  // optional int32 reserve11 = 9;
  if (this->reserve11() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->reserve11());
  }

  // optional .CMDErrCode errInfo = 10;
  if (this->has_errinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->errinfo_);
  }

  // optional int32 micsecond = 11;
  if (this->micsecond() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->micsecond());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDUserMicState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDUserMicState)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDUserMicState* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDUserMicState>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDUserMicState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDUserMicState)
    MergeFrom(*source);
  }
}

void CMDUserMicState::MergeFrom(const CMDUserMicState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDUserMicState)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.vcbid() != 0) {
    set_vcbid(from.vcbid());
  }
  if (from.has_runid()) {
    mutable_runid()->::UserInfo_t::MergeFrom(from.runid());
  }
  if (from.has_toid()) {
    mutable_toid()->::UserInfo_t::MergeFrom(from.toid());
  }
  if (from.giftid() != 0) {
    set_giftid(from.giftid());
  }
  if (from.giftnum() != 0) {
    set_giftnum(from.giftnum());
  }
  if (from.micstate() != 0) {
    set_micstate(from.micstate());
  }
  if (from.micindex() != 0) {
    set_micindex(from.micindex());
  }
  if (from.optype() != 0) {
    set_optype(from.optype());
  }
  if (from.reserve11() != 0) {
    set_reserve11(from.reserve11());
  }
  if (from.has_errinfo()) {
    mutable_errinfo()->::CMDErrCode::MergeFrom(from.errinfo());
  }
  if (from.micsecond() != 0) {
    set_micsecond(from.micsecond());
  }
}

void CMDUserMicState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDUserMicState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDUserMicState::CopyFrom(const CMDUserMicState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDUserMicState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDUserMicState::IsInitialized() const {

  return true;
}

void CMDUserMicState::Swap(CMDUserMicState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDUserMicState::InternalSwap(CMDUserMicState* other) {
  std::swap(vcbid_, other->vcbid_);
  std::swap(runid_, other->runid_);
  std::swap(toid_, other->toid_);
  std::swap(giftid_, other->giftid_);
  std::swap(giftnum_, other->giftnum_);
  std::swap(micstate_, other->micstate_);
  std::swap(micindex_, other->micindex_);
  std::swap(optype_, other->optype_);
  std::swap(reserve11_, other->reserve11_);
  std::swap(errinfo_, other->errinfo_);
  std::swap(micsecond_, other->micsecond_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDUserMicState::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDUserMicState_descriptor_;
  metadata.reflection = CMDUserMicState_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDUserMicState

// optional uint32 vcbid = 1;
void CMDUserMicState::clear_vcbid() {
  vcbid_ = 0u;
}
 ::google::protobuf::uint32 CMDUserMicState::vcbid() const {
  // @@protoc_insertion_point(field_get:CMDUserMicState.vcbid)
  return vcbid_;
}
 void CMDUserMicState::set_vcbid(::google::protobuf::uint32 value) {
  
  vcbid_ = value;
  // @@protoc_insertion_point(field_set:CMDUserMicState.vcbid)
}

// optional .UserInfo_t runid = 2;
bool CMDUserMicState::has_runid() const {
  return !_is_default_instance_ && runid_ != NULL;
}
void CMDUserMicState::clear_runid() {
  if (GetArenaNoVirtual() == NULL && runid_ != NULL) delete runid_;
  runid_ = NULL;
}
const ::UserInfo_t& CMDUserMicState::runid() const {
  // @@protoc_insertion_point(field_get:CMDUserMicState.runid)
  return runid_ != NULL ? *runid_ : *default_instance_->runid_;
}
::UserInfo_t* CMDUserMicState::mutable_runid() {
  
  if (runid_ == NULL) {
    runid_ = new ::UserInfo_t;
  }
  // @@protoc_insertion_point(field_mutable:CMDUserMicState.runid)
  return runid_;
}
::UserInfo_t* CMDUserMicState::release_runid() {
  // @@protoc_insertion_point(field_release:CMDUserMicState.runid)
  
  ::UserInfo_t* temp = runid_;
  runid_ = NULL;
  return temp;
}
void CMDUserMicState::set_allocated_runid(::UserInfo_t* runid) {
  delete runid_;
  runid_ = runid;
  if (runid) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDUserMicState.runid)
}

// optional .UserInfo_t toid = 3;
bool CMDUserMicState::has_toid() const {
  return !_is_default_instance_ && toid_ != NULL;
}
void CMDUserMicState::clear_toid() {
  if (GetArenaNoVirtual() == NULL && toid_ != NULL) delete toid_;
  toid_ = NULL;
}
const ::UserInfo_t& CMDUserMicState::toid() const {
  // @@protoc_insertion_point(field_get:CMDUserMicState.toid)
  return toid_ != NULL ? *toid_ : *default_instance_->toid_;
}
::UserInfo_t* CMDUserMicState::mutable_toid() {
  
  if (toid_ == NULL) {
    toid_ = new ::UserInfo_t;
  }
  // @@protoc_insertion_point(field_mutable:CMDUserMicState.toid)
  return toid_;
}
::UserInfo_t* CMDUserMicState::release_toid() {
  // @@protoc_insertion_point(field_release:CMDUserMicState.toid)
  
  ::UserInfo_t* temp = toid_;
  toid_ = NULL;
  return temp;
}
void CMDUserMicState::set_allocated_toid(::UserInfo_t* toid) {
  delete toid_;
  toid_ = toid;
  if (toid) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDUserMicState.toid)
}

// optional int32 giftid = 4;
void CMDUserMicState::clear_giftid() {
  giftid_ = 0;
}
 ::google::protobuf::int32 CMDUserMicState::giftid() const {
  // @@protoc_insertion_point(field_get:CMDUserMicState.giftid)
  return giftid_;
}
 void CMDUserMicState::set_giftid(::google::protobuf::int32 value) {
  
  giftid_ = value;
  // @@protoc_insertion_point(field_set:CMDUserMicState.giftid)
}

// optional int32 giftnum = 5;
void CMDUserMicState::clear_giftnum() {
  giftnum_ = 0;
}
 ::google::protobuf::int32 CMDUserMicState::giftnum() const {
  // @@protoc_insertion_point(field_get:CMDUserMicState.giftnum)
  return giftnum_;
}
 void CMDUserMicState::set_giftnum(::google::protobuf::int32 value) {
  
  giftnum_ = value;
  // @@protoc_insertion_point(field_set:CMDUserMicState.giftnum)
}

// optional int32 micstate = 6;
void CMDUserMicState::clear_micstate() {
  micstate_ = 0;
}
 ::google::protobuf::int32 CMDUserMicState::micstate() const {
  // @@protoc_insertion_point(field_get:CMDUserMicState.micstate)
  return micstate_;
}
 void CMDUserMicState::set_micstate(::google::protobuf::int32 value) {
  
  micstate_ = value;
  // @@protoc_insertion_point(field_set:CMDUserMicState.micstate)
}

// optional int32 micindex = 7;
void CMDUserMicState::clear_micindex() {
  micindex_ = 0;
}
 ::google::protobuf::int32 CMDUserMicState::micindex() const {
  // @@protoc_insertion_point(field_get:CMDUserMicState.micindex)
  return micindex_;
}
 void CMDUserMicState::set_micindex(::google::protobuf::int32 value) {
  
  micindex_ = value;
  // @@protoc_insertion_point(field_set:CMDUserMicState.micindex)
}

// optional int32 optype = 8;
void CMDUserMicState::clear_optype() {
  optype_ = 0;
}
 ::google::protobuf::int32 CMDUserMicState::optype() const {
  // @@protoc_insertion_point(field_get:CMDUserMicState.optype)
  return optype_;
}
 void CMDUserMicState::set_optype(::google::protobuf::int32 value) {
  
  optype_ = value;
  // @@protoc_insertion_point(field_set:CMDUserMicState.optype)
}

// optional int32 reserve11 = 9;
void CMDUserMicState::clear_reserve11() {
  reserve11_ = 0;
}
 ::google::protobuf::int32 CMDUserMicState::reserve11() const {
  // @@protoc_insertion_point(field_get:CMDUserMicState.reserve11)
  return reserve11_;
}
 void CMDUserMicState::set_reserve11(::google::protobuf::int32 value) {
  
  reserve11_ = value;
  // @@protoc_insertion_point(field_set:CMDUserMicState.reserve11)
}

// optional .CMDErrCode errInfo = 10;
bool CMDUserMicState::has_errinfo() const {
  return !_is_default_instance_ && errinfo_ != NULL;
}
void CMDUserMicState::clear_errinfo() {
  if (GetArenaNoVirtual() == NULL && errinfo_ != NULL) delete errinfo_;
  errinfo_ = NULL;
}
const ::CMDErrCode& CMDUserMicState::errinfo() const {
  // @@protoc_insertion_point(field_get:CMDUserMicState.errInfo)
  return errinfo_ != NULL ? *errinfo_ : *default_instance_->errinfo_;
}
::CMDErrCode* CMDUserMicState::mutable_errinfo() {
  
  if (errinfo_ == NULL) {
    errinfo_ = new ::CMDErrCode;
  }
  // @@protoc_insertion_point(field_mutable:CMDUserMicState.errInfo)
  return errinfo_;
}
::CMDErrCode* CMDUserMicState::release_errinfo() {
  // @@protoc_insertion_point(field_release:CMDUserMicState.errInfo)
  
  ::CMDErrCode* temp = errinfo_;
  errinfo_ = NULL;
  return temp;
}
void CMDUserMicState::set_allocated_errinfo(::CMDErrCode* errinfo) {
  delete errinfo_;
  errinfo_ = errinfo;
  if (errinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDUserMicState.errInfo)
}

// optional int32 micsecond = 11;
void CMDUserMicState::clear_micsecond() {
  micsecond_ = 0;
}
 ::google::protobuf::int32 CMDUserMicState::micsecond() const {
  // @@protoc_insertion_point(field_get:CMDUserMicState.micsecond)
  return micsecond_;
}
 void CMDUserMicState::set_micsecond(::google::protobuf::int32 value) {
  
  micsecond_ = value;
  // @@protoc_insertion_point(field_set:CMDUserMicState.micsecond)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDUpWaitMic::kVcbidFieldNumber;
const int CMDUpWaitMic::kRuuneridFieldNumber;
const int CMDUpWaitMic::kTouserFieldNumber;
const int CMDUpWaitMic::kNmicindexFieldNumber;
const int CMDUpWaitMic::kErrInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDUpWaitMic::CMDUpWaitMic()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDUpWaitMic)
}

void CMDUpWaitMic::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  errinfo_ = const_cast< ::CMDErrCode*>(&::CMDErrCode::default_instance());
}

CMDUpWaitMic::CMDUpWaitMic(const CMDUpWaitMic& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDUpWaitMic)
}

void CMDUpWaitMic::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  vcbid_ = 0u;
  ruunerid_ = 0u;
  touser_ = 0u;
  nmicindex_ = 0;
  errinfo_ = NULL;
}

CMDUpWaitMic::~CMDUpWaitMic() {
  // @@protoc_insertion_point(destructor:CMDUpWaitMic)
  SharedDtor();
}

void CMDUpWaitMic::SharedDtor() {
  if (this != default_instance_) {
    delete errinfo_;
  }
}

void CMDUpWaitMic::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDUpWaitMic::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDUpWaitMic_descriptor_;
}

const CMDUpWaitMic& CMDUpWaitMic::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RoomSvr_2eproto();
  return *default_instance_;
}

CMDUpWaitMic* CMDUpWaitMic::default_instance_ = NULL;

CMDUpWaitMic* CMDUpWaitMic::New(::google::protobuf::Arena* arena) const {
  CMDUpWaitMic* n = new CMDUpWaitMic;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDUpWaitMic::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDUpWaitMic)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDUpWaitMic, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDUpWaitMic*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(vcbid_, nmicindex_);
  if (GetArenaNoVirtual() == NULL && errinfo_ != NULL) delete errinfo_;
  errinfo_ = NULL;

#undef ZR_HELPER_
#undef ZR_

}

bool CMDUpWaitMic::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDUpWaitMic)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 vcbid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &vcbid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ruunerid;
        break;
      }

      // optional uint32 ruunerid = 2;
      case 2: {
        if (tag == 16) {
         parse_ruunerid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ruunerid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_touser;
        break;
      }

      // optional uint32 touser = 3;
      case 3: {
        if (tag == 24) {
         parse_touser:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &touser_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_nmicindex;
        break;
      }

      // optional int32 nmicindex = 4;
      case 4: {
        if (tag == 32) {
         parse_nmicindex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nmicindex_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_errInfo;
        break;
      }

      // optional .CMDErrCode errInfo = 5;
      case 5: {
        if (tag == 42) {
         parse_errInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_errinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDUpWaitMic)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDUpWaitMic)
  return false;
#undef DO_
}

void CMDUpWaitMic::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDUpWaitMic)
  // optional uint32 vcbid = 1;
  if (this->vcbid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->vcbid(), output);
  }

  // optional uint32 ruunerid = 2;
  if (this->ruunerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->ruunerid(), output);
  }

  // optional uint32 touser = 3;
  if (this->touser() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->touser(), output);
  }

  // optional int32 nmicindex = 4;
  if (this->nmicindex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->nmicindex(), output);
  }

  // optional .CMDErrCode errInfo = 5;
  if (this->has_errinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->errinfo_, output);
  }

  // @@protoc_insertion_point(serialize_end:CMDUpWaitMic)
}

::google::protobuf::uint8* CMDUpWaitMic::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDUpWaitMic)
  // optional uint32 vcbid = 1;
  if (this->vcbid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->vcbid(), target);
  }

  // optional uint32 ruunerid = 2;
  if (this->ruunerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->ruunerid(), target);
  }

  // optional uint32 touser = 3;
  if (this->touser() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->touser(), target);
  }

  // optional int32 nmicindex = 4;
  if (this->nmicindex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->nmicindex(), target);
  }

  // optional .CMDErrCode errInfo = 5;
  if (this->has_errinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->errinfo_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDUpWaitMic)
  return target;
}

int CMDUpWaitMic::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDUpWaitMic)
  int total_size = 0;

  // optional uint32 vcbid = 1;
  if (this->vcbid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->vcbid());
  }

  // optional uint32 ruunerid = 2;
  if (this->ruunerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ruunerid());
  }

  // optional uint32 touser = 3;
  if (this->touser() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->touser());
  }

  // optional int32 nmicindex = 4;
  if (this->nmicindex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nmicindex());
  }

  // optional .CMDErrCode errInfo = 5;
  if (this->has_errinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->errinfo_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDUpWaitMic::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDUpWaitMic)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDUpWaitMic* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDUpWaitMic>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDUpWaitMic)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDUpWaitMic)
    MergeFrom(*source);
  }
}

void CMDUpWaitMic::MergeFrom(const CMDUpWaitMic& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDUpWaitMic)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.vcbid() != 0) {
    set_vcbid(from.vcbid());
  }
  if (from.ruunerid() != 0) {
    set_ruunerid(from.ruunerid());
  }
  if (from.touser() != 0) {
    set_touser(from.touser());
  }
  if (from.nmicindex() != 0) {
    set_nmicindex(from.nmicindex());
  }
  if (from.has_errinfo()) {
    mutable_errinfo()->::CMDErrCode::MergeFrom(from.errinfo());
  }
}

void CMDUpWaitMic::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDUpWaitMic)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDUpWaitMic::CopyFrom(const CMDUpWaitMic& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDUpWaitMic)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDUpWaitMic::IsInitialized() const {

  return true;
}

void CMDUpWaitMic::Swap(CMDUpWaitMic* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDUpWaitMic::InternalSwap(CMDUpWaitMic* other) {
  std::swap(vcbid_, other->vcbid_);
  std::swap(ruunerid_, other->ruunerid_);
  std::swap(touser_, other->touser_);
  std::swap(nmicindex_, other->nmicindex_);
  std::swap(errinfo_, other->errinfo_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDUpWaitMic::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDUpWaitMic_descriptor_;
  metadata.reflection = CMDUpWaitMic_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDUpWaitMic

// optional uint32 vcbid = 1;
void CMDUpWaitMic::clear_vcbid() {
  vcbid_ = 0u;
}
 ::google::protobuf::uint32 CMDUpWaitMic::vcbid() const {
  // @@protoc_insertion_point(field_get:CMDUpWaitMic.vcbid)
  return vcbid_;
}
 void CMDUpWaitMic::set_vcbid(::google::protobuf::uint32 value) {
  
  vcbid_ = value;
  // @@protoc_insertion_point(field_set:CMDUpWaitMic.vcbid)
}

// optional uint32 ruunerid = 2;
void CMDUpWaitMic::clear_ruunerid() {
  ruunerid_ = 0u;
}
 ::google::protobuf::uint32 CMDUpWaitMic::ruunerid() const {
  // @@protoc_insertion_point(field_get:CMDUpWaitMic.ruunerid)
  return ruunerid_;
}
 void CMDUpWaitMic::set_ruunerid(::google::protobuf::uint32 value) {
  
  ruunerid_ = value;
  // @@protoc_insertion_point(field_set:CMDUpWaitMic.ruunerid)
}

// optional uint32 touser = 3;
void CMDUpWaitMic::clear_touser() {
  touser_ = 0u;
}
 ::google::protobuf::uint32 CMDUpWaitMic::touser() const {
  // @@protoc_insertion_point(field_get:CMDUpWaitMic.touser)
  return touser_;
}
 void CMDUpWaitMic::set_touser(::google::protobuf::uint32 value) {
  
  touser_ = value;
  // @@protoc_insertion_point(field_set:CMDUpWaitMic.touser)
}

// optional int32 nmicindex = 4;
void CMDUpWaitMic::clear_nmicindex() {
  nmicindex_ = 0;
}
 ::google::protobuf::int32 CMDUpWaitMic::nmicindex() const {
  // @@protoc_insertion_point(field_get:CMDUpWaitMic.nmicindex)
  return nmicindex_;
}
 void CMDUpWaitMic::set_nmicindex(::google::protobuf::int32 value) {
  
  nmicindex_ = value;
  // @@protoc_insertion_point(field_set:CMDUpWaitMic.nmicindex)
}

// optional .CMDErrCode errInfo = 5;
bool CMDUpWaitMic::has_errinfo() const {
  return !_is_default_instance_ && errinfo_ != NULL;
}
void CMDUpWaitMic::clear_errinfo() {
  if (GetArenaNoVirtual() == NULL && errinfo_ != NULL) delete errinfo_;
  errinfo_ = NULL;
}
const ::CMDErrCode& CMDUpWaitMic::errinfo() const {
  // @@protoc_insertion_point(field_get:CMDUpWaitMic.errInfo)
  return errinfo_ != NULL ? *errinfo_ : *default_instance_->errinfo_;
}
::CMDErrCode* CMDUpWaitMic::mutable_errinfo() {
  
  if (errinfo_ == NULL) {
    errinfo_ = new ::CMDErrCode;
  }
  // @@protoc_insertion_point(field_mutable:CMDUpWaitMic.errInfo)
  return errinfo_;
}
::CMDErrCode* CMDUpWaitMic::release_errinfo() {
  // @@protoc_insertion_point(field_release:CMDUpWaitMic.errInfo)
  
  ::CMDErrCode* temp = errinfo_;
  errinfo_ = NULL;
  return temp;
}
void CMDUpWaitMic::set_allocated_errinfo(::CMDErrCode* errinfo) {
  delete errinfo_;
  errinfo_ = errinfo;
  if (errinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDUpWaitMic.errInfo)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDUpWaitMicList::kSizeFieldNumber;
const int CMDUpWaitMicList::kUseridFieldNumber;
const int CMDUpWaitMicList::kVcbidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDUpWaitMicList::CMDUpWaitMicList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDUpWaitMicList)
}

void CMDUpWaitMicList::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDUpWaitMicList::CMDUpWaitMicList(const CMDUpWaitMicList& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDUpWaitMicList)
}

void CMDUpWaitMicList::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  size_ = 0u;
  vcbid_ = 0u;
}

CMDUpWaitMicList::~CMDUpWaitMicList() {
  // @@protoc_insertion_point(destructor:CMDUpWaitMicList)
  SharedDtor();
}

void CMDUpWaitMicList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMDUpWaitMicList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDUpWaitMicList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDUpWaitMicList_descriptor_;
}

const CMDUpWaitMicList& CMDUpWaitMicList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RoomSvr_2eproto();
  return *default_instance_;
}

CMDUpWaitMicList* CMDUpWaitMicList::default_instance_ = NULL;

CMDUpWaitMicList* CMDUpWaitMicList::New(::google::protobuf::Arena* arena) const {
  CMDUpWaitMicList* n = new CMDUpWaitMicList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDUpWaitMicList::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDUpWaitMicList)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDUpWaitMicList, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDUpWaitMicList*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(size_, vcbid_);

#undef ZR_HELPER_
#undef ZR_

  userid_.Clear();
}

bool CMDUpWaitMicList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDUpWaitMicList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 size = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &size_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_userid;
        break;
      }

      // repeated .UserInfo_t userid = 2;
      case 2: {
        if (tag == 18) {
         parse_userid:
          DO_(input->IncrementRecursionDepth());
         parse_loop_userid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_userid()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_userid;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(24)) goto parse_vcbid;
        break;
      }

      // optional uint32 vcbid = 3;
      case 3: {
        if (tag == 24) {
         parse_vcbid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &vcbid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDUpWaitMicList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDUpWaitMicList)
  return false;
#undef DO_
}

void CMDUpWaitMicList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDUpWaitMicList)
  // optional uint32 size = 1;
  if (this->size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->size(), output);
  }

  // repeated .UserInfo_t userid = 2;
  for (unsigned int i = 0, n = this->userid_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->userid(i), output);
  }

  // optional uint32 vcbid = 3;
  if (this->vcbid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->vcbid(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDUpWaitMicList)
}

::google::protobuf::uint8* CMDUpWaitMicList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDUpWaitMicList)
  // optional uint32 size = 1;
  if (this->size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->size(), target);
  }

  // repeated .UserInfo_t userid = 2;
  for (unsigned int i = 0, n = this->userid_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->userid(i), false, target);
  }

  // optional uint32 vcbid = 3;
  if (this->vcbid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->vcbid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDUpWaitMicList)
  return target;
}

int CMDUpWaitMicList::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDUpWaitMicList)
  int total_size = 0;

  // optional uint32 size = 1;
  if (this->size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->size());
  }

  // optional uint32 vcbid = 3;
  if (this->vcbid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->vcbid());
  }

  // repeated .UserInfo_t userid = 2;
  total_size += 1 * this->userid_size();
  for (int i = 0; i < this->userid_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->userid(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDUpWaitMicList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDUpWaitMicList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDUpWaitMicList* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDUpWaitMicList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDUpWaitMicList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDUpWaitMicList)
    MergeFrom(*source);
  }
}

void CMDUpWaitMicList::MergeFrom(const CMDUpWaitMicList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDUpWaitMicList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  userid_.MergeFrom(from.userid_);
  if (from.size() != 0) {
    set_size(from.size());
  }
  if (from.vcbid() != 0) {
    set_vcbid(from.vcbid());
  }
}

void CMDUpWaitMicList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDUpWaitMicList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDUpWaitMicList::CopyFrom(const CMDUpWaitMicList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDUpWaitMicList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDUpWaitMicList::IsInitialized() const {

  return true;
}

void CMDUpWaitMicList::Swap(CMDUpWaitMicList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDUpWaitMicList::InternalSwap(CMDUpWaitMicList* other) {
  std::swap(size_, other->size_);
  userid_.UnsafeArenaSwap(&other->userid_);
  std::swap(vcbid_, other->vcbid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDUpWaitMicList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDUpWaitMicList_descriptor_;
  metadata.reflection = CMDUpWaitMicList_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDUpWaitMicList

// optional uint32 size = 1;
void CMDUpWaitMicList::clear_size() {
  size_ = 0u;
}
 ::google::protobuf::uint32 CMDUpWaitMicList::size() const {
  // @@protoc_insertion_point(field_get:CMDUpWaitMicList.size)
  return size_;
}
 void CMDUpWaitMicList::set_size(::google::protobuf::uint32 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:CMDUpWaitMicList.size)
}

// repeated .UserInfo_t userid = 2;
int CMDUpWaitMicList::userid_size() const {
  return userid_.size();
}
void CMDUpWaitMicList::clear_userid() {
  userid_.Clear();
}
const ::UserInfo_t& CMDUpWaitMicList::userid(int index) const {
  // @@protoc_insertion_point(field_get:CMDUpWaitMicList.userid)
  return userid_.Get(index);
}
::UserInfo_t* CMDUpWaitMicList::mutable_userid(int index) {
  // @@protoc_insertion_point(field_mutable:CMDUpWaitMicList.userid)
  return userid_.Mutable(index);
}
::UserInfo_t* CMDUpWaitMicList::add_userid() {
  // @@protoc_insertion_point(field_add:CMDUpWaitMicList.userid)
  return userid_.Add();
}
::google::protobuf::RepeatedPtrField< ::UserInfo_t >*
CMDUpWaitMicList::mutable_userid() {
  // @@protoc_insertion_point(field_mutable_list:CMDUpWaitMicList.userid)
  return &userid_;
}
const ::google::protobuf::RepeatedPtrField< ::UserInfo_t >&
CMDUpWaitMicList::userid() const {
  // @@protoc_insertion_point(field_list:CMDUpWaitMicList.userid)
  return userid_;
}

// optional uint32 vcbid = 3;
void CMDUpWaitMicList::clear_vcbid() {
  vcbid_ = 0u;
}
 ::google::protobuf::uint32 CMDUpWaitMicList::vcbid() const {
  // @@protoc_insertion_point(field_get:CMDUpWaitMicList.vcbid)
  return vcbid_;
}
 void CMDUpWaitMicList::set_vcbid(::google::protobuf::uint32 value) {
  
  vcbid_ = value;
  // @@protoc_insertion_point(field_set:CMDUpWaitMicList.vcbid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDMicStateListReq::kVcbidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDMicStateListReq::CMDMicStateListReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDMicStateListReq)
}

void CMDMicStateListReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDMicStateListReq::CMDMicStateListReq(const CMDMicStateListReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDMicStateListReq)
}

void CMDMicStateListReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  vcbid_ = 0u;
}

CMDMicStateListReq::~CMDMicStateListReq() {
  // @@protoc_insertion_point(destructor:CMDMicStateListReq)
  SharedDtor();
}

void CMDMicStateListReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMDMicStateListReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDMicStateListReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDMicStateListReq_descriptor_;
}

const CMDMicStateListReq& CMDMicStateListReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RoomSvr_2eproto();
  return *default_instance_;
}

CMDMicStateListReq* CMDMicStateListReq::default_instance_ = NULL;

CMDMicStateListReq* CMDMicStateListReq::New(::google::protobuf::Arena* arena) const {
  CMDMicStateListReq* n = new CMDMicStateListReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDMicStateListReq::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDMicStateListReq)
  vcbid_ = 0u;
}

bool CMDMicStateListReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDMicStateListReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 vcbid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &vcbid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDMicStateListReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDMicStateListReq)
  return false;
#undef DO_
}

void CMDMicStateListReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDMicStateListReq)
  // optional uint32 vcbid = 1;
  if (this->vcbid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->vcbid(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDMicStateListReq)
}

::google::protobuf::uint8* CMDMicStateListReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDMicStateListReq)
  // optional uint32 vcbid = 1;
  if (this->vcbid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->vcbid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDMicStateListReq)
  return target;
}

int CMDMicStateListReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDMicStateListReq)
  int total_size = 0;

  // optional uint32 vcbid = 1;
  if (this->vcbid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->vcbid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDMicStateListReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDMicStateListReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDMicStateListReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDMicStateListReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDMicStateListReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDMicStateListReq)
    MergeFrom(*source);
  }
}

void CMDMicStateListReq::MergeFrom(const CMDMicStateListReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDMicStateListReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.vcbid() != 0) {
    set_vcbid(from.vcbid());
  }
}

void CMDMicStateListReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDMicStateListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDMicStateListReq::CopyFrom(const CMDMicStateListReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDMicStateListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDMicStateListReq::IsInitialized() const {

  return true;
}

void CMDMicStateListReq::Swap(CMDMicStateListReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDMicStateListReq::InternalSwap(CMDMicStateListReq* other) {
  std::swap(vcbid_, other->vcbid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDMicStateListReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDMicStateListReq_descriptor_;
  metadata.reflection = CMDMicStateListReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDMicStateListReq

// optional uint32 vcbid = 1;
void CMDMicStateListReq::clear_vcbid() {
  vcbid_ = 0u;
}
 ::google::protobuf::uint32 CMDMicStateListReq::vcbid() const {
  // @@protoc_insertion_point(field_get:CMDMicStateListReq.vcbid)
  return vcbid_;
}
 void CMDMicStateListReq::set_vcbid(::google::protobuf::uint32 value) {
  
  vcbid_ = value;
  // @@protoc_insertion_point(field_set:CMDMicStateListReq.vcbid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDMicStateListResp_PubMic::kUserinfoFieldNumber;
const int CMDMicStateListResp_PubMic::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDMicStateListResp_PubMic::CMDMicStateListResp_PubMic()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDMicStateListResp.PubMic)
}

void CMDMicStateListResp_PubMic::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  userinfo_ = const_cast< ::UserInfo_t*>(&::UserInfo_t::default_instance());
}

CMDMicStateListResp_PubMic::CMDMicStateListResp_PubMic(const CMDMicStateListResp_PubMic& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDMicStateListResp.PubMic)
}

void CMDMicStateListResp_PubMic::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  userinfo_ = NULL;
  status_ = 0;
}

CMDMicStateListResp_PubMic::~CMDMicStateListResp_PubMic() {
  // @@protoc_insertion_point(destructor:CMDMicStateListResp.PubMic)
  SharedDtor();
}

void CMDMicStateListResp_PubMic::SharedDtor() {
  if (this != default_instance_) {
    delete userinfo_;
  }
}

void CMDMicStateListResp_PubMic::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDMicStateListResp_PubMic::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDMicStateListResp_PubMic_descriptor_;
}

const CMDMicStateListResp_PubMic& CMDMicStateListResp_PubMic::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RoomSvr_2eproto();
  return *default_instance_;
}

CMDMicStateListResp_PubMic* CMDMicStateListResp_PubMic::default_instance_ = NULL;

CMDMicStateListResp_PubMic* CMDMicStateListResp_PubMic::New(::google::protobuf::Arena* arena) const {
  CMDMicStateListResp_PubMic* n = new CMDMicStateListResp_PubMic;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDMicStateListResp_PubMic::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDMicStateListResp.PubMic)
  if (GetArenaNoVirtual() == NULL && userinfo_ != NULL) delete userinfo_;
  userinfo_ = NULL;
  status_ = 0;
}

bool CMDMicStateListResp_PubMic::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDMicStateListResp.PubMic)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .UserInfo_t userinfo = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_userinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_status;
        break;
      }

      // optional int32 status = 2;
      case 2: {
        if (tag == 16) {
         parse_status:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDMicStateListResp.PubMic)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDMicStateListResp.PubMic)
  return false;
#undef DO_
}

void CMDMicStateListResp_PubMic::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDMicStateListResp.PubMic)
  // optional .UserInfo_t userinfo = 1;
  if (this->has_userinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->userinfo_, output);
  }

  // optional int32 status = 2;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->status(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDMicStateListResp.PubMic)
}

::google::protobuf::uint8* CMDMicStateListResp_PubMic::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDMicStateListResp.PubMic)
  // optional .UserInfo_t userinfo = 1;
  if (this->has_userinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->userinfo_, false, target);
  }

  // optional int32 status = 2;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->status(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDMicStateListResp.PubMic)
  return target;
}

int CMDMicStateListResp_PubMic::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDMicStateListResp.PubMic)
  int total_size = 0;

  // optional .UserInfo_t userinfo = 1;
  if (this->has_userinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->userinfo_);
  }

  // optional int32 status = 2;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->status());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDMicStateListResp_PubMic::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDMicStateListResp.PubMic)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDMicStateListResp_PubMic* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDMicStateListResp_PubMic>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDMicStateListResp.PubMic)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDMicStateListResp.PubMic)
    MergeFrom(*source);
  }
}

void CMDMicStateListResp_PubMic::MergeFrom(const CMDMicStateListResp_PubMic& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDMicStateListResp.PubMic)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.has_userinfo()) {
    mutable_userinfo()->::UserInfo_t::MergeFrom(from.userinfo());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void CMDMicStateListResp_PubMic::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDMicStateListResp.PubMic)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDMicStateListResp_PubMic::CopyFrom(const CMDMicStateListResp_PubMic& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDMicStateListResp.PubMic)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDMicStateListResp_PubMic::IsInitialized() const {

  return true;
}

void CMDMicStateListResp_PubMic::Swap(CMDMicStateListResp_PubMic* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDMicStateListResp_PubMic::InternalSwap(CMDMicStateListResp_PubMic* other) {
  std::swap(userinfo_, other->userinfo_);
  std::swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDMicStateListResp_PubMic::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDMicStateListResp_PubMic_descriptor_;
  metadata.reflection = CMDMicStateListResp_PubMic_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDMicStateListResp::kVcbidFieldNumber;
const int CMDMicStateListResp::kPubmicFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDMicStateListResp::CMDMicStateListResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDMicStateListResp)
}

void CMDMicStateListResp::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDMicStateListResp::CMDMicStateListResp(const CMDMicStateListResp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDMicStateListResp)
}

void CMDMicStateListResp::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  vcbid_ = 0u;
}

CMDMicStateListResp::~CMDMicStateListResp() {
  // @@protoc_insertion_point(destructor:CMDMicStateListResp)
  SharedDtor();
}

void CMDMicStateListResp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMDMicStateListResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDMicStateListResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDMicStateListResp_descriptor_;
}

const CMDMicStateListResp& CMDMicStateListResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RoomSvr_2eproto();
  return *default_instance_;
}

CMDMicStateListResp* CMDMicStateListResp::default_instance_ = NULL;

CMDMicStateListResp* CMDMicStateListResp::New(::google::protobuf::Arena* arena) const {
  CMDMicStateListResp* n = new CMDMicStateListResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDMicStateListResp::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDMicStateListResp)
  vcbid_ = 0u;
  pubmic_.Clear();
}

bool CMDMicStateListResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDMicStateListResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 vcbid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &vcbid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_pubmic;
        break;
      }

      // repeated .CMDMicStateListResp.PubMic pubmic = 2;
      case 2: {
        if (tag == 18) {
         parse_pubmic:
          DO_(input->IncrementRecursionDepth());
         parse_loop_pubmic:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_pubmic()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_pubmic;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDMicStateListResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDMicStateListResp)
  return false;
#undef DO_
}

void CMDMicStateListResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDMicStateListResp)
  // optional uint32 vcbid = 1;
  if (this->vcbid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->vcbid(), output);
  }

  // repeated .CMDMicStateListResp.PubMic pubmic = 2;
  for (unsigned int i = 0, n = this->pubmic_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->pubmic(i), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDMicStateListResp)
}

::google::protobuf::uint8* CMDMicStateListResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDMicStateListResp)
  // optional uint32 vcbid = 1;
  if (this->vcbid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->vcbid(), target);
  }

  // repeated .CMDMicStateListResp.PubMic pubmic = 2;
  for (unsigned int i = 0, n = this->pubmic_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->pubmic(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDMicStateListResp)
  return target;
}

int CMDMicStateListResp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDMicStateListResp)
  int total_size = 0;

  // optional uint32 vcbid = 1;
  if (this->vcbid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->vcbid());
  }

  // repeated .CMDMicStateListResp.PubMic pubmic = 2;
  total_size += 1 * this->pubmic_size();
  for (int i = 0; i < this->pubmic_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->pubmic(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDMicStateListResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDMicStateListResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDMicStateListResp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDMicStateListResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDMicStateListResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDMicStateListResp)
    MergeFrom(*source);
  }
}

void CMDMicStateListResp::MergeFrom(const CMDMicStateListResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDMicStateListResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  pubmic_.MergeFrom(from.pubmic_);
  if (from.vcbid() != 0) {
    set_vcbid(from.vcbid());
  }
}

void CMDMicStateListResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDMicStateListResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDMicStateListResp::CopyFrom(const CMDMicStateListResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDMicStateListResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDMicStateListResp::IsInitialized() const {

  return true;
}

void CMDMicStateListResp::Swap(CMDMicStateListResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDMicStateListResp::InternalSwap(CMDMicStateListResp* other) {
  std::swap(vcbid_, other->vcbid_);
  pubmic_.UnsafeArenaSwap(&other->pubmic_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDMicStateListResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDMicStateListResp_descriptor_;
  metadata.reflection = CMDMicStateListResp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDMicStateListResp_PubMic

// optional .UserInfo_t userinfo = 1;
bool CMDMicStateListResp_PubMic::has_userinfo() const {
  return !_is_default_instance_ && userinfo_ != NULL;
}
void CMDMicStateListResp_PubMic::clear_userinfo() {
  if (GetArenaNoVirtual() == NULL && userinfo_ != NULL) delete userinfo_;
  userinfo_ = NULL;
}
const ::UserInfo_t& CMDMicStateListResp_PubMic::userinfo() const {
  // @@protoc_insertion_point(field_get:CMDMicStateListResp.PubMic.userinfo)
  return userinfo_ != NULL ? *userinfo_ : *default_instance_->userinfo_;
}
::UserInfo_t* CMDMicStateListResp_PubMic::mutable_userinfo() {
  
  if (userinfo_ == NULL) {
    userinfo_ = new ::UserInfo_t;
  }
  // @@protoc_insertion_point(field_mutable:CMDMicStateListResp.PubMic.userinfo)
  return userinfo_;
}
::UserInfo_t* CMDMicStateListResp_PubMic::release_userinfo() {
  // @@protoc_insertion_point(field_release:CMDMicStateListResp.PubMic.userinfo)
  
  ::UserInfo_t* temp = userinfo_;
  userinfo_ = NULL;
  return temp;
}
void CMDMicStateListResp_PubMic::set_allocated_userinfo(::UserInfo_t* userinfo) {
  delete userinfo_;
  userinfo_ = userinfo;
  if (userinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDMicStateListResp.PubMic.userinfo)
}

// optional int32 status = 2;
void CMDMicStateListResp_PubMic::clear_status() {
  status_ = 0;
}
 ::google::protobuf::int32 CMDMicStateListResp_PubMic::status() const {
  // @@protoc_insertion_point(field_get:CMDMicStateListResp.PubMic.status)
  return status_;
}
 void CMDMicStateListResp_PubMic::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:CMDMicStateListResp.PubMic.status)
}

// -------------------------------------------------------------------

// CMDMicStateListResp

// optional uint32 vcbid = 1;
void CMDMicStateListResp::clear_vcbid() {
  vcbid_ = 0u;
}
 ::google::protobuf::uint32 CMDMicStateListResp::vcbid() const {
  // @@protoc_insertion_point(field_get:CMDMicStateListResp.vcbid)
  return vcbid_;
}
 void CMDMicStateListResp::set_vcbid(::google::protobuf::uint32 value) {
  
  vcbid_ = value;
  // @@protoc_insertion_point(field_set:CMDMicStateListResp.vcbid)
}

// repeated .CMDMicStateListResp.PubMic pubmic = 2;
int CMDMicStateListResp::pubmic_size() const {
  return pubmic_.size();
}
void CMDMicStateListResp::clear_pubmic() {
  pubmic_.Clear();
}
const ::CMDMicStateListResp_PubMic& CMDMicStateListResp::pubmic(int index) const {
  // @@protoc_insertion_point(field_get:CMDMicStateListResp.pubmic)
  return pubmic_.Get(index);
}
::CMDMicStateListResp_PubMic* CMDMicStateListResp::mutable_pubmic(int index) {
  // @@protoc_insertion_point(field_mutable:CMDMicStateListResp.pubmic)
  return pubmic_.Mutable(index);
}
::CMDMicStateListResp_PubMic* CMDMicStateListResp::add_pubmic() {
  // @@protoc_insertion_point(field_add:CMDMicStateListResp.pubmic)
  return pubmic_.Add();
}
::google::protobuf::RepeatedPtrField< ::CMDMicStateListResp_PubMic >*
CMDMicStateListResp::mutable_pubmic() {
  // @@protoc_insertion_point(field_mutable_list:CMDMicStateListResp.pubmic)
  return &pubmic_;
}
const ::google::protobuf::RepeatedPtrField< ::CMDMicStateListResp_PubMic >&
CMDMicStateListResp::pubmic() const {
  // @@protoc_insertion_point(field_list:CMDMicStateListResp.pubmic)
  return pubmic_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDRoomUserInfo::kUseridFieldNumber;
const int CMDRoomUserInfo::kVcbidFieldNumber;
const int CMDRoomUserInfo::kUserlevelFieldNumber;
const int CMDRoomUserInfo::kUserviplevelFieldNumber;
const int CMDRoomUserInfo::kGenderFieldNumber;
const int CMDRoomUserInfo::kDevtypeFieldNumber;
const int CMDRoomUserInfo::kPubmicindexFieldNumber;
const int CMDRoomUserInfo::kRoomlevelFieldNumber;
const int CMDRoomUserInfo::kUsertypeFieldNumber;
const int CMDRoomUserInfo::kCometimeFieldNumber;
const int CMDRoomUserInfo::kCheadFieldNumber;
const int CMDRoomUserInfo::kUserstateFieldNumber;
const int CMDRoomUserInfo::kBforbidchatFieldNumber;
const int CMDRoomUserInfo::kUseraliasFieldNumber;
const int CMDRoomUserInfo::kAuthStateFieldNumber;
const int CMDRoomUserInfo::kVideoUrlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDRoomUserInfo::CMDRoomUserInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDRoomUserInfo)
}

void CMDRoomUserInfo::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDRoomUserInfo::CMDRoomUserInfo(const CMDRoomUserInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDRoomUserInfo)
}

void CMDRoomUserInfo::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  userid_ = 0u;
  vcbid_ = 0u;
  userlevel_ = 0u;
  userviplevel_ = 0u;
  gender_ = 0u;
  devtype_ = 0u;
  pubmicindex_ = 0u;
  roomlevel_ = 0u;
  usertype_ = 0u;
  cometime_ = 0u;
  chead_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userstate_ = 0u;
  bforbidchat_ = 0;
  useralias_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  authstate_ = 0u;
  videourl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CMDRoomUserInfo::~CMDRoomUserInfo() {
  // @@protoc_insertion_point(destructor:CMDRoomUserInfo)
  SharedDtor();
}

void CMDRoomUserInfo::SharedDtor() {
  chead_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  useralias_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  videourl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CMDRoomUserInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDRoomUserInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDRoomUserInfo_descriptor_;
}

const CMDRoomUserInfo& CMDRoomUserInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RoomSvr_2eproto();
  return *default_instance_;
}

CMDRoomUserInfo* CMDRoomUserInfo::default_instance_ = NULL;

CMDRoomUserInfo* CMDRoomUserInfo::New(::google::protobuf::Arena* arena) const {
  CMDRoomUserInfo* n = new CMDRoomUserInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDRoomUserInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDRoomUserInfo)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDRoomUserInfo, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDRoomUserInfo*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(userid_, roomlevel_);
  ZR_(usertype_, cometime_);
  ZR_(userstate_, bforbidchat_);
  chead_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  useralias_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  authstate_ = 0u;
  videourl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool CMDRoomUserInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDRoomUserInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 userid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_vcbid;
        break;
      }

      // optional uint32 vcbid = 2;
      case 2: {
        if (tag == 16) {
         parse_vcbid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &vcbid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_userlevel;
        break;
      }

      // optional uint32 userlevel = 3;
      case 3: {
        if (tag == 24) {
         parse_userlevel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userlevel_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_userviplevel;
        break;
      }

      // optional uint32 userviplevel = 4;
      case 4: {
        if (tag == 32) {
         parse_userviplevel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userviplevel_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_gender;
        break;
      }

      // optional uint32 gender = 5;
      case 5: {
        if (tag == 40) {
         parse_gender:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gender_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_devtype;
        break;
      }

      // optional uint32 devtype = 6;
      case 6: {
        if (tag == 48) {
         parse_devtype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &devtype_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_pubmicindex;
        break;
      }

      // optional uint32 pubmicindex = 7;
      case 7: {
        if (tag == 56) {
         parse_pubmicindex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pubmicindex_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_roomlevel;
        break;
      }

      // optional uint32 roomlevel = 8;
      case 8: {
        if (tag == 64) {
         parse_roomlevel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &roomlevel_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_usertype;
        break;
      }

      // optional uint32 usertype = 9;
      case 9: {
        if (tag == 72) {
         parse_usertype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &usertype_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_cometime;
        break;
      }

      // optional uint32 cometime = 10;
      case 10: {
        if (tag == 80) {
         parse_cometime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cometime_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_chead;
        break;
      }

      // optional string chead = 11;
      case 11: {
        if (tag == 90) {
         parse_chead:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_chead()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->chead().data(), this->chead().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMDRoomUserInfo.chead"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_userstate;
        break;
      }

      // optional uint32 userstate = 12;
      case 12: {
        if (tag == 96) {
         parse_userstate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userstate_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_bforbidchat;
        break;
      }

      // optional int32 bforbidchat = 13;
      case 13: {
        if (tag == 104) {
         parse_bforbidchat:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bforbidchat_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_useralias;
        break;
      }

      // optional string useralias = 14;
      case 14: {
        if (tag == 114) {
         parse_useralias:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_useralias()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->useralias().data(), this->useralias().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMDRoomUserInfo.useralias"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(120)) goto parse_authState;
        break;
      }

      // optional uint32 authState = 15;
      case 15: {
        if (tag == 120) {
         parse_authState:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &authstate_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(130)) goto parse_videoUrl;
        break;
      }

      // optional string videoUrl = 16;
      case 16: {
        if (tag == 130) {
         parse_videoUrl:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_videourl()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->videourl().data(), this->videourl().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMDRoomUserInfo.videoUrl"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDRoomUserInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDRoomUserInfo)
  return false;
#undef DO_
}

void CMDRoomUserInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDRoomUserInfo)
  // optional uint32 userid = 1;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->userid(), output);
  }

  // optional uint32 vcbid = 2;
  if (this->vcbid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->vcbid(), output);
  }

  // optional uint32 userlevel = 3;
  if (this->userlevel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->userlevel(), output);
  }

  // optional uint32 userviplevel = 4;
  if (this->userviplevel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->userviplevel(), output);
  }

  // optional uint32 gender = 5;
  if (this->gender() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->gender(), output);
  }

  // optional uint32 devtype = 6;
  if (this->devtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->devtype(), output);
  }

  // optional uint32 pubmicindex = 7;
  if (this->pubmicindex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->pubmicindex(), output);
  }

  // optional uint32 roomlevel = 8;
  if (this->roomlevel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->roomlevel(), output);
  }

  // optional uint32 usertype = 9;
  if (this->usertype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->usertype(), output);
  }

  // optional uint32 cometime = 10;
  if (this->cometime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->cometime(), output);
  }

  // optional string chead = 11;
  if (this->chead().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->chead().data(), this->chead().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDRoomUserInfo.chead");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->chead(), output);
  }

  // optional uint32 userstate = 12;
  if (this->userstate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->userstate(), output);
  }

  // optional int32 bforbidchat = 13;
  if (this->bforbidchat() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->bforbidchat(), output);
  }

  // optional string useralias = 14;
  if (this->useralias().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->useralias().data(), this->useralias().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDRoomUserInfo.useralias");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->useralias(), output);
  }

  // optional uint32 authState = 15;
  if (this->authstate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->authstate(), output);
  }

  // optional string videoUrl = 16;
  if (this->videourl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->videourl().data(), this->videourl().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDRoomUserInfo.videoUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      16, this->videourl(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDRoomUserInfo)
}

::google::protobuf::uint8* CMDRoomUserInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDRoomUserInfo)
  // optional uint32 userid = 1;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->userid(), target);
  }

  // optional uint32 vcbid = 2;
  if (this->vcbid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->vcbid(), target);
  }

  // optional uint32 userlevel = 3;
  if (this->userlevel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->userlevel(), target);
  }

  // optional uint32 userviplevel = 4;
  if (this->userviplevel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->userviplevel(), target);
  }

  // optional uint32 gender = 5;
  if (this->gender() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->gender(), target);
  }

  // optional uint32 devtype = 6;
  if (this->devtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->devtype(), target);
  }

  // optional uint32 pubmicindex = 7;
  if (this->pubmicindex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->pubmicindex(), target);
  }

  // optional uint32 roomlevel = 8;
  if (this->roomlevel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->roomlevel(), target);
  }

  // optional uint32 usertype = 9;
  if (this->usertype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->usertype(), target);
  }

  // optional uint32 cometime = 10;
  if (this->cometime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->cometime(), target);
  }

  // optional string chead = 11;
  if (this->chead().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->chead().data(), this->chead().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDRoomUserInfo.chead");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->chead(), target);
  }

  // optional uint32 userstate = 12;
  if (this->userstate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->userstate(), target);
  }

  // optional int32 bforbidchat = 13;
  if (this->bforbidchat() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->bforbidchat(), target);
  }

  // optional string useralias = 14;
  if (this->useralias().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->useralias().data(), this->useralias().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDRoomUserInfo.useralias");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->useralias(), target);
  }

  // optional uint32 authState = 15;
  if (this->authstate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->authstate(), target);
  }

  // optional string videoUrl = 16;
  if (this->videourl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->videourl().data(), this->videourl().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDRoomUserInfo.videoUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->videourl(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDRoomUserInfo)
  return target;
}

int CMDRoomUserInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDRoomUserInfo)
  int total_size = 0;

  // optional uint32 userid = 1;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userid());
  }

  // optional uint32 vcbid = 2;
  if (this->vcbid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->vcbid());
  }

  // optional uint32 userlevel = 3;
  if (this->userlevel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userlevel());
  }

  // optional uint32 userviplevel = 4;
  if (this->userviplevel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userviplevel());
  }

  // optional uint32 gender = 5;
  if (this->gender() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gender());
  }

  // optional uint32 devtype = 6;
  if (this->devtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->devtype());
  }

  // optional uint32 pubmicindex = 7;
  if (this->pubmicindex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pubmicindex());
  }

  // optional uint32 roomlevel = 8;
  if (this->roomlevel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->roomlevel());
  }

  // optional uint32 usertype = 9;
  if (this->usertype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->usertype());
  }

  // optional uint32 cometime = 10;
  if (this->cometime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cometime());
  }

  // optional string chead = 11;
  if (this->chead().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->chead());
  }

  // optional uint32 userstate = 12;
  if (this->userstate() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userstate());
  }

  // optional int32 bforbidchat = 13;
  if (this->bforbidchat() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->bforbidchat());
  }

  // optional string useralias = 14;
  if (this->useralias().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->useralias());
  }

  // optional uint32 authState = 15;
  if (this->authstate() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->authstate());
  }

  // optional string videoUrl = 16;
  if (this->videourl().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->videourl());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDRoomUserInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDRoomUserInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDRoomUserInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDRoomUserInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDRoomUserInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDRoomUserInfo)
    MergeFrom(*source);
  }
}

void CMDRoomUserInfo::MergeFrom(const CMDRoomUserInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDRoomUserInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.vcbid() != 0) {
    set_vcbid(from.vcbid());
  }
  if (from.userlevel() != 0) {
    set_userlevel(from.userlevel());
  }
  if (from.userviplevel() != 0) {
    set_userviplevel(from.userviplevel());
  }
  if (from.gender() != 0) {
    set_gender(from.gender());
  }
  if (from.devtype() != 0) {
    set_devtype(from.devtype());
  }
  if (from.pubmicindex() != 0) {
    set_pubmicindex(from.pubmicindex());
  }
  if (from.roomlevel() != 0) {
    set_roomlevel(from.roomlevel());
  }
  if (from.usertype() != 0) {
    set_usertype(from.usertype());
  }
  if (from.cometime() != 0) {
    set_cometime(from.cometime());
  }
  if (from.chead().size() > 0) {

    chead_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chead_);
  }
  if (from.userstate() != 0) {
    set_userstate(from.userstate());
  }
  if (from.bforbidchat() != 0) {
    set_bforbidchat(from.bforbidchat());
  }
  if (from.useralias().size() > 0) {

    useralias_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.useralias_);
  }
  if (from.authstate() != 0) {
    set_authstate(from.authstate());
  }
  if (from.videourl().size() > 0) {

    videourl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.videourl_);
  }
}

void CMDRoomUserInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDRoomUserInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDRoomUserInfo::CopyFrom(const CMDRoomUserInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDRoomUserInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDRoomUserInfo::IsInitialized() const {

  return true;
}

void CMDRoomUserInfo::Swap(CMDRoomUserInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDRoomUserInfo::InternalSwap(CMDRoomUserInfo* other) {
  std::swap(userid_, other->userid_);
  std::swap(vcbid_, other->vcbid_);
  std::swap(userlevel_, other->userlevel_);
  std::swap(userviplevel_, other->userviplevel_);
  std::swap(gender_, other->gender_);
  std::swap(devtype_, other->devtype_);
  std::swap(pubmicindex_, other->pubmicindex_);
  std::swap(roomlevel_, other->roomlevel_);
  std::swap(usertype_, other->usertype_);
  std::swap(cometime_, other->cometime_);
  chead_.Swap(&other->chead_);
  std::swap(userstate_, other->userstate_);
  std::swap(bforbidchat_, other->bforbidchat_);
  useralias_.Swap(&other->useralias_);
  std::swap(authstate_, other->authstate_);
  videourl_.Swap(&other->videourl_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDRoomUserInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDRoomUserInfo_descriptor_;
  metadata.reflection = CMDRoomUserInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDRoomUserInfo

// optional uint32 userid = 1;
void CMDRoomUserInfo::clear_userid() {
  userid_ = 0u;
}
 ::google::protobuf::uint32 CMDRoomUserInfo::userid() const {
  // @@protoc_insertion_point(field_get:CMDRoomUserInfo.userid)
  return userid_;
}
 void CMDRoomUserInfo::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDRoomUserInfo.userid)
}

// optional uint32 vcbid = 2;
void CMDRoomUserInfo::clear_vcbid() {
  vcbid_ = 0u;
}
 ::google::protobuf::uint32 CMDRoomUserInfo::vcbid() const {
  // @@protoc_insertion_point(field_get:CMDRoomUserInfo.vcbid)
  return vcbid_;
}
 void CMDRoomUserInfo::set_vcbid(::google::protobuf::uint32 value) {
  
  vcbid_ = value;
  // @@protoc_insertion_point(field_set:CMDRoomUserInfo.vcbid)
}

// optional uint32 userlevel = 3;
void CMDRoomUserInfo::clear_userlevel() {
  userlevel_ = 0u;
}
 ::google::protobuf::uint32 CMDRoomUserInfo::userlevel() const {
  // @@protoc_insertion_point(field_get:CMDRoomUserInfo.userlevel)
  return userlevel_;
}
 void CMDRoomUserInfo::set_userlevel(::google::protobuf::uint32 value) {
  
  userlevel_ = value;
  // @@protoc_insertion_point(field_set:CMDRoomUserInfo.userlevel)
}

// optional uint32 userviplevel = 4;
void CMDRoomUserInfo::clear_userviplevel() {
  userviplevel_ = 0u;
}
 ::google::protobuf::uint32 CMDRoomUserInfo::userviplevel() const {
  // @@protoc_insertion_point(field_get:CMDRoomUserInfo.userviplevel)
  return userviplevel_;
}
 void CMDRoomUserInfo::set_userviplevel(::google::protobuf::uint32 value) {
  
  userviplevel_ = value;
  // @@protoc_insertion_point(field_set:CMDRoomUserInfo.userviplevel)
}

// optional uint32 gender = 5;
void CMDRoomUserInfo::clear_gender() {
  gender_ = 0u;
}
 ::google::protobuf::uint32 CMDRoomUserInfo::gender() const {
  // @@protoc_insertion_point(field_get:CMDRoomUserInfo.gender)
  return gender_;
}
 void CMDRoomUserInfo::set_gender(::google::protobuf::uint32 value) {
  
  gender_ = value;
  // @@protoc_insertion_point(field_set:CMDRoomUserInfo.gender)
}

// optional uint32 devtype = 6;
void CMDRoomUserInfo::clear_devtype() {
  devtype_ = 0u;
}
 ::google::protobuf::uint32 CMDRoomUserInfo::devtype() const {
  // @@protoc_insertion_point(field_get:CMDRoomUserInfo.devtype)
  return devtype_;
}
 void CMDRoomUserInfo::set_devtype(::google::protobuf::uint32 value) {
  
  devtype_ = value;
  // @@protoc_insertion_point(field_set:CMDRoomUserInfo.devtype)
}

// optional uint32 pubmicindex = 7;
void CMDRoomUserInfo::clear_pubmicindex() {
  pubmicindex_ = 0u;
}
 ::google::protobuf::uint32 CMDRoomUserInfo::pubmicindex() const {
  // @@protoc_insertion_point(field_get:CMDRoomUserInfo.pubmicindex)
  return pubmicindex_;
}
 void CMDRoomUserInfo::set_pubmicindex(::google::protobuf::uint32 value) {
  
  pubmicindex_ = value;
  // @@protoc_insertion_point(field_set:CMDRoomUserInfo.pubmicindex)
}

// optional uint32 roomlevel = 8;
void CMDRoomUserInfo::clear_roomlevel() {
  roomlevel_ = 0u;
}
 ::google::protobuf::uint32 CMDRoomUserInfo::roomlevel() const {
  // @@protoc_insertion_point(field_get:CMDRoomUserInfo.roomlevel)
  return roomlevel_;
}
 void CMDRoomUserInfo::set_roomlevel(::google::protobuf::uint32 value) {
  
  roomlevel_ = value;
  // @@protoc_insertion_point(field_set:CMDRoomUserInfo.roomlevel)
}

// optional uint32 usertype = 9;
void CMDRoomUserInfo::clear_usertype() {
  usertype_ = 0u;
}
 ::google::protobuf::uint32 CMDRoomUserInfo::usertype() const {
  // @@protoc_insertion_point(field_get:CMDRoomUserInfo.usertype)
  return usertype_;
}
 void CMDRoomUserInfo::set_usertype(::google::protobuf::uint32 value) {
  
  usertype_ = value;
  // @@protoc_insertion_point(field_set:CMDRoomUserInfo.usertype)
}

// optional uint32 cometime = 10;
void CMDRoomUserInfo::clear_cometime() {
  cometime_ = 0u;
}
 ::google::protobuf::uint32 CMDRoomUserInfo::cometime() const {
  // @@protoc_insertion_point(field_get:CMDRoomUserInfo.cometime)
  return cometime_;
}
 void CMDRoomUserInfo::set_cometime(::google::protobuf::uint32 value) {
  
  cometime_ = value;
  // @@protoc_insertion_point(field_set:CMDRoomUserInfo.cometime)
}

// optional string chead = 11;
void CMDRoomUserInfo::clear_chead() {
  chead_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CMDRoomUserInfo::chead() const {
  // @@protoc_insertion_point(field_get:CMDRoomUserInfo.chead)
  return chead_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDRoomUserInfo::set_chead(const ::std::string& value) {
  
  chead_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDRoomUserInfo.chead)
}
 void CMDRoomUserInfo::set_chead(const char* value) {
  
  chead_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDRoomUserInfo.chead)
}
 void CMDRoomUserInfo::set_chead(const char* value, size_t size) {
  
  chead_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDRoomUserInfo.chead)
}
 ::std::string* CMDRoomUserInfo::mutable_chead() {
  
  // @@protoc_insertion_point(field_mutable:CMDRoomUserInfo.chead)
  return chead_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMDRoomUserInfo::release_chead() {
  // @@protoc_insertion_point(field_release:CMDRoomUserInfo.chead)
  
  return chead_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDRoomUserInfo::set_allocated_chead(::std::string* chead) {
  if (chead != NULL) {
    
  } else {
    
  }
  chead_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chead);
  // @@protoc_insertion_point(field_set_allocated:CMDRoomUserInfo.chead)
}

// optional uint32 userstate = 12;
void CMDRoomUserInfo::clear_userstate() {
  userstate_ = 0u;
}
 ::google::protobuf::uint32 CMDRoomUserInfo::userstate() const {
  // @@protoc_insertion_point(field_get:CMDRoomUserInfo.userstate)
  return userstate_;
}
 void CMDRoomUserInfo::set_userstate(::google::protobuf::uint32 value) {
  
  userstate_ = value;
  // @@protoc_insertion_point(field_set:CMDRoomUserInfo.userstate)
}

// optional int32 bforbidchat = 13;
void CMDRoomUserInfo::clear_bforbidchat() {
  bforbidchat_ = 0;
}
 ::google::protobuf::int32 CMDRoomUserInfo::bforbidchat() const {
  // @@protoc_insertion_point(field_get:CMDRoomUserInfo.bforbidchat)
  return bforbidchat_;
}
 void CMDRoomUserInfo::set_bforbidchat(::google::protobuf::int32 value) {
  
  bforbidchat_ = value;
  // @@protoc_insertion_point(field_set:CMDRoomUserInfo.bforbidchat)
}

// optional string useralias = 14;
void CMDRoomUserInfo::clear_useralias() {
  useralias_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CMDRoomUserInfo::useralias() const {
  // @@protoc_insertion_point(field_get:CMDRoomUserInfo.useralias)
  return useralias_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDRoomUserInfo::set_useralias(const ::std::string& value) {
  
  useralias_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDRoomUserInfo.useralias)
}
 void CMDRoomUserInfo::set_useralias(const char* value) {
  
  useralias_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDRoomUserInfo.useralias)
}
 void CMDRoomUserInfo::set_useralias(const char* value, size_t size) {
  
  useralias_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDRoomUserInfo.useralias)
}
 ::std::string* CMDRoomUserInfo::mutable_useralias() {
  
  // @@protoc_insertion_point(field_mutable:CMDRoomUserInfo.useralias)
  return useralias_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMDRoomUserInfo::release_useralias() {
  // @@protoc_insertion_point(field_release:CMDRoomUserInfo.useralias)
  
  return useralias_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDRoomUserInfo::set_allocated_useralias(::std::string* useralias) {
  if (useralias != NULL) {
    
  } else {
    
  }
  useralias_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), useralias);
  // @@protoc_insertion_point(field_set_allocated:CMDRoomUserInfo.useralias)
}

// optional uint32 authState = 15;
void CMDRoomUserInfo::clear_authstate() {
  authstate_ = 0u;
}
 ::google::protobuf::uint32 CMDRoomUserInfo::authstate() const {
  // @@protoc_insertion_point(field_get:CMDRoomUserInfo.authState)
  return authstate_;
}
 void CMDRoomUserInfo::set_authstate(::google::protobuf::uint32 value) {
  
  authstate_ = value;
  // @@protoc_insertion_point(field_set:CMDRoomUserInfo.authState)
}

// optional string videoUrl = 16;
void CMDRoomUserInfo::clear_videourl() {
  videourl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CMDRoomUserInfo::videourl() const {
  // @@protoc_insertion_point(field_get:CMDRoomUserInfo.videoUrl)
  return videourl_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDRoomUserInfo::set_videourl(const ::std::string& value) {
  
  videourl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDRoomUserInfo.videoUrl)
}
 void CMDRoomUserInfo::set_videourl(const char* value) {
  
  videourl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDRoomUserInfo.videoUrl)
}
 void CMDRoomUserInfo::set_videourl(const char* value, size_t size) {
  
  videourl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDRoomUserInfo.videoUrl)
}
 ::std::string* CMDRoomUserInfo::mutable_videourl() {
  
  // @@protoc_insertion_point(field_mutable:CMDRoomUserInfo.videoUrl)
  return videourl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMDRoomUserInfo::release_videourl() {
  // @@protoc_insertion_point(field_release:CMDRoomUserInfo.videoUrl)
  
  return videourl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDRoomUserInfo::set_allocated_videourl(::std::string* videourl) {
  if (videourl != NULL) {
    
  } else {
    
  }
  videourl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), videourl);
  // @@protoc_insertion_point(field_set_allocated:CMDRoomUserInfo.videoUrl)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDRoomUserInfos::kUserInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDRoomUserInfos::CMDRoomUserInfos()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDRoomUserInfos)
}

void CMDRoomUserInfos::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDRoomUserInfos::CMDRoomUserInfos(const CMDRoomUserInfos& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDRoomUserInfos)
}

void CMDRoomUserInfos::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

CMDRoomUserInfos::~CMDRoomUserInfos() {
  // @@protoc_insertion_point(destructor:CMDRoomUserInfos)
  SharedDtor();
}

void CMDRoomUserInfos::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMDRoomUserInfos::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDRoomUserInfos::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDRoomUserInfos_descriptor_;
}

const CMDRoomUserInfos& CMDRoomUserInfos::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RoomSvr_2eproto();
  return *default_instance_;
}

CMDRoomUserInfos* CMDRoomUserInfos::default_instance_ = NULL;

CMDRoomUserInfos* CMDRoomUserInfos::New(::google::protobuf::Arena* arena) const {
  CMDRoomUserInfos* n = new CMDRoomUserInfos;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDRoomUserInfos::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDRoomUserInfos)
  userinfo_.Clear();
}

bool CMDRoomUserInfos::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDRoomUserInfos)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CMDRoomUserInfo UserInfo = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_UserInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_userinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_UserInfo;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDRoomUserInfos)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDRoomUserInfos)
  return false;
#undef DO_
}

void CMDRoomUserInfos::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDRoomUserInfos)
  // repeated .CMDRoomUserInfo UserInfo = 1;
  for (unsigned int i = 0, n = this->userinfo_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->userinfo(i), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDRoomUserInfos)
}

::google::protobuf::uint8* CMDRoomUserInfos::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDRoomUserInfos)
  // repeated .CMDRoomUserInfo UserInfo = 1;
  for (unsigned int i = 0, n = this->userinfo_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->userinfo(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDRoomUserInfos)
  return target;
}

int CMDRoomUserInfos::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDRoomUserInfos)
  int total_size = 0;

  // repeated .CMDRoomUserInfo UserInfo = 1;
  total_size += 1 * this->userinfo_size();
  for (int i = 0; i < this->userinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->userinfo(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDRoomUserInfos::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDRoomUserInfos)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDRoomUserInfos* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDRoomUserInfos>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDRoomUserInfos)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDRoomUserInfos)
    MergeFrom(*source);
  }
}

void CMDRoomUserInfos::MergeFrom(const CMDRoomUserInfos& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDRoomUserInfos)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  userinfo_.MergeFrom(from.userinfo_);
}

void CMDRoomUserInfos::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDRoomUserInfos)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDRoomUserInfos::CopyFrom(const CMDRoomUserInfos& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDRoomUserInfos)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDRoomUserInfos::IsInitialized() const {

  return true;
}

void CMDRoomUserInfos::Swap(CMDRoomUserInfos* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDRoomUserInfos::InternalSwap(CMDRoomUserInfos* other) {
  userinfo_.UnsafeArenaSwap(&other->userinfo_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDRoomUserInfos::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDRoomUserInfos_descriptor_;
  metadata.reflection = CMDRoomUserInfos_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDRoomUserInfos

// repeated .CMDRoomUserInfo UserInfo = 1;
int CMDRoomUserInfos::userinfo_size() const {
  return userinfo_.size();
}
void CMDRoomUserInfos::clear_userinfo() {
  userinfo_.Clear();
}
const ::CMDRoomUserInfo& CMDRoomUserInfos::userinfo(int index) const {
  // @@protoc_insertion_point(field_get:CMDRoomUserInfos.UserInfo)
  return userinfo_.Get(index);
}
::CMDRoomUserInfo* CMDRoomUserInfos::mutable_userinfo(int index) {
  // @@protoc_insertion_point(field_mutable:CMDRoomUserInfos.UserInfo)
  return userinfo_.Mutable(index);
}
::CMDRoomUserInfo* CMDRoomUserInfos::add_userinfo() {
  // @@protoc_insertion_point(field_add:CMDRoomUserInfos.UserInfo)
  return userinfo_.Add();
}
::google::protobuf::RepeatedPtrField< ::CMDRoomUserInfo >*
CMDRoomUserInfos::mutable_userinfo() {
  // @@protoc_insertion_point(field_mutable_list:CMDRoomUserInfos.UserInfo)
  return &userinfo_;
}
const ::google::protobuf::RepeatedPtrField< ::CMDRoomUserInfo >&
CMDRoomUserInfos::userinfo() const {
  // @@protoc_insertion_point(field_list:CMDRoomUserInfos.UserInfo)
  return userinfo_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDUserExitRoomInfo::kUseridFieldNumber;
const int CMDUserExitRoomInfo::kVcbidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDUserExitRoomInfo::CMDUserExitRoomInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDUserExitRoomInfo)
}

void CMDUserExitRoomInfo::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDUserExitRoomInfo::CMDUserExitRoomInfo(const CMDUserExitRoomInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDUserExitRoomInfo)
}

void CMDUserExitRoomInfo::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  userid_ = 0u;
  vcbid_ = 0u;
}

CMDUserExitRoomInfo::~CMDUserExitRoomInfo() {
  // @@protoc_insertion_point(destructor:CMDUserExitRoomInfo)
  SharedDtor();
}

void CMDUserExitRoomInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMDUserExitRoomInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDUserExitRoomInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDUserExitRoomInfo_descriptor_;
}

const CMDUserExitRoomInfo& CMDUserExitRoomInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RoomSvr_2eproto();
  return *default_instance_;
}

CMDUserExitRoomInfo* CMDUserExitRoomInfo::default_instance_ = NULL;

CMDUserExitRoomInfo* CMDUserExitRoomInfo::New(::google::protobuf::Arena* arena) const {
  CMDUserExitRoomInfo* n = new CMDUserExitRoomInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDUserExitRoomInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDUserExitRoomInfo)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDUserExitRoomInfo, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDUserExitRoomInfo*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(userid_, vcbid_);

#undef ZR_HELPER_
#undef ZR_

}

bool CMDUserExitRoomInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDUserExitRoomInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 userid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_vcbid;
        break;
      }

      // optional uint32 vcbid = 2;
      case 2: {
        if (tag == 16) {
         parse_vcbid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &vcbid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDUserExitRoomInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDUserExitRoomInfo)
  return false;
#undef DO_
}

void CMDUserExitRoomInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDUserExitRoomInfo)
  // optional uint32 userid = 1;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->userid(), output);
  }

  // optional uint32 vcbid = 2;
  if (this->vcbid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->vcbid(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDUserExitRoomInfo)
}

::google::protobuf::uint8* CMDUserExitRoomInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDUserExitRoomInfo)
  // optional uint32 userid = 1;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->userid(), target);
  }

  // optional uint32 vcbid = 2;
  if (this->vcbid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->vcbid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDUserExitRoomInfo)
  return target;
}

int CMDUserExitRoomInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDUserExitRoomInfo)
  int total_size = 0;

  // optional uint32 userid = 1;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userid());
  }

  // optional uint32 vcbid = 2;
  if (this->vcbid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->vcbid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDUserExitRoomInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDUserExitRoomInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDUserExitRoomInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDUserExitRoomInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDUserExitRoomInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDUserExitRoomInfo)
    MergeFrom(*source);
  }
}

void CMDUserExitRoomInfo::MergeFrom(const CMDUserExitRoomInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDUserExitRoomInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.vcbid() != 0) {
    set_vcbid(from.vcbid());
  }
}

void CMDUserExitRoomInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDUserExitRoomInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDUserExitRoomInfo::CopyFrom(const CMDUserExitRoomInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDUserExitRoomInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDUserExitRoomInfo::IsInitialized() const {

  return true;
}

void CMDUserExitRoomInfo::Swap(CMDUserExitRoomInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDUserExitRoomInfo::InternalSwap(CMDUserExitRoomInfo* other) {
  std::swap(userid_, other->userid_);
  std::swap(vcbid_, other->vcbid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDUserExitRoomInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDUserExitRoomInfo_descriptor_;
  metadata.reflection = CMDUserExitRoomInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDUserExitRoomInfo

// optional uint32 userid = 1;
void CMDUserExitRoomInfo::clear_userid() {
  userid_ = 0u;
}
 ::google::protobuf::uint32 CMDUserExitRoomInfo::userid() const {
  // @@protoc_insertion_point(field_get:CMDUserExitRoomInfo.userid)
  return userid_;
}
 void CMDUserExitRoomInfo::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDUserExitRoomInfo.userid)
}

// optional uint32 vcbid = 2;
void CMDUserExitRoomInfo::clear_vcbid() {
  vcbid_ = 0u;
}
 ::google::protobuf::uint32 CMDUserExitRoomInfo::vcbid() const {
  // @@protoc_insertion_point(field_get:CMDUserExitRoomInfo.vcbid)
  return vcbid_;
}
 void CMDUserExitRoomInfo::set_vcbid(::google::protobuf::uint32 value) {
  
  vcbid_ = value;
  // @@protoc_insertion_point(field_set:CMDUserExitRoomInfo.vcbid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDUserExitRoomInfo_ext::kUseridFieldNumber;
const int CMDUserExitRoomInfo_ext::kVcbidFieldNumber;
const int CMDUserExitRoomInfo_ext::kRoleTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDUserExitRoomInfo_ext::CMDUserExitRoomInfo_ext()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDUserExitRoomInfo_ext)
}

void CMDUserExitRoomInfo_ext::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDUserExitRoomInfo_ext::CMDUserExitRoomInfo_ext(const CMDUserExitRoomInfo_ext& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDUserExitRoomInfo_ext)
}

void CMDUserExitRoomInfo_ext::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  userid_ = 0u;
  vcbid_ = 0u;
  roletype_ = 0u;
}

CMDUserExitRoomInfo_ext::~CMDUserExitRoomInfo_ext() {
  // @@protoc_insertion_point(destructor:CMDUserExitRoomInfo_ext)
  SharedDtor();
}

void CMDUserExitRoomInfo_ext::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMDUserExitRoomInfo_ext::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDUserExitRoomInfo_ext::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDUserExitRoomInfo_ext_descriptor_;
}

const CMDUserExitRoomInfo_ext& CMDUserExitRoomInfo_ext::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RoomSvr_2eproto();
  return *default_instance_;
}

CMDUserExitRoomInfo_ext* CMDUserExitRoomInfo_ext::default_instance_ = NULL;

CMDUserExitRoomInfo_ext* CMDUserExitRoomInfo_ext::New(::google::protobuf::Arena* arena) const {
  CMDUserExitRoomInfo_ext* n = new CMDUserExitRoomInfo_ext;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDUserExitRoomInfo_ext::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDUserExitRoomInfo_ext)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDUserExitRoomInfo_ext, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDUserExitRoomInfo_ext*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(userid_, roletype_);

#undef ZR_HELPER_
#undef ZR_

}

bool CMDUserExitRoomInfo_ext::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDUserExitRoomInfo_ext)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 userid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_vcbid;
        break;
      }

      // optional uint32 vcbid = 2;
      case 2: {
        if (tag == 16) {
         parse_vcbid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &vcbid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_roleType;
        break;
      }

      // optional uint32 roleType = 3;
      case 3: {
        if (tag == 24) {
         parse_roleType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &roletype_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDUserExitRoomInfo_ext)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDUserExitRoomInfo_ext)
  return false;
#undef DO_
}

void CMDUserExitRoomInfo_ext::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDUserExitRoomInfo_ext)
  // optional uint32 userid = 1;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->userid(), output);
  }

  // optional uint32 vcbid = 2;
  if (this->vcbid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->vcbid(), output);
  }

  // optional uint32 roleType = 3;
  if (this->roletype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->roletype(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDUserExitRoomInfo_ext)
}

::google::protobuf::uint8* CMDUserExitRoomInfo_ext::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDUserExitRoomInfo_ext)
  // optional uint32 userid = 1;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->userid(), target);
  }

  // optional uint32 vcbid = 2;
  if (this->vcbid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->vcbid(), target);
  }

  // optional uint32 roleType = 3;
  if (this->roletype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->roletype(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDUserExitRoomInfo_ext)
  return target;
}

int CMDUserExitRoomInfo_ext::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDUserExitRoomInfo_ext)
  int total_size = 0;

  // optional uint32 userid = 1;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userid());
  }

  // optional uint32 vcbid = 2;
  if (this->vcbid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->vcbid());
  }

  // optional uint32 roleType = 3;
  if (this->roletype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->roletype());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDUserExitRoomInfo_ext::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDUserExitRoomInfo_ext)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDUserExitRoomInfo_ext* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDUserExitRoomInfo_ext>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDUserExitRoomInfo_ext)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDUserExitRoomInfo_ext)
    MergeFrom(*source);
  }
}

void CMDUserExitRoomInfo_ext::MergeFrom(const CMDUserExitRoomInfo_ext& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDUserExitRoomInfo_ext)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.vcbid() != 0) {
    set_vcbid(from.vcbid());
  }
  if (from.roletype() != 0) {
    set_roletype(from.roletype());
  }
}

void CMDUserExitRoomInfo_ext::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDUserExitRoomInfo_ext)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDUserExitRoomInfo_ext::CopyFrom(const CMDUserExitRoomInfo_ext& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDUserExitRoomInfo_ext)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDUserExitRoomInfo_ext::IsInitialized() const {

  return true;
}

void CMDUserExitRoomInfo_ext::Swap(CMDUserExitRoomInfo_ext* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDUserExitRoomInfo_ext::InternalSwap(CMDUserExitRoomInfo_ext* other) {
  std::swap(userid_, other->userid_);
  std::swap(vcbid_, other->vcbid_);
  std::swap(roletype_, other->roletype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDUserExitRoomInfo_ext::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDUserExitRoomInfo_ext_descriptor_;
  metadata.reflection = CMDUserExitRoomInfo_ext_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDUserExitRoomInfo_ext

// optional uint32 userid = 1;
void CMDUserExitRoomInfo_ext::clear_userid() {
  userid_ = 0u;
}
 ::google::protobuf::uint32 CMDUserExitRoomInfo_ext::userid() const {
  // @@protoc_insertion_point(field_get:CMDUserExitRoomInfo_ext.userid)
  return userid_;
}
 void CMDUserExitRoomInfo_ext::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDUserExitRoomInfo_ext.userid)
}

// optional uint32 vcbid = 2;
void CMDUserExitRoomInfo_ext::clear_vcbid() {
  vcbid_ = 0u;
}
 ::google::protobuf::uint32 CMDUserExitRoomInfo_ext::vcbid() const {
  // @@protoc_insertion_point(field_get:CMDUserExitRoomInfo_ext.vcbid)
  return vcbid_;
}
 void CMDUserExitRoomInfo_ext::set_vcbid(::google::protobuf::uint32 value) {
  
  vcbid_ = value;
  // @@protoc_insertion_point(field_set:CMDUserExitRoomInfo_ext.vcbid)
}

// optional uint32 roleType = 3;
void CMDUserExitRoomInfo_ext::clear_roletype() {
  roletype_ = 0u;
}
 ::google::protobuf::uint32 CMDUserExitRoomInfo_ext::roletype() const {
  // @@protoc_insertion_point(field_get:CMDUserExitRoomInfo_ext.roleType)
  return roletype_;
}
 void CMDUserExitRoomInfo_ext::set_roletype(::google::protobuf::uint32 value) {
  
  roletype_ = value;
  // @@protoc_insertion_point(field_set:CMDUserExitRoomInfo_ext.roleType)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDUserExceptExitRoomInfo::kUseridFieldNumber;
const int CMDUserExceptExitRoomInfo::kVcbidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDUserExceptExitRoomInfo::CMDUserExceptExitRoomInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDUserExceptExitRoomInfo)
}

void CMDUserExceptExitRoomInfo::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDUserExceptExitRoomInfo::CMDUserExceptExitRoomInfo(const CMDUserExceptExitRoomInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDUserExceptExitRoomInfo)
}

void CMDUserExceptExitRoomInfo::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  userid_ = 0u;
  vcbid_ = 0u;
}

CMDUserExceptExitRoomInfo::~CMDUserExceptExitRoomInfo() {
  // @@protoc_insertion_point(destructor:CMDUserExceptExitRoomInfo)
  SharedDtor();
}

void CMDUserExceptExitRoomInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMDUserExceptExitRoomInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDUserExceptExitRoomInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDUserExceptExitRoomInfo_descriptor_;
}

const CMDUserExceptExitRoomInfo& CMDUserExceptExitRoomInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RoomSvr_2eproto();
  return *default_instance_;
}

CMDUserExceptExitRoomInfo* CMDUserExceptExitRoomInfo::default_instance_ = NULL;

CMDUserExceptExitRoomInfo* CMDUserExceptExitRoomInfo::New(::google::protobuf::Arena* arena) const {
  CMDUserExceptExitRoomInfo* n = new CMDUserExceptExitRoomInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDUserExceptExitRoomInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDUserExceptExitRoomInfo)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDUserExceptExitRoomInfo, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDUserExceptExitRoomInfo*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(userid_, vcbid_);

#undef ZR_HELPER_
#undef ZR_

}

bool CMDUserExceptExitRoomInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDUserExceptExitRoomInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 userid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_vcbid;
        break;
      }

      // optional uint32 vcbid = 2;
      case 2: {
        if (tag == 16) {
         parse_vcbid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &vcbid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDUserExceptExitRoomInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDUserExceptExitRoomInfo)
  return false;
#undef DO_
}

void CMDUserExceptExitRoomInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDUserExceptExitRoomInfo)
  // optional uint32 userid = 1;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->userid(), output);
  }

  // optional uint32 vcbid = 2;
  if (this->vcbid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->vcbid(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDUserExceptExitRoomInfo)
}

::google::protobuf::uint8* CMDUserExceptExitRoomInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDUserExceptExitRoomInfo)
  // optional uint32 userid = 1;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->userid(), target);
  }

  // optional uint32 vcbid = 2;
  if (this->vcbid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->vcbid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDUserExceptExitRoomInfo)
  return target;
}

int CMDUserExceptExitRoomInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDUserExceptExitRoomInfo)
  int total_size = 0;

  // optional uint32 userid = 1;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userid());
  }

  // optional uint32 vcbid = 2;
  if (this->vcbid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->vcbid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDUserExceptExitRoomInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDUserExceptExitRoomInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDUserExceptExitRoomInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDUserExceptExitRoomInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDUserExceptExitRoomInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDUserExceptExitRoomInfo)
    MergeFrom(*source);
  }
}

void CMDUserExceptExitRoomInfo::MergeFrom(const CMDUserExceptExitRoomInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDUserExceptExitRoomInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.vcbid() != 0) {
    set_vcbid(from.vcbid());
  }
}

void CMDUserExceptExitRoomInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDUserExceptExitRoomInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDUserExceptExitRoomInfo::CopyFrom(const CMDUserExceptExitRoomInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDUserExceptExitRoomInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDUserExceptExitRoomInfo::IsInitialized() const {

  return true;
}

void CMDUserExceptExitRoomInfo::Swap(CMDUserExceptExitRoomInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDUserExceptExitRoomInfo::InternalSwap(CMDUserExceptExitRoomInfo* other) {
  std::swap(userid_, other->userid_);
  std::swap(vcbid_, other->vcbid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDUserExceptExitRoomInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDUserExceptExitRoomInfo_descriptor_;
  metadata.reflection = CMDUserExceptExitRoomInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDUserExceptExitRoomInfo

// optional uint32 userid = 1;
void CMDUserExceptExitRoomInfo::clear_userid() {
  userid_ = 0u;
}
 ::google::protobuf::uint32 CMDUserExceptExitRoomInfo::userid() const {
  // @@protoc_insertion_point(field_get:CMDUserExceptExitRoomInfo.userid)
  return userid_;
}
 void CMDUserExceptExitRoomInfo::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDUserExceptExitRoomInfo.userid)
}

// optional uint32 vcbid = 2;
void CMDUserExceptExitRoomInfo::clear_vcbid() {
  vcbid_ = 0u;
}
 ::google::protobuf::uint32 CMDUserExceptExitRoomInfo::vcbid() const {
  // @@protoc_insertion_point(field_get:CMDUserExceptExitRoomInfo.vcbid)
  return vcbid_;
}
 void CMDUserExceptExitRoomInfo::set_vcbid(::google::protobuf::uint32 value) {
  
  vcbid_ = value;
  // @@protoc_insertion_point(field_set:CMDUserExceptExitRoomInfo.vcbid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDOperateWaitMic::kVcbidFieldNumber;
const int CMDOperateWaitMic::kRuuneridFieldNumber;
const int CMDOperateWaitMic::kUseridFieldNumber;
const int CMDOperateWaitMic::kMicidFieldNumber;
const int CMDOperateWaitMic::kOptypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDOperateWaitMic::CMDOperateWaitMic()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDOperateWaitMic)
}

void CMDOperateWaitMic::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDOperateWaitMic::CMDOperateWaitMic(const CMDOperateWaitMic& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDOperateWaitMic)
}

void CMDOperateWaitMic::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  vcbid_ = 0u;
  ruunerid_ = 0u;
  userid_ = 0u;
  micid_ = 0;
  optype_ = 0;
}

CMDOperateWaitMic::~CMDOperateWaitMic() {
  // @@protoc_insertion_point(destructor:CMDOperateWaitMic)
  SharedDtor();
}

void CMDOperateWaitMic::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMDOperateWaitMic::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDOperateWaitMic::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDOperateWaitMic_descriptor_;
}

const CMDOperateWaitMic& CMDOperateWaitMic::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RoomSvr_2eproto();
  return *default_instance_;
}

CMDOperateWaitMic* CMDOperateWaitMic::default_instance_ = NULL;

CMDOperateWaitMic* CMDOperateWaitMic::New(::google::protobuf::Arena* arena) const {
  CMDOperateWaitMic* n = new CMDOperateWaitMic;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDOperateWaitMic::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDOperateWaitMic)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDOperateWaitMic, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDOperateWaitMic*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(vcbid_, optype_);

#undef ZR_HELPER_
#undef ZR_

}

bool CMDOperateWaitMic::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDOperateWaitMic)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 vcbid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &vcbid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ruunerid;
        break;
      }

      // optional uint32 ruunerid = 2;
      case 2: {
        if (tag == 16) {
         parse_ruunerid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ruunerid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_userid;
        break;
      }

      // optional uint32 userid = 3;
      case 3: {
        if (tag == 24) {
         parse_userid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_micid;
        break;
      }

      // optional int32 micid = 4;
      case 4: {
        if (tag == 32) {
         parse_micid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &micid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_optype;
        break;
      }

      // optional int32 optype = 5;
      case 5: {
        if (tag == 40) {
         parse_optype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &optype_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDOperateWaitMic)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDOperateWaitMic)
  return false;
#undef DO_
}

void CMDOperateWaitMic::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDOperateWaitMic)
  // optional uint32 vcbid = 1;
  if (this->vcbid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->vcbid(), output);
  }

  // optional uint32 ruunerid = 2;
  if (this->ruunerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->ruunerid(), output);
  }

  // optional uint32 userid = 3;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->userid(), output);
  }

  // optional int32 micid = 4;
  if (this->micid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->micid(), output);
  }

  // optional int32 optype = 5;
  if (this->optype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->optype(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDOperateWaitMic)
}

::google::protobuf::uint8* CMDOperateWaitMic::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDOperateWaitMic)
  // optional uint32 vcbid = 1;
  if (this->vcbid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->vcbid(), target);
  }

  // optional uint32 ruunerid = 2;
  if (this->ruunerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->ruunerid(), target);
  }

  // optional uint32 userid = 3;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->userid(), target);
  }

  // optional int32 micid = 4;
  if (this->micid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->micid(), target);
  }

  // optional int32 optype = 5;
  if (this->optype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->optype(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDOperateWaitMic)
  return target;
}

int CMDOperateWaitMic::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDOperateWaitMic)
  int total_size = 0;

  // optional uint32 vcbid = 1;
  if (this->vcbid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->vcbid());
  }

  // optional uint32 ruunerid = 2;
  if (this->ruunerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ruunerid());
  }

  // optional uint32 userid = 3;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userid());
  }

  // optional int32 micid = 4;
  if (this->micid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->micid());
  }

  // optional int32 optype = 5;
  if (this->optype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->optype());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDOperateWaitMic::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDOperateWaitMic)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDOperateWaitMic* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDOperateWaitMic>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDOperateWaitMic)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDOperateWaitMic)
    MergeFrom(*source);
  }
}

void CMDOperateWaitMic::MergeFrom(const CMDOperateWaitMic& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDOperateWaitMic)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.vcbid() != 0) {
    set_vcbid(from.vcbid());
  }
  if (from.ruunerid() != 0) {
    set_ruunerid(from.ruunerid());
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.micid() != 0) {
    set_micid(from.micid());
  }
  if (from.optype() != 0) {
    set_optype(from.optype());
  }
}

void CMDOperateWaitMic::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDOperateWaitMic)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDOperateWaitMic::CopyFrom(const CMDOperateWaitMic& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDOperateWaitMic)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDOperateWaitMic::IsInitialized() const {

  return true;
}

void CMDOperateWaitMic::Swap(CMDOperateWaitMic* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDOperateWaitMic::InternalSwap(CMDOperateWaitMic* other) {
  std::swap(vcbid_, other->vcbid_);
  std::swap(ruunerid_, other->ruunerid_);
  std::swap(userid_, other->userid_);
  std::swap(micid_, other->micid_);
  std::swap(optype_, other->optype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDOperateWaitMic::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDOperateWaitMic_descriptor_;
  metadata.reflection = CMDOperateWaitMic_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDOperateWaitMic

// optional uint32 vcbid = 1;
void CMDOperateWaitMic::clear_vcbid() {
  vcbid_ = 0u;
}
 ::google::protobuf::uint32 CMDOperateWaitMic::vcbid() const {
  // @@protoc_insertion_point(field_get:CMDOperateWaitMic.vcbid)
  return vcbid_;
}
 void CMDOperateWaitMic::set_vcbid(::google::protobuf::uint32 value) {
  
  vcbid_ = value;
  // @@protoc_insertion_point(field_set:CMDOperateWaitMic.vcbid)
}

// optional uint32 ruunerid = 2;
void CMDOperateWaitMic::clear_ruunerid() {
  ruunerid_ = 0u;
}
 ::google::protobuf::uint32 CMDOperateWaitMic::ruunerid() const {
  // @@protoc_insertion_point(field_get:CMDOperateWaitMic.ruunerid)
  return ruunerid_;
}
 void CMDOperateWaitMic::set_ruunerid(::google::protobuf::uint32 value) {
  
  ruunerid_ = value;
  // @@protoc_insertion_point(field_set:CMDOperateWaitMic.ruunerid)
}

// optional uint32 userid = 3;
void CMDOperateWaitMic::clear_userid() {
  userid_ = 0u;
}
 ::google::protobuf::uint32 CMDOperateWaitMic::userid() const {
  // @@protoc_insertion_point(field_get:CMDOperateWaitMic.userid)
  return userid_;
}
 void CMDOperateWaitMic::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDOperateWaitMic.userid)
}

// optional int32 micid = 4;
void CMDOperateWaitMic::clear_micid() {
  micid_ = 0;
}
 ::google::protobuf::int32 CMDOperateWaitMic::micid() const {
  // @@protoc_insertion_point(field_get:CMDOperateWaitMic.micid)
  return micid_;
}
 void CMDOperateWaitMic::set_micid(::google::protobuf::int32 value) {
  
  micid_ = value;
  // @@protoc_insertion_point(field_set:CMDOperateWaitMic.micid)
}

// optional int32 optype = 5;
void CMDOperateWaitMic::clear_optype() {
  optype_ = 0;
}
 ::google::protobuf::int32 CMDOperateWaitMic::optype() const {
  // @@protoc_insertion_point(field_get:CMDOperateWaitMic.optype)
  return optype_;
}
 void CMDOperateWaitMic::set_optype(::google::protobuf::int32 value) {
  
  optype_ = value;
  // @@protoc_insertion_point(field_set:CMDOperateWaitMic.optype)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDChangeWaitMicIndexResp::kVcbidFieldNumber;
const int CMDChangeWaitMicIndexResp::kErrInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDChangeWaitMicIndexResp::CMDChangeWaitMicIndexResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDChangeWaitMicIndexResp)
}

void CMDChangeWaitMicIndexResp::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  errinfo_ = const_cast< ::CMDErrCode*>(&::CMDErrCode::default_instance());
}

CMDChangeWaitMicIndexResp::CMDChangeWaitMicIndexResp(const CMDChangeWaitMicIndexResp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDChangeWaitMicIndexResp)
}

void CMDChangeWaitMicIndexResp::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  vcbid_ = 0u;
  errinfo_ = NULL;
}

CMDChangeWaitMicIndexResp::~CMDChangeWaitMicIndexResp() {
  // @@protoc_insertion_point(destructor:CMDChangeWaitMicIndexResp)
  SharedDtor();
}

void CMDChangeWaitMicIndexResp::SharedDtor() {
  if (this != default_instance_) {
    delete errinfo_;
  }
}

void CMDChangeWaitMicIndexResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDChangeWaitMicIndexResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDChangeWaitMicIndexResp_descriptor_;
}

const CMDChangeWaitMicIndexResp& CMDChangeWaitMicIndexResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RoomSvr_2eproto();
  return *default_instance_;
}

CMDChangeWaitMicIndexResp* CMDChangeWaitMicIndexResp::default_instance_ = NULL;

CMDChangeWaitMicIndexResp* CMDChangeWaitMicIndexResp::New(::google::protobuf::Arena* arena) const {
  CMDChangeWaitMicIndexResp* n = new CMDChangeWaitMicIndexResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDChangeWaitMicIndexResp::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDChangeWaitMicIndexResp)
  vcbid_ = 0u;
  if (GetArenaNoVirtual() == NULL && errinfo_ != NULL) delete errinfo_;
  errinfo_ = NULL;
}

bool CMDChangeWaitMicIndexResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDChangeWaitMicIndexResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 vcbid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &vcbid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_errInfo;
        break;
      }

      // optional .CMDErrCode errInfo = 2;
      case 2: {
        if (tag == 18) {
         parse_errInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_errinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDChangeWaitMicIndexResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDChangeWaitMicIndexResp)
  return false;
#undef DO_
}

void CMDChangeWaitMicIndexResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDChangeWaitMicIndexResp)
  // optional uint32 vcbid = 1;
  if (this->vcbid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->vcbid(), output);
  }

  // optional .CMDErrCode errInfo = 2;
  if (this->has_errinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->errinfo_, output);
  }

  // @@protoc_insertion_point(serialize_end:CMDChangeWaitMicIndexResp)
}

::google::protobuf::uint8* CMDChangeWaitMicIndexResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDChangeWaitMicIndexResp)
  // optional uint32 vcbid = 1;
  if (this->vcbid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->vcbid(), target);
  }

  // optional .CMDErrCode errInfo = 2;
  if (this->has_errinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->errinfo_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDChangeWaitMicIndexResp)
  return target;
}

int CMDChangeWaitMicIndexResp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDChangeWaitMicIndexResp)
  int total_size = 0;

  // optional uint32 vcbid = 1;
  if (this->vcbid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->vcbid());
  }

  // optional .CMDErrCode errInfo = 2;
  if (this->has_errinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->errinfo_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDChangeWaitMicIndexResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDChangeWaitMicIndexResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDChangeWaitMicIndexResp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDChangeWaitMicIndexResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDChangeWaitMicIndexResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDChangeWaitMicIndexResp)
    MergeFrom(*source);
  }
}

void CMDChangeWaitMicIndexResp::MergeFrom(const CMDChangeWaitMicIndexResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDChangeWaitMicIndexResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.vcbid() != 0) {
    set_vcbid(from.vcbid());
  }
  if (from.has_errinfo()) {
    mutable_errinfo()->::CMDErrCode::MergeFrom(from.errinfo());
  }
}

void CMDChangeWaitMicIndexResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDChangeWaitMicIndexResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDChangeWaitMicIndexResp::CopyFrom(const CMDChangeWaitMicIndexResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDChangeWaitMicIndexResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDChangeWaitMicIndexResp::IsInitialized() const {

  return true;
}

void CMDChangeWaitMicIndexResp::Swap(CMDChangeWaitMicIndexResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDChangeWaitMicIndexResp::InternalSwap(CMDChangeWaitMicIndexResp* other) {
  std::swap(vcbid_, other->vcbid_);
  std::swap(errinfo_, other->errinfo_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDChangeWaitMicIndexResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDChangeWaitMicIndexResp_descriptor_;
  metadata.reflection = CMDChangeWaitMicIndexResp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDChangeWaitMicIndexResp

// optional uint32 vcbid = 1;
void CMDChangeWaitMicIndexResp::clear_vcbid() {
  vcbid_ = 0u;
}
 ::google::protobuf::uint32 CMDChangeWaitMicIndexResp::vcbid() const {
  // @@protoc_insertion_point(field_get:CMDChangeWaitMicIndexResp.vcbid)
  return vcbid_;
}
 void CMDChangeWaitMicIndexResp::set_vcbid(::google::protobuf::uint32 value) {
  
  vcbid_ = value;
  // @@protoc_insertion_point(field_set:CMDChangeWaitMicIndexResp.vcbid)
}

// optional .CMDErrCode errInfo = 2;
bool CMDChangeWaitMicIndexResp::has_errinfo() const {
  return !_is_default_instance_ && errinfo_ != NULL;
}
void CMDChangeWaitMicIndexResp::clear_errinfo() {
  if (GetArenaNoVirtual() == NULL && errinfo_ != NULL) delete errinfo_;
  errinfo_ = NULL;
}
const ::CMDErrCode& CMDChangeWaitMicIndexResp::errinfo() const {
  // @@protoc_insertion_point(field_get:CMDChangeWaitMicIndexResp.errInfo)
  return errinfo_ != NULL ? *errinfo_ : *default_instance_->errinfo_;
}
::CMDErrCode* CMDChangeWaitMicIndexResp::mutable_errinfo() {
  
  if (errinfo_ == NULL) {
    errinfo_ = new ::CMDErrCode;
  }
  // @@protoc_insertion_point(field_mutable:CMDChangeWaitMicIndexResp.errInfo)
  return errinfo_;
}
::CMDErrCode* CMDChangeWaitMicIndexResp::release_errinfo() {
  // @@protoc_insertion_point(field_release:CMDChangeWaitMicIndexResp.errInfo)
  
  ::CMDErrCode* temp = errinfo_;
  errinfo_ = NULL;
  return temp;
}
void CMDChangeWaitMicIndexResp::set_allocated_errinfo(::CMDErrCode* errinfo) {
  delete errinfo_;
  errinfo_ = errinfo;
  if (errinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDChangeWaitMicIndexResp.errInfo)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDChangeWaitMicIndexNoty::kVcbidFieldNumber;
const int CMDChangeWaitMicIndexNoty::kRuuneridFieldNumber;
const int CMDChangeWaitMicIndexNoty::kUseridFieldNumber;
const int CMDChangeWaitMicIndexNoty::kMicidFieldNumber;
const int CMDChangeWaitMicIndexNoty::kOptypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDChangeWaitMicIndexNoty::CMDChangeWaitMicIndexNoty()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDChangeWaitMicIndexNoty)
}

void CMDChangeWaitMicIndexNoty::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDChangeWaitMicIndexNoty::CMDChangeWaitMicIndexNoty(const CMDChangeWaitMicIndexNoty& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDChangeWaitMicIndexNoty)
}

void CMDChangeWaitMicIndexNoty::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  vcbid_ = 0u;
  ruunerid_ = 0u;
  userid_ = 0u;
  micid_ = 0;
  optype_ = 0;
}

CMDChangeWaitMicIndexNoty::~CMDChangeWaitMicIndexNoty() {
  // @@protoc_insertion_point(destructor:CMDChangeWaitMicIndexNoty)
  SharedDtor();
}

void CMDChangeWaitMicIndexNoty::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMDChangeWaitMicIndexNoty::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDChangeWaitMicIndexNoty::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDChangeWaitMicIndexNoty_descriptor_;
}

const CMDChangeWaitMicIndexNoty& CMDChangeWaitMicIndexNoty::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RoomSvr_2eproto();
  return *default_instance_;
}

CMDChangeWaitMicIndexNoty* CMDChangeWaitMicIndexNoty::default_instance_ = NULL;

CMDChangeWaitMicIndexNoty* CMDChangeWaitMicIndexNoty::New(::google::protobuf::Arena* arena) const {
  CMDChangeWaitMicIndexNoty* n = new CMDChangeWaitMicIndexNoty;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDChangeWaitMicIndexNoty::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDChangeWaitMicIndexNoty)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDChangeWaitMicIndexNoty, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDChangeWaitMicIndexNoty*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(vcbid_, optype_);

#undef ZR_HELPER_
#undef ZR_

}

bool CMDChangeWaitMicIndexNoty::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDChangeWaitMicIndexNoty)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 vcbid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &vcbid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ruunerid;
        break;
      }

      // optional uint32 ruunerid = 2;
      case 2: {
        if (tag == 16) {
         parse_ruunerid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ruunerid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_userid;
        break;
      }

      // optional uint32 userid = 3;
      case 3: {
        if (tag == 24) {
         parse_userid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_micid;
        break;
      }

      // optional int32 micid = 4;
      case 4: {
        if (tag == 32) {
         parse_micid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &micid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_optype;
        break;
      }

      // optional int32 optype = 5;
      case 5: {
        if (tag == 40) {
         parse_optype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &optype_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDChangeWaitMicIndexNoty)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDChangeWaitMicIndexNoty)
  return false;
#undef DO_
}

void CMDChangeWaitMicIndexNoty::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDChangeWaitMicIndexNoty)
  // optional uint32 vcbid = 1;
  if (this->vcbid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->vcbid(), output);
  }

  // optional uint32 ruunerid = 2;
  if (this->ruunerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->ruunerid(), output);
  }

  // optional uint32 userid = 3;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->userid(), output);
  }

  // optional int32 micid = 4;
  if (this->micid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->micid(), output);
  }

  // optional int32 optype = 5;
  if (this->optype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->optype(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDChangeWaitMicIndexNoty)
}

::google::protobuf::uint8* CMDChangeWaitMicIndexNoty::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDChangeWaitMicIndexNoty)
  // optional uint32 vcbid = 1;
  if (this->vcbid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->vcbid(), target);
  }

  // optional uint32 ruunerid = 2;
  if (this->ruunerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->ruunerid(), target);
  }

  // optional uint32 userid = 3;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->userid(), target);
  }

  // optional int32 micid = 4;
  if (this->micid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->micid(), target);
  }

  // optional int32 optype = 5;
  if (this->optype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->optype(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDChangeWaitMicIndexNoty)
  return target;
}

int CMDChangeWaitMicIndexNoty::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDChangeWaitMicIndexNoty)
  int total_size = 0;

  // optional uint32 vcbid = 1;
  if (this->vcbid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->vcbid());
  }

  // optional uint32 ruunerid = 2;
  if (this->ruunerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ruunerid());
  }

  // optional uint32 userid = 3;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userid());
  }

  // optional int32 micid = 4;
  if (this->micid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->micid());
  }

  // optional int32 optype = 5;
  if (this->optype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->optype());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDChangeWaitMicIndexNoty::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDChangeWaitMicIndexNoty)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDChangeWaitMicIndexNoty* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDChangeWaitMicIndexNoty>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDChangeWaitMicIndexNoty)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDChangeWaitMicIndexNoty)
    MergeFrom(*source);
  }
}

void CMDChangeWaitMicIndexNoty::MergeFrom(const CMDChangeWaitMicIndexNoty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDChangeWaitMicIndexNoty)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.vcbid() != 0) {
    set_vcbid(from.vcbid());
  }
  if (from.ruunerid() != 0) {
    set_ruunerid(from.ruunerid());
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.micid() != 0) {
    set_micid(from.micid());
  }
  if (from.optype() != 0) {
    set_optype(from.optype());
  }
}

void CMDChangeWaitMicIndexNoty::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDChangeWaitMicIndexNoty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDChangeWaitMicIndexNoty::CopyFrom(const CMDChangeWaitMicIndexNoty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDChangeWaitMicIndexNoty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDChangeWaitMicIndexNoty::IsInitialized() const {

  return true;
}

void CMDChangeWaitMicIndexNoty::Swap(CMDChangeWaitMicIndexNoty* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDChangeWaitMicIndexNoty::InternalSwap(CMDChangeWaitMicIndexNoty* other) {
  std::swap(vcbid_, other->vcbid_);
  std::swap(ruunerid_, other->ruunerid_);
  std::swap(userid_, other->userid_);
  std::swap(micid_, other->micid_);
  std::swap(optype_, other->optype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDChangeWaitMicIndexNoty::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDChangeWaitMicIndexNoty_descriptor_;
  metadata.reflection = CMDChangeWaitMicIndexNoty_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDChangeWaitMicIndexNoty

// optional uint32 vcbid = 1;
void CMDChangeWaitMicIndexNoty::clear_vcbid() {
  vcbid_ = 0u;
}
 ::google::protobuf::uint32 CMDChangeWaitMicIndexNoty::vcbid() const {
  // @@protoc_insertion_point(field_get:CMDChangeWaitMicIndexNoty.vcbid)
  return vcbid_;
}
 void CMDChangeWaitMicIndexNoty::set_vcbid(::google::protobuf::uint32 value) {
  
  vcbid_ = value;
  // @@protoc_insertion_point(field_set:CMDChangeWaitMicIndexNoty.vcbid)
}

// optional uint32 ruunerid = 2;
void CMDChangeWaitMicIndexNoty::clear_ruunerid() {
  ruunerid_ = 0u;
}
 ::google::protobuf::uint32 CMDChangeWaitMicIndexNoty::ruunerid() const {
  // @@protoc_insertion_point(field_get:CMDChangeWaitMicIndexNoty.ruunerid)
  return ruunerid_;
}
 void CMDChangeWaitMicIndexNoty::set_ruunerid(::google::protobuf::uint32 value) {
  
  ruunerid_ = value;
  // @@protoc_insertion_point(field_set:CMDChangeWaitMicIndexNoty.ruunerid)
}

// optional uint32 userid = 3;
void CMDChangeWaitMicIndexNoty::clear_userid() {
  userid_ = 0u;
}
 ::google::protobuf::uint32 CMDChangeWaitMicIndexNoty::userid() const {
  // @@protoc_insertion_point(field_get:CMDChangeWaitMicIndexNoty.userid)
  return userid_;
}
 void CMDChangeWaitMicIndexNoty::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDChangeWaitMicIndexNoty.userid)
}

// optional int32 micid = 4;
void CMDChangeWaitMicIndexNoty::clear_micid() {
  micid_ = 0;
}
 ::google::protobuf::int32 CMDChangeWaitMicIndexNoty::micid() const {
  // @@protoc_insertion_point(field_get:CMDChangeWaitMicIndexNoty.micid)
  return micid_;
}
 void CMDChangeWaitMicIndexNoty::set_micid(::google::protobuf::int32 value) {
  
  micid_ = value;
  // @@protoc_insertion_point(field_set:CMDChangeWaitMicIndexNoty.micid)
}

// optional int32 optype = 5;
void CMDChangeWaitMicIndexNoty::clear_optype() {
  optype_ = 0;
}
 ::google::protobuf::int32 CMDChangeWaitMicIndexNoty::optype() const {
  // @@protoc_insertion_point(field_get:CMDChangeWaitMicIndexNoty.optype)
  return optype_;
}
 void CMDChangeWaitMicIndexNoty::set_optype(::google::protobuf::int32 value) {
  
  optype_ = value;
  // @@protoc_insertion_point(field_set:CMDChangeWaitMicIndexNoty.optype)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDRoomMicModSet::kVcbidFieldNumber;
const int CMDRoomMicModSet::kMicstatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDRoomMicModSet::CMDRoomMicModSet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDRoomMicModSet)
}

void CMDRoomMicModSet::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDRoomMicModSet::CMDRoomMicModSet(const CMDRoomMicModSet& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDRoomMicModSet)
}

void CMDRoomMicModSet::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  vcbid_ = 0;
  micstatus_ = 0;
}

CMDRoomMicModSet::~CMDRoomMicModSet() {
  // @@protoc_insertion_point(destructor:CMDRoomMicModSet)
  SharedDtor();
}

void CMDRoomMicModSet::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMDRoomMicModSet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDRoomMicModSet::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDRoomMicModSet_descriptor_;
}

const CMDRoomMicModSet& CMDRoomMicModSet::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RoomSvr_2eproto();
  return *default_instance_;
}

CMDRoomMicModSet* CMDRoomMicModSet::default_instance_ = NULL;

CMDRoomMicModSet* CMDRoomMicModSet::New(::google::protobuf::Arena* arena) const {
  CMDRoomMicModSet* n = new CMDRoomMicModSet;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDRoomMicModSet::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDRoomMicModSet)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDRoomMicModSet, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDRoomMicModSet*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(vcbid_, micstatus_);

#undef ZR_HELPER_
#undef ZR_

}

bool CMDRoomMicModSet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDRoomMicModSet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 vcbid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vcbid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_micstatus;
        break;
      }

      // optional int32 micstatus = 2;
      case 2: {
        if (tag == 16) {
         parse_micstatus:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &micstatus_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDRoomMicModSet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDRoomMicModSet)
  return false;
#undef DO_
}

void CMDRoomMicModSet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDRoomMicModSet)
  // optional int32 vcbid = 1;
  if (this->vcbid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->vcbid(), output);
  }

  // optional int32 micstatus = 2;
  if (this->micstatus() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->micstatus(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDRoomMicModSet)
}

::google::protobuf::uint8* CMDRoomMicModSet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDRoomMicModSet)
  // optional int32 vcbid = 1;
  if (this->vcbid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->vcbid(), target);
  }

  // optional int32 micstatus = 2;
  if (this->micstatus() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->micstatus(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDRoomMicModSet)
  return target;
}

int CMDRoomMicModSet::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDRoomMicModSet)
  int total_size = 0;

  // optional int32 vcbid = 1;
  if (this->vcbid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->vcbid());
  }

  // optional int32 micstatus = 2;
  if (this->micstatus() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->micstatus());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDRoomMicModSet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDRoomMicModSet)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDRoomMicModSet* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDRoomMicModSet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDRoomMicModSet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDRoomMicModSet)
    MergeFrom(*source);
  }
}

void CMDRoomMicModSet::MergeFrom(const CMDRoomMicModSet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDRoomMicModSet)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.vcbid() != 0) {
    set_vcbid(from.vcbid());
  }
  if (from.micstatus() != 0) {
    set_micstatus(from.micstatus());
  }
}

void CMDRoomMicModSet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDRoomMicModSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDRoomMicModSet::CopyFrom(const CMDRoomMicModSet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDRoomMicModSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDRoomMicModSet::IsInitialized() const {

  return true;
}

void CMDRoomMicModSet::Swap(CMDRoomMicModSet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDRoomMicModSet::InternalSwap(CMDRoomMicModSet* other) {
  std::swap(vcbid_, other->vcbid_);
  std::swap(micstatus_, other->micstatus_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDRoomMicModSet::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDRoomMicModSet_descriptor_;
  metadata.reflection = CMDRoomMicModSet_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDRoomMicModSet

// optional int32 vcbid = 1;
void CMDRoomMicModSet::clear_vcbid() {
  vcbid_ = 0;
}
 ::google::protobuf::int32 CMDRoomMicModSet::vcbid() const {
  // @@protoc_insertion_point(field_get:CMDRoomMicModSet.vcbid)
  return vcbid_;
}
 void CMDRoomMicModSet::set_vcbid(::google::protobuf::int32 value) {
  
  vcbid_ = value;
  // @@protoc_insertion_point(field_set:CMDRoomMicModSet.vcbid)
}

// optional int32 micstatus = 2;
void CMDRoomMicModSet::clear_micstatus() {
  micstatus_ = 0;
}
 ::google::protobuf::int32 CMDRoomMicModSet::micstatus() const {
  // @@protoc_insertion_point(field_get:CMDRoomMicModSet.micstatus)
  return micstatus_;
}
 void CMDRoomMicModSet::set_micstatus(::google::protobuf::int32 value) {
  
  micstatus_ = value;
  // @@protoc_insertion_point(field_set:CMDRoomMicModSet.micstatus)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDUserKickoutRoomInfo::kVcbidFieldNumber;
const int CMDUserKickoutRoomInfo::kSrcidFieldNumber;
const int CMDUserKickoutRoomInfo::kToidFieldNumber;
const int CMDUserKickoutRoomInfo::kResonidFieldNumber;
const int CMDUserKickoutRoomInfo::kMinsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDUserKickoutRoomInfo::CMDUserKickoutRoomInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDUserKickoutRoomInfo)
}

void CMDUserKickoutRoomInfo::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDUserKickoutRoomInfo::CMDUserKickoutRoomInfo(const CMDUserKickoutRoomInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDUserKickoutRoomInfo)
}

void CMDUserKickoutRoomInfo::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  vcbid_ = 0u;
  srcid_ = 0u;
  toid_ = 0u;
  resonid_ = 0;
  mins_ = 0;
}

CMDUserKickoutRoomInfo::~CMDUserKickoutRoomInfo() {
  // @@protoc_insertion_point(destructor:CMDUserKickoutRoomInfo)
  SharedDtor();
}

void CMDUserKickoutRoomInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMDUserKickoutRoomInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDUserKickoutRoomInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDUserKickoutRoomInfo_descriptor_;
}

const CMDUserKickoutRoomInfo& CMDUserKickoutRoomInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RoomSvr_2eproto();
  return *default_instance_;
}

CMDUserKickoutRoomInfo* CMDUserKickoutRoomInfo::default_instance_ = NULL;

CMDUserKickoutRoomInfo* CMDUserKickoutRoomInfo::New(::google::protobuf::Arena* arena) const {
  CMDUserKickoutRoomInfo* n = new CMDUserKickoutRoomInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDUserKickoutRoomInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDUserKickoutRoomInfo)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDUserKickoutRoomInfo, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDUserKickoutRoomInfo*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(vcbid_, mins_);

#undef ZR_HELPER_
#undef ZR_

}

bool CMDUserKickoutRoomInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDUserKickoutRoomInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 vcbid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &vcbid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_srcid;
        break;
      }

      // optional uint32 srcid = 2;
      case 2: {
        if (tag == 16) {
         parse_srcid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &srcid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_toid;
        break;
      }

      // optional uint32 toid = 3;
      case 3: {
        if (tag == 24) {
         parse_toid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &toid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_resonid;
        break;
      }

      // optional int32 resonid = 4;
      case 4: {
        if (tag == 32) {
         parse_resonid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &resonid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_mins;
        break;
      }

      // optional int32 mins = 5;
      case 5: {
        if (tag == 40) {
         parse_mins:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mins_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDUserKickoutRoomInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDUserKickoutRoomInfo)
  return false;
#undef DO_
}

void CMDUserKickoutRoomInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDUserKickoutRoomInfo)
  // optional uint32 vcbid = 1;
  if (this->vcbid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->vcbid(), output);
  }

  // optional uint32 srcid = 2;
  if (this->srcid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->srcid(), output);
  }

  // optional uint32 toid = 3;
  if (this->toid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->toid(), output);
  }

  // optional int32 resonid = 4;
  if (this->resonid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->resonid(), output);
  }

  // optional int32 mins = 5;
  if (this->mins() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->mins(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDUserKickoutRoomInfo)
}

::google::protobuf::uint8* CMDUserKickoutRoomInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDUserKickoutRoomInfo)
  // optional uint32 vcbid = 1;
  if (this->vcbid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->vcbid(), target);
  }

  // optional uint32 srcid = 2;
  if (this->srcid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->srcid(), target);
  }

  // optional uint32 toid = 3;
  if (this->toid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->toid(), target);
  }

  // optional int32 resonid = 4;
  if (this->resonid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->resonid(), target);
  }

  // optional int32 mins = 5;
  if (this->mins() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->mins(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDUserKickoutRoomInfo)
  return target;
}

int CMDUserKickoutRoomInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDUserKickoutRoomInfo)
  int total_size = 0;

  // optional uint32 vcbid = 1;
  if (this->vcbid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->vcbid());
  }

  // optional uint32 srcid = 2;
  if (this->srcid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->srcid());
  }

  // optional uint32 toid = 3;
  if (this->toid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->toid());
  }

  // optional int32 resonid = 4;
  if (this->resonid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->resonid());
  }

  // optional int32 mins = 5;
  if (this->mins() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mins());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDUserKickoutRoomInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDUserKickoutRoomInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDUserKickoutRoomInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDUserKickoutRoomInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDUserKickoutRoomInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDUserKickoutRoomInfo)
    MergeFrom(*source);
  }
}

void CMDUserKickoutRoomInfo::MergeFrom(const CMDUserKickoutRoomInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDUserKickoutRoomInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.vcbid() != 0) {
    set_vcbid(from.vcbid());
  }
  if (from.srcid() != 0) {
    set_srcid(from.srcid());
  }
  if (from.toid() != 0) {
    set_toid(from.toid());
  }
  if (from.resonid() != 0) {
    set_resonid(from.resonid());
  }
  if (from.mins() != 0) {
    set_mins(from.mins());
  }
}

void CMDUserKickoutRoomInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDUserKickoutRoomInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDUserKickoutRoomInfo::CopyFrom(const CMDUserKickoutRoomInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDUserKickoutRoomInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDUserKickoutRoomInfo::IsInitialized() const {

  return true;
}

void CMDUserKickoutRoomInfo::Swap(CMDUserKickoutRoomInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDUserKickoutRoomInfo::InternalSwap(CMDUserKickoutRoomInfo* other) {
  std::swap(vcbid_, other->vcbid_);
  std::swap(srcid_, other->srcid_);
  std::swap(toid_, other->toid_);
  std::swap(resonid_, other->resonid_);
  std::swap(mins_, other->mins_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDUserKickoutRoomInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDUserKickoutRoomInfo_descriptor_;
  metadata.reflection = CMDUserKickoutRoomInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDUserKickoutRoomInfo

// optional uint32 vcbid = 1;
void CMDUserKickoutRoomInfo::clear_vcbid() {
  vcbid_ = 0u;
}
 ::google::protobuf::uint32 CMDUserKickoutRoomInfo::vcbid() const {
  // @@protoc_insertion_point(field_get:CMDUserKickoutRoomInfo.vcbid)
  return vcbid_;
}
 void CMDUserKickoutRoomInfo::set_vcbid(::google::protobuf::uint32 value) {
  
  vcbid_ = value;
  // @@protoc_insertion_point(field_set:CMDUserKickoutRoomInfo.vcbid)
}

// optional uint32 srcid = 2;
void CMDUserKickoutRoomInfo::clear_srcid() {
  srcid_ = 0u;
}
 ::google::protobuf::uint32 CMDUserKickoutRoomInfo::srcid() const {
  // @@protoc_insertion_point(field_get:CMDUserKickoutRoomInfo.srcid)
  return srcid_;
}
 void CMDUserKickoutRoomInfo::set_srcid(::google::protobuf::uint32 value) {
  
  srcid_ = value;
  // @@protoc_insertion_point(field_set:CMDUserKickoutRoomInfo.srcid)
}

// optional uint32 toid = 3;
void CMDUserKickoutRoomInfo::clear_toid() {
  toid_ = 0u;
}
 ::google::protobuf::uint32 CMDUserKickoutRoomInfo::toid() const {
  // @@protoc_insertion_point(field_get:CMDUserKickoutRoomInfo.toid)
  return toid_;
}
 void CMDUserKickoutRoomInfo::set_toid(::google::protobuf::uint32 value) {
  
  toid_ = value;
  // @@protoc_insertion_point(field_set:CMDUserKickoutRoomInfo.toid)
}

// optional int32 resonid = 4;
void CMDUserKickoutRoomInfo::clear_resonid() {
  resonid_ = 0;
}
 ::google::protobuf::int32 CMDUserKickoutRoomInfo::resonid() const {
  // @@protoc_insertion_point(field_get:CMDUserKickoutRoomInfo.resonid)
  return resonid_;
}
 void CMDUserKickoutRoomInfo::set_resonid(::google::protobuf::int32 value) {
  
  resonid_ = value;
  // @@protoc_insertion_point(field_set:CMDUserKickoutRoomInfo.resonid)
}

// optional int32 mins = 5;
void CMDUserKickoutRoomInfo::clear_mins() {
  mins_ = 0;
}
 ::google::protobuf::int32 CMDUserKickoutRoomInfo::mins() const {
  // @@protoc_insertion_point(field_get:CMDUserKickoutRoomInfo.mins)
  return mins_;
}
 void CMDUserKickoutRoomInfo::set_mins(::google::protobuf::int32 value) {
  
  mins_ = value;
  // @@protoc_insertion_point(field_set:CMDUserKickoutRoomInfo.mins)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDUserKickoutRoomResp::kErrInfoFieldNumber;
const int CMDUserKickoutRoomResp::kVcbidFieldNumber;
const int CMDUserKickoutRoomResp::kSrcidFieldNumber;
const int CMDUserKickoutRoomResp::kToidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDUserKickoutRoomResp::CMDUserKickoutRoomResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDUserKickoutRoomResp)
}

void CMDUserKickoutRoomResp::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  errinfo_ = const_cast< ::CMDErrCode*>(&::CMDErrCode::default_instance());
}

CMDUserKickoutRoomResp::CMDUserKickoutRoomResp(const CMDUserKickoutRoomResp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDUserKickoutRoomResp)
}

void CMDUserKickoutRoomResp::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  errinfo_ = NULL;
  vcbid_ = 0u;
  srcid_ = 0u;
  toid_ = 0u;
}

CMDUserKickoutRoomResp::~CMDUserKickoutRoomResp() {
  // @@protoc_insertion_point(destructor:CMDUserKickoutRoomResp)
  SharedDtor();
}

void CMDUserKickoutRoomResp::SharedDtor() {
  if (this != default_instance_) {
    delete errinfo_;
  }
}

void CMDUserKickoutRoomResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDUserKickoutRoomResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDUserKickoutRoomResp_descriptor_;
}

const CMDUserKickoutRoomResp& CMDUserKickoutRoomResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RoomSvr_2eproto();
  return *default_instance_;
}

CMDUserKickoutRoomResp* CMDUserKickoutRoomResp::default_instance_ = NULL;

CMDUserKickoutRoomResp* CMDUserKickoutRoomResp::New(::google::protobuf::Arena* arena) const {
  CMDUserKickoutRoomResp* n = new CMDUserKickoutRoomResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDUserKickoutRoomResp::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDUserKickoutRoomResp)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDUserKickoutRoomResp, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDUserKickoutRoomResp*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(vcbid_, toid_);
  if (GetArenaNoVirtual() == NULL && errinfo_ != NULL) delete errinfo_;
  errinfo_ = NULL;

#undef ZR_HELPER_
#undef ZR_

}

bool CMDUserKickoutRoomResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDUserKickoutRoomResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CMDErrCode errInfo = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_errinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_vcbid;
        break;
      }

      // optional uint32 vcbid = 2;
      case 2: {
        if (tag == 16) {
         parse_vcbid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &vcbid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_srcid;
        break;
      }

      // optional uint32 srcid = 3;
      case 3: {
        if (tag == 24) {
         parse_srcid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &srcid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_toid;
        break;
      }

      // optional uint32 toid = 4;
      case 4: {
        if (tag == 32) {
         parse_toid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &toid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDUserKickoutRoomResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDUserKickoutRoomResp)
  return false;
#undef DO_
}

void CMDUserKickoutRoomResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDUserKickoutRoomResp)
  // optional .CMDErrCode errInfo = 1;
  if (this->has_errinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->errinfo_, output);
  }

  // optional uint32 vcbid = 2;
  if (this->vcbid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->vcbid(), output);
  }

  // optional uint32 srcid = 3;
  if (this->srcid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->srcid(), output);
  }

  // optional uint32 toid = 4;
  if (this->toid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->toid(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDUserKickoutRoomResp)
}

::google::protobuf::uint8* CMDUserKickoutRoomResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDUserKickoutRoomResp)
  // optional .CMDErrCode errInfo = 1;
  if (this->has_errinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->errinfo_, false, target);
  }

  // optional uint32 vcbid = 2;
  if (this->vcbid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->vcbid(), target);
  }

  // optional uint32 srcid = 3;
  if (this->srcid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->srcid(), target);
  }

  // optional uint32 toid = 4;
  if (this->toid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->toid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDUserKickoutRoomResp)
  return target;
}

int CMDUserKickoutRoomResp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDUserKickoutRoomResp)
  int total_size = 0;

  // optional .CMDErrCode errInfo = 1;
  if (this->has_errinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->errinfo_);
  }

  // optional uint32 vcbid = 2;
  if (this->vcbid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->vcbid());
  }

  // optional uint32 srcid = 3;
  if (this->srcid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->srcid());
  }

  // optional uint32 toid = 4;
  if (this->toid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->toid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDUserKickoutRoomResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDUserKickoutRoomResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDUserKickoutRoomResp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDUserKickoutRoomResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDUserKickoutRoomResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDUserKickoutRoomResp)
    MergeFrom(*source);
  }
}

void CMDUserKickoutRoomResp::MergeFrom(const CMDUserKickoutRoomResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDUserKickoutRoomResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.has_errinfo()) {
    mutable_errinfo()->::CMDErrCode::MergeFrom(from.errinfo());
  }
  if (from.vcbid() != 0) {
    set_vcbid(from.vcbid());
  }
  if (from.srcid() != 0) {
    set_srcid(from.srcid());
  }
  if (from.toid() != 0) {
    set_toid(from.toid());
  }
}

void CMDUserKickoutRoomResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDUserKickoutRoomResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDUserKickoutRoomResp::CopyFrom(const CMDUserKickoutRoomResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDUserKickoutRoomResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDUserKickoutRoomResp::IsInitialized() const {

  return true;
}

void CMDUserKickoutRoomResp::Swap(CMDUserKickoutRoomResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDUserKickoutRoomResp::InternalSwap(CMDUserKickoutRoomResp* other) {
  std::swap(errinfo_, other->errinfo_);
  std::swap(vcbid_, other->vcbid_);
  std::swap(srcid_, other->srcid_);
  std::swap(toid_, other->toid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDUserKickoutRoomResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDUserKickoutRoomResp_descriptor_;
  metadata.reflection = CMDUserKickoutRoomResp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDUserKickoutRoomResp

// optional .CMDErrCode errInfo = 1;
bool CMDUserKickoutRoomResp::has_errinfo() const {
  return !_is_default_instance_ && errinfo_ != NULL;
}
void CMDUserKickoutRoomResp::clear_errinfo() {
  if (GetArenaNoVirtual() == NULL && errinfo_ != NULL) delete errinfo_;
  errinfo_ = NULL;
}
const ::CMDErrCode& CMDUserKickoutRoomResp::errinfo() const {
  // @@protoc_insertion_point(field_get:CMDUserKickoutRoomResp.errInfo)
  return errinfo_ != NULL ? *errinfo_ : *default_instance_->errinfo_;
}
::CMDErrCode* CMDUserKickoutRoomResp::mutable_errinfo() {
  
  if (errinfo_ == NULL) {
    errinfo_ = new ::CMDErrCode;
  }
  // @@protoc_insertion_point(field_mutable:CMDUserKickoutRoomResp.errInfo)
  return errinfo_;
}
::CMDErrCode* CMDUserKickoutRoomResp::release_errinfo() {
  // @@protoc_insertion_point(field_release:CMDUserKickoutRoomResp.errInfo)
  
  ::CMDErrCode* temp = errinfo_;
  errinfo_ = NULL;
  return temp;
}
void CMDUserKickoutRoomResp::set_allocated_errinfo(::CMDErrCode* errinfo) {
  delete errinfo_;
  errinfo_ = errinfo;
  if (errinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDUserKickoutRoomResp.errInfo)
}

// optional uint32 vcbid = 2;
void CMDUserKickoutRoomResp::clear_vcbid() {
  vcbid_ = 0u;
}
 ::google::protobuf::uint32 CMDUserKickoutRoomResp::vcbid() const {
  // @@protoc_insertion_point(field_get:CMDUserKickoutRoomResp.vcbid)
  return vcbid_;
}
 void CMDUserKickoutRoomResp::set_vcbid(::google::protobuf::uint32 value) {
  
  vcbid_ = value;
  // @@protoc_insertion_point(field_set:CMDUserKickoutRoomResp.vcbid)
}

// optional uint32 srcid = 3;
void CMDUserKickoutRoomResp::clear_srcid() {
  srcid_ = 0u;
}
 ::google::protobuf::uint32 CMDUserKickoutRoomResp::srcid() const {
  // @@protoc_insertion_point(field_get:CMDUserKickoutRoomResp.srcid)
  return srcid_;
}
 void CMDUserKickoutRoomResp::set_srcid(::google::protobuf::uint32 value) {
  
  srcid_ = value;
  // @@protoc_insertion_point(field_set:CMDUserKickoutRoomResp.srcid)
}

// optional uint32 toid = 4;
void CMDUserKickoutRoomResp::clear_toid() {
  toid_ = 0u;
}
 ::google::protobuf::uint32 CMDUserKickoutRoomResp::toid() const {
  // @@protoc_insertion_point(field_get:CMDUserKickoutRoomResp.toid)
  return toid_;
}
 void CMDUserKickoutRoomResp::set_toid(::google::protobuf::uint32 value) {
  
  toid_ = value;
  // @@protoc_insertion_point(field_set:CMDUserKickoutRoomResp.toid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDRoomInfoReq::kVcbidFieldNumber;
const int CMDRoomInfoReq::kRunneridFieldNumber;
const int CMDRoomInfoReq::kRoomnameFieldNumber;
const int CMDRoomInfoReq::kRoomnoticeFieldNumber;
const int CMDRoomInfoReq::kRoomremarkFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDRoomInfoReq::CMDRoomInfoReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDRoomInfoReq)
}

void CMDRoomInfoReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  roomname_ = const_cast< ::CMDString*>(&::CMDString::default_instance());
  roomnotice_ = const_cast< ::CMDString*>(&::CMDString::default_instance());
  roomremark_ = const_cast< ::CMDString*>(&::CMDString::default_instance());
}

CMDRoomInfoReq::CMDRoomInfoReq(const CMDRoomInfoReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDRoomInfoReq)
}

void CMDRoomInfoReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  vcbid_ = 0u;
  runnerid_ = 0u;
  roomname_ = NULL;
  roomnotice_ = NULL;
  roomremark_ = NULL;
}

CMDRoomInfoReq::~CMDRoomInfoReq() {
  // @@protoc_insertion_point(destructor:CMDRoomInfoReq)
  SharedDtor();
}

void CMDRoomInfoReq::SharedDtor() {
  if (this != default_instance_) {
    delete roomname_;
    delete roomnotice_;
    delete roomremark_;
  }
}

void CMDRoomInfoReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDRoomInfoReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDRoomInfoReq_descriptor_;
}

const CMDRoomInfoReq& CMDRoomInfoReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RoomSvr_2eproto();
  return *default_instance_;
}

CMDRoomInfoReq* CMDRoomInfoReq::default_instance_ = NULL;

CMDRoomInfoReq* CMDRoomInfoReq::New(::google::protobuf::Arena* arena) const {
  CMDRoomInfoReq* n = new CMDRoomInfoReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDRoomInfoReq::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDRoomInfoReq)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDRoomInfoReq, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDRoomInfoReq*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(vcbid_, runnerid_);
  if (GetArenaNoVirtual() == NULL && roomname_ != NULL) delete roomname_;
  roomname_ = NULL;
  if (GetArenaNoVirtual() == NULL && roomnotice_ != NULL) delete roomnotice_;
  roomnotice_ = NULL;
  if (GetArenaNoVirtual() == NULL && roomremark_ != NULL) delete roomremark_;
  roomremark_ = NULL;

#undef ZR_HELPER_
#undef ZR_

}

bool CMDRoomInfoReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDRoomInfoReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 vcbid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &vcbid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_runnerid;
        break;
      }

      // optional uint32 runnerid = 2;
      case 2: {
        if (tag == 16) {
         parse_runnerid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &runnerid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_roomname;
        break;
      }

      // optional .CMDString roomname = 3;
      case 3: {
        if (tag == 26) {
         parse_roomname:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_roomname()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_roomnotice;
        break;
      }

      // optional .CMDString roomnotice = 4;
      case 4: {
        if (tag == 34) {
         parse_roomnotice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_roomnotice()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_roomremark;
        break;
      }

      // optional .CMDString roomremark = 5;
      case 5: {
        if (tag == 42) {
         parse_roomremark:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_roomremark()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDRoomInfoReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDRoomInfoReq)
  return false;
#undef DO_
}

void CMDRoomInfoReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDRoomInfoReq)
  // optional uint32 vcbid = 1;
  if (this->vcbid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->vcbid(), output);
  }

  // optional uint32 runnerid = 2;
  if (this->runnerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->runnerid(), output);
  }

  // optional .CMDString roomname = 3;
  if (this->has_roomname()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->roomname_, output);
  }

  // optional .CMDString roomnotice = 4;
  if (this->has_roomnotice()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->roomnotice_, output);
  }

  // optional .CMDString roomremark = 5;
  if (this->has_roomremark()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->roomremark_, output);
  }

  // @@protoc_insertion_point(serialize_end:CMDRoomInfoReq)
}

::google::protobuf::uint8* CMDRoomInfoReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDRoomInfoReq)
  // optional uint32 vcbid = 1;
  if (this->vcbid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->vcbid(), target);
  }

  // optional uint32 runnerid = 2;
  if (this->runnerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->runnerid(), target);
  }

  // optional .CMDString roomname = 3;
  if (this->has_roomname()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->roomname_, false, target);
  }

  // optional .CMDString roomnotice = 4;
  if (this->has_roomnotice()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->roomnotice_, false, target);
  }

  // optional .CMDString roomremark = 5;
  if (this->has_roomremark()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->roomremark_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDRoomInfoReq)
  return target;
}

int CMDRoomInfoReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDRoomInfoReq)
  int total_size = 0;

  // optional uint32 vcbid = 1;
  if (this->vcbid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->vcbid());
  }

  // optional uint32 runnerid = 2;
  if (this->runnerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->runnerid());
  }

  // optional .CMDString roomname = 3;
  if (this->has_roomname()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->roomname_);
  }

  // optional .CMDString roomnotice = 4;
  if (this->has_roomnotice()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->roomnotice_);
  }

  // optional .CMDString roomremark = 5;
  if (this->has_roomremark()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->roomremark_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDRoomInfoReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDRoomInfoReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDRoomInfoReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDRoomInfoReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDRoomInfoReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDRoomInfoReq)
    MergeFrom(*source);
  }
}

void CMDRoomInfoReq::MergeFrom(const CMDRoomInfoReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDRoomInfoReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.vcbid() != 0) {
    set_vcbid(from.vcbid());
  }
  if (from.runnerid() != 0) {
    set_runnerid(from.runnerid());
  }
  if (from.has_roomname()) {
    mutable_roomname()->::CMDString::MergeFrom(from.roomname());
  }
  if (from.has_roomnotice()) {
    mutable_roomnotice()->::CMDString::MergeFrom(from.roomnotice());
  }
  if (from.has_roomremark()) {
    mutable_roomremark()->::CMDString::MergeFrom(from.roomremark());
  }
}

void CMDRoomInfoReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDRoomInfoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDRoomInfoReq::CopyFrom(const CMDRoomInfoReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDRoomInfoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDRoomInfoReq::IsInitialized() const {

  return true;
}

void CMDRoomInfoReq::Swap(CMDRoomInfoReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDRoomInfoReq::InternalSwap(CMDRoomInfoReq* other) {
  std::swap(vcbid_, other->vcbid_);
  std::swap(runnerid_, other->runnerid_);
  std::swap(roomname_, other->roomname_);
  std::swap(roomnotice_, other->roomnotice_);
  std::swap(roomremark_, other->roomremark_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDRoomInfoReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDRoomInfoReq_descriptor_;
  metadata.reflection = CMDRoomInfoReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDRoomInfoReq

// optional uint32 vcbid = 1;
void CMDRoomInfoReq::clear_vcbid() {
  vcbid_ = 0u;
}
 ::google::protobuf::uint32 CMDRoomInfoReq::vcbid() const {
  // @@protoc_insertion_point(field_get:CMDRoomInfoReq.vcbid)
  return vcbid_;
}
 void CMDRoomInfoReq::set_vcbid(::google::protobuf::uint32 value) {
  
  vcbid_ = value;
  // @@protoc_insertion_point(field_set:CMDRoomInfoReq.vcbid)
}

// optional uint32 runnerid = 2;
void CMDRoomInfoReq::clear_runnerid() {
  runnerid_ = 0u;
}
 ::google::protobuf::uint32 CMDRoomInfoReq::runnerid() const {
  // @@protoc_insertion_point(field_get:CMDRoomInfoReq.runnerid)
  return runnerid_;
}
 void CMDRoomInfoReq::set_runnerid(::google::protobuf::uint32 value) {
  
  runnerid_ = value;
  // @@protoc_insertion_point(field_set:CMDRoomInfoReq.runnerid)
}

// optional .CMDString roomname = 3;
bool CMDRoomInfoReq::has_roomname() const {
  return !_is_default_instance_ && roomname_ != NULL;
}
void CMDRoomInfoReq::clear_roomname() {
  if (GetArenaNoVirtual() == NULL && roomname_ != NULL) delete roomname_;
  roomname_ = NULL;
}
const ::CMDString& CMDRoomInfoReq::roomname() const {
  // @@protoc_insertion_point(field_get:CMDRoomInfoReq.roomname)
  return roomname_ != NULL ? *roomname_ : *default_instance_->roomname_;
}
::CMDString* CMDRoomInfoReq::mutable_roomname() {
  
  if (roomname_ == NULL) {
    roomname_ = new ::CMDString;
  }
  // @@protoc_insertion_point(field_mutable:CMDRoomInfoReq.roomname)
  return roomname_;
}
::CMDString* CMDRoomInfoReq::release_roomname() {
  // @@protoc_insertion_point(field_release:CMDRoomInfoReq.roomname)
  
  ::CMDString* temp = roomname_;
  roomname_ = NULL;
  return temp;
}
void CMDRoomInfoReq::set_allocated_roomname(::CMDString* roomname) {
  delete roomname_;
  roomname_ = roomname;
  if (roomname) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDRoomInfoReq.roomname)
}

// optional .CMDString roomnotice = 4;
bool CMDRoomInfoReq::has_roomnotice() const {
  return !_is_default_instance_ && roomnotice_ != NULL;
}
void CMDRoomInfoReq::clear_roomnotice() {
  if (GetArenaNoVirtual() == NULL && roomnotice_ != NULL) delete roomnotice_;
  roomnotice_ = NULL;
}
const ::CMDString& CMDRoomInfoReq::roomnotice() const {
  // @@protoc_insertion_point(field_get:CMDRoomInfoReq.roomnotice)
  return roomnotice_ != NULL ? *roomnotice_ : *default_instance_->roomnotice_;
}
::CMDString* CMDRoomInfoReq::mutable_roomnotice() {
  
  if (roomnotice_ == NULL) {
    roomnotice_ = new ::CMDString;
  }
  // @@protoc_insertion_point(field_mutable:CMDRoomInfoReq.roomnotice)
  return roomnotice_;
}
::CMDString* CMDRoomInfoReq::release_roomnotice() {
  // @@protoc_insertion_point(field_release:CMDRoomInfoReq.roomnotice)
  
  ::CMDString* temp = roomnotice_;
  roomnotice_ = NULL;
  return temp;
}
void CMDRoomInfoReq::set_allocated_roomnotice(::CMDString* roomnotice) {
  delete roomnotice_;
  roomnotice_ = roomnotice;
  if (roomnotice) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDRoomInfoReq.roomnotice)
}

// optional .CMDString roomremark = 5;
bool CMDRoomInfoReq::has_roomremark() const {
  return !_is_default_instance_ && roomremark_ != NULL;
}
void CMDRoomInfoReq::clear_roomremark() {
  if (GetArenaNoVirtual() == NULL && roomremark_ != NULL) delete roomremark_;
  roomremark_ = NULL;
}
const ::CMDString& CMDRoomInfoReq::roomremark() const {
  // @@protoc_insertion_point(field_get:CMDRoomInfoReq.roomremark)
  return roomremark_ != NULL ? *roomremark_ : *default_instance_->roomremark_;
}
::CMDString* CMDRoomInfoReq::mutable_roomremark() {
  
  if (roomremark_ == NULL) {
    roomremark_ = new ::CMDString;
  }
  // @@protoc_insertion_point(field_mutable:CMDRoomInfoReq.roomremark)
  return roomremark_;
}
::CMDString* CMDRoomInfoReq::release_roomremark() {
  // @@protoc_insertion_point(field_release:CMDRoomInfoReq.roomremark)
  
  ::CMDString* temp = roomremark_;
  roomremark_ = NULL;
  return temp;
}
void CMDRoomInfoReq::set_allocated_roomremark(::CMDString* roomremark) {
  delete roomremark_;
  roomremark_ = roomremark;
  if (roomremark) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDRoomInfoReq.roomremark)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDRoomInfoResp::kVcbidFieldNumber;
const int CMDRoomInfoResp::kRunneridFieldNumber;
const int CMDRoomInfoResp::kErrInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDRoomInfoResp::CMDRoomInfoResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDRoomInfoResp)
}

void CMDRoomInfoResp::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  errinfo_ = const_cast< ::CMDErrCode*>(&::CMDErrCode::default_instance());
}

CMDRoomInfoResp::CMDRoomInfoResp(const CMDRoomInfoResp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDRoomInfoResp)
}

void CMDRoomInfoResp::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  vcbid_ = 0u;
  runnerid_ = 0u;
  errinfo_ = NULL;
}

CMDRoomInfoResp::~CMDRoomInfoResp() {
  // @@protoc_insertion_point(destructor:CMDRoomInfoResp)
  SharedDtor();
}

void CMDRoomInfoResp::SharedDtor() {
  if (this != default_instance_) {
    delete errinfo_;
  }
}

void CMDRoomInfoResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDRoomInfoResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDRoomInfoResp_descriptor_;
}

const CMDRoomInfoResp& CMDRoomInfoResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RoomSvr_2eproto();
  return *default_instance_;
}

CMDRoomInfoResp* CMDRoomInfoResp::default_instance_ = NULL;

CMDRoomInfoResp* CMDRoomInfoResp::New(::google::protobuf::Arena* arena) const {
  CMDRoomInfoResp* n = new CMDRoomInfoResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDRoomInfoResp::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDRoomInfoResp)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDRoomInfoResp, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDRoomInfoResp*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(vcbid_, runnerid_);
  if (GetArenaNoVirtual() == NULL && errinfo_ != NULL) delete errinfo_;
  errinfo_ = NULL;

#undef ZR_HELPER_
#undef ZR_

}

bool CMDRoomInfoResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDRoomInfoResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 vcbid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &vcbid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_runnerid;
        break;
      }

      // optional uint32 runnerid = 2;
      case 2: {
        if (tag == 16) {
         parse_runnerid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &runnerid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_errInfo;
        break;
      }

      // optional .CMDErrCode errInfo = 3;
      case 3: {
        if (tag == 26) {
         parse_errInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_errinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDRoomInfoResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDRoomInfoResp)
  return false;
#undef DO_
}

void CMDRoomInfoResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDRoomInfoResp)
  // optional uint32 vcbid = 1;
  if (this->vcbid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->vcbid(), output);
  }

  // optional uint32 runnerid = 2;
  if (this->runnerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->runnerid(), output);
  }

  // optional .CMDErrCode errInfo = 3;
  if (this->has_errinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->errinfo_, output);
  }

  // @@protoc_insertion_point(serialize_end:CMDRoomInfoResp)
}

::google::protobuf::uint8* CMDRoomInfoResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDRoomInfoResp)
  // optional uint32 vcbid = 1;
  if (this->vcbid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->vcbid(), target);
  }

  // optional uint32 runnerid = 2;
  if (this->runnerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->runnerid(), target);
  }

  // optional .CMDErrCode errInfo = 3;
  if (this->has_errinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->errinfo_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDRoomInfoResp)
  return target;
}

int CMDRoomInfoResp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDRoomInfoResp)
  int total_size = 0;

  // optional uint32 vcbid = 1;
  if (this->vcbid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->vcbid());
  }

  // optional uint32 runnerid = 2;
  if (this->runnerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->runnerid());
  }

  // optional .CMDErrCode errInfo = 3;
  if (this->has_errinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->errinfo_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDRoomInfoResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDRoomInfoResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDRoomInfoResp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDRoomInfoResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDRoomInfoResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDRoomInfoResp)
    MergeFrom(*source);
  }
}

void CMDRoomInfoResp::MergeFrom(const CMDRoomInfoResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDRoomInfoResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.vcbid() != 0) {
    set_vcbid(from.vcbid());
  }
  if (from.runnerid() != 0) {
    set_runnerid(from.runnerid());
  }
  if (from.has_errinfo()) {
    mutable_errinfo()->::CMDErrCode::MergeFrom(from.errinfo());
  }
}

void CMDRoomInfoResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDRoomInfoResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDRoomInfoResp::CopyFrom(const CMDRoomInfoResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDRoomInfoResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDRoomInfoResp::IsInitialized() const {

  return true;
}

void CMDRoomInfoResp::Swap(CMDRoomInfoResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDRoomInfoResp::InternalSwap(CMDRoomInfoResp* other) {
  std::swap(vcbid_, other->vcbid_);
  std::swap(runnerid_, other->runnerid_);
  std::swap(errinfo_, other->errinfo_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDRoomInfoResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDRoomInfoResp_descriptor_;
  metadata.reflection = CMDRoomInfoResp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDRoomInfoResp

// optional uint32 vcbid = 1;
void CMDRoomInfoResp::clear_vcbid() {
  vcbid_ = 0u;
}
 ::google::protobuf::uint32 CMDRoomInfoResp::vcbid() const {
  // @@protoc_insertion_point(field_get:CMDRoomInfoResp.vcbid)
  return vcbid_;
}
 void CMDRoomInfoResp::set_vcbid(::google::protobuf::uint32 value) {
  
  vcbid_ = value;
  // @@protoc_insertion_point(field_set:CMDRoomInfoResp.vcbid)
}

// optional uint32 runnerid = 2;
void CMDRoomInfoResp::clear_runnerid() {
  runnerid_ = 0u;
}
 ::google::protobuf::uint32 CMDRoomInfoResp::runnerid() const {
  // @@protoc_insertion_point(field_get:CMDRoomInfoResp.runnerid)
  return runnerid_;
}
 void CMDRoomInfoResp::set_runnerid(::google::protobuf::uint32 value) {
  
  runnerid_ = value;
  // @@protoc_insertion_point(field_set:CMDRoomInfoResp.runnerid)
}

// optional .CMDErrCode errInfo = 3;
bool CMDRoomInfoResp::has_errinfo() const {
  return !_is_default_instance_ && errinfo_ != NULL;
}
void CMDRoomInfoResp::clear_errinfo() {
  if (GetArenaNoVirtual() == NULL && errinfo_ != NULL) delete errinfo_;
  errinfo_ = NULL;
}
const ::CMDErrCode& CMDRoomInfoResp::errinfo() const {
  // @@protoc_insertion_point(field_get:CMDRoomInfoResp.errInfo)
  return errinfo_ != NULL ? *errinfo_ : *default_instance_->errinfo_;
}
::CMDErrCode* CMDRoomInfoResp::mutable_errinfo() {
  
  if (errinfo_ == NULL) {
    errinfo_ = new ::CMDErrCode;
  }
  // @@protoc_insertion_point(field_mutable:CMDRoomInfoResp.errInfo)
  return errinfo_;
}
::CMDErrCode* CMDRoomInfoResp::release_errinfo() {
  // @@protoc_insertion_point(field_release:CMDRoomInfoResp.errInfo)
  
  ::CMDErrCode* temp = errinfo_;
  errinfo_ = NULL;
  return temp;
}
void CMDRoomInfoResp::set_allocated_errinfo(::CMDErrCode* errinfo) {
  delete errinfo_;
  errinfo_ = errinfo;
  if (errinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDRoomInfoResp.errInfo)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDNoticeInfo::kNoticeUserIDFieldNumber;
const int CMDNoticeInfo::kRoomNoticeFieldNumber;
const int CMDNoticeInfo::kNoticeTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDNoticeInfo::CMDNoticeInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDNoticeInfo)
}

void CMDNoticeInfo::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDNoticeInfo::CMDNoticeInfo(const CMDNoticeInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDNoticeInfo)
}

void CMDNoticeInfo::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  noticeuserid_ = 0u;
  roomnotice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  noticetime_ = 0u;
}

CMDNoticeInfo::~CMDNoticeInfo() {
  // @@protoc_insertion_point(destructor:CMDNoticeInfo)
  SharedDtor();
}

void CMDNoticeInfo::SharedDtor() {
  roomnotice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CMDNoticeInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDNoticeInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDNoticeInfo_descriptor_;
}

const CMDNoticeInfo& CMDNoticeInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RoomSvr_2eproto();
  return *default_instance_;
}

CMDNoticeInfo* CMDNoticeInfo::default_instance_ = NULL;

CMDNoticeInfo* CMDNoticeInfo::New(::google::protobuf::Arena* arena) const {
  CMDNoticeInfo* n = new CMDNoticeInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDNoticeInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDNoticeInfo)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDNoticeInfo, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDNoticeInfo*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(noticeuserid_, noticetime_);
  roomnotice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool CMDNoticeInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDNoticeInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 noticeUserID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &noticeuserid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_roomNotice;
        break;
      }

      // optional string roomNotice = 2;
      case 2: {
        if (tag == 18) {
         parse_roomNotice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_roomnotice()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->roomnotice().data(), this->roomnotice().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMDNoticeInfo.roomNotice"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_noticeTime;
        break;
      }

      // optional uint32 noticeTime = 3;
      case 3: {
        if (tag == 24) {
         parse_noticeTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &noticetime_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDNoticeInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDNoticeInfo)
  return false;
#undef DO_
}

void CMDNoticeInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDNoticeInfo)
  // optional uint32 noticeUserID = 1;
  if (this->noticeuserid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->noticeuserid(), output);
  }

  // optional string roomNotice = 2;
  if (this->roomnotice().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->roomnotice().data(), this->roomnotice().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDNoticeInfo.roomNotice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->roomnotice(), output);
  }

  // optional uint32 noticeTime = 3;
  if (this->noticetime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->noticetime(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDNoticeInfo)
}

::google::protobuf::uint8* CMDNoticeInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDNoticeInfo)
  // optional uint32 noticeUserID = 1;
  if (this->noticeuserid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->noticeuserid(), target);
  }

  // optional string roomNotice = 2;
  if (this->roomnotice().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->roomnotice().data(), this->roomnotice().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDNoticeInfo.roomNotice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->roomnotice(), target);
  }

  // optional uint32 noticeTime = 3;
  if (this->noticetime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->noticetime(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDNoticeInfo)
  return target;
}

int CMDNoticeInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDNoticeInfo)
  int total_size = 0;

  // optional uint32 noticeUserID = 1;
  if (this->noticeuserid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->noticeuserid());
  }

  // optional string roomNotice = 2;
  if (this->roomnotice().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->roomnotice());
  }

  // optional uint32 noticeTime = 3;
  if (this->noticetime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->noticetime());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDNoticeInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDNoticeInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDNoticeInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDNoticeInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDNoticeInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDNoticeInfo)
    MergeFrom(*source);
  }
}

void CMDNoticeInfo::MergeFrom(const CMDNoticeInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDNoticeInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.noticeuserid() != 0) {
    set_noticeuserid(from.noticeuserid());
  }
  if (from.roomnotice().size() > 0) {

    roomnotice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.roomnotice_);
  }
  if (from.noticetime() != 0) {
    set_noticetime(from.noticetime());
  }
}

void CMDNoticeInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDNoticeInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDNoticeInfo::CopyFrom(const CMDNoticeInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDNoticeInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDNoticeInfo::IsInitialized() const {

  return true;
}

void CMDNoticeInfo::Swap(CMDNoticeInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDNoticeInfo::InternalSwap(CMDNoticeInfo* other) {
  std::swap(noticeuserid_, other->noticeuserid_);
  roomnotice_.Swap(&other->roomnotice_);
  std::swap(noticetime_, other->noticetime_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDNoticeInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDNoticeInfo_descriptor_;
  metadata.reflection = CMDNoticeInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDNoticeInfo

// optional uint32 noticeUserID = 1;
void CMDNoticeInfo::clear_noticeuserid() {
  noticeuserid_ = 0u;
}
 ::google::protobuf::uint32 CMDNoticeInfo::noticeuserid() const {
  // @@protoc_insertion_point(field_get:CMDNoticeInfo.noticeUserID)
  return noticeuserid_;
}
 void CMDNoticeInfo::set_noticeuserid(::google::protobuf::uint32 value) {
  
  noticeuserid_ = value;
  // @@protoc_insertion_point(field_set:CMDNoticeInfo.noticeUserID)
}

// optional string roomNotice = 2;
void CMDNoticeInfo::clear_roomnotice() {
  roomnotice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CMDNoticeInfo::roomnotice() const {
  // @@protoc_insertion_point(field_get:CMDNoticeInfo.roomNotice)
  return roomnotice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDNoticeInfo::set_roomnotice(const ::std::string& value) {
  
  roomnotice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDNoticeInfo.roomNotice)
}
 void CMDNoticeInfo::set_roomnotice(const char* value) {
  
  roomnotice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDNoticeInfo.roomNotice)
}
 void CMDNoticeInfo::set_roomnotice(const char* value, size_t size) {
  
  roomnotice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDNoticeInfo.roomNotice)
}
 ::std::string* CMDNoticeInfo::mutable_roomnotice() {
  
  // @@protoc_insertion_point(field_mutable:CMDNoticeInfo.roomNotice)
  return roomnotice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMDNoticeInfo::release_roomnotice() {
  // @@protoc_insertion_point(field_release:CMDNoticeInfo.roomNotice)
  
  return roomnotice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDNoticeInfo::set_allocated_roomnotice(::std::string* roomnotice) {
  if (roomnotice != NULL) {
    
  } else {
    
  }
  roomnotice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), roomnotice);
  // @@protoc_insertion_point(field_set_allocated:CMDNoticeInfo.roomNotice)
}

// optional uint32 noticeTime = 3;
void CMDNoticeInfo::clear_noticetime() {
  noticetime_ = 0u;
}
 ::google::protobuf::uint32 CMDNoticeInfo::noticetime() const {
  // @@protoc_insertion_point(field_get:CMDNoticeInfo.noticeTime)
  return noticetime_;
}
 void CMDNoticeInfo::set_noticetime(::google::protobuf::uint32 value) {
  
  noticetime_ = value;
  // @@protoc_insertion_point(field_set:CMDNoticeInfo.noticeTime)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDRoomBaseInfo::kVcbidFieldNumber;
const int CMDRoomBaseInfo::kSeatsFieldNumber;
const int CMDRoomBaseInfo::kCreatoridFieldNumber;
const int CMDRoomBaseInfo::kOpstateFieldNumber;
const int CMDRoomBaseInfo::kRoomnameFieldNumber;
const int CMDRoomBaseInfo::kIconFieldNumber;
const int CMDRoomBaseInfo::kNoticeInfoFieldNumber;
const int CMDRoomBaseInfo::kRoomremarkFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDRoomBaseInfo::CMDRoomBaseInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDRoomBaseInfo)
}

void CMDRoomBaseInfo::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  roomname_ = const_cast< ::CMDString*>(&::CMDString::default_instance());
  icon_ = const_cast< ::CMDString*>(&::CMDString::default_instance());
  noticeinfo_ = const_cast< ::CMDNoticeInfo*>(&::CMDNoticeInfo::default_instance());
  roomremark_ = const_cast< ::CMDString*>(&::CMDString::default_instance());
}

CMDRoomBaseInfo::CMDRoomBaseInfo(const CMDRoomBaseInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDRoomBaseInfo)
}

void CMDRoomBaseInfo::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  vcbid_ = 0u;
  seats_ = 0u;
  creatorid_ = 0u;
  opstate_ = 0u;
  roomname_ = NULL;
  icon_ = NULL;
  noticeinfo_ = NULL;
  roomremark_ = NULL;
}

CMDRoomBaseInfo::~CMDRoomBaseInfo() {
  // @@protoc_insertion_point(destructor:CMDRoomBaseInfo)
  SharedDtor();
}

void CMDRoomBaseInfo::SharedDtor() {
  if (this != default_instance_) {
    delete roomname_;
    delete icon_;
    delete noticeinfo_;
    delete roomremark_;
  }
}

void CMDRoomBaseInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDRoomBaseInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDRoomBaseInfo_descriptor_;
}

const CMDRoomBaseInfo& CMDRoomBaseInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RoomSvr_2eproto();
  return *default_instance_;
}

CMDRoomBaseInfo* CMDRoomBaseInfo::default_instance_ = NULL;

CMDRoomBaseInfo* CMDRoomBaseInfo::New(::google::protobuf::Arena* arena) const {
  CMDRoomBaseInfo* n = new CMDRoomBaseInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDRoomBaseInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDRoomBaseInfo)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDRoomBaseInfo, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDRoomBaseInfo*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(vcbid_, opstate_);
  if (GetArenaNoVirtual() == NULL && roomname_ != NULL) delete roomname_;
  roomname_ = NULL;
  if (GetArenaNoVirtual() == NULL && icon_ != NULL) delete icon_;
  icon_ = NULL;
  if (GetArenaNoVirtual() == NULL && noticeinfo_ != NULL) delete noticeinfo_;
  noticeinfo_ = NULL;
  if (GetArenaNoVirtual() == NULL && roomremark_ != NULL) delete roomremark_;
  roomremark_ = NULL;

#undef ZR_HELPER_
#undef ZR_

}

bool CMDRoomBaseInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDRoomBaseInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 vcbid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &vcbid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_seats;
        break;
      }

      // optional uint32 seats = 2;
      case 2: {
        if (tag == 16) {
         parse_seats:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &seats_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_creatorid;
        break;
      }

      // optional uint32 creatorid = 3;
      case 3: {
        if (tag == 24) {
         parse_creatorid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &creatorid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_opstate;
        break;
      }

      // optional uint32 opstate = 4;
      case 4: {
        if (tag == 32) {
         parse_opstate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &opstate_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_roomname;
        break;
      }

      // optional .CMDString roomname = 5;
      case 5: {
        if (tag == 42) {
         parse_roomname:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_roomname()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_icon;
        break;
      }

      // optional .CMDString icon = 6;
      case 6: {
        if (tag == 50) {
         parse_icon:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_icon()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_noticeInfo;
        break;
      }

      // optional .CMDNoticeInfo noticeInfo = 7;
      case 7: {
        if (tag == 58) {
         parse_noticeInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_noticeinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_roomremark;
        break;
      }

      // optional .CMDString roomremark = 8;
      case 8: {
        if (tag == 66) {
         parse_roomremark:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_roomremark()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDRoomBaseInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDRoomBaseInfo)
  return false;
#undef DO_
}

void CMDRoomBaseInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDRoomBaseInfo)
  // optional uint32 vcbid = 1;
  if (this->vcbid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->vcbid(), output);
  }

  // optional uint32 seats = 2;
  if (this->seats() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->seats(), output);
  }

  // optional uint32 creatorid = 3;
  if (this->creatorid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->creatorid(), output);
  }

  // optional uint32 opstate = 4;
  if (this->opstate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->opstate(), output);
  }

  // optional .CMDString roomname = 5;
  if (this->has_roomname()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->roomname_, output);
  }

  // optional .CMDString icon = 6;
  if (this->has_icon()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->icon_, output);
  }

  // optional .CMDNoticeInfo noticeInfo = 7;
  if (this->has_noticeinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->noticeinfo_, output);
  }

  // optional .CMDString roomremark = 8;
  if (this->has_roomremark()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->roomremark_, output);
  }

  // @@protoc_insertion_point(serialize_end:CMDRoomBaseInfo)
}

::google::protobuf::uint8* CMDRoomBaseInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDRoomBaseInfo)
  // optional uint32 vcbid = 1;
  if (this->vcbid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->vcbid(), target);
  }

  // optional uint32 seats = 2;
  if (this->seats() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->seats(), target);
  }

  // optional uint32 creatorid = 3;
  if (this->creatorid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->creatorid(), target);
  }

  // optional uint32 opstate = 4;
  if (this->opstate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->opstate(), target);
  }

  // optional .CMDString roomname = 5;
  if (this->has_roomname()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->roomname_, false, target);
  }

  // optional .CMDString icon = 6;
  if (this->has_icon()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->icon_, false, target);
  }

  // optional .CMDNoticeInfo noticeInfo = 7;
  if (this->has_noticeinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->noticeinfo_, false, target);
  }

  // optional .CMDString roomremark = 8;
  if (this->has_roomremark()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->roomremark_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDRoomBaseInfo)
  return target;
}

int CMDRoomBaseInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDRoomBaseInfo)
  int total_size = 0;

  // optional uint32 vcbid = 1;
  if (this->vcbid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->vcbid());
  }

  // optional uint32 seats = 2;
  if (this->seats() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->seats());
  }

  // optional uint32 creatorid = 3;
  if (this->creatorid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->creatorid());
  }

  // optional uint32 opstate = 4;
  if (this->opstate() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->opstate());
  }

  // optional .CMDString roomname = 5;
  if (this->has_roomname()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->roomname_);
  }

  // optional .CMDString icon = 6;
  if (this->has_icon()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->icon_);
  }

  // optional .CMDNoticeInfo noticeInfo = 7;
  if (this->has_noticeinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->noticeinfo_);
  }

  // optional .CMDString roomremark = 8;
  if (this->has_roomremark()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->roomremark_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDRoomBaseInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDRoomBaseInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDRoomBaseInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDRoomBaseInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDRoomBaseInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDRoomBaseInfo)
    MergeFrom(*source);
  }
}

void CMDRoomBaseInfo::MergeFrom(const CMDRoomBaseInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDRoomBaseInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.vcbid() != 0) {
    set_vcbid(from.vcbid());
  }
  if (from.seats() != 0) {
    set_seats(from.seats());
  }
  if (from.creatorid() != 0) {
    set_creatorid(from.creatorid());
  }
  if (from.opstate() != 0) {
    set_opstate(from.opstate());
  }
  if (from.has_roomname()) {
    mutable_roomname()->::CMDString::MergeFrom(from.roomname());
  }
  if (from.has_icon()) {
    mutable_icon()->::CMDString::MergeFrom(from.icon());
  }
  if (from.has_noticeinfo()) {
    mutable_noticeinfo()->::CMDNoticeInfo::MergeFrom(from.noticeinfo());
  }
  if (from.has_roomremark()) {
    mutable_roomremark()->::CMDString::MergeFrom(from.roomremark());
  }
}

void CMDRoomBaseInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDRoomBaseInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDRoomBaseInfo::CopyFrom(const CMDRoomBaseInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDRoomBaseInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDRoomBaseInfo::IsInitialized() const {

  return true;
}

void CMDRoomBaseInfo::Swap(CMDRoomBaseInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDRoomBaseInfo::InternalSwap(CMDRoomBaseInfo* other) {
  std::swap(vcbid_, other->vcbid_);
  std::swap(seats_, other->seats_);
  std::swap(creatorid_, other->creatorid_);
  std::swap(opstate_, other->opstate_);
  std::swap(roomname_, other->roomname_);
  std::swap(icon_, other->icon_);
  std::swap(noticeinfo_, other->noticeinfo_);
  std::swap(roomremark_, other->roomremark_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDRoomBaseInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDRoomBaseInfo_descriptor_;
  metadata.reflection = CMDRoomBaseInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDRoomBaseInfo

// optional uint32 vcbid = 1;
void CMDRoomBaseInfo::clear_vcbid() {
  vcbid_ = 0u;
}
 ::google::protobuf::uint32 CMDRoomBaseInfo::vcbid() const {
  // @@protoc_insertion_point(field_get:CMDRoomBaseInfo.vcbid)
  return vcbid_;
}
 void CMDRoomBaseInfo::set_vcbid(::google::protobuf::uint32 value) {
  
  vcbid_ = value;
  // @@protoc_insertion_point(field_set:CMDRoomBaseInfo.vcbid)
}

// optional uint32 seats = 2;
void CMDRoomBaseInfo::clear_seats() {
  seats_ = 0u;
}
 ::google::protobuf::uint32 CMDRoomBaseInfo::seats() const {
  // @@protoc_insertion_point(field_get:CMDRoomBaseInfo.seats)
  return seats_;
}
 void CMDRoomBaseInfo::set_seats(::google::protobuf::uint32 value) {
  
  seats_ = value;
  // @@protoc_insertion_point(field_set:CMDRoomBaseInfo.seats)
}

// optional uint32 creatorid = 3;
void CMDRoomBaseInfo::clear_creatorid() {
  creatorid_ = 0u;
}
 ::google::protobuf::uint32 CMDRoomBaseInfo::creatorid() const {
  // @@protoc_insertion_point(field_get:CMDRoomBaseInfo.creatorid)
  return creatorid_;
}
 void CMDRoomBaseInfo::set_creatorid(::google::protobuf::uint32 value) {
  
  creatorid_ = value;
  // @@protoc_insertion_point(field_set:CMDRoomBaseInfo.creatorid)
}

// optional uint32 opstate = 4;
void CMDRoomBaseInfo::clear_opstate() {
  opstate_ = 0u;
}
 ::google::protobuf::uint32 CMDRoomBaseInfo::opstate() const {
  // @@protoc_insertion_point(field_get:CMDRoomBaseInfo.opstate)
  return opstate_;
}
 void CMDRoomBaseInfo::set_opstate(::google::protobuf::uint32 value) {
  
  opstate_ = value;
  // @@protoc_insertion_point(field_set:CMDRoomBaseInfo.opstate)
}

// optional .CMDString roomname = 5;
bool CMDRoomBaseInfo::has_roomname() const {
  return !_is_default_instance_ && roomname_ != NULL;
}
void CMDRoomBaseInfo::clear_roomname() {
  if (GetArenaNoVirtual() == NULL && roomname_ != NULL) delete roomname_;
  roomname_ = NULL;
}
const ::CMDString& CMDRoomBaseInfo::roomname() const {
  // @@protoc_insertion_point(field_get:CMDRoomBaseInfo.roomname)
  return roomname_ != NULL ? *roomname_ : *default_instance_->roomname_;
}
::CMDString* CMDRoomBaseInfo::mutable_roomname() {
  
  if (roomname_ == NULL) {
    roomname_ = new ::CMDString;
  }
  // @@protoc_insertion_point(field_mutable:CMDRoomBaseInfo.roomname)
  return roomname_;
}
::CMDString* CMDRoomBaseInfo::release_roomname() {
  // @@protoc_insertion_point(field_release:CMDRoomBaseInfo.roomname)
  
  ::CMDString* temp = roomname_;
  roomname_ = NULL;
  return temp;
}
void CMDRoomBaseInfo::set_allocated_roomname(::CMDString* roomname) {
  delete roomname_;
  roomname_ = roomname;
  if (roomname) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDRoomBaseInfo.roomname)
}

// optional .CMDString icon = 6;
bool CMDRoomBaseInfo::has_icon() const {
  return !_is_default_instance_ && icon_ != NULL;
}
void CMDRoomBaseInfo::clear_icon() {
  if (GetArenaNoVirtual() == NULL && icon_ != NULL) delete icon_;
  icon_ = NULL;
}
const ::CMDString& CMDRoomBaseInfo::icon() const {
  // @@protoc_insertion_point(field_get:CMDRoomBaseInfo.icon)
  return icon_ != NULL ? *icon_ : *default_instance_->icon_;
}
::CMDString* CMDRoomBaseInfo::mutable_icon() {
  
  if (icon_ == NULL) {
    icon_ = new ::CMDString;
  }
  // @@protoc_insertion_point(field_mutable:CMDRoomBaseInfo.icon)
  return icon_;
}
::CMDString* CMDRoomBaseInfo::release_icon() {
  // @@protoc_insertion_point(field_release:CMDRoomBaseInfo.icon)
  
  ::CMDString* temp = icon_;
  icon_ = NULL;
  return temp;
}
void CMDRoomBaseInfo::set_allocated_icon(::CMDString* icon) {
  delete icon_;
  icon_ = icon;
  if (icon) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDRoomBaseInfo.icon)
}

// optional .CMDNoticeInfo noticeInfo = 7;
bool CMDRoomBaseInfo::has_noticeinfo() const {
  return !_is_default_instance_ && noticeinfo_ != NULL;
}
void CMDRoomBaseInfo::clear_noticeinfo() {
  if (GetArenaNoVirtual() == NULL && noticeinfo_ != NULL) delete noticeinfo_;
  noticeinfo_ = NULL;
}
const ::CMDNoticeInfo& CMDRoomBaseInfo::noticeinfo() const {
  // @@protoc_insertion_point(field_get:CMDRoomBaseInfo.noticeInfo)
  return noticeinfo_ != NULL ? *noticeinfo_ : *default_instance_->noticeinfo_;
}
::CMDNoticeInfo* CMDRoomBaseInfo::mutable_noticeinfo() {
  
  if (noticeinfo_ == NULL) {
    noticeinfo_ = new ::CMDNoticeInfo;
  }
  // @@protoc_insertion_point(field_mutable:CMDRoomBaseInfo.noticeInfo)
  return noticeinfo_;
}
::CMDNoticeInfo* CMDRoomBaseInfo::release_noticeinfo() {
  // @@protoc_insertion_point(field_release:CMDRoomBaseInfo.noticeInfo)
  
  ::CMDNoticeInfo* temp = noticeinfo_;
  noticeinfo_ = NULL;
  return temp;
}
void CMDRoomBaseInfo::set_allocated_noticeinfo(::CMDNoticeInfo* noticeinfo) {
  delete noticeinfo_;
  noticeinfo_ = noticeinfo;
  if (noticeinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDRoomBaseInfo.noticeInfo)
}

// optional .CMDString roomremark = 8;
bool CMDRoomBaseInfo::has_roomremark() const {
  return !_is_default_instance_ && roomremark_ != NULL;
}
void CMDRoomBaseInfo::clear_roomremark() {
  if (GetArenaNoVirtual() == NULL && roomremark_ != NULL) delete roomremark_;
  roomremark_ = NULL;
}
const ::CMDString& CMDRoomBaseInfo::roomremark() const {
  // @@protoc_insertion_point(field_get:CMDRoomBaseInfo.roomremark)
  return roomremark_ != NULL ? *roomremark_ : *default_instance_->roomremark_;
}
::CMDString* CMDRoomBaseInfo::mutable_roomremark() {
  
  if (roomremark_ == NULL) {
    roomremark_ = new ::CMDString;
  }
  // @@protoc_insertion_point(field_mutable:CMDRoomBaseInfo.roomremark)
  return roomremark_;
}
::CMDString* CMDRoomBaseInfo::release_roomremark() {
  // @@protoc_insertion_point(field_release:CMDRoomBaseInfo.roomremark)
  
  ::CMDString* temp = roomremark_;
  roomremark_ = NULL;
  return temp;
}
void CMDRoomBaseInfo::set_allocated_roomremark(::CMDString* roomremark) {
  delete roomremark_;
  roomremark_ = roomremark;
  if (roomremark) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDRoomBaseInfo.roomremark)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDGroupMemberReq::kUserIDFieldNumber;
const int CMDGroupMemberReq::kGroupIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDGroupMemberReq::CMDGroupMemberReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDGroupMemberReq)
}

void CMDGroupMemberReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDGroupMemberReq::CMDGroupMemberReq(const CMDGroupMemberReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDGroupMemberReq)
}

void CMDGroupMemberReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  userid_ = 0u;
  groupid_ = 0u;
}

CMDGroupMemberReq::~CMDGroupMemberReq() {
  // @@protoc_insertion_point(destructor:CMDGroupMemberReq)
  SharedDtor();
}

void CMDGroupMemberReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMDGroupMemberReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDGroupMemberReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDGroupMemberReq_descriptor_;
}

const CMDGroupMemberReq& CMDGroupMemberReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RoomSvr_2eproto();
  return *default_instance_;
}

CMDGroupMemberReq* CMDGroupMemberReq::default_instance_ = NULL;

CMDGroupMemberReq* CMDGroupMemberReq::New(::google::protobuf::Arena* arena) const {
  CMDGroupMemberReq* n = new CMDGroupMemberReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDGroupMemberReq::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDGroupMemberReq)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDGroupMemberReq, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDGroupMemberReq*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(userid_, groupid_);

#undef ZR_HELPER_
#undef ZR_

}

bool CMDGroupMemberReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDGroupMemberReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 userID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_groupID;
        break;
      }

      // optional uint32 groupID = 2;
      case 2: {
        if (tag == 16) {
         parse_groupID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &groupid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDGroupMemberReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDGroupMemberReq)
  return false;
#undef DO_
}

void CMDGroupMemberReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDGroupMemberReq)
  // optional uint32 userID = 1;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->userid(), output);
  }

  // optional uint32 groupID = 2;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->groupid(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDGroupMemberReq)
}

::google::protobuf::uint8* CMDGroupMemberReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDGroupMemberReq)
  // optional uint32 userID = 1;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->userid(), target);
  }

  // optional uint32 groupID = 2;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->groupid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDGroupMemberReq)
  return target;
}

int CMDGroupMemberReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDGroupMemberReq)
  int total_size = 0;

  // optional uint32 userID = 1;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userid());
  }

  // optional uint32 groupID = 2;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->groupid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDGroupMemberReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDGroupMemberReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDGroupMemberReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDGroupMemberReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDGroupMemberReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDGroupMemberReq)
    MergeFrom(*source);
  }
}

void CMDGroupMemberReq::MergeFrom(const CMDGroupMemberReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDGroupMemberReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
}

void CMDGroupMemberReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDGroupMemberReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDGroupMemberReq::CopyFrom(const CMDGroupMemberReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDGroupMemberReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDGroupMemberReq::IsInitialized() const {

  return true;
}

void CMDGroupMemberReq::Swap(CMDGroupMemberReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDGroupMemberReq::InternalSwap(CMDGroupMemberReq* other) {
  std::swap(userid_, other->userid_);
  std::swap(groupid_, other->groupid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDGroupMemberReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDGroupMemberReq_descriptor_;
  metadata.reflection = CMDGroupMemberReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDGroupMemberReq

// optional uint32 userID = 1;
void CMDGroupMemberReq::clear_userid() {
  userid_ = 0u;
}
 ::google::protobuf::uint32 CMDGroupMemberReq::userid() const {
  // @@protoc_insertion_point(field_get:CMDGroupMemberReq.userID)
  return userid_;
}
 void CMDGroupMemberReq::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDGroupMemberReq.userID)
}

// optional uint32 groupID = 2;
void CMDGroupMemberReq::clear_groupid() {
  groupid_ = 0u;
}
 ::google::protobuf::uint32 CMDGroupMemberReq::groupid() const {
  // @@protoc_insertion_point(field_get:CMDGroupMemberReq.groupID)
  return groupid_;
}
 void CMDGroupMemberReq::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDGroupMemberReq.groupID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDUserGroupInfoReq::kUserIDFieldNumber;
const int CMDUserGroupInfoReq::kGroupIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDUserGroupInfoReq::CMDUserGroupInfoReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDUserGroupInfoReq)
}

void CMDUserGroupInfoReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDUserGroupInfoReq::CMDUserGroupInfoReq(const CMDUserGroupInfoReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDUserGroupInfoReq)
}

void CMDUserGroupInfoReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  userid_ = 0u;
  groupid_ = 0u;
}

CMDUserGroupInfoReq::~CMDUserGroupInfoReq() {
  // @@protoc_insertion_point(destructor:CMDUserGroupInfoReq)
  SharedDtor();
}

void CMDUserGroupInfoReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMDUserGroupInfoReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDUserGroupInfoReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDUserGroupInfoReq_descriptor_;
}

const CMDUserGroupInfoReq& CMDUserGroupInfoReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RoomSvr_2eproto();
  return *default_instance_;
}

CMDUserGroupInfoReq* CMDUserGroupInfoReq::default_instance_ = NULL;

CMDUserGroupInfoReq* CMDUserGroupInfoReq::New(::google::protobuf::Arena* arena) const {
  CMDUserGroupInfoReq* n = new CMDUserGroupInfoReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDUserGroupInfoReq::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDUserGroupInfoReq)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDUserGroupInfoReq, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDUserGroupInfoReq*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(userid_, groupid_);

#undef ZR_HELPER_
#undef ZR_

}

bool CMDUserGroupInfoReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDUserGroupInfoReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 userID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_groupID;
        break;
      }

      // optional uint32 groupID = 2;
      case 2: {
        if (tag == 16) {
         parse_groupID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &groupid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDUserGroupInfoReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDUserGroupInfoReq)
  return false;
#undef DO_
}

void CMDUserGroupInfoReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDUserGroupInfoReq)
  // optional uint32 userID = 1;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->userid(), output);
  }

  // optional uint32 groupID = 2;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->groupid(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDUserGroupInfoReq)
}

::google::protobuf::uint8* CMDUserGroupInfoReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDUserGroupInfoReq)
  // optional uint32 userID = 1;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->userid(), target);
  }

  // optional uint32 groupID = 2;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->groupid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDUserGroupInfoReq)
  return target;
}

int CMDUserGroupInfoReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDUserGroupInfoReq)
  int total_size = 0;

  // optional uint32 userID = 1;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userid());
  }

  // optional uint32 groupID = 2;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->groupid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDUserGroupInfoReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDUserGroupInfoReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDUserGroupInfoReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDUserGroupInfoReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDUserGroupInfoReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDUserGroupInfoReq)
    MergeFrom(*source);
  }
}

void CMDUserGroupInfoReq::MergeFrom(const CMDUserGroupInfoReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDUserGroupInfoReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
}

void CMDUserGroupInfoReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDUserGroupInfoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDUserGroupInfoReq::CopyFrom(const CMDUserGroupInfoReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDUserGroupInfoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDUserGroupInfoReq::IsInitialized() const {

  return true;
}

void CMDUserGroupInfoReq::Swap(CMDUserGroupInfoReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDUserGroupInfoReq::InternalSwap(CMDUserGroupInfoReq* other) {
  std::swap(userid_, other->userid_);
  std::swap(groupid_, other->groupid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDUserGroupInfoReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDUserGroupInfoReq_descriptor_;
  metadata.reflection = CMDUserGroupInfoReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDUserGroupInfoReq

// optional uint32 userID = 1;
void CMDUserGroupInfoReq::clear_userid() {
  userid_ = 0u;
}
 ::google::protobuf::uint32 CMDUserGroupInfoReq::userid() const {
  // @@protoc_insertion_point(field_get:CMDUserGroupInfoReq.userID)
  return userid_;
}
 void CMDUserGroupInfoReq::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDUserGroupInfoReq.userID)
}

// optional uint32 groupID = 2;
void CMDUserGroupInfoReq::clear_groupid() {
  groupid_ = 0u;
}
 ::google::protobuf::uint32 CMDUserGroupInfoReq::groupid() const {
  // @@protoc_insertion_point(field_get:CMDUserGroupInfoReq.groupID)
  return groupid_;
}
 void CMDUserGroupInfoReq::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDUserGroupInfoReq.groupID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDUserGroupInfoResp::kErrInfoFieldNumber;
const int CMDUserGroupInfoResp::kUserInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDUserGroupInfoResp::CMDUserGroupInfoResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDUserGroupInfoResp)
}

void CMDUserGroupInfoResp::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  errinfo_ = const_cast< ::CMDErrCode*>(&::CMDErrCode::default_instance());
  userinfo_ = const_cast< ::CMDRoomUserInfo*>(&::CMDRoomUserInfo::default_instance());
}

CMDUserGroupInfoResp::CMDUserGroupInfoResp(const CMDUserGroupInfoResp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDUserGroupInfoResp)
}

void CMDUserGroupInfoResp::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  errinfo_ = NULL;
  userinfo_ = NULL;
}

CMDUserGroupInfoResp::~CMDUserGroupInfoResp() {
  // @@protoc_insertion_point(destructor:CMDUserGroupInfoResp)
  SharedDtor();
}

void CMDUserGroupInfoResp::SharedDtor() {
  if (this != default_instance_) {
    delete errinfo_;
    delete userinfo_;
  }
}

void CMDUserGroupInfoResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDUserGroupInfoResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDUserGroupInfoResp_descriptor_;
}

const CMDUserGroupInfoResp& CMDUserGroupInfoResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RoomSvr_2eproto();
  return *default_instance_;
}

CMDUserGroupInfoResp* CMDUserGroupInfoResp::default_instance_ = NULL;

CMDUserGroupInfoResp* CMDUserGroupInfoResp::New(::google::protobuf::Arena* arena) const {
  CMDUserGroupInfoResp* n = new CMDUserGroupInfoResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDUserGroupInfoResp::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDUserGroupInfoResp)
  if (GetArenaNoVirtual() == NULL && errinfo_ != NULL) delete errinfo_;
  errinfo_ = NULL;
  if (GetArenaNoVirtual() == NULL && userinfo_ != NULL) delete userinfo_;
  userinfo_ = NULL;
}

bool CMDUserGroupInfoResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDUserGroupInfoResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CMDErrCode errInfo = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_errinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_userInfo;
        break;
      }

      // optional .CMDRoomUserInfo userInfo = 2;
      case 2: {
        if (tag == 18) {
         parse_userInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_userinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDUserGroupInfoResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDUserGroupInfoResp)
  return false;
#undef DO_
}

void CMDUserGroupInfoResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDUserGroupInfoResp)
  // optional .CMDErrCode errInfo = 1;
  if (this->has_errinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->errinfo_, output);
  }

  // optional .CMDRoomUserInfo userInfo = 2;
  if (this->has_userinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->userinfo_, output);
  }

  // @@protoc_insertion_point(serialize_end:CMDUserGroupInfoResp)
}

::google::protobuf::uint8* CMDUserGroupInfoResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDUserGroupInfoResp)
  // optional .CMDErrCode errInfo = 1;
  if (this->has_errinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->errinfo_, false, target);
  }

  // optional .CMDRoomUserInfo userInfo = 2;
  if (this->has_userinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->userinfo_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDUserGroupInfoResp)
  return target;
}

int CMDUserGroupInfoResp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDUserGroupInfoResp)
  int total_size = 0;

  // optional .CMDErrCode errInfo = 1;
  if (this->has_errinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->errinfo_);
  }

  // optional .CMDRoomUserInfo userInfo = 2;
  if (this->has_userinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->userinfo_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDUserGroupInfoResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDUserGroupInfoResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDUserGroupInfoResp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDUserGroupInfoResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDUserGroupInfoResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDUserGroupInfoResp)
    MergeFrom(*source);
  }
}

void CMDUserGroupInfoResp::MergeFrom(const CMDUserGroupInfoResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDUserGroupInfoResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.has_errinfo()) {
    mutable_errinfo()->::CMDErrCode::MergeFrom(from.errinfo());
  }
  if (from.has_userinfo()) {
    mutable_userinfo()->::CMDRoomUserInfo::MergeFrom(from.userinfo());
  }
}

void CMDUserGroupInfoResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDUserGroupInfoResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDUserGroupInfoResp::CopyFrom(const CMDUserGroupInfoResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDUserGroupInfoResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDUserGroupInfoResp::IsInitialized() const {

  return true;
}

void CMDUserGroupInfoResp::Swap(CMDUserGroupInfoResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDUserGroupInfoResp::InternalSwap(CMDUserGroupInfoResp* other) {
  std::swap(errinfo_, other->errinfo_);
  std::swap(userinfo_, other->userinfo_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDUserGroupInfoResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDUserGroupInfoResp_descriptor_;
  metadata.reflection = CMDUserGroupInfoResp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDUserGroupInfoResp

// optional .CMDErrCode errInfo = 1;
bool CMDUserGroupInfoResp::has_errinfo() const {
  return !_is_default_instance_ && errinfo_ != NULL;
}
void CMDUserGroupInfoResp::clear_errinfo() {
  if (GetArenaNoVirtual() == NULL && errinfo_ != NULL) delete errinfo_;
  errinfo_ = NULL;
}
const ::CMDErrCode& CMDUserGroupInfoResp::errinfo() const {
  // @@protoc_insertion_point(field_get:CMDUserGroupInfoResp.errInfo)
  return errinfo_ != NULL ? *errinfo_ : *default_instance_->errinfo_;
}
::CMDErrCode* CMDUserGroupInfoResp::mutable_errinfo() {
  
  if (errinfo_ == NULL) {
    errinfo_ = new ::CMDErrCode;
  }
  // @@protoc_insertion_point(field_mutable:CMDUserGroupInfoResp.errInfo)
  return errinfo_;
}
::CMDErrCode* CMDUserGroupInfoResp::release_errinfo() {
  // @@protoc_insertion_point(field_release:CMDUserGroupInfoResp.errInfo)
  
  ::CMDErrCode* temp = errinfo_;
  errinfo_ = NULL;
  return temp;
}
void CMDUserGroupInfoResp::set_allocated_errinfo(::CMDErrCode* errinfo) {
  delete errinfo_;
  errinfo_ = errinfo;
  if (errinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDUserGroupInfoResp.errInfo)
}

// optional .CMDRoomUserInfo userInfo = 2;
bool CMDUserGroupInfoResp::has_userinfo() const {
  return !_is_default_instance_ && userinfo_ != NULL;
}
void CMDUserGroupInfoResp::clear_userinfo() {
  if (GetArenaNoVirtual() == NULL && userinfo_ != NULL) delete userinfo_;
  userinfo_ = NULL;
}
const ::CMDRoomUserInfo& CMDUserGroupInfoResp::userinfo() const {
  // @@protoc_insertion_point(field_get:CMDUserGroupInfoResp.userInfo)
  return userinfo_ != NULL ? *userinfo_ : *default_instance_->userinfo_;
}
::CMDRoomUserInfo* CMDUserGroupInfoResp::mutable_userinfo() {
  
  if (userinfo_ == NULL) {
    userinfo_ = new ::CMDRoomUserInfo;
  }
  // @@protoc_insertion_point(field_mutable:CMDUserGroupInfoResp.userInfo)
  return userinfo_;
}
::CMDRoomUserInfo* CMDUserGroupInfoResp::release_userinfo() {
  // @@protoc_insertion_point(field_release:CMDUserGroupInfoResp.userInfo)
  
  ::CMDRoomUserInfo* temp = userinfo_;
  userinfo_ = NULL;
  return temp;
}
void CMDUserGroupInfoResp::set_allocated_userinfo(::CMDRoomUserInfo* userinfo) {
  delete userinfo_;
  userinfo_ = userinfo;
  if (userinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDUserGroupInfoResp.userInfo)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDSetGroupMsgMuteReq::kUserIDFieldNumber;
const int CMDSetGroupMsgMuteReq::kGroupIDFieldNumber;
const int CMDSetGroupMsgMuteReq::kMuteSetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDSetGroupMsgMuteReq::CMDSetGroupMsgMuteReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDSetGroupMsgMuteReq)
}

void CMDSetGroupMsgMuteReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDSetGroupMsgMuteReq::CMDSetGroupMsgMuteReq(const CMDSetGroupMsgMuteReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDSetGroupMsgMuteReq)
}

void CMDSetGroupMsgMuteReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  userid_ = 0u;
  groupid_ = 0u;
  muteset_ = 0u;
}

CMDSetGroupMsgMuteReq::~CMDSetGroupMsgMuteReq() {
  // @@protoc_insertion_point(destructor:CMDSetGroupMsgMuteReq)
  SharedDtor();
}

void CMDSetGroupMsgMuteReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMDSetGroupMsgMuteReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDSetGroupMsgMuteReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDSetGroupMsgMuteReq_descriptor_;
}

const CMDSetGroupMsgMuteReq& CMDSetGroupMsgMuteReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RoomSvr_2eproto();
  return *default_instance_;
}

CMDSetGroupMsgMuteReq* CMDSetGroupMsgMuteReq::default_instance_ = NULL;

CMDSetGroupMsgMuteReq* CMDSetGroupMsgMuteReq::New(::google::protobuf::Arena* arena) const {
  CMDSetGroupMsgMuteReq* n = new CMDSetGroupMsgMuteReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDSetGroupMsgMuteReq::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDSetGroupMsgMuteReq)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDSetGroupMsgMuteReq, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDSetGroupMsgMuteReq*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(userid_, muteset_);

#undef ZR_HELPER_
#undef ZR_

}

bool CMDSetGroupMsgMuteReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDSetGroupMsgMuteReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 userID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_groupID;
        break;
      }

      // optional uint32 groupID = 2;
      case 2: {
        if (tag == 16) {
         parse_groupID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &groupid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_muteSet;
        break;
      }

      // optional uint32 muteSet = 3;
      case 3: {
        if (tag == 24) {
         parse_muteSet:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &muteset_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDSetGroupMsgMuteReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDSetGroupMsgMuteReq)
  return false;
#undef DO_
}

void CMDSetGroupMsgMuteReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDSetGroupMsgMuteReq)
  // optional uint32 userID = 1;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->userid(), output);
  }

  // optional uint32 groupID = 2;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->groupid(), output);
  }

  // optional uint32 muteSet = 3;
  if (this->muteset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->muteset(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDSetGroupMsgMuteReq)
}

::google::protobuf::uint8* CMDSetGroupMsgMuteReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDSetGroupMsgMuteReq)
  // optional uint32 userID = 1;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->userid(), target);
  }

  // optional uint32 groupID = 2;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->groupid(), target);
  }

  // optional uint32 muteSet = 3;
  if (this->muteset() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->muteset(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDSetGroupMsgMuteReq)
  return target;
}

int CMDSetGroupMsgMuteReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDSetGroupMsgMuteReq)
  int total_size = 0;

  // optional uint32 userID = 1;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userid());
  }

  // optional uint32 groupID = 2;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->groupid());
  }

  // optional uint32 muteSet = 3;
  if (this->muteset() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->muteset());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDSetGroupMsgMuteReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDSetGroupMsgMuteReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDSetGroupMsgMuteReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDSetGroupMsgMuteReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDSetGroupMsgMuteReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDSetGroupMsgMuteReq)
    MergeFrom(*source);
  }
}

void CMDSetGroupMsgMuteReq::MergeFrom(const CMDSetGroupMsgMuteReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDSetGroupMsgMuteReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
  if (from.muteset() != 0) {
    set_muteset(from.muteset());
  }
}

void CMDSetGroupMsgMuteReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDSetGroupMsgMuteReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDSetGroupMsgMuteReq::CopyFrom(const CMDSetGroupMsgMuteReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDSetGroupMsgMuteReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDSetGroupMsgMuteReq::IsInitialized() const {

  return true;
}

void CMDSetGroupMsgMuteReq::Swap(CMDSetGroupMsgMuteReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDSetGroupMsgMuteReq::InternalSwap(CMDSetGroupMsgMuteReq* other) {
  std::swap(userid_, other->userid_);
  std::swap(groupid_, other->groupid_);
  std::swap(muteset_, other->muteset_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDSetGroupMsgMuteReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDSetGroupMsgMuteReq_descriptor_;
  metadata.reflection = CMDSetGroupMsgMuteReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDSetGroupMsgMuteReq

// optional uint32 userID = 1;
void CMDSetGroupMsgMuteReq::clear_userid() {
  userid_ = 0u;
}
 ::google::protobuf::uint32 CMDSetGroupMsgMuteReq::userid() const {
  // @@protoc_insertion_point(field_get:CMDSetGroupMsgMuteReq.userID)
  return userid_;
}
 void CMDSetGroupMsgMuteReq::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDSetGroupMsgMuteReq.userID)
}

// optional uint32 groupID = 2;
void CMDSetGroupMsgMuteReq::clear_groupid() {
  groupid_ = 0u;
}
 ::google::protobuf::uint32 CMDSetGroupMsgMuteReq::groupid() const {
  // @@protoc_insertion_point(field_get:CMDSetGroupMsgMuteReq.groupID)
  return groupid_;
}
 void CMDSetGroupMsgMuteReq::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDSetGroupMsgMuteReq.groupID)
}

// optional uint32 muteSet = 3;
void CMDSetGroupMsgMuteReq::clear_muteset() {
  muteset_ = 0u;
}
 ::google::protobuf::uint32 CMDSetGroupMsgMuteReq::muteset() const {
  // @@protoc_insertion_point(field_get:CMDSetGroupMsgMuteReq.muteSet)
  return muteset_;
}
 void CMDSetGroupMsgMuteReq::set_muteset(::google::protobuf::uint32 value) {
  
  muteset_ = value;
  // @@protoc_insertion_point(field_set:CMDSetGroupMsgMuteReq.muteSet)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDSetGroupMsgMuteResp::kErrInfoFieldNumber;
const int CMDSetGroupMsgMuteResp::kUserIDFieldNumber;
const int CMDSetGroupMsgMuteResp::kGroupIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDSetGroupMsgMuteResp::CMDSetGroupMsgMuteResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDSetGroupMsgMuteResp)
}

void CMDSetGroupMsgMuteResp::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  errinfo_ = const_cast< ::CMDErrCode*>(&::CMDErrCode::default_instance());
}

CMDSetGroupMsgMuteResp::CMDSetGroupMsgMuteResp(const CMDSetGroupMsgMuteResp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDSetGroupMsgMuteResp)
}

void CMDSetGroupMsgMuteResp::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  errinfo_ = NULL;
  userid_ = 0u;
  groupid_ = 0u;
}

CMDSetGroupMsgMuteResp::~CMDSetGroupMsgMuteResp() {
  // @@protoc_insertion_point(destructor:CMDSetGroupMsgMuteResp)
  SharedDtor();
}

void CMDSetGroupMsgMuteResp::SharedDtor() {
  if (this != default_instance_) {
    delete errinfo_;
  }
}

void CMDSetGroupMsgMuteResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDSetGroupMsgMuteResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDSetGroupMsgMuteResp_descriptor_;
}

const CMDSetGroupMsgMuteResp& CMDSetGroupMsgMuteResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RoomSvr_2eproto();
  return *default_instance_;
}

CMDSetGroupMsgMuteResp* CMDSetGroupMsgMuteResp::default_instance_ = NULL;

CMDSetGroupMsgMuteResp* CMDSetGroupMsgMuteResp::New(::google::protobuf::Arena* arena) const {
  CMDSetGroupMsgMuteResp* n = new CMDSetGroupMsgMuteResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDSetGroupMsgMuteResp::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDSetGroupMsgMuteResp)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDSetGroupMsgMuteResp, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDSetGroupMsgMuteResp*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(userid_, groupid_);
  if (GetArenaNoVirtual() == NULL && errinfo_ != NULL) delete errinfo_;
  errinfo_ = NULL;

#undef ZR_HELPER_
#undef ZR_

}

bool CMDSetGroupMsgMuteResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDSetGroupMsgMuteResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CMDErrCode errInfo = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_errinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_userID;
        break;
      }

      // optional uint32 userID = 2;
      case 2: {
        if (tag == 16) {
         parse_userID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_groupID;
        break;
      }

      // optional uint32 groupID = 3;
      case 3: {
        if (tag == 24) {
         parse_groupID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &groupid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDSetGroupMsgMuteResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDSetGroupMsgMuteResp)
  return false;
#undef DO_
}

void CMDSetGroupMsgMuteResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDSetGroupMsgMuteResp)
  // optional .CMDErrCode errInfo = 1;
  if (this->has_errinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->errinfo_, output);
  }

  // optional uint32 userID = 2;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->userid(), output);
  }

  // optional uint32 groupID = 3;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->groupid(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDSetGroupMsgMuteResp)
}

::google::protobuf::uint8* CMDSetGroupMsgMuteResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDSetGroupMsgMuteResp)
  // optional .CMDErrCode errInfo = 1;
  if (this->has_errinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->errinfo_, false, target);
  }

  // optional uint32 userID = 2;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->userid(), target);
  }

  // optional uint32 groupID = 3;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->groupid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDSetGroupMsgMuteResp)
  return target;
}

int CMDSetGroupMsgMuteResp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDSetGroupMsgMuteResp)
  int total_size = 0;

  // optional .CMDErrCode errInfo = 1;
  if (this->has_errinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->errinfo_);
  }

  // optional uint32 userID = 2;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userid());
  }

  // optional uint32 groupID = 3;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->groupid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDSetGroupMsgMuteResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDSetGroupMsgMuteResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDSetGroupMsgMuteResp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDSetGroupMsgMuteResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDSetGroupMsgMuteResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDSetGroupMsgMuteResp)
    MergeFrom(*source);
  }
}

void CMDSetGroupMsgMuteResp::MergeFrom(const CMDSetGroupMsgMuteResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDSetGroupMsgMuteResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.has_errinfo()) {
    mutable_errinfo()->::CMDErrCode::MergeFrom(from.errinfo());
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
}

void CMDSetGroupMsgMuteResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDSetGroupMsgMuteResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDSetGroupMsgMuteResp::CopyFrom(const CMDSetGroupMsgMuteResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDSetGroupMsgMuteResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDSetGroupMsgMuteResp::IsInitialized() const {

  return true;
}

void CMDSetGroupMsgMuteResp::Swap(CMDSetGroupMsgMuteResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDSetGroupMsgMuteResp::InternalSwap(CMDSetGroupMsgMuteResp* other) {
  std::swap(errinfo_, other->errinfo_);
  std::swap(userid_, other->userid_);
  std::swap(groupid_, other->groupid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDSetGroupMsgMuteResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDSetGroupMsgMuteResp_descriptor_;
  metadata.reflection = CMDSetGroupMsgMuteResp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDSetGroupMsgMuteResp

// optional .CMDErrCode errInfo = 1;
bool CMDSetGroupMsgMuteResp::has_errinfo() const {
  return !_is_default_instance_ && errinfo_ != NULL;
}
void CMDSetGroupMsgMuteResp::clear_errinfo() {
  if (GetArenaNoVirtual() == NULL && errinfo_ != NULL) delete errinfo_;
  errinfo_ = NULL;
}
const ::CMDErrCode& CMDSetGroupMsgMuteResp::errinfo() const {
  // @@protoc_insertion_point(field_get:CMDSetGroupMsgMuteResp.errInfo)
  return errinfo_ != NULL ? *errinfo_ : *default_instance_->errinfo_;
}
::CMDErrCode* CMDSetGroupMsgMuteResp::mutable_errinfo() {
  
  if (errinfo_ == NULL) {
    errinfo_ = new ::CMDErrCode;
  }
  // @@protoc_insertion_point(field_mutable:CMDSetGroupMsgMuteResp.errInfo)
  return errinfo_;
}
::CMDErrCode* CMDSetGroupMsgMuteResp::release_errinfo() {
  // @@protoc_insertion_point(field_release:CMDSetGroupMsgMuteResp.errInfo)
  
  ::CMDErrCode* temp = errinfo_;
  errinfo_ = NULL;
  return temp;
}
void CMDSetGroupMsgMuteResp::set_allocated_errinfo(::CMDErrCode* errinfo) {
  delete errinfo_;
  errinfo_ = errinfo;
  if (errinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDSetGroupMsgMuteResp.errInfo)
}

// optional uint32 userID = 2;
void CMDSetGroupMsgMuteResp::clear_userid() {
  userid_ = 0u;
}
 ::google::protobuf::uint32 CMDSetGroupMsgMuteResp::userid() const {
  // @@protoc_insertion_point(field_get:CMDSetGroupMsgMuteResp.userID)
  return userid_;
}
 void CMDSetGroupMsgMuteResp::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDSetGroupMsgMuteResp.userID)
}

// optional uint32 groupID = 3;
void CMDSetGroupMsgMuteResp::clear_groupid() {
  groupid_ = 0u;
}
 ::google::protobuf::uint32 CMDSetGroupMsgMuteResp::groupid() const {
  // @@protoc_insertion_point(field_get:CMDSetGroupMsgMuteResp.groupID)
  return groupid_;
}
 void CMDSetGroupMsgMuteResp::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDSetGroupMsgMuteResp.groupID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDQuitGroupReq::kUserIDFieldNumber;
const int CMDQuitGroupReq::kGroupIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDQuitGroupReq::CMDQuitGroupReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDQuitGroupReq)
}

void CMDQuitGroupReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDQuitGroupReq::CMDQuitGroupReq(const CMDQuitGroupReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDQuitGroupReq)
}

void CMDQuitGroupReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  userid_ = 0u;
  groupid_ = 0u;
}

CMDQuitGroupReq::~CMDQuitGroupReq() {
  // @@protoc_insertion_point(destructor:CMDQuitGroupReq)
  SharedDtor();
}

void CMDQuitGroupReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMDQuitGroupReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDQuitGroupReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDQuitGroupReq_descriptor_;
}

const CMDQuitGroupReq& CMDQuitGroupReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RoomSvr_2eproto();
  return *default_instance_;
}

CMDQuitGroupReq* CMDQuitGroupReq::default_instance_ = NULL;

CMDQuitGroupReq* CMDQuitGroupReq::New(::google::protobuf::Arena* arena) const {
  CMDQuitGroupReq* n = new CMDQuitGroupReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDQuitGroupReq::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDQuitGroupReq)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDQuitGroupReq, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDQuitGroupReq*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(userid_, groupid_);

#undef ZR_HELPER_
#undef ZR_

}

bool CMDQuitGroupReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDQuitGroupReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 userID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_groupID;
        break;
      }

      // optional uint32 groupID = 2;
      case 2: {
        if (tag == 16) {
         parse_groupID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &groupid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDQuitGroupReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDQuitGroupReq)
  return false;
#undef DO_
}

void CMDQuitGroupReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDQuitGroupReq)
  // optional uint32 userID = 1;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->userid(), output);
  }

  // optional uint32 groupID = 2;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->groupid(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDQuitGroupReq)
}

::google::protobuf::uint8* CMDQuitGroupReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDQuitGroupReq)
  // optional uint32 userID = 1;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->userid(), target);
  }

  // optional uint32 groupID = 2;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->groupid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDQuitGroupReq)
  return target;
}

int CMDQuitGroupReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDQuitGroupReq)
  int total_size = 0;

  // optional uint32 userID = 1;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userid());
  }

  // optional uint32 groupID = 2;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->groupid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDQuitGroupReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDQuitGroupReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDQuitGroupReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDQuitGroupReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDQuitGroupReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDQuitGroupReq)
    MergeFrom(*source);
  }
}

void CMDQuitGroupReq::MergeFrom(const CMDQuitGroupReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDQuitGroupReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
}

void CMDQuitGroupReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDQuitGroupReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDQuitGroupReq::CopyFrom(const CMDQuitGroupReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDQuitGroupReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDQuitGroupReq::IsInitialized() const {

  return true;
}

void CMDQuitGroupReq::Swap(CMDQuitGroupReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDQuitGroupReq::InternalSwap(CMDQuitGroupReq* other) {
  std::swap(userid_, other->userid_);
  std::swap(groupid_, other->groupid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDQuitGroupReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDQuitGroupReq_descriptor_;
  metadata.reflection = CMDQuitGroupReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDQuitGroupReq

// optional uint32 userID = 1;
void CMDQuitGroupReq::clear_userid() {
  userid_ = 0u;
}
 ::google::protobuf::uint32 CMDQuitGroupReq::userid() const {
  // @@protoc_insertion_point(field_get:CMDQuitGroupReq.userID)
  return userid_;
}
 void CMDQuitGroupReq::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDQuitGroupReq.userID)
}

// optional uint32 groupID = 2;
void CMDQuitGroupReq::clear_groupid() {
  groupid_ = 0u;
}
 ::google::protobuf::uint32 CMDQuitGroupReq::groupid() const {
  // @@protoc_insertion_point(field_get:CMDQuitGroupReq.groupID)
  return groupid_;
}
 void CMDQuitGroupReq::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDQuitGroupReq.groupID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDQuitGroupResp::kErrInfoFieldNumber;
const int CMDQuitGroupResp::kUserIDFieldNumber;
const int CMDQuitGroupResp::kGroupIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDQuitGroupResp::CMDQuitGroupResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDQuitGroupResp)
}

void CMDQuitGroupResp::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  errinfo_ = const_cast< ::CMDErrCode*>(&::CMDErrCode::default_instance());
}

CMDQuitGroupResp::CMDQuitGroupResp(const CMDQuitGroupResp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDQuitGroupResp)
}

void CMDQuitGroupResp::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  errinfo_ = NULL;
  userid_ = 0u;
  groupid_ = 0u;
}

CMDQuitGroupResp::~CMDQuitGroupResp() {
  // @@protoc_insertion_point(destructor:CMDQuitGroupResp)
  SharedDtor();
}

void CMDQuitGroupResp::SharedDtor() {
  if (this != default_instance_) {
    delete errinfo_;
  }
}

void CMDQuitGroupResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDQuitGroupResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDQuitGroupResp_descriptor_;
}

const CMDQuitGroupResp& CMDQuitGroupResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RoomSvr_2eproto();
  return *default_instance_;
}

CMDQuitGroupResp* CMDQuitGroupResp::default_instance_ = NULL;

CMDQuitGroupResp* CMDQuitGroupResp::New(::google::protobuf::Arena* arena) const {
  CMDQuitGroupResp* n = new CMDQuitGroupResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDQuitGroupResp::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDQuitGroupResp)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDQuitGroupResp, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDQuitGroupResp*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(userid_, groupid_);
  if (GetArenaNoVirtual() == NULL && errinfo_ != NULL) delete errinfo_;
  errinfo_ = NULL;

#undef ZR_HELPER_
#undef ZR_

}

bool CMDQuitGroupResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDQuitGroupResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CMDErrCode errInfo = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_errinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_userID;
        break;
      }

      // optional uint32 userID = 2;
      case 2: {
        if (tag == 16) {
         parse_userID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_groupID;
        break;
      }

      // optional uint32 groupID = 3;
      case 3: {
        if (tag == 24) {
         parse_groupID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &groupid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDQuitGroupResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDQuitGroupResp)
  return false;
#undef DO_
}

void CMDQuitGroupResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDQuitGroupResp)
  // optional .CMDErrCode errInfo = 1;
  if (this->has_errinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->errinfo_, output);
  }

  // optional uint32 userID = 2;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->userid(), output);
  }

  // optional uint32 groupID = 3;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->groupid(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDQuitGroupResp)
}

::google::protobuf::uint8* CMDQuitGroupResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDQuitGroupResp)
  // optional .CMDErrCode errInfo = 1;
  if (this->has_errinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->errinfo_, false, target);
  }

  // optional uint32 userID = 2;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->userid(), target);
  }

  // optional uint32 groupID = 3;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->groupid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDQuitGroupResp)
  return target;
}

int CMDQuitGroupResp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDQuitGroupResp)
  int total_size = 0;

  // optional .CMDErrCode errInfo = 1;
  if (this->has_errinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->errinfo_);
  }

  // optional uint32 userID = 2;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userid());
  }

  // optional uint32 groupID = 3;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->groupid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDQuitGroupResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDQuitGroupResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDQuitGroupResp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDQuitGroupResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDQuitGroupResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDQuitGroupResp)
    MergeFrom(*source);
  }
}

void CMDQuitGroupResp::MergeFrom(const CMDQuitGroupResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDQuitGroupResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.has_errinfo()) {
    mutable_errinfo()->::CMDErrCode::MergeFrom(from.errinfo());
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
}

void CMDQuitGroupResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDQuitGroupResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDQuitGroupResp::CopyFrom(const CMDQuitGroupResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDQuitGroupResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDQuitGroupResp::IsInitialized() const {

  return true;
}

void CMDQuitGroupResp::Swap(CMDQuitGroupResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDQuitGroupResp::InternalSwap(CMDQuitGroupResp* other) {
  std::swap(errinfo_, other->errinfo_);
  std::swap(userid_, other->userid_);
  std::swap(groupid_, other->groupid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDQuitGroupResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDQuitGroupResp_descriptor_;
  metadata.reflection = CMDQuitGroupResp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDQuitGroupResp

// optional .CMDErrCode errInfo = 1;
bool CMDQuitGroupResp::has_errinfo() const {
  return !_is_default_instance_ && errinfo_ != NULL;
}
void CMDQuitGroupResp::clear_errinfo() {
  if (GetArenaNoVirtual() == NULL && errinfo_ != NULL) delete errinfo_;
  errinfo_ = NULL;
}
const ::CMDErrCode& CMDQuitGroupResp::errinfo() const {
  // @@protoc_insertion_point(field_get:CMDQuitGroupResp.errInfo)
  return errinfo_ != NULL ? *errinfo_ : *default_instance_->errinfo_;
}
::CMDErrCode* CMDQuitGroupResp::mutable_errinfo() {
  
  if (errinfo_ == NULL) {
    errinfo_ = new ::CMDErrCode;
  }
  // @@protoc_insertion_point(field_mutable:CMDQuitGroupResp.errInfo)
  return errinfo_;
}
::CMDErrCode* CMDQuitGroupResp::release_errinfo() {
  // @@protoc_insertion_point(field_release:CMDQuitGroupResp.errInfo)
  
  ::CMDErrCode* temp = errinfo_;
  errinfo_ = NULL;
  return temp;
}
void CMDQuitGroupResp::set_allocated_errinfo(::CMDErrCode* errinfo) {
  delete errinfo_;
  errinfo_ = errinfo;
  if (errinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDQuitGroupResp.errInfo)
}

// optional uint32 userID = 2;
void CMDQuitGroupResp::clear_userid() {
  userid_ = 0u;
}
 ::google::protobuf::uint32 CMDQuitGroupResp::userid() const {
  // @@protoc_insertion_point(field_get:CMDQuitGroupResp.userID)
  return userid_;
}
 void CMDQuitGroupResp::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDQuitGroupResp.userID)
}

// optional uint32 groupID = 3;
void CMDQuitGroupResp::clear_groupid() {
  groupid_ = 0u;
}
 ::google::protobuf::uint32 CMDQuitGroupResp::groupid() const {
  // @@protoc_insertion_point(field_get:CMDQuitGroupResp.groupID)
  return groupid_;
}
 void CMDQuitGroupResp::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDQuitGroupResp.groupID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDSetUserPriorityReq::kRunUserIDFieldNumber;
const int CMDSetUserPriorityReq::kToUserIDFieldNumber;
const int CMDSetUserPriorityReq::kGroupIDFieldNumber;
const int CMDSetUserPriorityReq::kRoleTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDSetUserPriorityReq::CMDSetUserPriorityReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDSetUserPriorityReq)
}

void CMDSetUserPriorityReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDSetUserPriorityReq::CMDSetUserPriorityReq(const CMDSetUserPriorityReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDSetUserPriorityReq)
}

void CMDSetUserPriorityReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  run_userid_ = 0u;
  to_userid_ = 0u;
  groupid_ = 0u;
  roletype_ = 0u;
}

CMDSetUserPriorityReq::~CMDSetUserPriorityReq() {
  // @@protoc_insertion_point(destructor:CMDSetUserPriorityReq)
  SharedDtor();
}

void CMDSetUserPriorityReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMDSetUserPriorityReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDSetUserPriorityReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDSetUserPriorityReq_descriptor_;
}

const CMDSetUserPriorityReq& CMDSetUserPriorityReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RoomSvr_2eproto();
  return *default_instance_;
}

CMDSetUserPriorityReq* CMDSetUserPriorityReq::default_instance_ = NULL;

CMDSetUserPriorityReq* CMDSetUserPriorityReq::New(::google::protobuf::Arena* arena) const {
  CMDSetUserPriorityReq* n = new CMDSetUserPriorityReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDSetUserPriorityReq::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDSetUserPriorityReq)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDSetUserPriorityReq, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDSetUserPriorityReq*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(run_userid_, roletype_);

#undef ZR_HELPER_
#undef ZR_

}

bool CMDSetUserPriorityReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDSetUserPriorityReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 run_userID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &run_userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_to_userID;
        break;
      }

      // optional uint32 to_userID = 2;
      case 2: {
        if (tag == 16) {
         parse_to_userID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &to_userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_groupID;
        break;
      }

      // optional uint32 groupID = 3;
      case 3: {
        if (tag == 24) {
         parse_groupID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &groupid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_roleType;
        break;
      }

      // optional uint32 roleType = 4;
      case 4: {
        if (tag == 32) {
         parse_roleType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &roletype_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDSetUserPriorityReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDSetUserPriorityReq)
  return false;
#undef DO_
}

void CMDSetUserPriorityReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDSetUserPriorityReq)
  // optional uint32 run_userID = 1;
  if (this->run_userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->run_userid(), output);
  }

  // optional uint32 to_userID = 2;
  if (this->to_userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->to_userid(), output);
  }

  // optional uint32 groupID = 3;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->groupid(), output);
  }

  // optional uint32 roleType = 4;
  if (this->roletype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->roletype(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDSetUserPriorityReq)
}

::google::protobuf::uint8* CMDSetUserPriorityReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDSetUserPriorityReq)
  // optional uint32 run_userID = 1;
  if (this->run_userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->run_userid(), target);
  }

  // optional uint32 to_userID = 2;
  if (this->to_userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->to_userid(), target);
  }

  // optional uint32 groupID = 3;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->groupid(), target);
  }

  // optional uint32 roleType = 4;
  if (this->roletype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->roletype(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDSetUserPriorityReq)
  return target;
}

int CMDSetUserPriorityReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDSetUserPriorityReq)
  int total_size = 0;

  // optional uint32 run_userID = 1;
  if (this->run_userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->run_userid());
  }

  // optional uint32 to_userID = 2;
  if (this->to_userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->to_userid());
  }

  // optional uint32 groupID = 3;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->groupid());
  }

  // optional uint32 roleType = 4;
  if (this->roletype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->roletype());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDSetUserPriorityReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDSetUserPriorityReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDSetUserPriorityReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDSetUserPriorityReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDSetUserPriorityReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDSetUserPriorityReq)
    MergeFrom(*source);
  }
}

void CMDSetUserPriorityReq::MergeFrom(const CMDSetUserPriorityReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDSetUserPriorityReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.run_userid() != 0) {
    set_run_userid(from.run_userid());
  }
  if (from.to_userid() != 0) {
    set_to_userid(from.to_userid());
  }
  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
  if (from.roletype() != 0) {
    set_roletype(from.roletype());
  }
}

void CMDSetUserPriorityReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDSetUserPriorityReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDSetUserPriorityReq::CopyFrom(const CMDSetUserPriorityReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDSetUserPriorityReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDSetUserPriorityReq::IsInitialized() const {

  return true;
}

void CMDSetUserPriorityReq::Swap(CMDSetUserPriorityReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDSetUserPriorityReq::InternalSwap(CMDSetUserPriorityReq* other) {
  std::swap(run_userid_, other->run_userid_);
  std::swap(to_userid_, other->to_userid_);
  std::swap(groupid_, other->groupid_);
  std::swap(roletype_, other->roletype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDSetUserPriorityReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDSetUserPriorityReq_descriptor_;
  metadata.reflection = CMDSetUserPriorityReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDSetUserPriorityReq

// optional uint32 run_userID = 1;
void CMDSetUserPriorityReq::clear_run_userid() {
  run_userid_ = 0u;
}
 ::google::protobuf::uint32 CMDSetUserPriorityReq::run_userid() const {
  // @@protoc_insertion_point(field_get:CMDSetUserPriorityReq.run_userID)
  return run_userid_;
}
 void CMDSetUserPriorityReq::set_run_userid(::google::protobuf::uint32 value) {
  
  run_userid_ = value;
  // @@protoc_insertion_point(field_set:CMDSetUserPriorityReq.run_userID)
}

// optional uint32 to_userID = 2;
void CMDSetUserPriorityReq::clear_to_userid() {
  to_userid_ = 0u;
}
 ::google::protobuf::uint32 CMDSetUserPriorityReq::to_userid() const {
  // @@protoc_insertion_point(field_get:CMDSetUserPriorityReq.to_userID)
  return to_userid_;
}
 void CMDSetUserPriorityReq::set_to_userid(::google::protobuf::uint32 value) {
  
  to_userid_ = value;
  // @@protoc_insertion_point(field_set:CMDSetUserPriorityReq.to_userID)
}

// optional uint32 groupID = 3;
void CMDSetUserPriorityReq::clear_groupid() {
  groupid_ = 0u;
}
 ::google::protobuf::uint32 CMDSetUserPriorityReq::groupid() const {
  // @@protoc_insertion_point(field_get:CMDSetUserPriorityReq.groupID)
  return groupid_;
}
 void CMDSetUserPriorityReq::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDSetUserPriorityReq.groupID)
}

// optional uint32 roleType = 4;
void CMDSetUserPriorityReq::clear_roletype() {
  roletype_ = 0u;
}
 ::google::protobuf::uint32 CMDSetUserPriorityReq::roletype() const {
  // @@protoc_insertion_point(field_get:CMDSetUserPriorityReq.roleType)
  return roletype_;
}
 void CMDSetUserPriorityReq::set_roletype(::google::protobuf::uint32 value) {
  
  roletype_ = value;
  // @@protoc_insertion_point(field_set:CMDSetUserPriorityReq.roleType)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDSetUserPriorityResp::kErrInfoFieldNumber;
const int CMDSetUserPriorityResp::kRunUserIDFieldNumber;
const int CMDSetUserPriorityResp::kToUserIDFieldNumber;
const int CMDSetUserPriorityResp::kGroupIDFieldNumber;
const int CMDSetUserPriorityResp::kRoleTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDSetUserPriorityResp::CMDSetUserPriorityResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDSetUserPriorityResp)
}

void CMDSetUserPriorityResp::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  errinfo_ = const_cast< ::CMDErrCode*>(&::CMDErrCode::default_instance());
}

CMDSetUserPriorityResp::CMDSetUserPriorityResp(const CMDSetUserPriorityResp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDSetUserPriorityResp)
}

void CMDSetUserPriorityResp::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  errinfo_ = NULL;
  run_userid_ = 0u;
  to_userid_ = 0u;
  groupid_ = 0u;
  roletype_ = 0u;
}

CMDSetUserPriorityResp::~CMDSetUserPriorityResp() {
  // @@protoc_insertion_point(destructor:CMDSetUserPriorityResp)
  SharedDtor();
}

void CMDSetUserPriorityResp::SharedDtor() {
  if (this != default_instance_) {
    delete errinfo_;
  }
}

void CMDSetUserPriorityResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDSetUserPriorityResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDSetUserPriorityResp_descriptor_;
}

const CMDSetUserPriorityResp& CMDSetUserPriorityResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RoomSvr_2eproto();
  return *default_instance_;
}

CMDSetUserPriorityResp* CMDSetUserPriorityResp::default_instance_ = NULL;

CMDSetUserPriorityResp* CMDSetUserPriorityResp::New(::google::protobuf::Arena* arena) const {
  CMDSetUserPriorityResp* n = new CMDSetUserPriorityResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDSetUserPriorityResp::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDSetUserPriorityResp)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDSetUserPriorityResp, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDSetUserPriorityResp*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(run_userid_, roletype_);
  if (GetArenaNoVirtual() == NULL && errinfo_ != NULL) delete errinfo_;
  errinfo_ = NULL;

#undef ZR_HELPER_
#undef ZR_

}

bool CMDSetUserPriorityResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDSetUserPriorityResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CMDErrCode errInfo = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_errinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_run_userID;
        break;
      }

      // optional uint32 run_userID = 2;
      case 2: {
        if (tag == 16) {
         parse_run_userID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &run_userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_to_userID;
        break;
      }

      // optional uint32 to_userID = 3;
      case 3: {
        if (tag == 24) {
         parse_to_userID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &to_userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_groupID;
        break;
      }

      // optional uint32 groupID = 4;
      case 4: {
        if (tag == 32) {
         parse_groupID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &groupid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_roleType;
        break;
      }

      // optional uint32 roleType = 5;
      case 5: {
        if (tag == 40) {
         parse_roleType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &roletype_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDSetUserPriorityResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDSetUserPriorityResp)
  return false;
#undef DO_
}

void CMDSetUserPriorityResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDSetUserPriorityResp)
  // optional .CMDErrCode errInfo = 1;
  if (this->has_errinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->errinfo_, output);
  }

  // optional uint32 run_userID = 2;
  if (this->run_userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->run_userid(), output);
  }

  // optional uint32 to_userID = 3;
  if (this->to_userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->to_userid(), output);
  }

  // optional uint32 groupID = 4;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->groupid(), output);
  }

  // optional uint32 roleType = 5;
  if (this->roletype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->roletype(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDSetUserPriorityResp)
}

::google::protobuf::uint8* CMDSetUserPriorityResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDSetUserPriorityResp)
  // optional .CMDErrCode errInfo = 1;
  if (this->has_errinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->errinfo_, false, target);
  }

  // optional uint32 run_userID = 2;
  if (this->run_userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->run_userid(), target);
  }

  // optional uint32 to_userID = 3;
  if (this->to_userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->to_userid(), target);
  }

  // optional uint32 groupID = 4;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->groupid(), target);
  }

  // optional uint32 roleType = 5;
  if (this->roletype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->roletype(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDSetUserPriorityResp)
  return target;
}

int CMDSetUserPriorityResp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDSetUserPriorityResp)
  int total_size = 0;

  // optional .CMDErrCode errInfo = 1;
  if (this->has_errinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->errinfo_);
  }

  // optional uint32 run_userID = 2;
  if (this->run_userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->run_userid());
  }

  // optional uint32 to_userID = 3;
  if (this->to_userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->to_userid());
  }

  // optional uint32 groupID = 4;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->groupid());
  }

  // optional uint32 roleType = 5;
  if (this->roletype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->roletype());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDSetUserPriorityResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDSetUserPriorityResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDSetUserPriorityResp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDSetUserPriorityResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDSetUserPriorityResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDSetUserPriorityResp)
    MergeFrom(*source);
  }
}

void CMDSetUserPriorityResp::MergeFrom(const CMDSetUserPriorityResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDSetUserPriorityResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.has_errinfo()) {
    mutable_errinfo()->::CMDErrCode::MergeFrom(from.errinfo());
  }
  if (from.run_userid() != 0) {
    set_run_userid(from.run_userid());
  }
  if (from.to_userid() != 0) {
    set_to_userid(from.to_userid());
  }
  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
  if (from.roletype() != 0) {
    set_roletype(from.roletype());
  }
}

void CMDSetUserPriorityResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDSetUserPriorityResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDSetUserPriorityResp::CopyFrom(const CMDSetUserPriorityResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDSetUserPriorityResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDSetUserPriorityResp::IsInitialized() const {

  return true;
}

void CMDSetUserPriorityResp::Swap(CMDSetUserPriorityResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDSetUserPriorityResp::InternalSwap(CMDSetUserPriorityResp* other) {
  std::swap(errinfo_, other->errinfo_);
  std::swap(run_userid_, other->run_userid_);
  std::swap(to_userid_, other->to_userid_);
  std::swap(groupid_, other->groupid_);
  std::swap(roletype_, other->roletype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDSetUserPriorityResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDSetUserPriorityResp_descriptor_;
  metadata.reflection = CMDSetUserPriorityResp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDSetUserPriorityResp

// optional .CMDErrCode errInfo = 1;
bool CMDSetUserPriorityResp::has_errinfo() const {
  return !_is_default_instance_ && errinfo_ != NULL;
}
void CMDSetUserPriorityResp::clear_errinfo() {
  if (GetArenaNoVirtual() == NULL && errinfo_ != NULL) delete errinfo_;
  errinfo_ = NULL;
}
const ::CMDErrCode& CMDSetUserPriorityResp::errinfo() const {
  // @@protoc_insertion_point(field_get:CMDSetUserPriorityResp.errInfo)
  return errinfo_ != NULL ? *errinfo_ : *default_instance_->errinfo_;
}
::CMDErrCode* CMDSetUserPriorityResp::mutable_errinfo() {
  
  if (errinfo_ == NULL) {
    errinfo_ = new ::CMDErrCode;
  }
  // @@protoc_insertion_point(field_mutable:CMDSetUserPriorityResp.errInfo)
  return errinfo_;
}
::CMDErrCode* CMDSetUserPriorityResp::release_errinfo() {
  // @@protoc_insertion_point(field_release:CMDSetUserPriorityResp.errInfo)
  
  ::CMDErrCode* temp = errinfo_;
  errinfo_ = NULL;
  return temp;
}
void CMDSetUserPriorityResp::set_allocated_errinfo(::CMDErrCode* errinfo) {
  delete errinfo_;
  errinfo_ = errinfo;
  if (errinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDSetUserPriorityResp.errInfo)
}

// optional uint32 run_userID = 2;
void CMDSetUserPriorityResp::clear_run_userid() {
  run_userid_ = 0u;
}
 ::google::protobuf::uint32 CMDSetUserPriorityResp::run_userid() const {
  // @@protoc_insertion_point(field_get:CMDSetUserPriorityResp.run_userID)
  return run_userid_;
}
 void CMDSetUserPriorityResp::set_run_userid(::google::protobuf::uint32 value) {
  
  run_userid_ = value;
  // @@protoc_insertion_point(field_set:CMDSetUserPriorityResp.run_userID)
}

// optional uint32 to_userID = 3;
void CMDSetUserPriorityResp::clear_to_userid() {
  to_userid_ = 0u;
}
 ::google::protobuf::uint32 CMDSetUserPriorityResp::to_userid() const {
  // @@protoc_insertion_point(field_get:CMDSetUserPriorityResp.to_userID)
  return to_userid_;
}
 void CMDSetUserPriorityResp::set_to_userid(::google::protobuf::uint32 value) {
  
  to_userid_ = value;
  // @@protoc_insertion_point(field_set:CMDSetUserPriorityResp.to_userID)
}

// optional uint32 groupID = 4;
void CMDSetUserPriorityResp::clear_groupid() {
  groupid_ = 0u;
}
 ::google::protobuf::uint32 CMDSetUserPriorityResp::groupid() const {
  // @@protoc_insertion_point(field_get:CMDSetUserPriorityResp.groupID)
  return groupid_;
}
 void CMDSetUserPriorityResp::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDSetUserPriorityResp.groupID)
}

// optional uint32 roleType = 5;
void CMDSetUserPriorityResp::clear_roletype() {
  roletype_ = 0u;
}
 ::google::protobuf::uint32 CMDSetUserPriorityResp::roletype() const {
  // @@protoc_insertion_point(field_get:CMDSetUserPriorityResp.roleType)
  return roletype_;
}
 void CMDSetUserPriorityResp::set_roletype(::google::protobuf::uint32 value) {
  
  roletype_ = value;
  // @@protoc_insertion_point(field_set:CMDSetUserPriorityResp.roleType)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDSetUserPriorityNoty::kRunUserIDFieldNumber;
const int CMDSetUserPriorityNoty::kToUserIDFieldNumber;
const int CMDSetUserPriorityNoty::kGroupIDFieldNumber;
const int CMDSetUserPriorityNoty::kRoleTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDSetUserPriorityNoty::CMDSetUserPriorityNoty()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDSetUserPriorityNoty)
}

void CMDSetUserPriorityNoty::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDSetUserPriorityNoty::CMDSetUserPriorityNoty(const CMDSetUserPriorityNoty& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDSetUserPriorityNoty)
}

void CMDSetUserPriorityNoty::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  run_userid_ = 0u;
  to_userid_ = 0u;
  groupid_ = 0u;
  roletype_ = 0u;
}

CMDSetUserPriorityNoty::~CMDSetUserPriorityNoty() {
  // @@protoc_insertion_point(destructor:CMDSetUserPriorityNoty)
  SharedDtor();
}

void CMDSetUserPriorityNoty::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMDSetUserPriorityNoty::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDSetUserPriorityNoty::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDSetUserPriorityNoty_descriptor_;
}

const CMDSetUserPriorityNoty& CMDSetUserPriorityNoty::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RoomSvr_2eproto();
  return *default_instance_;
}

CMDSetUserPriorityNoty* CMDSetUserPriorityNoty::default_instance_ = NULL;

CMDSetUserPriorityNoty* CMDSetUserPriorityNoty::New(::google::protobuf::Arena* arena) const {
  CMDSetUserPriorityNoty* n = new CMDSetUserPriorityNoty;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDSetUserPriorityNoty::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDSetUserPriorityNoty)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDSetUserPriorityNoty, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDSetUserPriorityNoty*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(run_userid_, roletype_);

#undef ZR_HELPER_
#undef ZR_

}

bool CMDSetUserPriorityNoty::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDSetUserPriorityNoty)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 run_userID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &run_userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_to_userID;
        break;
      }

      // optional uint32 to_userID = 2;
      case 2: {
        if (tag == 16) {
         parse_to_userID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &to_userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_groupID;
        break;
      }

      // optional uint32 groupID = 3;
      case 3: {
        if (tag == 24) {
         parse_groupID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &groupid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_roleType;
        break;
      }

      // optional uint32 roleType = 4;
      case 4: {
        if (tag == 32) {
         parse_roleType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &roletype_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDSetUserPriorityNoty)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDSetUserPriorityNoty)
  return false;
#undef DO_
}

void CMDSetUserPriorityNoty::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDSetUserPriorityNoty)
  // optional uint32 run_userID = 1;
  if (this->run_userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->run_userid(), output);
  }

  // optional uint32 to_userID = 2;
  if (this->to_userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->to_userid(), output);
  }

  // optional uint32 groupID = 3;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->groupid(), output);
  }

  // optional uint32 roleType = 4;
  if (this->roletype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->roletype(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDSetUserPriorityNoty)
}

::google::protobuf::uint8* CMDSetUserPriorityNoty::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDSetUserPriorityNoty)
  // optional uint32 run_userID = 1;
  if (this->run_userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->run_userid(), target);
  }

  // optional uint32 to_userID = 2;
  if (this->to_userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->to_userid(), target);
  }

  // optional uint32 groupID = 3;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->groupid(), target);
  }

  // optional uint32 roleType = 4;
  if (this->roletype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->roletype(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDSetUserPriorityNoty)
  return target;
}

int CMDSetUserPriorityNoty::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDSetUserPriorityNoty)
  int total_size = 0;

  // optional uint32 run_userID = 1;
  if (this->run_userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->run_userid());
  }

  // optional uint32 to_userID = 2;
  if (this->to_userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->to_userid());
  }

  // optional uint32 groupID = 3;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->groupid());
  }

  // optional uint32 roleType = 4;
  if (this->roletype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->roletype());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDSetUserPriorityNoty::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDSetUserPriorityNoty)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDSetUserPriorityNoty* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDSetUserPriorityNoty>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDSetUserPriorityNoty)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDSetUserPriorityNoty)
    MergeFrom(*source);
  }
}

void CMDSetUserPriorityNoty::MergeFrom(const CMDSetUserPriorityNoty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDSetUserPriorityNoty)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.run_userid() != 0) {
    set_run_userid(from.run_userid());
  }
  if (from.to_userid() != 0) {
    set_to_userid(from.to_userid());
  }
  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
  if (from.roletype() != 0) {
    set_roletype(from.roletype());
  }
}

void CMDSetUserPriorityNoty::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDSetUserPriorityNoty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDSetUserPriorityNoty::CopyFrom(const CMDSetUserPriorityNoty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDSetUserPriorityNoty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDSetUserPriorityNoty::IsInitialized() const {

  return true;
}

void CMDSetUserPriorityNoty::Swap(CMDSetUserPriorityNoty* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDSetUserPriorityNoty::InternalSwap(CMDSetUserPriorityNoty* other) {
  std::swap(run_userid_, other->run_userid_);
  std::swap(to_userid_, other->to_userid_);
  std::swap(groupid_, other->groupid_);
  std::swap(roletype_, other->roletype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDSetUserPriorityNoty::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDSetUserPriorityNoty_descriptor_;
  metadata.reflection = CMDSetUserPriorityNoty_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDSetUserPriorityNoty

// optional uint32 run_userID = 1;
void CMDSetUserPriorityNoty::clear_run_userid() {
  run_userid_ = 0u;
}
 ::google::protobuf::uint32 CMDSetUserPriorityNoty::run_userid() const {
  // @@protoc_insertion_point(field_get:CMDSetUserPriorityNoty.run_userID)
  return run_userid_;
}
 void CMDSetUserPriorityNoty::set_run_userid(::google::protobuf::uint32 value) {
  
  run_userid_ = value;
  // @@protoc_insertion_point(field_set:CMDSetUserPriorityNoty.run_userID)
}

// optional uint32 to_userID = 2;
void CMDSetUserPriorityNoty::clear_to_userid() {
  to_userid_ = 0u;
}
 ::google::protobuf::uint32 CMDSetUserPriorityNoty::to_userid() const {
  // @@protoc_insertion_point(field_get:CMDSetUserPriorityNoty.to_userID)
  return to_userid_;
}
 void CMDSetUserPriorityNoty::set_to_userid(::google::protobuf::uint32 value) {
  
  to_userid_ = value;
  // @@protoc_insertion_point(field_set:CMDSetUserPriorityNoty.to_userID)
}

// optional uint32 groupID = 3;
void CMDSetUserPriorityNoty::clear_groupid() {
  groupid_ = 0u;
}
 ::google::protobuf::uint32 CMDSetUserPriorityNoty::groupid() const {
  // @@protoc_insertion_point(field_get:CMDSetUserPriorityNoty.groupID)
  return groupid_;
}
 void CMDSetUserPriorityNoty::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDSetUserPriorityNoty.groupID)
}

// optional uint32 roleType = 4;
void CMDSetUserPriorityNoty::clear_roletype() {
  roletype_ = 0u;
}
 ::google::protobuf::uint32 CMDSetUserPriorityNoty::roletype() const {
  // @@protoc_insertion_point(field_get:CMDSetUserPriorityNoty.roleType)
  return roletype_;
}
 void CMDSetUserPriorityNoty::set_roletype(::google::protobuf::uint32 value) {
  
  roletype_ = value;
  // @@protoc_insertion_point(field_set:CMDSetUserPriorityNoty.roleType)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDQryGroupVisitCountReq::kGroupIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDQryGroupVisitCountReq::CMDQryGroupVisitCountReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDQryGroupVisitCountReq)
}

void CMDQryGroupVisitCountReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDQryGroupVisitCountReq::CMDQryGroupVisitCountReq(const CMDQryGroupVisitCountReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDQryGroupVisitCountReq)
}

void CMDQryGroupVisitCountReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  groupid_ = 0u;
}

CMDQryGroupVisitCountReq::~CMDQryGroupVisitCountReq() {
  // @@protoc_insertion_point(destructor:CMDQryGroupVisitCountReq)
  SharedDtor();
}

void CMDQryGroupVisitCountReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMDQryGroupVisitCountReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDQryGroupVisitCountReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDQryGroupVisitCountReq_descriptor_;
}

const CMDQryGroupVisitCountReq& CMDQryGroupVisitCountReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RoomSvr_2eproto();
  return *default_instance_;
}

CMDQryGroupVisitCountReq* CMDQryGroupVisitCountReq::default_instance_ = NULL;

CMDQryGroupVisitCountReq* CMDQryGroupVisitCountReq::New(::google::protobuf::Arena* arena) const {
  CMDQryGroupVisitCountReq* n = new CMDQryGroupVisitCountReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDQryGroupVisitCountReq::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDQryGroupVisitCountReq)
  groupid_ = 0u;
}

bool CMDQryGroupVisitCountReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDQryGroupVisitCountReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 groupID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &groupid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDQryGroupVisitCountReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDQryGroupVisitCountReq)
  return false;
#undef DO_
}

void CMDQryGroupVisitCountReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDQryGroupVisitCountReq)
  // optional uint32 groupID = 1;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->groupid(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDQryGroupVisitCountReq)
}

::google::protobuf::uint8* CMDQryGroupVisitCountReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDQryGroupVisitCountReq)
  // optional uint32 groupID = 1;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->groupid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDQryGroupVisitCountReq)
  return target;
}

int CMDQryGroupVisitCountReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDQryGroupVisitCountReq)
  int total_size = 0;

  // optional uint32 groupID = 1;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->groupid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDQryGroupVisitCountReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDQryGroupVisitCountReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDQryGroupVisitCountReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDQryGroupVisitCountReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDQryGroupVisitCountReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDQryGroupVisitCountReq)
    MergeFrom(*source);
  }
}

void CMDQryGroupVisitCountReq::MergeFrom(const CMDQryGroupVisitCountReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDQryGroupVisitCountReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
}

void CMDQryGroupVisitCountReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDQryGroupVisitCountReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDQryGroupVisitCountReq::CopyFrom(const CMDQryGroupVisitCountReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDQryGroupVisitCountReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDQryGroupVisitCountReq::IsInitialized() const {

  return true;
}

void CMDQryGroupVisitCountReq::Swap(CMDQryGroupVisitCountReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDQryGroupVisitCountReq::InternalSwap(CMDQryGroupVisitCountReq* other) {
  std::swap(groupid_, other->groupid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDQryGroupVisitCountReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDQryGroupVisitCountReq_descriptor_;
  metadata.reflection = CMDQryGroupVisitCountReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDQryGroupVisitCountReq

// optional uint32 groupID = 1;
void CMDQryGroupVisitCountReq::clear_groupid() {
  groupid_ = 0u;
}
 ::google::protobuf::uint32 CMDQryGroupVisitCountReq::groupid() const {
  // @@protoc_insertion_point(field_get:CMDQryGroupVisitCountReq.groupID)
  return groupid_;
}
 void CMDQryGroupVisitCountReq::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDQryGroupVisitCountReq.groupID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDQryGroupVisitCountResp::kGroupIDFieldNumber;
const int CMDQryGroupVisitCountResp::kVisitCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDQryGroupVisitCountResp::CMDQryGroupVisitCountResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDQryGroupVisitCountResp)
}

void CMDQryGroupVisitCountResp::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDQryGroupVisitCountResp::CMDQryGroupVisitCountResp(const CMDQryGroupVisitCountResp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDQryGroupVisitCountResp)
}

void CMDQryGroupVisitCountResp::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  groupid_ = 0u;
  visitcount_ = 0u;
}

CMDQryGroupVisitCountResp::~CMDQryGroupVisitCountResp() {
  // @@protoc_insertion_point(destructor:CMDQryGroupVisitCountResp)
  SharedDtor();
}

void CMDQryGroupVisitCountResp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMDQryGroupVisitCountResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDQryGroupVisitCountResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDQryGroupVisitCountResp_descriptor_;
}

const CMDQryGroupVisitCountResp& CMDQryGroupVisitCountResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RoomSvr_2eproto();
  return *default_instance_;
}

CMDQryGroupVisitCountResp* CMDQryGroupVisitCountResp::default_instance_ = NULL;

CMDQryGroupVisitCountResp* CMDQryGroupVisitCountResp::New(::google::protobuf::Arena* arena) const {
  CMDQryGroupVisitCountResp* n = new CMDQryGroupVisitCountResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDQryGroupVisitCountResp::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDQryGroupVisitCountResp)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDQryGroupVisitCountResp, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDQryGroupVisitCountResp*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(groupid_, visitcount_);

#undef ZR_HELPER_
#undef ZR_

}

bool CMDQryGroupVisitCountResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDQryGroupVisitCountResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 groupID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &groupid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_visitCount;
        break;
      }

      // optional uint32 visitCount = 2;
      case 2: {
        if (tag == 16) {
         parse_visitCount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &visitcount_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDQryGroupVisitCountResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDQryGroupVisitCountResp)
  return false;
#undef DO_
}

void CMDQryGroupVisitCountResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDQryGroupVisitCountResp)
  // optional uint32 groupID = 1;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->groupid(), output);
  }

  // optional uint32 visitCount = 2;
  if (this->visitcount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->visitcount(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDQryGroupVisitCountResp)
}

::google::protobuf::uint8* CMDQryGroupVisitCountResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDQryGroupVisitCountResp)
  // optional uint32 groupID = 1;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->groupid(), target);
  }

  // optional uint32 visitCount = 2;
  if (this->visitcount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->visitcount(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDQryGroupVisitCountResp)
  return target;
}

int CMDQryGroupVisitCountResp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDQryGroupVisitCountResp)
  int total_size = 0;

  // optional uint32 groupID = 1;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->groupid());
  }

  // optional uint32 visitCount = 2;
  if (this->visitcount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->visitcount());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDQryGroupVisitCountResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDQryGroupVisitCountResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDQryGroupVisitCountResp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDQryGroupVisitCountResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDQryGroupVisitCountResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDQryGroupVisitCountResp)
    MergeFrom(*source);
  }
}

void CMDQryGroupVisitCountResp::MergeFrom(const CMDQryGroupVisitCountResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDQryGroupVisitCountResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
  if (from.visitcount() != 0) {
    set_visitcount(from.visitcount());
  }
}

void CMDQryGroupVisitCountResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDQryGroupVisitCountResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDQryGroupVisitCountResp::CopyFrom(const CMDQryGroupVisitCountResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDQryGroupVisitCountResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDQryGroupVisitCountResp::IsInitialized() const {

  return true;
}

void CMDQryGroupVisitCountResp::Swap(CMDQryGroupVisitCountResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDQryGroupVisitCountResp::InternalSwap(CMDQryGroupVisitCountResp* other) {
  std::swap(groupid_, other->groupid_);
  std::swap(visitcount_, other->visitcount_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDQryGroupVisitCountResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDQryGroupVisitCountResp_descriptor_;
  metadata.reflection = CMDQryGroupVisitCountResp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDQryGroupVisitCountResp

// optional uint32 groupID = 1;
void CMDQryGroupVisitCountResp::clear_groupid() {
  groupid_ = 0u;
}
 ::google::protobuf::uint32 CMDQryGroupVisitCountResp::groupid() const {
  // @@protoc_insertion_point(field_get:CMDQryGroupVisitCountResp.groupID)
  return groupid_;
}
 void CMDQryGroupVisitCountResp::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDQryGroupVisitCountResp.groupID)
}

// optional uint32 visitCount = 2;
void CMDQryGroupVisitCountResp::clear_visitcount() {
  visitcount_ = 0u;
}
 ::google::protobuf::uint32 CMDQryGroupVisitCountResp::visitcount() const {
  // @@protoc_insertion_point(field_get:CMDQryGroupVisitCountResp.visitCount)
  return visitcount_;
}
 void CMDQryGroupVisitCountResp::set_visitcount(::google::protobuf::uint32 value) {
  
  visitcount_ = value;
  // @@protoc_insertion_point(field_set:CMDQryGroupVisitCountResp.visitCount)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDJoinGroupReq::kUserIDFieldNumber;
const int CMDJoinGroupReq::kGroupIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDJoinGroupReq::CMDJoinGroupReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDJoinGroupReq)
}

void CMDJoinGroupReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDJoinGroupReq::CMDJoinGroupReq(const CMDJoinGroupReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDJoinGroupReq)
}

void CMDJoinGroupReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  userid_ = 0u;
  groupid_ = 0u;
}

CMDJoinGroupReq::~CMDJoinGroupReq() {
  // @@protoc_insertion_point(destructor:CMDJoinGroupReq)
  SharedDtor();
}

void CMDJoinGroupReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMDJoinGroupReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDJoinGroupReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDJoinGroupReq_descriptor_;
}

const CMDJoinGroupReq& CMDJoinGroupReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RoomSvr_2eproto();
  return *default_instance_;
}

CMDJoinGroupReq* CMDJoinGroupReq::default_instance_ = NULL;

CMDJoinGroupReq* CMDJoinGroupReq::New(::google::protobuf::Arena* arena) const {
  CMDJoinGroupReq* n = new CMDJoinGroupReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDJoinGroupReq::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDJoinGroupReq)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDJoinGroupReq, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDJoinGroupReq*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(userid_, groupid_);

#undef ZR_HELPER_
#undef ZR_

}

bool CMDJoinGroupReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDJoinGroupReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 userID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_groupID;
        break;
      }

      // optional uint32 groupID = 2;
      case 2: {
        if (tag == 16) {
         parse_groupID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &groupid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDJoinGroupReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDJoinGroupReq)
  return false;
#undef DO_
}

void CMDJoinGroupReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDJoinGroupReq)
  // optional uint32 userID = 1;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->userid(), output);
  }

  // optional uint32 groupID = 2;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->groupid(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDJoinGroupReq)
}

::google::protobuf::uint8* CMDJoinGroupReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDJoinGroupReq)
  // optional uint32 userID = 1;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->userid(), target);
  }

  // optional uint32 groupID = 2;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->groupid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDJoinGroupReq)
  return target;
}

int CMDJoinGroupReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDJoinGroupReq)
  int total_size = 0;

  // optional uint32 userID = 1;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userid());
  }

  // optional uint32 groupID = 2;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->groupid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDJoinGroupReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDJoinGroupReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDJoinGroupReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDJoinGroupReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDJoinGroupReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDJoinGroupReq)
    MergeFrom(*source);
  }
}

void CMDJoinGroupReq::MergeFrom(const CMDJoinGroupReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDJoinGroupReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
}

void CMDJoinGroupReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDJoinGroupReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDJoinGroupReq::CopyFrom(const CMDJoinGroupReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDJoinGroupReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDJoinGroupReq::IsInitialized() const {

  return true;
}

void CMDJoinGroupReq::Swap(CMDJoinGroupReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDJoinGroupReq::InternalSwap(CMDJoinGroupReq* other) {
  std::swap(userid_, other->userid_);
  std::swap(groupid_, other->groupid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDJoinGroupReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDJoinGroupReq_descriptor_;
  metadata.reflection = CMDJoinGroupReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDJoinGroupReq

// optional uint32 userID = 1;
void CMDJoinGroupReq::clear_userid() {
  userid_ = 0u;
}
 ::google::protobuf::uint32 CMDJoinGroupReq::userid() const {
  // @@protoc_insertion_point(field_get:CMDJoinGroupReq.userID)
  return userid_;
}
 void CMDJoinGroupReq::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDJoinGroupReq.userID)
}

// optional uint32 groupID = 2;
void CMDJoinGroupReq::clear_groupid() {
  groupid_ = 0u;
}
 ::google::protobuf::uint32 CMDJoinGroupReq::groupid() const {
  // @@protoc_insertion_point(field_get:CMDJoinGroupReq.groupID)
  return groupid_;
}
 void CMDJoinGroupReq::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDJoinGroupReq.groupID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDJoinGroupResp::kErrInfoFieldNumber;
const int CMDJoinGroupResp::kUserIDFieldNumber;
const int CMDJoinGroupResp::kGroupIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDJoinGroupResp::CMDJoinGroupResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDJoinGroupResp)
}

void CMDJoinGroupResp::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  errinfo_ = const_cast< ::CMDErrCode*>(&::CMDErrCode::default_instance());
}

CMDJoinGroupResp::CMDJoinGroupResp(const CMDJoinGroupResp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDJoinGroupResp)
}

void CMDJoinGroupResp::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  errinfo_ = NULL;
  userid_ = 0u;
  groupid_ = 0u;
}

CMDJoinGroupResp::~CMDJoinGroupResp() {
  // @@protoc_insertion_point(destructor:CMDJoinGroupResp)
  SharedDtor();
}

void CMDJoinGroupResp::SharedDtor() {
  if (this != default_instance_) {
    delete errinfo_;
  }
}

void CMDJoinGroupResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDJoinGroupResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDJoinGroupResp_descriptor_;
}

const CMDJoinGroupResp& CMDJoinGroupResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RoomSvr_2eproto();
  return *default_instance_;
}

CMDJoinGroupResp* CMDJoinGroupResp::default_instance_ = NULL;

CMDJoinGroupResp* CMDJoinGroupResp::New(::google::protobuf::Arena* arena) const {
  CMDJoinGroupResp* n = new CMDJoinGroupResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDJoinGroupResp::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDJoinGroupResp)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDJoinGroupResp, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDJoinGroupResp*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(userid_, groupid_);
  if (GetArenaNoVirtual() == NULL && errinfo_ != NULL) delete errinfo_;
  errinfo_ = NULL;

#undef ZR_HELPER_
#undef ZR_

}

bool CMDJoinGroupResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDJoinGroupResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CMDErrCode errInfo = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_errinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_userID;
        break;
      }

      // optional uint32 userID = 2;
      case 2: {
        if (tag == 16) {
         parse_userID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_groupID;
        break;
      }

      // optional uint32 groupID = 3;
      case 3: {
        if (tag == 24) {
         parse_groupID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &groupid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDJoinGroupResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDJoinGroupResp)
  return false;
#undef DO_
}

void CMDJoinGroupResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDJoinGroupResp)
  // optional .CMDErrCode errInfo = 1;
  if (this->has_errinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->errinfo_, output);
  }

  // optional uint32 userID = 2;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->userid(), output);
  }

  // optional uint32 groupID = 3;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->groupid(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDJoinGroupResp)
}

::google::protobuf::uint8* CMDJoinGroupResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDJoinGroupResp)
  // optional .CMDErrCode errInfo = 1;
  if (this->has_errinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->errinfo_, false, target);
  }

  // optional uint32 userID = 2;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->userid(), target);
  }

  // optional uint32 groupID = 3;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->groupid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDJoinGroupResp)
  return target;
}

int CMDJoinGroupResp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDJoinGroupResp)
  int total_size = 0;

  // optional .CMDErrCode errInfo = 1;
  if (this->has_errinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->errinfo_);
  }

  // optional uint32 userID = 2;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userid());
  }

  // optional uint32 groupID = 3;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->groupid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDJoinGroupResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDJoinGroupResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDJoinGroupResp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDJoinGroupResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDJoinGroupResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDJoinGroupResp)
    MergeFrom(*source);
  }
}

void CMDJoinGroupResp::MergeFrom(const CMDJoinGroupResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDJoinGroupResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.has_errinfo()) {
    mutable_errinfo()->::CMDErrCode::MergeFrom(from.errinfo());
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
}

void CMDJoinGroupResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDJoinGroupResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDJoinGroupResp::CopyFrom(const CMDJoinGroupResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDJoinGroupResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDJoinGroupResp::IsInitialized() const {

  return true;
}

void CMDJoinGroupResp::Swap(CMDJoinGroupResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDJoinGroupResp::InternalSwap(CMDJoinGroupResp* other) {
  std::swap(errinfo_, other->errinfo_);
  std::swap(userid_, other->userid_);
  std::swap(groupid_, other->groupid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDJoinGroupResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDJoinGroupResp_descriptor_;
  metadata.reflection = CMDJoinGroupResp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDJoinGroupResp

// optional .CMDErrCode errInfo = 1;
bool CMDJoinGroupResp::has_errinfo() const {
  return !_is_default_instance_ && errinfo_ != NULL;
}
void CMDJoinGroupResp::clear_errinfo() {
  if (GetArenaNoVirtual() == NULL && errinfo_ != NULL) delete errinfo_;
  errinfo_ = NULL;
}
const ::CMDErrCode& CMDJoinGroupResp::errinfo() const {
  // @@protoc_insertion_point(field_get:CMDJoinGroupResp.errInfo)
  return errinfo_ != NULL ? *errinfo_ : *default_instance_->errinfo_;
}
::CMDErrCode* CMDJoinGroupResp::mutable_errinfo() {
  
  if (errinfo_ == NULL) {
    errinfo_ = new ::CMDErrCode;
  }
  // @@protoc_insertion_point(field_mutable:CMDJoinGroupResp.errInfo)
  return errinfo_;
}
::CMDErrCode* CMDJoinGroupResp::release_errinfo() {
  // @@protoc_insertion_point(field_release:CMDJoinGroupResp.errInfo)
  
  ::CMDErrCode* temp = errinfo_;
  errinfo_ = NULL;
  return temp;
}
void CMDJoinGroupResp::set_allocated_errinfo(::CMDErrCode* errinfo) {
  delete errinfo_;
  errinfo_ = errinfo;
  if (errinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDJoinGroupResp.errInfo)
}

// optional uint32 userID = 2;
void CMDJoinGroupResp::clear_userid() {
  userid_ = 0u;
}
 ::google::protobuf::uint32 CMDJoinGroupResp::userid() const {
  // @@protoc_insertion_point(field_get:CMDJoinGroupResp.userID)
  return userid_;
}
 void CMDJoinGroupResp::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDJoinGroupResp.userID)
}

// optional uint32 groupID = 3;
void CMDJoinGroupResp::clear_groupid() {
  groupid_ = 0u;
}
 ::google::protobuf::uint32 CMDJoinGroupResp::groupid() const {
  // @@protoc_insertion_point(field_get:CMDJoinGroupResp.groupID)
  return groupid_;
}
 void CMDJoinGroupResp::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDJoinGroupResp.groupID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDForbidJoinGroupKillVisitor::kGroupIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDForbidJoinGroupKillVisitor::CMDForbidJoinGroupKillVisitor()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDForbidJoinGroupKillVisitor)
}

void CMDForbidJoinGroupKillVisitor::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDForbidJoinGroupKillVisitor::CMDForbidJoinGroupKillVisitor(const CMDForbidJoinGroupKillVisitor& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDForbidJoinGroupKillVisitor)
}

void CMDForbidJoinGroupKillVisitor::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  groupid_ = 0u;
}

CMDForbidJoinGroupKillVisitor::~CMDForbidJoinGroupKillVisitor() {
  // @@protoc_insertion_point(destructor:CMDForbidJoinGroupKillVisitor)
  SharedDtor();
}

void CMDForbidJoinGroupKillVisitor::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMDForbidJoinGroupKillVisitor::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDForbidJoinGroupKillVisitor::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDForbidJoinGroupKillVisitor_descriptor_;
}

const CMDForbidJoinGroupKillVisitor& CMDForbidJoinGroupKillVisitor::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RoomSvr_2eproto();
  return *default_instance_;
}

CMDForbidJoinGroupKillVisitor* CMDForbidJoinGroupKillVisitor::default_instance_ = NULL;

CMDForbidJoinGroupKillVisitor* CMDForbidJoinGroupKillVisitor::New(::google::protobuf::Arena* arena) const {
  CMDForbidJoinGroupKillVisitor* n = new CMDForbidJoinGroupKillVisitor;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDForbidJoinGroupKillVisitor::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDForbidJoinGroupKillVisitor)
  groupid_ = 0u;
}

bool CMDForbidJoinGroupKillVisitor::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDForbidJoinGroupKillVisitor)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 groupID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &groupid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDForbidJoinGroupKillVisitor)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDForbidJoinGroupKillVisitor)
  return false;
#undef DO_
}

void CMDForbidJoinGroupKillVisitor::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDForbidJoinGroupKillVisitor)
  // optional uint32 groupID = 1;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->groupid(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDForbidJoinGroupKillVisitor)
}

::google::protobuf::uint8* CMDForbidJoinGroupKillVisitor::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDForbidJoinGroupKillVisitor)
  // optional uint32 groupID = 1;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->groupid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDForbidJoinGroupKillVisitor)
  return target;
}

int CMDForbidJoinGroupKillVisitor::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDForbidJoinGroupKillVisitor)
  int total_size = 0;

  // optional uint32 groupID = 1;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->groupid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDForbidJoinGroupKillVisitor::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDForbidJoinGroupKillVisitor)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDForbidJoinGroupKillVisitor* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDForbidJoinGroupKillVisitor>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDForbidJoinGroupKillVisitor)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDForbidJoinGroupKillVisitor)
    MergeFrom(*source);
  }
}

void CMDForbidJoinGroupKillVisitor::MergeFrom(const CMDForbidJoinGroupKillVisitor& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDForbidJoinGroupKillVisitor)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
}

void CMDForbidJoinGroupKillVisitor::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDForbidJoinGroupKillVisitor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDForbidJoinGroupKillVisitor::CopyFrom(const CMDForbidJoinGroupKillVisitor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDForbidJoinGroupKillVisitor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDForbidJoinGroupKillVisitor::IsInitialized() const {

  return true;
}

void CMDForbidJoinGroupKillVisitor::Swap(CMDForbidJoinGroupKillVisitor* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDForbidJoinGroupKillVisitor::InternalSwap(CMDForbidJoinGroupKillVisitor* other) {
  std::swap(groupid_, other->groupid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDForbidJoinGroupKillVisitor::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDForbidJoinGroupKillVisitor_descriptor_;
  metadata.reflection = CMDForbidJoinGroupKillVisitor_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDForbidJoinGroupKillVisitor

// optional uint32 groupID = 1;
void CMDForbidJoinGroupKillVisitor::clear_groupid() {
  groupid_ = 0u;
}
 ::google::protobuf::uint32 CMDForbidJoinGroupKillVisitor::groupid() const {
  // @@protoc_insertion_point(field_get:CMDForbidJoinGroupKillVisitor.groupID)
  return groupid_;
}
 void CMDForbidJoinGroupKillVisitor::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDForbidJoinGroupKillVisitor.groupID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDSettingStat::kTypeFieldNumber;
const int CMDSettingStat::kStatFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDSettingStat::CMDSettingStat()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDSettingStat)
}

void CMDSettingStat::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDSettingStat::CMDSettingStat(const CMDSettingStat& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDSettingStat)
}

void CMDSettingStat::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  type_ = 0;
  stat_ = 0;
}

CMDSettingStat::~CMDSettingStat() {
  // @@protoc_insertion_point(destructor:CMDSettingStat)
  SharedDtor();
}

void CMDSettingStat::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMDSettingStat::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDSettingStat::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDSettingStat_descriptor_;
}

const CMDSettingStat& CMDSettingStat::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RoomSvr_2eproto();
  return *default_instance_;
}

CMDSettingStat* CMDSettingStat::default_instance_ = NULL;

CMDSettingStat* CMDSettingStat::New(::google::protobuf::Arena* arena) const {
  CMDSettingStat* n = new CMDSettingStat;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDSettingStat::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDSettingStat)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDSettingStat, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDSettingStat*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(type_, stat_);

#undef ZR_HELPER_
#undef ZR_

}

bool CMDSettingStat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDSettingStat)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .e_SettingType type = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::e_SettingType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_stat;
        break;
      }

      // optional int32 stat = 2;
      case 2: {
        if (tag == 16) {
         parse_stat:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &stat_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDSettingStat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDSettingStat)
  return false;
#undef DO_
}

void CMDSettingStat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDSettingStat)
  // optional .e_SettingType type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // optional int32 stat = 2;
  if (this->stat() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->stat(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDSettingStat)
}

::google::protobuf::uint8* CMDSettingStat::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDSettingStat)
  // optional .e_SettingType type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // optional int32 stat = 2;
  if (this->stat() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->stat(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDSettingStat)
  return target;
}

int CMDSettingStat::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDSettingStat)
  int total_size = 0;

  // optional .e_SettingType type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // optional int32 stat = 2;
  if (this->stat() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->stat());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDSettingStat::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDSettingStat)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDSettingStat* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDSettingStat>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDSettingStat)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDSettingStat)
    MergeFrom(*source);
  }
}

void CMDSettingStat::MergeFrom(const CMDSettingStat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDSettingStat)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.stat() != 0) {
    set_stat(from.stat());
  }
}

void CMDSettingStat::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDSettingStat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDSettingStat::CopyFrom(const CMDSettingStat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDSettingStat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDSettingStat::IsInitialized() const {

  return true;
}

void CMDSettingStat::Swap(CMDSettingStat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDSettingStat::InternalSwap(CMDSettingStat* other) {
  std::swap(type_, other->type_);
  std::swap(stat_, other->stat_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDSettingStat::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDSettingStat_descriptor_;
  metadata.reflection = CMDSettingStat_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDSettingStat

// optional .e_SettingType type = 1;
void CMDSettingStat::clear_type() {
  type_ = 0;
}
 ::e_SettingType CMDSettingStat::type() const {
  // @@protoc_insertion_point(field_get:CMDSettingStat.type)
  return static_cast< ::e_SettingType >(type_);
}
 void CMDSettingStat::set_type(::e_SettingType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:CMDSettingStat.type)
}

// optional int32 stat = 2;
void CMDSettingStat::clear_stat() {
  stat_ = 0;
}
 ::google::protobuf::int32 CMDSettingStat::stat() const {
  // @@protoc_insertion_point(field_get:CMDSettingStat.stat)
  return stat_;
}
 void CMDSettingStat::set_stat(::google::protobuf::int32 value) {
  
  stat_ = value;
  // @@protoc_insertion_point(field_set:CMDSettingStat.stat)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDGroupSettingStatNotify::kRunIDFieldNumber;
const int CMDGroupSettingStatNotify::kGroupIDFieldNumber;
const int CMDGroupSettingStatNotify::kListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDGroupSettingStatNotify::CMDGroupSettingStatNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDGroupSettingStatNotify)
}

void CMDGroupSettingStatNotify::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDGroupSettingStatNotify::CMDGroupSettingStatNotify(const CMDGroupSettingStatNotify& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDGroupSettingStatNotify)
}

void CMDGroupSettingStatNotify::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  runid_ = 0u;
  groupid_ = 0u;
}

CMDGroupSettingStatNotify::~CMDGroupSettingStatNotify() {
  // @@protoc_insertion_point(destructor:CMDGroupSettingStatNotify)
  SharedDtor();
}

void CMDGroupSettingStatNotify::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMDGroupSettingStatNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDGroupSettingStatNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDGroupSettingStatNotify_descriptor_;
}

const CMDGroupSettingStatNotify& CMDGroupSettingStatNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RoomSvr_2eproto();
  return *default_instance_;
}

CMDGroupSettingStatNotify* CMDGroupSettingStatNotify::default_instance_ = NULL;

CMDGroupSettingStatNotify* CMDGroupSettingStatNotify::New(::google::protobuf::Arena* arena) const {
  CMDGroupSettingStatNotify* n = new CMDGroupSettingStatNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDGroupSettingStatNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDGroupSettingStatNotify)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDGroupSettingStatNotify, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDGroupSettingStatNotify*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(runid_, groupid_);

#undef ZR_HELPER_
#undef ZR_

  list_.Clear();
}

bool CMDGroupSettingStatNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDGroupSettingStatNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 runID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &runid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_groupID;
        break;
      }

      // optional uint32 groupID = 2;
      case 2: {
        if (tag == 16) {
         parse_groupID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &groupid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_list;
        break;
      }

      // repeated .CMDSettingStat list = 3;
      case 3: {
        if (tag == 26) {
         parse_list:
          DO_(input->IncrementRecursionDepth());
         parse_loop_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_list;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDGroupSettingStatNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDGroupSettingStatNotify)
  return false;
#undef DO_
}

void CMDGroupSettingStatNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDGroupSettingStatNotify)
  // optional uint32 runID = 1;
  if (this->runid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->runid(), output);
  }

  // optional uint32 groupID = 2;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->groupid(), output);
  }

  // repeated .CMDSettingStat list = 3;
  for (unsigned int i = 0, n = this->list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->list(i), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDGroupSettingStatNotify)
}

::google::protobuf::uint8* CMDGroupSettingStatNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDGroupSettingStatNotify)
  // optional uint32 runID = 1;
  if (this->runid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->runid(), target);
  }

  // optional uint32 groupID = 2;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->groupid(), target);
  }

  // repeated .CMDSettingStat list = 3;
  for (unsigned int i = 0, n = this->list_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->list(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDGroupSettingStatNotify)
  return target;
}

int CMDGroupSettingStatNotify::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDGroupSettingStatNotify)
  int total_size = 0;

  // optional uint32 runID = 1;
  if (this->runid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->runid());
  }

  // optional uint32 groupID = 2;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->groupid());
  }

  // repeated .CMDSettingStat list = 3;
  total_size += 1 * this->list_size();
  for (int i = 0; i < this->list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->list(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDGroupSettingStatNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDGroupSettingStatNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDGroupSettingStatNotify* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDGroupSettingStatNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDGroupSettingStatNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDGroupSettingStatNotify)
    MergeFrom(*source);
  }
}

void CMDGroupSettingStatNotify::MergeFrom(const CMDGroupSettingStatNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDGroupSettingStatNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  list_.MergeFrom(from.list_);
  if (from.runid() != 0) {
    set_runid(from.runid());
  }
  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
}

void CMDGroupSettingStatNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDGroupSettingStatNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDGroupSettingStatNotify::CopyFrom(const CMDGroupSettingStatNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDGroupSettingStatNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDGroupSettingStatNotify::IsInitialized() const {

  return true;
}

void CMDGroupSettingStatNotify::Swap(CMDGroupSettingStatNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDGroupSettingStatNotify::InternalSwap(CMDGroupSettingStatNotify* other) {
  std::swap(runid_, other->runid_);
  std::swap(groupid_, other->groupid_);
  list_.UnsafeArenaSwap(&other->list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDGroupSettingStatNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDGroupSettingStatNotify_descriptor_;
  metadata.reflection = CMDGroupSettingStatNotify_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDGroupSettingStatNotify

// optional uint32 runID = 1;
void CMDGroupSettingStatNotify::clear_runid() {
  runid_ = 0u;
}
 ::google::protobuf::uint32 CMDGroupSettingStatNotify::runid() const {
  // @@protoc_insertion_point(field_get:CMDGroupSettingStatNotify.runID)
  return runid_;
}
 void CMDGroupSettingStatNotify::set_runid(::google::protobuf::uint32 value) {
  
  runid_ = value;
  // @@protoc_insertion_point(field_set:CMDGroupSettingStatNotify.runID)
}

// optional uint32 groupID = 2;
void CMDGroupSettingStatNotify::clear_groupid() {
  groupid_ = 0u;
}
 ::google::protobuf::uint32 CMDGroupSettingStatNotify::groupid() const {
  // @@protoc_insertion_point(field_get:CMDGroupSettingStatNotify.groupID)
  return groupid_;
}
 void CMDGroupSettingStatNotify::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDGroupSettingStatNotify.groupID)
}

// repeated .CMDSettingStat list = 3;
int CMDGroupSettingStatNotify::list_size() const {
  return list_.size();
}
void CMDGroupSettingStatNotify::clear_list() {
  list_.Clear();
}
const ::CMDSettingStat& CMDGroupSettingStatNotify::list(int index) const {
  // @@protoc_insertion_point(field_get:CMDGroupSettingStatNotify.list)
  return list_.Get(index);
}
::CMDSettingStat* CMDGroupSettingStatNotify::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:CMDGroupSettingStatNotify.list)
  return list_.Mutable(index);
}
::CMDSettingStat* CMDGroupSettingStatNotify::add_list() {
  // @@protoc_insertion_point(field_add:CMDGroupSettingStatNotify.list)
  return list_.Add();
}
::google::protobuf::RepeatedPtrField< ::CMDSettingStat >*
CMDGroupSettingStatNotify::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:CMDGroupSettingStatNotify.list)
  return &list_;
}
const ::google::protobuf::RepeatedPtrField< ::CMDSettingStat >&
CMDGroupSettingStatNotify::list() const {
  // @@protoc_insertion_point(field_list:CMDGroupSettingStatNotify.list)
  return list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDGroupSettingStatReq::kUserIDFieldNumber;
const int CMDGroupSettingStatReq::kGroupIDFieldNumber;
const int CMDGroupSettingStatReq::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDGroupSettingStatReq::CMDGroupSettingStatReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDGroupSettingStatReq)
}

void CMDGroupSettingStatReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDGroupSettingStatReq::CMDGroupSettingStatReq(const CMDGroupSettingStatReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDGroupSettingStatReq)
}

void CMDGroupSettingStatReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  userid_ = 0u;
  groupid_ = 0u;
  type_ = 0;
}

CMDGroupSettingStatReq::~CMDGroupSettingStatReq() {
  // @@protoc_insertion_point(destructor:CMDGroupSettingStatReq)
  SharedDtor();
}

void CMDGroupSettingStatReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMDGroupSettingStatReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDGroupSettingStatReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDGroupSettingStatReq_descriptor_;
}

const CMDGroupSettingStatReq& CMDGroupSettingStatReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RoomSvr_2eproto();
  return *default_instance_;
}

CMDGroupSettingStatReq* CMDGroupSettingStatReq::default_instance_ = NULL;

CMDGroupSettingStatReq* CMDGroupSettingStatReq::New(::google::protobuf::Arena* arena) const {
  CMDGroupSettingStatReq* n = new CMDGroupSettingStatReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDGroupSettingStatReq::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDGroupSettingStatReq)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDGroupSettingStatReq, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDGroupSettingStatReq*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(userid_, type_);

#undef ZR_HELPER_
#undef ZR_

}

bool CMDGroupSettingStatReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDGroupSettingStatReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 userID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_groupID;
        break;
      }

      // optional uint32 groupID = 2;
      case 2: {
        if (tag == 16) {
         parse_groupID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &groupid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_type;
        break;
      }

      // optional .e_SettingType type = 3;
      case 3: {
        if (tag == 24) {
         parse_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::e_SettingType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDGroupSettingStatReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDGroupSettingStatReq)
  return false;
#undef DO_
}

void CMDGroupSettingStatReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDGroupSettingStatReq)
  // optional uint32 userID = 1;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->userid(), output);
  }

  // optional uint32 groupID = 2;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->groupid(), output);
  }

  // optional .e_SettingType type = 3;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->type(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDGroupSettingStatReq)
}

::google::protobuf::uint8* CMDGroupSettingStatReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDGroupSettingStatReq)
  // optional uint32 userID = 1;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->userid(), target);
  }

  // optional uint32 groupID = 2;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->groupid(), target);
  }

  // optional .e_SettingType type = 3;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->type(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDGroupSettingStatReq)
  return target;
}

int CMDGroupSettingStatReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDGroupSettingStatReq)
  int total_size = 0;

  // optional uint32 userID = 1;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userid());
  }

  // optional uint32 groupID = 2;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->groupid());
  }

  // optional .e_SettingType type = 3;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDGroupSettingStatReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDGroupSettingStatReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDGroupSettingStatReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDGroupSettingStatReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDGroupSettingStatReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDGroupSettingStatReq)
    MergeFrom(*source);
  }
}

void CMDGroupSettingStatReq::MergeFrom(const CMDGroupSettingStatReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDGroupSettingStatReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void CMDGroupSettingStatReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDGroupSettingStatReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDGroupSettingStatReq::CopyFrom(const CMDGroupSettingStatReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDGroupSettingStatReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDGroupSettingStatReq::IsInitialized() const {

  return true;
}

void CMDGroupSettingStatReq::Swap(CMDGroupSettingStatReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDGroupSettingStatReq::InternalSwap(CMDGroupSettingStatReq* other) {
  std::swap(userid_, other->userid_);
  std::swap(groupid_, other->groupid_);
  std::swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDGroupSettingStatReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDGroupSettingStatReq_descriptor_;
  metadata.reflection = CMDGroupSettingStatReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDGroupSettingStatReq

// optional uint32 userID = 1;
void CMDGroupSettingStatReq::clear_userid() {
  userid_ = 0u;
}
 ::google::protobuf::uint32 CMDGroupSettingStatReq::userid() const {
  // @@protoc_insertion_point(field_get:CMDGroupSettingStatReq.userID)
  return userid_;
}
 void CMDGroupSettingStatReq::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDGroupSettingStatReq.userID)
}

// optional uint32 groupID = 2;
void CMDGroupSettingStatReq::clear_groupid() {
  groupid_ = 0u;
}
 ::google::protobuf::uint32 CMDGroupSettingStatReq::groupid() const {
  // @@protoc_insertion_point(field_get:CMDGroupSettingStatReq.groupID)
  return groupid_;
}
 void CMDGroupSettingStatReq::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDGroupSettingStatReq.groupID)
}

// optional .e_SettingType type = 3;
void CMDGroupSettingStatReq::clear_type() {
  type_ = 0;
}
 ::e_SettingType CMDGroupSettingStatReq::type() const {
  // @@protoc_insertion_point(field_get:CMDGroupSettingStatReq.type)
  return static_cast< ::e_SettingType >(type_);
}
 void CMDGroupSettingStatReq::set_type(::e_SettingType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:CMDGroupSettingStatReq.type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDQryJoinGroupCondReq::kUserIDFieldNumber;
const int CMDQryJoinGroupCondReq::kGroupIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDQryJoinGroupCondReq::CMDQryJoinGroupCondReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDQryJoinGroupCondReq)
}

void CMDQryJoinGroupCondReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDQryJoinGroupCondReq::CMDQryJoinGroupCondReq(const CMDQryJoinGroupCondReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDQryJoinGroupCondReq)
}

void CMDQryJoinGroupCondReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  userid_ = 0u;
  groupid_ = 0u;
}

CMDQryJoinGroupCondReq::~CMDQryJoinGroupCondReq() {
  // @@protoc_insertion_point(destructor:CMDQryJoinGroupCondReq)
  SharedDtor();
}

void CMDQryJoinGroupCondReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMDQryJoinGroupCondReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDQryJoinGroupCondReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDQryJoinGroupCondReq_descriptor_;
}

const CMDQryJoinGroupCondReq& CMDQryJoinGroupCondReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RoomSvr_2eproto();
  return *default_instance_;
}

CMDQryJoinGroupCondReq* CMDQryJoinGroupCondReq::default_instance_ = NULL;

CMDQryJoinGroupCondReq* CMDQryJoinGroupCondReq::New(::google::protobuf::Arena* arena) const {
  CMDQryJoinGroupCondReq* n = new CMDQryJoinGroupCondReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDQryJoinGroupCondReq::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDQryJoinGroupCondReq)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDQryJoinGroupCondReq, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDQryJoinGroupCondReq*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(userid_, groupid_);

#undef ZR_HELPER_
#undef ZR_

}

bool CMDQryJoinGroupCondReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDQryJoinGroupCondReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 userID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_groupID;
        break;
      }

      // optional uint32 groupID = 2;
      case 2: {
        if (tag == 16) {
         parse_groupID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &groupid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDQryJoinGroupCondReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDQryJoinGroupCondReq)
  return false;
#undef DO_
}

void CMDQryJoinGroupCondReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDQryJoinGroupCondReq)
  // optional uint32 userID = 1;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->userid(), output);
  }

  // optional uint32 groupID = 2;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->groupid(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDQryJoinGroupCondReq)
}

::google::protobuf::uint8* CMDQryJoinGroupCondReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDQryJoinGroupCondReq)
  // optional uint32 userID = 1;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->userid(), target);
  }

  // optional uint32 groupID = 2;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->groupid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDQryJoinGroupCondReq)
  return target;
}

int CMDQryJoinGroupCondReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDQryJoinGroupCondReq)
  int total_size = 0;

  // optional uint32 userID = 1;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userid());
  }

  // optional uint32 groupID = 2;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->groupid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDQryJoinGroupCondReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDQryJoinGroupCondReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDQryJoinGroupCondReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDQryJoinGroupCondReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDQryJoinGroupCondReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDQryJoinGroupCondReq)
    MergeFrom(*source);
  }
}

void CMDQryJoinGroupCondReq::MergeFrom(const CMDQryJoinGroupCondReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDQryJoinGroupCondReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
}

void CMDQryJoinGroupCondReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDQryJoinGroupCondReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDQryJoinGroupCondReq::CopyFrom(const CMDQryJoinGroupCondReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDQryJoinGroupCondReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDQryJoinGroupCondReq::IsInitialized() const {

  return true;
}

void CMDQryJoinGroupCondReq::Swap(CMDQryJoinGroupCondReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDQryJoinGroupCondReq::InternalSwap(CMDQryJoinGroupCondReq* other) {
  std::swap(userid_, other->userid_);
  std::swap(groupid_, other->groupid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDQryJoinGroupCondReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDQryJoinGroupCondReq_descriptor_;
  metadata.reflection = CMDQryJoinGroupCondReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDQryJoinGroupCondReq

// optional uint32 userID = 1;
void CMDQryJoinGroupCondReq::clear_userid() {
  userid_ = 0u;
}
 ::google::protobuf::uint32 CMDQryJoinGroupCondReq::userid() const {
  // @@protoc_insertion_point(field_get:CMDQryJoinGroupCondReq.userID)
  return userid_;
}
 void CMDQryJoinGroupCondReq::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDQryJoinGroupCondReq.userID)
}

// optional uint32 groupID = 2;
void CMDQryJoinGroupCondReq::clear_groupid() {
  groupid_ = 0u;
}
 ::google::protobuf::uint32 CMDQryJoinGroupCondReq::groupid() const {
  // @@protoc_insertion_point(field_get:CMDQryJoinGroupCondReq.groupID)
  return groupid_;
}
 void CMDQryJoinGroupCondReq::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDQryJoinGroupCondReq.groupID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDQryJoinGroupCondResp::kErrInfoFieldNumber;
const int CMDQryJoinGroupCondResp::kUserIDFieldNumber;
const int CMDQryJoinGroupCondResp::kGroupIDFieldNumber;
const int CMDQryJoinGroupCondResp::kActionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDQryJoinGroupCondResp::CMDQryJoinGroupCondResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDQryJoinGroupCondResp)
}

void CMDQryJoinGroupCondResp::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  errinfo_ = const_cast< ::CMDErrCode*>(&::CMDErrCode::default_instance());
}

CMDQryJoinGroupCondResp::CMDQryJoinGroupCondResp(const CMDQryJoinGroupCondResp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDQryJoinGroupCondResp)
}

void CMDQryJoinGroupCondResp::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  errinfo_ = NULL;
  userid_ = 0u;
  groupid_ = 0u;
  action_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CMDQryJoinGroupCondResp::~CMDQryJoinGroupCondResp() {
  // @@protoc_insertion_point(destructor:CMDQryJoinGroupCondResp)
  SharedDtor();
}

void CMDQryJoinGroupCondResp::SharedDtor() {
  action_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete errinfo_;
  }
}

void CMDQryJoinGroupCondResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDQryJoinGroupCondResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDQryJoinGroupCondResp_descriptor_;
}

const CMDQryJoinGroupCondResp& CMDQryJoinGroupCondResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RoomSvr_2eproto();
  return *default_instance_;
}

CMDQryJoinGroupCondResp* CMDQryJoinGroupCondResp::default_instance_ = NULL;

CMDQryJoinGroupCondResp* CMDQryJoinGroupCondResp::New(::google::protobuf::Arena* arena) const {
  CMDQryJoinGroupCondResp* n = new CMDQryJoinGroupCondResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDQryJoinGroupCondResp::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDQryJoinGroupCondResp)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDQryJoinGroupCondResp, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDQryJoinGroupCondResp*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(userid_, groupid_);
  if (GetArenaNoVirtual() == NULL && errinfo_ != NULL) delete errinfo_;
  errinfo_ = NULL;
  action_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool CMDQryJoinGroupCondResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDQryJoinGroupCondResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CMDErrCode errInfo = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_errinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_userID;
        break;
      }

      // optional uint32 userID = 2;
      case 2: {
        if (tag == 16) {
         parse_userID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_groupID;
        break;
      }

      // optional uint32 groupID = 3;
      case 3: {
        if (tag == 24) {
         parse_groupID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &groupid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_action;
        break;
      }

      // optional string action = 4;
      case 4: {
        if (tag == 34) {
         parse_action:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_action()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->action().data(), this->action().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMDQryJoinGroupCondResp.action"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDQryJoinGroupCondResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDQryJoinGroupCondResp)
  return false;
#undef DO_
}

void CMDQryJoinGroupCondResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDQryJoinGroupCondResp)
  // optional .CMDErrCode errInfo = 1;
  if (this->has_errinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->errinfo_, output);
  }

  // optional uint32 userID = 2;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->userid(), output);
  }

  // optional uint32 groupID = 3;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->groupid(), output);
  }

  // optional string action = 4;
  if (this->action().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->action().data(), this->action().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDQryJoinGroupCondResp.action");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->action(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDQryJoinGroupCondResp)
}

::google::protobuf::uint8* CMDQryJoinGroupCondResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDQryJoinGroupCondResp)
  // optional .CMDErrCode errInfo = 1;
  if (this->has_errinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->errinfo_, false, target);
  }

  // optional uint32 userID = 2;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->userid(), target);
  }

  // optional uint32 groupID = 3;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->groupid(), target);
  }

  // optional string action = 4;
  if (this->action().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->action().data(), this->action().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDQryJoinGroupCondResp.action");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->action(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDQryJoinGroupCondResp)
  return target;
}

int CMDQryJoinGroupCondResp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDQryJoinGroupCondResp)
  int total_size = 0;

  // optional .CMDErrCode errInfo = 1;
  if (this->has_errinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->errinfo_);
  }

  // optional uint32 userID = 2;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userid());
  }

  // optional uint32 groupID = 3;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->groupid());
  }

  // optional string action = 4;
  if (this->action().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->action());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDQryJoinGroupCondResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDQryJoinGroupCondResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDQryJoinGroupCondResp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDQryJoinGroupCondResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDQryJoinGroupCondResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDQryJoinGroupCondResp)
    MergeFrom(*source);
  }
}

void CMDQryJoinGroupCondResp::MergeFrom(const CMDQryJoinGroupCondResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDQryJoinGroupCondResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.has_errinfo()) {
    mutable_errinfo()->::CMDErrCode::MergeFrom(from.errinfo());
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
  if (from.action().size() > 0) {

    action_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.action_);
  }
}

void CMDQryJoinGroupCondResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDQryJoinGroupCondResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDQryJoinGroupCondResp::CopyFrom(const CMDQryJoinGroupCondResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDQryJoinGroupCondResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDQryJoinGroupCondResp::IsInitialized() const {

  return true;
}

void CMDQryJoinGroupCondResp::Swap(CMDQryJoinGroupCondResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDQryJoinGroupCondResp::InternalSwap(CMDQryJoinGroupCondResp* other) {
  std::swap(errinfo_, other->errinfo_);
  std::swap(userid_, other->userid_);
  std::swap(groupid_, other->groupid_);
  action_.Swap(&other->action_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDQryJoinGroupCondResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDQryJoinGroupCondResp_descriptor_;
  metadata.reflection = CMDQryJoinGroupCondResp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDQryJoinGroupCondResp

// optional .CMDErrCode errInfo = 1;
bool CMDQryJoinGroupCondResp::has_errinfo() const {
  return !_is_default_instance_ && errinfo_ != NULL;
}
void CMDQryJoinGroupCondResp::clear_errinfo() {
  if (GetArenaNoVirtual() == NULL && errinfo_ != NULL) delete errinfo_;
  errinfo_ = NULL;
}
const ::CMDErrCode& CMDQryJoinGroupCondResp::errinfo() const {
  // @@protoc_insertion_point(field_get:CMDQryJoinGroupCondResp.errInfo)
  return errinfo_ != NULL ? *errinfo_ : *default_instance_->errinfo_;
}
::CMDErrCode* CMDQryJoinGroupCondResp::mutable_errinfo() {
  
  if (errinfo_ == NULL) {
    errinfo_ = new ::CMDErrCode;
  }
  // @@protoc_insertion_point(field_mutable:CMDQryJoinGroupCondResp.errInfo)
  return errinfo_;
}
::CMDErrCode* CMDQryJoinGroupCondResp::release_errinfo() {
  // @@protoc_insertion_point(field_release:CMDQryJoinGroupCondResp.errInfo)
  
  ::CMDErrCode* temp = errinfo_;
  errinfo_ = NULL;
  return temp;
}
void CMDQryJoinGroupCondResp::set_allocated_errinfo(::CMDErrCode* errinfo) {
  delete errinfo_;
  errinfo_ = errinfo;
  if (errinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDQryJoinGroupCondResp.errInfo)
}

// optional uint32 userID = 2;
void CMDQryJoinGroupCondResp::clear_userid() {
  userid_ = 0u;
}
 ::google::protobuf::uint32 CMDQryJoinGroupCondResp::userid() const {
  // @@protoc_insertion_point(field_get:CMDQryJoinGroupCondResp.userID)
  return userid_;
}
 void CMDQryJoinGroupCondResp::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDQryJoinGroupCondResp.userID)
}

// optional uint32 groupID = 3;
void CMDQryJoinGroupCondResp::clear_groupid() {
  groupid_ = 0u;
}
 ::google::protobuf::uint32 CMDQryJoinGroupCondResp::groupid() const {
  // @@protoc_insertion_point(field_get:CMDQryJoinGroupCondResp.groupID)
  return groupid_;
}
 void CMDQryJoinGroupCondResp::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDQryJoinGroupCondResp.groupID)
}

// optional string action = 4;
void CMDQryJoinGroupCondResp::clear_action() {
  action_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CMDQryJoinGroupCondResp::action() const {
  // @@protoc_insertion_point(field_get:CMDQryJoinGroupCondResp.action)
  return action_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDQryJoinGroupCondResp::set_action(const ::std::string& value) {
  
  action_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDQryJoinGroupCondResp.action)
}
 void CMDQryJoinGroupCondResp::set_action(const char* value) {
  
  action_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDQryJoinGroupCondResp.action)
}
 void CMDQryJoinGroupCondResp::set_action(const char* value, size_t size) {
  
  action_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDQryJoinGroupCondResp.action)
}
 ::std::string* CMDQryJoinGroupCondResp::mutable_action() {
  
  // @@protoc_insertion_point(field_mutable:CMDQryJoinGroupCondResp.action)
  return action_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMDQryJoinGroupCondResp::release_action() {
  // @@protoc_insertion_point(field_release:CMDQryJoinGroupCondResp.action)
  
  return action_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDQryJoinGroupCondResp::set_allocated_action(::std::string* action) {
  if (action != NULL) {
    
  } else {
    
  }
  action_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), action);
  // @@protoc_insertion_point(field_set_allocated:CMDQryJoinGroupCondResp.action)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDApplyJoinGroupAuthReq::kUserIDFieldNumber;
const int CMDApplyJoinGroupAuthReq::kGroupIDFieldNumber;
const int CMDApplyJoinGroupAuthReq::kAuthTypeFieldNumber;
const int CMDApplyJoinGroupAuthReq::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDApplyJoinGroupAuthReq::CMDApplyJoinGroupAuthReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDApplyJoinGroupAuthReq)
}

void CMDApplyJoinGroupAuthReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDApplyJoinGroupAuthReq::CMDApplyJoinGroupAuthReq(const CMDApplyJoinGroupAuthReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDApplyJoinGroupAuthReq)
}

void CMDApplyJoinGroupAuthReq::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  userid_ = 0u;
  groupid_ = 0u;
  authtype_ = 0;
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CMDApplyJoinGroupAuthReq::~CMDApplyJoinGroupAuthReq() {
  // @@protoc_insertion_point(destructor:CMDApplyJoinGroupAuthReq)
  SharedDtor();
}

void CMDApplyJoinGroupAuthReq::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CMDApplyJoinGroupAuthReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDApplyJoinGroupAuthReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDApplyJoinGroupAuthReq_descriptor_;
}

const CMDApplyJoinGroupAuthReq& CMDApplyJoinGroupAuthReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RoomSvr_2eproto();
  return *default_instance_;
}

CMDApplyJoinGroupAuthReq* CMDApplyJoinGroupAuthReq::default_instance_ = NULL;

CMDApplyJoinGroupAuthReq* CMDApplyJoinGroupAuthReq::New(::google::protobuf::Arena* arena) const {
  CMDApplyJoinGroupAuthReq* n = new CMDApplyJoinGroupAuthReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDApplyJoinGroupAuthReq::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDApplyJoinGroupAuthReq)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDApplyJoinGroupAuthReq, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDApplyJoinGroupAuthReq*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(userid_, groupid_);
  authtype_ = 0;
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool CMDApplyJoinGroupAuthReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDApplyJoinGroupAuthReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 userID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_groupID;
        break;
      }

      // optional uint32 groupID = 2;
      case 2: {
        if (tag == 16) {
         parse_groupID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &groupid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_authType;
        break;
      }

      // optional .e_UserJoinGroupAuthType authType = 3;
      case 3: {
        if (tag == 24) {
         parse_authType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_authtype(static_cast< ::e_UserJoinGroupAuthType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_msg;
        break;
      }

      // optional string msg = 4;
      case 4: {
        if (tag == 34) {
         parse_msg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg().data(), this->msg().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMDApplyJoinGroupAuthReq.msg"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDApplyJoinGroupAuthReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDApplyJoinGroupAuthReq)
  return false;
#undef DO_
}

void CMDApplyJoinGroupAuthReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDApplyJoinGroupAuthReq)
  // optional uint32 userID = 1;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->userid(), output);
  }

  // optional uint32 groupID = 2;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->groupid(), output);
  }

  // optional .e_UserJoinGroupAuthType authType = 3;
  if (this->authtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->authtype(), output);
  }

  // optional string msg = 4;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDApplyJoinGroupAuthReq.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->msg(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDApplyJoinGroupAuthReq)
}

::google::protobuf::uint8* CMDApplyJoinGroupAuthReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDApplyJoinGroupAuthReq)
  // optional uint32 userID = 1;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->userid(), target);
  }

  // optional uint32 groupID = 2;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->groupid(), target);
  }

  // optional .e_UserJoinGroupAuthType authType = 3;
  if (this->authtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->authtype(), target);
  }

  // optional string msg = 4;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDApplyJoinGroupAuthReq.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->msg(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDApplyJoinGroupAuthReq)
  return target;
}

int CMDApplyJoinGroupAuthReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDApplyJoinGroupAuthReq)
  int total_size = 0;

  // optional uint32 userID = 1;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userid());
  }

  // optional uint32 groupID = 2;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->groupid());
  }

  // optional .e_UserJoinGroupAuthType authType = 3;
  if (this->authtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->authtype());
  }

  // optional string msg = 4;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDApplyJoinGroupAuthReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDApplyJoinGroupAuthReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDApplyJoinGroupAuthReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDApplyJoinGroupAuthReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDApplyJoinGroupAuthReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDApplyJoinGroupAuthReq)
    MergeFrom(*source);
  }
}

void CMDApplyJoinGroupAuthReq::MergeFrom(const CMDApplyJoinGroupAuthReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDApplyJoinGroupAuthReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
  if (from.authtype() != 0) {
    set_authtype(from.authtype());
  }
  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
}

void CMDApplyJoinGroupAuthReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDApplyJoinGroupAuthReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDApplyJoinGroupAuthReq::CopyFrom(const CMDApplyJoinGroupAuthReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDApplyJoinGroupAuthReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDApplyJoinGroupAuthReq::IsInitialized() const {

  return true;
}

void CMDApplyJoinGroupAuthReq::Swap(CMDApplyJoinGroupAuthReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDApplyJoinGroupAuthReq::InternalSwap(CMDApplyJoinGroupAuthReq* other) {
  std::swap(userid_, other->userid_);
  std::swap(groupid_, other->groupid_);
  std::swap(authtype_, other->authtype_);
  msg_.Swap(&other->msg_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDApplyJoinGroupAuthReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDApplyJoinGroupAuthReq_descriptor_;
  metadata.reflection = CMDApplyJoinGroupAuthReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDApplyJoinGroupAuthReq

// optional uint32 userID = 1;
void CMDApplyJoinGroupAuthReq::clear_userid() {
  userid_ = 0u;
}
 ::google::protobuf::uint32 CMDApplyJoinGroupAuthReq::userid() const {
  // @@protoc_insertion_point(field_get:CMDApplyJoinGroupAuthReq.userID)
  return userid_;
}
 void CMDApplyJoinGroupAuthReq::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDApplyJoinGroupAuthReq.userID)
}

// optional uint32 groupID = 2;
void CMDApplyJoinGroupAuthReq::clear_groupid() {
  groupid_ = 0u;
}
 ::google::protobuf::uint32 CMDApplyJoinGroupAuthReq::groupid() const {
  // @@protoc_insertion_point(field_get:CMDApplyJoinGroupAuthReq.groupID)
  return groupid_;
}
 void CMDApplyJoinGroupAuthReq::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDApplyJoinGroupAuthReq.groupID)
}

// optional .e_UserJoinGroupAuthType authType = 3;
void CMDApplyJoinGroupAuthReq::clear_authtype() {
  authtype_ = 0;
}
 ::e_UserJoinGroupAuthType CMDApplyJoinGroupAuthReq::authtype() const {
  // @@protoc_insertion_point(field_get:CMDApplyJoinGroupAuthReq.authType)
  return static_cast< ::e_UserJoinGroupAuthType >(authtype_);
}
 void CMDApplyJoinGroupAuthReq::set_authtype(::e_UserJoinGroupAuthType value) {
  
  authtype_ = value;
  // @@protoc_insertion_point(field_set:CMDApplyJoinGroupAuthReq.authType)
}

// optional string msg = 4;
void CMDApplyJoinGroupAuthReq::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CMDApplyJoinGroupAuthReq::msg() const {
  // @@protoc_insertion_point(field_get:CMDApplyJoinGroupAuthReq.msg)
  return msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDApplyJoinGroupAuthReq::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDApplyJoinGroupAuthReq.msg)
}
 void CMDApplyJoinGroupAuthReq::set_msg(const char* value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDApplyJoinGroupAuthReq.msg)
}
 void CMDApplyJoinGroupAuthReq::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDApplyJoinGroupAuthReq.msg)
}
 ::std::string* CMDApplyJoinGroupAuthReq::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:CMDApplyJoinGroupAuthReq.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMDApplyJoinGroupAuthReq::release_msg() {
  // @@protoc_insertion_point(field_release:CMDApplyJoinGroupAuthReq.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDApplyJoinGroupAuthReq::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:CMDApplyJoinGroupAuthReq.msg)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDApplyJoinGroupAuthResp::kUserIDFieldNumber;
const int CMDApplyJoinGroupAuthResp::kGroupIDFieldNumber;
const int CMDApplyJoinGroupAuthResp::kErrInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDApplyJoinGroupAuthResp::CMDApplyJoinGroupAuthResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDApplyJoinGroupAuthResp)
}

void CMDApplyJoinGroupAuthResp::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  errinfo_ = const_cast< ::CMDErrCode*>(&::CMDErrCode::default_instance());
}

CMDApplyJoinGroupAuthResp::CMDApplyJoinGroupAuthResp(const CMDApplyJoinGroupAuthResp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDApplyJoinGroupAuthResp)
}

void CMDApplyJoinGroupAuthResp::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  userid_ = 0u;
  groupid_ = 0u;
  errinfo_ = NULL;
}

CMDApplyJoinGroupAuthResp::~CMDApplyJoinGroupAuthResp() {
  // @@protoc_insertion_point(destructor:CMDApplyJoinGroupAuthResp)
  SharedDtor();
}

void CMDApplyJoinGroupAuthResp::SharedDtor() {
  if (this != default_instance_) {
    delete errinfo_;
  }
}

void CMDApplyJoinGroupAuthResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDApplyJoinGroupAuthResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDApplyJoinGroupAuthResp_descriptor_;
}

const CMDApplyJoinGroupAuthResp& CMDApplyJoinGroupAuthResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RoomSvr_2eproto();
  return *default_instance_;
}

CMDApplyJoinGroupAuthResp* CMDApplyJoinGroupAuthResp::default_instance_ = NULL;

CMDApplyJoinGroupAuthResp* CMDApplyJoinGroupAuthResp::New(::google::protobuf::Arena* arena) const {
  CMDApplyJoinGroupAuthResp* n = new CMDApplyJoinGroupAuthResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDApplyJoinGroupAuthResp::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDApplyJoinGroupAuthResp)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDApplyJoinGroupAuthResp, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDApplyJoinGroupAuthResp*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(userid_, groupid_);
  if (GetArenaNoVirtual() == NULL && errinfo_ != NULL) delete errinfo_;
  errinfo_ = NULL;

#undef ZR_HELPER_
#undef ZR_

}

bool CMDApplyJoinGroupAuthResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDApplyJoinGroupAuthResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 userID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_groupID;
        break;
      }

      // optional uint32 groupID = 2;
      case 2: {
        if (tag == 16) {
         parse_groupID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &groupid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_errInfo;
        break;
      }

      // optional .CMDErrCode errInfo = 3;
      case 3: {
        if (tag == 26) {
         parse_errInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_errinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDApplyJoinGroupAuthResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDApplyJoinGroupAuthResp)
  return false;
#undef DO_
}

void CMDApplyJoinGroupAuthResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDApplyJoinGroupAuthResp)
  // optional uint32 userID = 1;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->userid(), output);
  }

  // optional uint32 groupID = 2;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->groupid(), output);
  }

  // optional .CMDErrCode errInfo = 3;
  if (this->has_errinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->errinfo_, output);
  }

  // @@protoc_insertion_point(serialize_end:CMDApplyJoinGroupAuthResp)
}

::google::protobuf::uint8* CMDApplyJoinGroupAuthResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDApplyJoinGroupAuthResp)
  // optional uint32 userID = 1;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->userid(), target);
  }

  // optional uint32 groupID = 2;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->groupid(), target);
  }

  // optional .CMDErrCode errInfo = 3;
  if (this->has_errinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->errinfo_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDApplyJoinGroupAuthResp)
  return target;
}

int CMDApplyJoinGroupAuthResp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDApplyJoinGroupAuthResp)
  int total_size = 0;

  // optional uint32 userID = 1;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userid());
  }

  // optional uint32 groupID = 2;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->groupid());
  }

  // optional .CMDErrCode errInfo = 3;
  if (this->has_errinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->errinfo_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDApplyJoinGroupAuthResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDApplyJoinGroupAuthResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDApplyJoinGroupAuthResp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDApplyJoinGroupAuthResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDApplyJoinGroupAuthResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDApplyJoinGroupAuthResp)
    MergeFrom(*source);
  }
}

void CMDApplyJoinGroupAuthResp::MergeFrom(const CMDApplyJoinGroupAuthResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDApplyJoinGroupAuthResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
  if (from.has_errinfo()) {
    mutable_errinfo()->::CMDErrCode::MergeFrom(from.errinfo());
  }
}

void CMDApplyJoinGroupAuthResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDApplyJoinGroupAuthResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDApplyJoinGroupAuthResp::CopyFrom(const CMDApplyJoinGroupAuthResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDApplyJoinGroupAuthResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDApplyJoinGroupAuthResp::IsInitialized() const {

  return true;
}

void CMDApplyJoinGroupAuthResp::Swap(CMDApplyJoinGroupAuthResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDApplyJoinGroupAuthResp::InternalSwap(CMDApplyJoinGroupAuthResp* other) {
  std::swap(userid_, other->userid_);
  std::swap(groupid_, other->groupid_);
  std::swap(errinfo_, other->errinfo_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDApplyJoinGroupAuthResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDApplyJoinGroupAuthResp_descriptor_;
  metadata.reflection = CMDApplyJoinGroupAuthResp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDApplyJoinGroupAuthResp

// optional uint32 userID = 1;
void CMDApplyJoinGroupAuthResp::clear_userid() {
  userid_ = 0u;
}
 ::google::protobuf::uint32 CMDApplyJoinGroupAuthResp::userid() const {
  // @@protoc_insertion_point(field_get:CMDApplyJoinGroupAuthResp.userID)
  return userid_;
}
 void CMDApplyJoinGroupAuthResp::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDApplyJoinGroupAuthResp.userID)
}

// optional uint32 groupID = 2;
void CMDApplyJoinGroupAuthResp::clear_groupid() {
  groupid_ = 0u;
}
 ::google::protobuf::uint32 CMDApplyJoinGroupAuthResp::groupid() const {
  // @@protoc_insertion_point(field_get:CMDApplyJoinGroupAuthResp.groupID)
  return groupid_;
}
 void CMDApplyJoinGroupAuthResp::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDApplyJoinGroupAuthResp.groupID)
}

// optional .CMDErrCode errInfo = 3;
bool CMDApplyJoinGroupAuthResp::has_errinfo() const {
  return !_is_default_instance_ && errinfo_ != NULL;
}
void CMDApplyJoinGroupAuthResp::clear_errinfo() {
  if (GetArenaNoVirtual() == NULL && errinfo_ != NULL) delete errinfo_;
  errinfo_ = NULL;
}
const ::CMDErrCode& CMDApplyJoinGroupAuthResp::errinfo() const {
  // @@protoc_insertion_point(field_get:CMDApplyJoinGroupAuthResp.errInfo)
  return errinfo_ != NULL ? *errinfo_ : *default_instance_->errinfo_;
}
::CMDErrCode* CMDApplyJoinGroupAuthResp::mutable_errinfo() {
  
  if (errinfo_ == NULL) {
    errinfo_ = new ::CMDErrCode;
  }
  // @@protoc_insertion_point(field_mutable:CMDApplyJoinGroupAuthResp.errInfo)
  return errinfo_;
}
::CMDErrCode* CMDApplyJoinGroupAuthResp::release_errinfo() {
  // @@protoc_insertion_point(field_release:CMDApplyJoinGroupAuthResp.errInfo)
  
  ::CMDErrCode* temp = errinfo_;
  errinfo_ = NULL;
  return temp;
}
void CMDApplyJoinGroupAuthResp::set_allocated_errinfo(::CMDErrCode* errinfo) {
  delete errinfo_;
  errinfo_ = errinfo;
  if (errinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDApplyJoinGroupAuthResp.errInfo)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDHandleJoinGroupAuthReq::kRunUserIDFieldNumber;
const int CMDHandleJoinGroupAuthReq::kGroupIDFieldNumber;
const int CMDHandleJoinGroupAuthReq::kApplyUserIDFieldNumber;
const int CMDHandleJoinGroupAuthReq::kAuthIDFieldNumber;
const int CMDHandleJoinGroupAuthReq::kAgreeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDHandleJoinGroupAuthReq::CMDHandleJoinGroupAuthReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDHandleJoinGroupAuthReq)
}

void CMDHandleJoinGroupAuthReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDHandleJoinGroupAuthReq::CMDHandleJoinGroupAuthReq(const CMDHandleJoinGroupAuthReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDHandleJoinGroupAuthReq)
}

void CMDHandleJoinGroupAuthReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  run_userid_ = 0u;
  groupid_ = 0u;
  apply_userid_ = 0u;
  authid_ = 0u;
  agree_ = false;
}

CMDHandleJoinGroupAuthReq::~CMDHandleJoinGroupAuthReq() {
  // @@protoc_insertion_point(destructor:CMDHandleJoinGroupAuthReq)
  SharedDtor();
}

void CMDHandleJoinGroupAuthReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMDHandleJoinGroupAuthReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDHandleJoinGroupAuthReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDHandleJoinGroupAuthReq_descriptor_;
}

const CMDHandleJoinGroupAuthReq& CMDHandleJoinGroupAuthReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RoomSvr_2eproto();
  return *default_instance_;
}

CMDHandleJoinGroupAuthReq* CMDHandleJoinGroupAuthReq::default_instance_ = NULL;

CMDHandleJoinGroupAuthReq* CMDHandleJoinGroupAuthReq::New(::google::protobuf::Arena* arena) const {
  CMDHandleJoinGroupAuthReq* n = new CMDHandleJoinGroupAuthReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDHandleJoinGroupAuthReq::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDHandleJoinGroupAuthReq)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDHandleJoinGroupAuthReq, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDHandleJoinGroupAuthReq*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(run_userid_, agree_);

#undef ZR_HELPER_
#undef ZR_

}

bool CMDHandleJoinGroupAuthReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDHandleJoinGroupAuthReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 run_userID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &run_userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_groupID;
        break;
      }

      // optional uint32 groupID = 2;
      case 2: {
        if (tag == 16) {
         parse_groupID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &groupid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_apply_userID;
        break;
      }

      // optional uint32 apply_userID = 3;
      case 3: {
        if (tag == 24) {
         parse_apply_userID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &apply_userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_authID;
        break;
      }

      // optional uint32 authID = 4;
      case 4: {
        if (tag == 32) {
         parse_authID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &authid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_agree;
        break;
      }

      // optional bool agree = 5;
      case 5: {
        if (tag == 40) {
         parse_agree:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &agree_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDHandleJoinGroupAuthReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDHandleJoinGroupAuthReq)
  return false;
#undef DO_
}

void CMDHandleJoinGroupAuthReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDHandleJoinGroupAuthReq)
  // optional uint32 run_userID = 1;
  if (this->run_userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->run_userid(), output);
  }

  // optional uint32 groupID = 2;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->groupid(), output);
  }

  // optional uint32 apply_userID = 3;
  if (this->apply_userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->apply_userid(), output);
  }

  // optional uint32 authID = 4;
  if (this->authid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->authid(), output);
  }

  // optional bool agree = 5;
  if (this->agree() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->agree(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDHandleJoinGroupAuthReq)
}

::google::protobuf::uint8* CMDHandleJoinGroupAuthReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDHandleJoinGroupAuthReq)
  // optional uint32 run_userID = 1;
  if (this->run_userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->run_userid(), target);
  }

  // optional uint32 groupID = 2;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->groupid(), target);
  }

  // optional uint32 apply_userID = 3;
  if (this->apply_userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->apply_userid(), target);
  }

  // optional uint32 authID = 4;
  if (this->authid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->authid(), target);
  }

  // optional bool agree = 5;
  if (this->agree() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->agree(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDHandleJoinGroupAuthReq)
  return target;
}

int CMDHandleJoinGroupAuthReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDHandleJoinGroupAuthReq)
  int total_size = 0;

  // optional uint32 run_userID = 1;
  if (this->run_userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->run_userid());
  }

  // optional uint32 groupID = 2;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->groupid());
  }

  // optional uint32 apply_userID = 3;
  if (this->apply_userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->apply_userid());
  }

  // optional uint32 authID = 4;
  if (this->authid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->authid());
  }

  // optional bool agree = 5;
  if (this->agree() != 0) {
    total_size += 1 + 1;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDHandleJoinGroupAuthReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDHandleJoinGroupAuthReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDHandleJoinGroupAuthReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDHandleJoinGroupAuthReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDHandleJoinGroupAuthReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDHandleJoinGroupAuthReq)
    MergeFrom(*source);
  }
}

void CMDHandleJoinGroupAuthReq::MergeFrom(const CMDHandleJoinGroupAuthReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDHandleJoinGroupAuthReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.run_userid() != 0) {
    set_run_userid(from.run_userid());
  }
  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
  if (from.apply_userid() != 0) {
    set_apply_userid(from.apply_userid());
  }
  if (from.authid() != 0) {
    set_authid(from.authid());
  }
  if (from.agree() != 0) {
    set_agree(from.agree());
  }
}

void CMDHandleJoinGroupAuthReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDHandleJoinGroupAuthReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDHandleJoinGroupAuthReq::CopyFrom(const CMDHandleJoinGroupAuthReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDHandleJoinGroupAuthReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDHandleJoinGroupAuthReq::IsInitialized() const {

  return true;
}

void CMDHandleJoinGroupAuthReq::Swap(CMDHandleJoinGroupAuthReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDHandleJoinGroupAuthReq::InternalSwap(CMDHandleJoinGroupAuthReq* other) {
  std::swap(run_userid_, other->run_userid_);
  std::swap(groupid_, other->groupid_);
  std::swap(apply_userid_, other->apply_userid_);
  std::swap(authid_, other->authid_);
  std::swap(agree_, other->agree_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDHandleJoinGroupAuthReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDHandleJoinGroupAuthReq_descriptor_;
  metadata.reflection = CMDHandleJoinGroupAuthReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDHandleJoinGroupAuthReq

// optional uint32 run_userID = 1;
void CMDHandleJoinGroupAuthReq::clear_run_userid() {
  run_userid_ = 0u;
}
 ::google::protobuf::uint32 CMDHandleJoinGroupAuthReq::run_userid() const {
  // @@protoc_insertion_point(field_get:CMDHandleJoinGroupAuthReq.run_userID)
  return run_userid_;
}
 void CMDHandleJoinGroupAuthReq::set_run_userid(::google::protobuf::uint32 value) {
  
  run_userid_ = value;
  // @@protoc_insertion_point(field_set:CMDHandleJoinGroupAuthReq.run_userID)
}

// optional uint32 groupID = 2;
void CMDHandleJoinGroupAuthReq::clear_groupid() {
  groupid_ = 0u;
}
 ::google::protobuf::uint32 CMDHandleJoinGroupAuthReq::groupid() const {
  // @@protoc_insertion_point(field_get:CMDHandleJoinGroupAuthReq.groupID)
  return groupid_;
}
 void CMDHandleJoinGroupAuthReq::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDHandleJoinGroupAuthReq.groupID)
}

// optional uint32 apply_userID = 3;
void CMDHandleJoinGroupAuthReq::clear_apply_userid() {
  apply_userid_ = 0u;
}
 ::google::protobuf::uint32 CMDHandleJoinGroupAuthReq::apply_userid() const {
  // @@protoc_insertion_point(field_get:CMDHandleJoinGroupAuthReq.apply_userID)
  return apply_userid_;
}
 void CMDHandleJoinGroupAuthReq::set_apply_userid(::google::protobuf::uint32 value) {
  
  apply_userid_ = value;
  // @@protoc_insertion_point(field_set:CMDHandleJoinGroupAuthReq.apply_userID)
}

// optional uint32 authID = 4;
void CMDHandleJoinGroupAuthReq::clear_authid() {
  authid_ = 0u;
}
 ::google::protobuf::uint32 CMDHandleJoinGroupAuthReq::authid() const {
  // @@protoc_insertion_point(field_get:CMDHandleJoinGroupAuthReq.authID)
  return authid_;
}
 void CMDHandleJoinGroupAuthReq::set_authid(::google::protobuf::uint32 value) {
  
  authid_ = value;
  // @@protoc_insertion_point(field_set:CMDHandleJoinGroupAuthReq.authID)
}

// optional bool agree = 5;
void CMDHandleJoinGroupAuthReq::clear_agree() {
  agree_ = false;
}
 bool CMDHandleJoinGroupAuthReq::agree() const {
  // @@protoc_insertion_point(field_get:CMDHandleJoinGroupAuthReq.agree)
  return agree_;
}
 void CMDHandleJoinGroupAuthReq::set_agree(bool value) {
  
  agree_ = value;
  // @@protoc_insertion_point(field_set:CMDHandleJoinGroupAuthReq.agree)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDHandleJoinGroupAuthResp::kRunUserIDFieldNumber;
const int CMDHandleJoinGroupAuthResp::kGroupIDFieldNumber;
const int CMDHandleJoinGroupAuthResp::kApplyUserIDFieldNumber;
const int CMDHandleJoinGroupAuthResp::kAuthIDFieldNumber;
const int CMDHandleJoinGroupAuthResp::kAgreeFieldNumber;
const int CMDHandleJoinGroupAuthResp::kErrInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDHandleJoinGroupAuthResp::CMDHandleJoinGroupAuthResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDHandleJoinGroupAuthResp)
}

void CMDHandleJoinGroupAuthResp::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  errinfo_ = const_cast< ::CMDErrCode*>(&::CMDErrCode::default_instance());
}

CMDHandleJoinGroupAuthResp::CMDHandleJoinGroupAuthResp(const CMDHandleJoinGroupAuthResp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDHandleJoinGroupAuthResp)
}

void CMDHandleJoinGroupAuthResp::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  run_userid_ = 0u;
  groupid_ = 0u;
  apply_userid_ = 0u;
  authid_ = 0u;
  agree_ = false;
  errinfo_ = NULL;
}

CMDHandleJoinGroupAuthResp::~CMDHandleJoinGroupAuthResp() {
  // @@protoc_insertion_point(destructor:CMDHandleJoinGroupAuthResp)
  SharedDtor();
}

void CMDHandleJoinGroupAuthResp::SharedDtor() {
  if (this != default_instance_) {
    delete errinfo_;
  }
}

void CMDHandleJoinGroupAuthResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDHandleJoinGroupAuthResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDHandleJoinGroupAuthResp_descriptor_;
}

const CMDHandleJoinGroupAuthResp& CMDHandleJoinGroupAuthResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RoomSvr_2eproto();
  return *default_instance_;
}

CMDHandleJoinGroupAuthResp* CMDHandleJoinGroupAuthResp::default_instance_ = NULL;

CMDHandleJoinGroupAuthResp* CMDHandleJoinGroupAuthResp::New(::google::protobuf::Arena* arena) const {
  CMDHandleJoinGroupAuthResp* n = new CMDHandleJoinGroupAuthResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDHandleJoinGroupAuthResp::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDHandleJoinGroupAuthResp)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDHandleJoinGroupAuthResp, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDHandleJoinGroupAuthResp*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(run_userid_, authid_);
  agree_ = false;
  if (GetArenaNoVirtual() == NULL && errinfo_ != NULL) delete errinfo_;
  errinfo_ = NULL;

#undef ZR_HELPER_
#undef ZR_

}

bool CMDHandleJoinGroupAuthResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDHandleJoinGroupAuthResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 run_userID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &run_userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_groupID;
        break;
      }

      // optional uint32 groupID = 2;
      case 2: {
        if (tag == 16) {
         parse_groupID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &groupid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_apply_userID;
        break;
      }

      // optional uint32 apply_userID = 3;
      case 3: {
        if (tag == 24) {
         parse_apply_userID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &apply_userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_authID;
        break;
      }

      // optional uint32 authID = 4;
      case 4: {
        if (tag == 32) {
         parse_authID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &authid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_agree;
        break;
      }

      // optional bool agree = 5;
      case 5: {
        if (tag == 40) {
         parse_agree:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &agree_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_errInfo;
        break;
      }

      // optional .CMDErrCode errInfo = 6;
      case 6: {
        if (tag == 50) {
         parse_errInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_errinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDHandleJoinGroupAuthResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDHandleJoinGroupAuthResp)
  return false;
#undef DO_
}

void CMDHandleJoinGroupAuthResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDHandleJoinGroupAuthResp)
  // optional uint32 run_userID = 1;
  if (this->run_userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->run_userid(), output);
  }

  // optional uint32 groupID = 2;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->groupid(), output);
  }

  // optional uint32 apply_userID = 3;
  if (this->apply_userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->apply_userid(), output);
  }

  // optional uint32 authID = 4;
  if (this->authid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->authid(), output);
  }

  // optional bool agree = 5;
  if (this->agree() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->agree(), output);
  }

  // optional .CMDErrCode errInfo = 6;
  if (this->has_errinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->errinfo_, output);
  }

  // @@protoc_insertion_point(serialize_end:CMDHandleJoinGroupAuthResp)
}

::google::protobuf::uint8* CMDHandleJoinGroupAuthResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDHandleJoinGroupAuthResp)
  // optional uint32 run_userID = 1;
  if (this->run_userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->run_userid(), target);
  }

  // optional uint32 groupID = 2;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->groupid(), target);
  }

  // optional uint32 apply_userID = 3;
  if (this->apply_userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->apply_userid(), target);
  }

  // optional uint32 authID = 4;
  if (this->authid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->authid(), target);
  }

  // optional bool agree = 5;
  if (this->agree() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->agree(), target);
  }

  // optional .CMDErrCode errInfo = 6;
  if (this->has_errinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->errinfo_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDHandleJoinGroupAuthResp)
  return target;
}

int CMDHandleJoinGroupAuthResp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDHandleJoinGroupAuthResp)
  int total_size = 0;

  // optional uint32 run_userID = 1;
  if (this->run_userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->run_userid());
  }

  // optional uint32 groupID = 2;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->groupid());
  }

  // optional uint32 apply_userID = 3;
  if (this->apply_userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->apply_userid());
  }

  // optional uint32 authID = 4;
  if (this->authid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->authid());
  }

  // optional bool agree = 5;
  if (this->agree() != 0) {
    total_size += 1 + 1;
  }

  // optional .CMDErrCode errInfo = 6;
  if (this->has_errinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->errinfo_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDHandleJoinGroupAuthResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDHandleJoinGroupAuthResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDHandleJoinGroupAuthResp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDHandleJoinGroupAuthResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDHandleJoinGroupAuthResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDHandleJoinGroupAuthResp)
    MergeFrom(*source);
  }
}

void CMDHandleJoinGroupAuthResp::MergeFrom(const CMDHandleJoinGroupAuthResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDHandleJoinGroupAuthResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.run_userid() != 0) {
    set_run_userid(from.run_userid());
  }
  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
  if (from.apply_userid() != 0) {
    set_apply_userid(from.apply_userid());
  }
  if (from.authid() != 0) {
    set_authid(from.authid());
  }
  if (from.agree() != 0) {
    set_agree(from.agree());
  }
  if (from.has_errinfo()) {
    mutable_errinfo()->::CMDErrCode::MergeFrom(from.errinfo());
  }
}

void CMDHandleJoinGroupAuthResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDHandleJoinGroupAuthResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDHandleJoinGroupAuthResp::CopyFrom(const CMDHandleJoinGroupAuthResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDHandleJoinGroupAuthResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDHandleJoinGroupAuthResp::IsInitialized() const {

  return true;
}

void CMDHandleJoinGroupAuthResp::Swap(CMDHandleJoinGroupAuthResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDHandleJoinGroupAuthResp::InternalSwap(CMDHandleJoinGroupAuthResp* other) {
  std::swap(run_userid_, other->run_userid_);
  std::swap(groupid_, other->groupid_);
  std::swap(apply_userid_, other->apply_userid_);
  std::swap(authid_, other->authid_);
  std::swap(agree_, other->agree_);
  std::swap(errinfo_, other->errinfo_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDHandleJoinGroupAuthResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDHandleJoinGroupAuthResp_descriptor_;
  metadata.reflection = CMDHandleJoinGroupAuthResp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDHandleJoinGroupAuthResp

// optional uint32 run_userID = 1;
void CMDHandleJoinGroupAuthResp::clear_run_userid() {
  run_userid_ = 0u;
}
 ::google::protobuf::uint32 CMDHandleJoinGroupAuthResp::run_userid() const {
  // @@protoc_insertion_point(field_get:CMDHandleJoinGroupAuthResp.run_userID)
  return run_userid_;
}
 void CMDHandleJoinGroupAuthResp::set_run_userid(::google::protobuf::uint32 value) {
  
  run_userid_ = value;
  // @@protoc_insertion_point(field_set:CMDHandleJoinGroupAuthResp.run_userID)
}

// optional uint32 groupID = 2;
void CMDHandleJoinGroupAuthResp::clear_groupid() {
  groupid_ = 0u;
}
 ::google::protobuf::uint32 CMDHandleJoinGroupAuthResp::groupid() const {
  // @@protoc_insertion_point(field_get:CMDHandleJoinGroupAuthResp.groupID)
  return groupid_;
}
 void CMDHandleJoinGroupAuthResp::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDHandleJoinGroupAuthResp.groupID)
}

// optional uint32 apply_userID = 3;
void CMDHandleJoinGroupAuthResp::clear_apply_userid() {
  apply_userid_ = 0u;
}
 ::google::protobuf::uint32 CMDHandleJoinGroupAuthResp::apply_userid() const {
  // @@protoc_insertion_point(field_get:CMDHandleJoinGroupAuthResp.apply_userID)
  return apply_userid_;
}
 void CMDHandleJoinGroupAuthResp::set_apply_userid(::google::protobuf::uint32 value) {
  
  apply_userid_ = value;
  // @@protoc_insertion_point(field_set:CMDHandleJoinGroupAuthResp.apply_userID)
}

// optional uint32 authID = 4;
void CMDHandleJoinGroupAuthResp::clear_authid() {
  authid_ = 0u;
}
 ::google::protobuf::uint32 CMDHandleJoinGroupAuthResp::authid() const {
  // @@protoc_insertion_point(field_get:CMDHandleJoinGroupAuthResp.authID)
  return authid_;
}
 void CMDHandleJoinGroupAuthResp::set_authid(::google::protobuf::uint32 value) {
  
  authid_ = value;
  // @@protoc_insertion_point(field_set:CMDHandleJoinGroupAuthResp.authID)
}

// optional bool agree = 5;
void CMDHandleJoinGroupAuthResp::clear_agree() {
  agree_ = false;
}
 bool CMDHandleJoinGroupAuthResp::agree() const {
  // @@protoc_insertion_point(field_get:CMDHandleJoinGroupAuthResp.agree)
  return agree_;
}
 void CMDHandleJoinGroupAuthResp::set_agree(bool value) {
  
  agree_ = value;
  // @@protoc_insertion_point(field_set:CMDHandleJoinGroupAuthResp.agree)
}

// optional .CMDErrCode errInfo = 6;
bool CMDHandleJoinGroupAuthResp::has_errinfo() const {
  return !_is_default_instance_ && errinfo_ != NULL;
}
void CMDHandleJoinGroupAuthResp::clear_errinfo() {
  if (GetArenaNoVirtual() == NULL && errinfo_ != NULL) delete errinfo_;
  errinfo_ = NULL;
}
const ::CMDErrCode& CMDHandleJoinGroupAuthResp::errinfo() const {
  // @@protoc_insertion_point(field_get:CMDHandleJoinGroupAuthResp.errInfo)
  return errinfo_ != NULL ? *errinfo_ : *default_instance_->errinfo_;
}
::CMDErrCode* CMDHandleJoinGroupAuthResp::mutable_errinfo() {
  
  if (errinfo_ == NULL) {
    errinfo_ = new ::CMDErrCode;
  }
  // @@protoc_insertion_point(field_mutable:CMDHandleJoinGroupAuthResp.errInfo)
  return errinfo_;
}
::CMDErrCode* CMDHandleJoinGroupAuthResp::release_errinfo() {
  // @@protoc_insertion_point(field_release:CMDHandleJoinGroupAuthResp.errInfo)
  
  ::CMDErrCode* temp = errinfo_;
  errinfo_ = NULL;
  return temp;
}
void CMDHandleJoinGroupAuthResp::set_allocated_errinfo(::CMDErrCode* errinfo) {
  delete errinfo_;
  errinfo_ = errinfo;
  if (errinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDHandleJoinGroupAuthResp.errInfo)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDSetMicModeReq::kVcbidFieldNumber;
const int CMDSetMicModeReq::kUseridFieldNumber;
const int CMDSetMicModeReq::kMicmodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDSetMicModeReq::CMDSetMicModeReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDSetMicModeReq)
}

void CMDSetMicModeReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDSetMicModeReq::CMDSetMicModeReq(const CMDSetMicModeReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDSetMicModeReq)
}

void CMDSetMicModeReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  vcbid_ = 0u;
  userid_ = 0u;
  micmode_ = 0;
}

CMDSetMicModeReq::~CMDSetMicModeReq() {
  // @@protoc_insertion_point(destructor:CMDSetMicModeReq)
  SharedDtor();
}

void CMDSetMicModeReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMDSetMicModeReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDSetMicModeReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDSetMicModeReq_descriptor_;
}

const CMDSetMicModeReq& CMDSetMicModeReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RoomSvr_2eproto();
  return *default_instance_;
}

CMDSetMicModeReq* CMDSetMicModeReq::default_instance_ = NULL;

CMDSetMicModeReq* CMDSetMicModeReq::New(::google::protobuf::Arena* arena) const {
  CMDSetMicModeReq* n = new CMDSetMicModeReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDSetMicModeReq::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDSetMicModeReq)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDSetMicModeReq, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDSetMicModeReq*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(vcbid_, micmode_);

#undef ZR_HELPER_
#undef ZR_

}

bool CMDSetMicModeReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDSetMicModeReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 vcbid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &vcbid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_userid;
        break;
      }

      // optional uint32 userid = 2;
      case 2: {
        if (tag == 16) {
         parse_userid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_micmode;
        break;
      }

      // optional .e_MicMode micmode = 3;
      case 3: {
        if (tag == 24) {
         parse_micmode:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_micmode(static_cast< ::e_MicMode >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDSetMicModeReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDSetMicModeReq)
  return false;
#undef DO_
}

void CMDSetMicModeReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDSetMicModeReq)
  // optional uint32 vcbid = 1;
  if (this->vcbid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->vcbid(), output);
  }

  // optional uint32 userid = 2;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->userid(), output);
  }

  // optional .e_MicMode micmode = 3;
  if (this->micmode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->micmode(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDSetMicModeReq)
}

::google::protobuf::uint8* CMDSetMicModeReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDSetMicModeReq)
  // optional uint32 vcbid = 1;
  if (this->vcbid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->vcbid(), target);
  }

  // optional uint32 userid = 2;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->userid(), target);
  }

  // optional .e_MicMode micmode = 3;
  if (this->micmode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->micmode(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDSetMicModeReq)
  return target;
}

int CMDSetMicModeReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDSetMicModeReq)
  int total_size = 0;

  // optional uint32 vcbid = 1;
  if (this->vcbid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->vcbid());
  }

  // optional uint32 userid = 2;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userid());
  }

  // optional .e_MicMode micmode = 3;
  if (this->micmode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->micmode());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDSetMicModeReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDSetMicModeReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDSetMicModeReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDSetMicModeReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDSetMicModeReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDSetMicModeReq)
    MergeFrom(*source);
  }
}

void CMDSetMicModeReq::MergeFrom(const CMDSetMicModeReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDSetMicModeReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.vcbid() != 0) {
    set_vcbid(from.vcbid());
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.micmode() != 0) {
    set_micmode(from.micmode());
  }
}

void CMDSetMicModeReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDSetMicModeReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDSetMicModeReq::CopyFrom(const CMDSetMicModeReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDSetMicModeReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDSetMicModeReq::IsInitialized() const {

  return true;
}

void CMDSetMicModeReq::Swap(CMDSetMicModeReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDSetMicModeReq::InternalSwap(CMDSetMicModeReq* other) {
  std::swap(vcbid_, other->vcbid_);
  std::swap(userid_, other->userid_);
  std::swap(micmode_, other->micmode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDSetMicModeReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDSetMicModeReq_descriptor_;
  metadata.reflection = CMDSetMicModeReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDSetMicModeReq

// optional uint32 vcbid = 1;
void CMDSetMicModeReq::clear_vcbid() {
  vcbid_ = 0u;
}
 ::google::protobuf::uint32 CMDSetMicModeReq::vcbid() const {
  // @@protoc_insertion_point(field_get:CMDSetMicModeReq.vcbid)
  return vcbid_;
}
 void CMDSetMicModeReq::set_vcbid(::google::protobuf::uint32 value) {
  
  vcbid_ = value;
  // @@protoc_insertion_point(field_set:CMDSetMicModeReq.vcbid)
}

// optional uint32 userid = 2;
void CMDSetMicModeReq::clear_userid() {
  userid_ = 0u;
}
 ::google::protobuf::uint32 CMDSetMicModeReq::userid() const {
  // @@protoc_insertion_point(field_get:CMDSetMicModeReq.userid)
  return userid_;
}
 void CMDSetMicModeReq::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDSetMicModeReq.userid)
}

// optional .e_MicMode micmode = 3;
void CMDSetMicModeReq::clear_micmode() {
  micmode_ = 0;
}
 ::e_MicMode CMDSetMicModeReq::micmode() const {
  // @@protoc_insertion_point(field_get:CMDSetMicModeReq.micmode)
  return static_cast< ::e_MicMode >(micmode_);
}
 void CMDSetMicModeReq::set_micmode(::e_MicMode value) {
  
  micmode_ = value;
  // @@protoc_insertion_point(field_set:CMDSetMicModeReq.micmode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDSetMicModeResp::kVcbidFieldNumber;
const int CMDSetMicModeResp::kUseridFieldNumber;
const int CMDSetMicModeResp::kErrInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDSetMicModeResp::CMDSetMicModeResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDSetMicModeResp)
}

void CMDSetMicModeResp::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  errinfo_ = const_cast< ::CMDErrCode*>(&::CMDErrCode::default_instance());
}

CMDSetMicModeResp::CMDSetMicModeResp(const CMDSetMicModeResp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDSetMicModeResp)
}

void CMDSetMicModeResp::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  vcbid_ = 0u;
  userid_ = 0u;
  errinfo_ = NULL;
}

CMDSetMicModeResp::~CMDSetMicModeResp() {
  // @@protoc_insertion_point(destructor:CMDSetMicModeResp)
  SharedDtor();
}

void CMDSetMicModeResp::SharedDtor() {
  if (this != default_instance_) {
    delete errinfo_;
  }
}

void CMDSetMicModeResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDSetMicModeResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDSetMicModeResp_descriptor_;
}

const CMDSetMicModeResp& CMDSetMicModeResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RoomSvr_2eproto();
  return *default_instance_;
}

CMDSetMicModeResp* CMDSetMicModeResp::default_instance_ = NULL;

CMDSetMicModeResp* CMDSetMicModeResp::New(::google::protobuf::Arena* arena) const {
  CMDSetMicModeResp* n = new CMDSetMicModeResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDSetMicModeResp::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDSetMicModeResp)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDSetMicModeResp, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDSetMicModeResp*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(vcbid_, userid_);
  if (GetArenaNoVirtual() == NULL && errinfo_ != NULL) delete errinfo_;
  errinfo_ = NULL;

#undef ZR_HELPER_
#undef ZR_

}

bool CMDSetMicModeResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDSetMicModeResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 vcbid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &vcbid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_userid;
        break;
      }

      // optional uint32 userid = 2;
      case 2: {
        if (tag == 16) {
         parse_userid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_errInfo;
        break;
      }

      // optional .CMDErrCode errInfo = 3;
      case 3: {
        if (tag == 26) {
         parse_errInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_errinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDSetMicModeResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDSetMicModeResp)
  return false;
#undef DO_
}

void CMDSetMicModeResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDSetMicModeResp)
  // optional uint32 vcbid = 1;
  if (this->vcbid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->vcbid(), output);
  }

  // optional uint32 userid = 2;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->userid(), output);
  }

  // optional .CMDErrCode errInfo = 3;
  if (this->has_errinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->errinfo_, output);
  }

  // @@protoc_insertion_point(serialize_end:CMDSetMicModeResp)
}

::google::protobuf::uint8* CMDSetMicModeResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDSetMicModeResp)
  // optional uint32 vcbid = 1;
  if (this->vcbid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->vcbid(), target);
  }

  // optional uint32 userid = 2;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->userid(), target);
  }

  // optional .CMDErrCode errInfo = 3;
  if (this->has_errinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->errinfo_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDSetMicModeResp)
  return target;
}

int CMDSetMicModeResp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDSetMicModeResp)
  int total_size = 0;

  // optional uint32 vcbid = 1;
  if (this->vcbid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->vcbid());
  }

  // optional uint32 userid = 2;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userid());
  }

  // optional .CMDErrCode errInfo = 3;
  if (this->has_errinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->errinfo_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDSetMicModeResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDSetMicModeResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDSetMicModeResp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDSetMicModeResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDSetMicModeResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDSetMicModeResp)
    MergeFrom(*source);
  }
}

void CMDSetMicModeResp::MergeFrom(const CMDSetMicModeResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDSetMicModeResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.vcbid() != 0) {
    set_vcbid(from.vcbid());
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.has_errinfo()) {
    mutable_errinfo()->::CMDErrCode::MergeFrom(from.errinfo());
  }
}

void CMDSetMicModeResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDSetMicModeResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDSetMicModeResp::CopyFrom(const CMDSetMicModeResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDSetMicModeResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDSetMicModeResp::IsInitialized() const {

  return true;
}

void CMDSetMicModeResp::Swap(CMDSetMicModeResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDSetMicModeResp::InternalSwap(CMDSetMicModeResp* other) {
  std::swap(vcbid_, other->vcbid_);
  std::swap(userid_, other->userid_);
  std::swap(errinfo_, other->errinfo_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDSetMicModeResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDSetMicModeResp_descriptor_;
  metadata.reflection = CMDSetMicModeResp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDSetMicModeResp

// optional uint32 vcbid = 1;
void CMDSetMicModeResp::clear_vcbid() {
  vcbid_ = 0u;
}
 ::google::protobuf::uint32 CMDSetMicModeResp::vcbid() const {
  // @@protoc_insertion_point(field_get:CMDSetMicModeResp.vcbid)
  return vcbid_;
}
 void CMDSetMicModeResp::set_vcbid(::google::protobuf::uint32 value) {
  
  vcbid_ = value;
  // @@protoc_insertion_point(field_set:CMDSetMicModeResp.vcbid)
}

// optional uint32 userid = 2;
void CMDSetMicModeResp::clear_userid() {
  userid_ = 0u;
}
 ::google::protobuf::uint32 CMDSetMicModeResp::userid() const {
  // @@protoc_insertion_point(field_get:CMDSetMicModeResp.userid)
  return userid_;
}
 void CMDSetMicModeResp::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDSetMicModeResp.userid)
}

// optional .CMDErrCode errInfo = 3;
bool CMDSetMicModeResp::has_errinfo() const {
  return !_is_default_instance_ && errinfo_ != NULL;
}
void CMDSetMicModeResp::clear_errinfo() {
  if (GetArenaNoVirtual() == NULL && errinfo_ != NULL) delete errinfo_;
  errinfo_ = NULL;
}
const ::CMDErrCode& CMDSetMicModeResp::errinfo() const {
  // @@protoc_insertion_point(field_get:CMDSetMicModeResp.errInfo)
  return errinfo_ != NULL ? *errinfo_ : *default_instance_->errinfo_;
}
::CMDErrCode* CMDSetMicModeResp::mutable_errinfo() {
  
  if (errinfo_ == NULL) {
    errinfo_ = new ::CMDErrCode;
  }
  // @@protoc_insertion_point(field_mutable:CMDSetMicModeResp.errInfo)
  return errinfo_;
}
::CMDErrCode* CMDSetMicModeResp::release_errinfo() {
  // @@protoc_insertion_point(field_release:CMDSetMicModeResp.errInfo)
  
  ::CMDErrCode* temp = errinfo_;
  errinfo_ = NULL;
  return temp;
}
void CMDSetMicModeResp::set_allocated_errinfo(::CMDErrCode* errinfo) {
  delete errinfo_;
  errinfo_ = errinfo;
  if (errinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDSetMicModeResp.errInfo)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDSetMicModeNoty::kVcbidFieldNumber;
const int CMDSetMicModeNoty::kUseridFieldNumber;
const int CMDSetMicModeNoty::kMicmodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDSetMicModeNoty::CMDSetMicModeNoty()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDSetMicModeNoty)
}

void CMDSetMicModeNoty::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDSetMicModeNoty::CMDSetMicModeNoty(const CMDSetMicModeNoty& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDSetMicModeNoty)
}

void CMDSetMicModeNoty::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  vcbid_ = 0u;
  userid_ = 0u;
  micmode_ = 0;
}

CMDSetMicModeNoty::~CMDSetMicModeNoty() {
  // @@protoc_insertion_point(destructor:CMDSetMicModeNoty)
  SharedDtor();
}

void CMDSetMicModeNoty::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMDSetMicModeNoty::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDSetMicModeNoty::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDSetMicModeNoty_descriptor_;
}

const CMDSetMicModeNoty& CMDSetMicModeNoty::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RoomSvr_2eproto();
  return *default_instance_;
}

CMDSetMicModeNoty* CMDSetMicModeNoty::default_instance_ = NULL;

CMDSetMicModeNoty* CMDSetMicModeNoty::New(::google::protobuf::Arena* arena) const {
  CMDSetMicModeNoty* n = new CMDSetMicModeNoty;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDSetMicModeNoty::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDSetMicModeNoty)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDSetMicModeNoty, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDSetMicModeNoty*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(vcbid_, micmode_);

#undef ZR_HELPER_
#undef ZR_

}

bool CMDSetMicModeNoty::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDSetMicModeNoty)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 vcbid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &vcbid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_userid;
        break;
      }

      // optional uint32 userid = 2;
      case 2: {
        if (tag == 16) {
         parse_userid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_micmode;
        break;
      }

      // optional .e_MicMode micmode = 3;
      case 3: {
        if (tag == 24) {
         parse_micmode:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_micmode(static_cast< ::e_MicMode >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDSetMicModeNoty)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDSetMicModeNoty)
  return false;
#undef DO_
}

void CMDSetMicModeNoty::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDSetMicModeNoty)
  // optional uint32 vcbid = 1;
  if (this->vcbid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->vcbid(), output);
  }

  // optional uint32 userid = 2;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->userid(), output);
  }

  // optional .e_MicMode micmode = 3;
  if (this->micmode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->micmode(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDSetMicModeNoty)
}

::google::protobuf::uint8* CMDSetMicModeNoty::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDSetMicModeNoty)
  // optional uint32 vcbid = 1;
  if (this->vcbid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->vcbid(), target);
  }

  // optional uint32 userid = 2;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->userid(), target);
  }

  // optional .e_MicMode micmode = 3;
  if (this->micmode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->micmode(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDSetMicModeNoty)
  return target;
}

int CMDSetMicModeNoty::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDSetMicModeNoty)
  int total_size = 0;

  // optional uint32 vcbid = 1;
  if (this->vcbid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->vcbid());
  }

  // optional uint32 userid = 2;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userid());
  }

  // optional .e_MicMode micmode = 3;
  if (this->micmode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->micmode());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDSetMicModeNoty::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDSetMicModeNoty)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDSetMicModeNoty* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDSetMicModeNoty>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDSetMicModeNoty)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDSetMicModeNoty)
    MergeFrom(*source);
  }
}

void CMDSetMicModeNoty::MergeFrom(const CMDSetMicModeNoty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDSetMicModeNoty)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.vcbid() != 0) {
    set_vcbid(from.vcbid());
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.micmode() != 0) {
    set_micmode(from.micmode());
  }
}

void CMDSetMicModeNoty::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDSetMicModeNoty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDSetMicModeNoty::CopyFrom(const CMDSetMicModeNoty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDSetMicModeNoty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDSetMicModeNoty::IsInitialized() const {

  return true;
}

void CMDSetMicModeNoty::Swap(CMDSetMicModeNoty* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDSetMicModeNoty::InternalSwap(CMDSetMicModeNoty* other) {
  std::swap(vcbid_, other->vcbid_);
  std::swap(userid_, other->userid_);
  std::swap(micmode_, other->micmode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDSetMicModeNoty::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDSetMicModeNoty_descriptor_;
  metadata.reflection = CMDSetMicModeNoty_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDSetMicModeNoty

// optional uint32 vcbid = 1;
void CMDSetMicModeNoty::clear_vcbid() {
  vcbid_ = 0u;
}
 ::google::protobuf::uint32 CMDSetMicModeNoty::vcbid() const {
  // @@protoc_insertion_point(field_get:CMDSetMicModeNoty.vcbid)
  return vcbid_;
}
 void CMDSetMicModeNoty::set_vcbid(::google::protobuf::uint32 value) {
  
  vcbid_ = value;
  // @@protoc_insertion_point(field_set:CMDSetMicModeNoty.vcbid)
}

// optional uint32 userid = 2;
void CMDSetMicModeNoty::clear_userid() {
  userid_ = 0u;
}
 ::google::protobuf::uint32 CMDSetMicModeNoty::userid() const {
  // @@protoc_insertion_point(field_get:CMDSetMicModeNoty.userid)
  return userid_;
}
 void CMDSetMicModeNoty::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDSetMicModeNoty.userid)
}

// optional .e_MicMode micmode = 3;
void CMDSetMicModeNoty::clear_micmode() {
  micmode_ = 0;
}
 ::e_MicMode CMDSetMicModeNoty::micmode() const {
  // @@protoc_insertion_point(field_get:CMDSetMicModeNoty.micmode)
  return static_cast< ::e_MicMode >(micmode_);
}
 void CMDSetMicModeNoty::set_micmode(::e_MicMode value) {
  
  micmode_ = value;
  // @@protoc_insertion_point(field_set:CMDSetMicModeNoty.micmode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDSetMicPosStatusReq::kVcbidFieldNumber;
const int CMDSetMicPosStatusReq::kUseridFieldNumber;
const int CMDSetMicPosStatusReq::kIndexFieldNumber;
const int CMDSetMicPosStatusReq::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDSetMicPosStatusReq::CMDSetMicPosStatusReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDSetMicPosStatusReq)
}

void CMDSetMicPosStatusReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDSetMicPosStatusReq::CMDSetMicPosStatusReq(const CMDSetMicPosStatusReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDSetMicPosStatusReq)
}

void CMDSetMicPosStatusReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  vcbid_ = 0u;
  userid_ = 0u;
  index_ = 0u;
  status_ = 0u;
}

CMDSetMicPosStatusReq::~CMDSetMicPosStatusReq() {
  // @@protoc_insertion_point(destructor:CMDSetMicPosStatusReq)
  SharedDtor();
}

void CMDSetMicPosStatusReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMDSetMicPosStatusReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDSetMicPosStatusReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDSetMicPosStatusReq_descriptor_;
}

const CMDSetMicPosStatusReq& CMDSetMicPosStatusReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RoomSvr_2eproto();
  return *default_instance_;
}

CMDSetMicPosStatusReq* CMDSetMicPosStatusReq::default_instance_ = NULL;

CMDSetMicPosStatusReq* CMDSetMicPosStatusReq::New(::google::protobuf::Arena* arena) const {
  CMDSetMicPosStatusReq* n = new CMDSetMicPosStatusReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDSetMicPosStatusReq::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDSetMicPosStatusReq)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDSetMicPosStatusReq, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDSetMicPosStatusReq*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(vcbid_, status_);

#undef ZR_HELPER_
#undef ZR_

}

bool CMDSetMicPosStatusReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDSetMicPosStatusReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 vcbid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &vcbid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_userid;
        break;
      }

      // optional uint32 userid = 2;
      case 2: {
        if (tag == 16) {
         parse_userid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_index;
        break;
      }

      // optional uint32 index = 3;
      case 3: {
        if (tag == 24) {
         parse_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &index_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_status;
        break;
      }

      // optional uint32 status = 4;
      case 4: {
        if (tag == 32) {
         parse_status:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &status_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDSetMicPosStatusReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDSetMicPosStatusReq)
  return false;
#undef DO_
}

void CMDSetMicPosStatusReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDSetMicPosStatusReq)
  // optional uint32 vcbid = 1;
  if (this->vcbid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->vcbid(), output);
  }

  // optional uint32 userid = 2;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->userid(), output);
  }

  // optional uint32 index = 3;
  if (this->index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->index(), output);
  }

  // optional uint32 status = 4;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->status(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDSetMicPosStatusReq)
}

::google::protobuf::uint8* CMDSetMicPosStatusReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDSetMicPosStatusReq)
  // optional uint32 vcbid = 1;
  if (this->vcbid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->vcbid(), target);
  }

  // optional uint32 userid = 2;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->userid(), target);
  }

  // optional uint32 index = 3;
  if (this->index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->index(), target);
  }

  // optional uint32 status = 4;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->status(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDSetMicPosStatusReq)
  return target;
}

int CMDSetMicPosStatusReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDSetMicPosStatusReq)
  int total_size = 0;

  // optional uint32 vcbid = 1;
  if (this->vcbid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->vcbid());
  }

  // optional uint32 userid = 2;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userid());
  }

  // optional uint32 index = 3;
  if (this->index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->index());
  }

  // optional uint32 status = 4;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->status());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDSetMicPosStatusReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDSetMicPosStatusReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDSetMicPosStatusReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDSetMicPosStatusReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDSetMicPosStatusReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDSetMicPosStatusReq)
    MergeFrom(*source);
  }
}

void CMDSetMicPosStatusReq::MergeFrom(const CMDSetMicPosStatusReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDSetMicPosStatusReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.vcbid() != 0) {
    set_vcbid(from.vcbid());
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.index() != 0) {
    set_index(from.index());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void CMDSetMicPosStatusReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDSetMicPosStatusReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDSetMicPosStatusReq::CopyFrom(const CMDSetMicPosStatusReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDSetMicPosStatusReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDSetMicPosStatusReq::IsInitialized() const {

  return true;
}

void CMDSetMicPosStatusReq::Swap(CMDSetMicPosStatusReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDSetMicPosStatusReq::InternalSwap(CMDSetMicPosStatusReq* other) {
  std::swap(vcbid_, other->vcbid_);
  std::swap(userid_, other->userid_);
  std::swap(index_, other->index_);
  std::swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDSetMicPosStatusReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDSetMicPosStatusReq_descriptor_;
  metadata.reflection = CMDSetMicPosStatusReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDSetMicPosStatusReq

// optional uint32 vcbid = 1;
void CMDSetMicPosStatusReq::clear_vcbid() {
  vcbid_ = 0u;
}
 ::google::protobuf::uint32 CMDSetMicPosStatusReq::vcbid() const {
  // @@protoc_insertion_point(field_get:CMDSetMicPosStatusReq.vcbid)
  return vcbid_;
}
 void CMDSetMicPosStatusReq::set_vcbid(::google::protobuf::uint32 value) {
  
  vcbid_ = value;
  // @@protoc_insertion_point(field_set:CMDSetMicPosStatusReq.vcbid)
}

// optional uint32 userid = 2;
void CMDSetMicPosStatusReq::clear_userid() {
  userid_ = 0u;
}
 ::google::protobuf::uint32 CMDSetMicPosStatusReq::userid() const {
  // @@protoc_insertion_point(field_get:CMDSetMicPosStatusReq.userid)
  return userid_;
}
 void CMDSetMicPosStatusReq::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDSetMicPosStatusReq.userid)
}

// optional uint32 index = 3;
void CMDSetMicPosStatusReq::clear_index() {
  index_ = 0u;
}
 ::google::protobuf::uint32 CMDSetMicPosStatusReq::index() const {
  // @@protoc_insertion_point(field_get:CMDSetMicPosStatusReq.index)
  return index_;
}
 void CMDSetMicPosStatusReq::set_index(::google::protobuf::uint32 value) {
  
  index_ = value;
  // @@protoc_insertion_point(field_set:CMDSetMicPosStatusReq.index)
}

// optional uint32 status = 4;
void CMDSetMicPosStatusReq::clear_status() {
  status_ = 0u;
}
 ::google::protobuf::uint32 CMDSetMicPosStatusReq::status() const {
  // @@protoc_insertion_point(field_get:CMDSetMicPosStatusReq.status)
  return status_;
}
 void CMDSetMicPosStatusReq::set_status(::google::protobuf::uint32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:CMDSetMicPosStatusReq.status)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDSetMicPosStatusResp::kVcbidFieldNumber;
const int CMDSetMicPosStatusResp::kUseridFieldNumber;
const int CMDSetMicPosStatusResp::kErrInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDSetMicPosStatusResp::CMDSetMicPosStatusResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDSetMicPosStatusResp)
}

void CMDSetMicPosStatusResp::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  errinfo_ = const_cast< ::CMDErrCode*>(&::CMDErrCode::default_instance());
}

CMDSetMicPosStatusResp::CMDSetMicPosStatusResp(const CMDSetMicPosStatusResp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDSetMicPosStatusResp)
}

void CMDSetMicPosStatusResp::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  vcbid_ = 0u;
  userid_ = 0u;
  errinfo_ = NULL;
}

CMDSetMicPosStatusResp::~CMDSetMicPosStatusResp() {
  // @@protoc_insertion_point(destructor:CMDSetMicPosStatusResp)
  SharedDtor();
}

void CMDSetMicPosStatusResp::SharedDtor() {
  if (this != default_instance_) {
    delete errinfo_;
  }
}

void CMDSetMicPosStatusResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDSetMicPosStatusResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDSetMicPosStatusResp_descriptor_;
}

const CMDSetMicPosStatusResp& CMDSetMicPosStatusResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RoomSvr_2eproto();
  return *default_instance_;
}

CMDSetMicPosStatusResp* CMDSetMicPosStatusResp::default_instance_ = NULL;

CMDSetMicPosStatusResp* CMDSetMicPosStatusResp::New(::google::protobuf::Arena* arena) const {
  CMDSetMicPosStatusResp* n = new CMDSetMicPosStatusResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDSetMicPosStatusResp::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDSetMicPosStatusResp)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDSetMicPosStatusResp, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDSetMicPosStatusResp*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(vcbid_, userid_);
  if (GetArenaNoVirtual() == NULL && errinfo_ != NULL) delete errinfo_;
  errinfo_ = NULL;

#undef ZR_HELPER_
#undef ZR_

}

bool CMDSetMicPosStatusResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDSetMicPosStatusResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 vcbid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &vcbid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_userid;
        break;
      }

      // optional uint32 userid = 2;
      case 2: {
        if (tag == 16) {
         parse_userid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_errInfo;
        break;
      }

      // optional .CMDErrCode errInfo = 3;
      case 3: {
        if (tag == 26) {
         parse_errInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_errinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDSetMicPosStatusResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDSetMicPosStatusResp)
  return false;
#undef DO_
}

void CMDSetMicPosStatusResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDSetMicPosStatusResp)
  // optional uint32 vcbid = 1;
  if (this->vcbid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->vcbid(), output);
  }

  // optional uint32 userid = 2;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->userid(), output);
  }

  // optional .CMDErrCode errInfo = 3;
  if (this->has_errinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->errinfo_, output);
  }

  // @@protoc_insertion_point(serialize_end:CMDSetMicPosStatusResp)
}

::google::protobuf::uint8* CMDSetMicPosStatusResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDSetMicPosStatusResp)
  // optional uint32 vcbid = 1;
  if (this->vcbid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->vcbid(), target);
  }

  // optional uint32 userid = 2;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->userid(), target);
  }

  // optional .CMDErrCode errInfo = 3;
  if (this->has_errinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->errinfo_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDSetMicPosStatusResp)
  return target;
}

int CMDSetMicPosStatusResp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDSetMicPosStatusResp)
  int total_size = 0;

  // optional uint32 vcbid = 1;
  if (this->vcbid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->vcbid());
  }

  // optional uint32 userid = 2;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userid());
  }

  // optional .CMDErrCode errInfo = 3;
  if (this->has_errinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->errinfo_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDSetMicPosStatusResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDSetMicPosStatusResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDSetMicPosStatusResp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDSetMicPosStatusResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDSetMicPosStatusResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDSetMicPosStatusResp)
    MergeFrom(*source);
  }
}

void CMDSetMicPosStatusResp::MergeFrom(const CMDSetMicPosStatusResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDSetMicPosStatusResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.vcbid() != 0) {
    set_vcbid(from.vcbid());
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.has_errinfo()) {
    mutable_errinfo()->::CMDErrCode::MergeFrom(from.errinfo());
  }
}

void CMDSetMicPosStatusResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDSetMicPosStatusResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDSetMicPosStatusResp::CopyFrom(const CMDSetMicPosStatusResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDSetMicPosStatusResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDSetMicPosStatusResp::IsInitialized() const {

  return true;
}

void CMDSetMicPosStatusResp::Swap(CMDSetMicPosStatusResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDSetMicPosStatusResp::InternalSwap(CMDSetMicPosStatusResp* other) {
  std::swap(vcbid_, other->vcbid_);
  std::swap(userid_, other->userid_);
  std::swap(errinfo_, other->errinfo_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDSetMicPosStatusResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDSetMicPosStatusResp_descriptor_;
  metadata.reflection = CMDSetMicPosStatusResp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDSetMicPosStatusResp

// optional uint32 vcbid = 1;
void CMDSetMicPosStatusResp::clear_vcbid() {
  vcbid_ = 0u;
}
 ::google::protobuf::uint32 CMDSetMicPosStatusResp::vcbid() const {
  // @@protoc_insertion_point(field_get:CMDSetMicPosStatusResp.vcbid)
  return vcbid_;
}
 void CMDSetMicPosStatusResp::set_vcbid(::google::protobuf::uint32 value) {
  
  vcbid_ = value;
  // @@protoc_insertion_point(field_set:CMDSetMicPosStatusResp.vcbid)
}

// optional uint32 userid = 2;
void CMDSetMicPosStatusResp::clear_userid() {
  userid_ = 0u;
}
 ::google::protobuf::uint32 CMDSetMicPosStatusResp::userid() const {
  // @@protoc_insertion_point(field_get:CMDSetMicPosStatusResp.userid)
  return userid_;
}
 void CMDSetMicPosStatusResp::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDSetMicPosStatusResp.userid)
}

// optional .CMDErrCode errInfo = 3;
bool CMDSetMicPosStatusResp::has_errinfo() const {
  return !_is_default_instance_ && errinfo_ != NULL;
}
void CMDSetMicPosStatusResp::clear_errinfo() {
  if (GetArenaNoVirtual() == NULL && errinfo_ != NULL) delete errinfo_;
  errinfo_ = NULL;
}
const ::CMDErrCode& CMDSetMicPosStatusResp::errinfo() const {
  // @@protoc_insertion_point(field_get:CMDSetMicPosStatusResp.errInfo)
  return errinfo_ != NULL ? *errinfo_ : *default_instance_->errinfo_;
}
::CMDErrCode* CMDSetMicPosStatusResp::mutable_errinfo() {
  
  if (errinfo_ == NULL) {
    errinfo_ = new ::CMDErrCode;
  }
  // @@protoc_insertion_point(field_mutable:CMDSetMicPosStatusResp.errInfo)
  return errinfo_;
}
::CMDErrCode* CMDSetMicPosStatusResp::release_errinfo() {
  // @@protoc_insertion_point(field_release:CMDSetMicPosStatusResp.errInfo)
  
  ::CMDErrCode* temp = errinfo_;
  errinfo_ = NULL;
  return temp;
}
void CMDSetMicPosStatusResp::set_allocated_errinfo(::CMDErrCode* errinfo) {
  delete errinfo_;
  errinfo_ = errinfo;
  if (errinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDSetMicPosStatusResp.errInfo)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDSetMicPosStatusNoty::kVcbidFieldNumber;
const int CMDSetMicPosStatusNoty::kUseridFieldNumber;
const int CMDSetMicPosStatusNoty::kIndexFieldNumber;
const int CMDSetMicPosStatusNoty::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDSetMicPosStatusNoty::CMDSetMicPosStatusNoty()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDSetMicPosStatusNoty)
}

void CMDSetMicPosStatusNoty::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDSetMicPosStatusNoty::CMDSetMicPosStatusNoty(const CMDSetMicPosStatusNoty& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDSetMicPosStatusNoty)
}

void CMDSetMicPosStatusNoty::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  vcbid_ = 0u;
  userid_ = 0u;
  index_ = 0u;
  status_ = 0u;
}

CMDSetMicPosStatusNoty::~CMDSetMicPosStatusNoty() {
  // @@protoc_insertion_point(destructor:CMDSetMicPosStatusNoty)
  SharedDtor();
}

void CMDSetMicPosStatusNoty::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMDSetMicPosStatusNoty::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDSetMicPosStatusNoty::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDSetMicPosStatusNoty_descriptor_;
}

const CMDSetMicPosStatusNoty& CMDSetMicPosStatusNoty::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RoomSvr_2eproto();
  return *default_instance_;
}

CMDSetMicPosStatusNoty* CMDSetMicPosStatusNoty::default_instance_ = NULL;

CMDSetMicPosStatusNoty* CMDSetMicPosStatusNoty::New(::google::protobuf::Arena* arena) const {
  CMDSetMicPosStatusNoty* n = new CMDSetMicPosStatusNoty;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDSetMicPosStatusNoty::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDSetMicPosStatusNoty)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDSetMicPosStatusNoty, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDSetMicPosStatusNoty*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(vcbid_, status_);

#undef ZR_HELPER_
#undef ZR_

}

bool CMDSetMicPosStatusNoty::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDSetMicPosStatusNoty)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 vcbid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &vcbid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_userid;
        break;
      }

      // optional uint32 userid = 2;
      case 2: {
        if (tag == 16) {
         parse_userid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_index;
        break;
      }

      // optional uint32 index = 3;
      case 3: {
        if (tag == 24) {
         parse_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &index_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_status;
        break;
      }

      // optional uint32 status = 4;
      case 4: {
        if (tag == 32) {
         parse_status:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &status_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDSetMicPosStatusNoty)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDSetMicPosStatusNoty)
  return false;
#undef DO_
}

void CMDSetMicPosStatusNoty::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDSetMicPosStatusNoty)
  // optional uint32 vcbid = 1;
  if (this->vcbid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->vcbid(), output);
  }

  // optional uint32 userid = 2;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->userid(), output);
  }

  // optional uint32 index = 3;
  if (this->index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->index(), output);
  }

  // optional uint32 status = 4;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->status(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDSetMicPosStatusNoty)
}

::google::protobuf::uint8* CMDSetMicPosStatusNoty::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDSetMicPosStatusNoty)
  // optional uint32 vcbid = 1;
  if (this->vcbid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->vcbid(), target);
  }

  // optional uint32 userid = 2;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->userid(), target);
  }

  // optional uint32 index = 3;
  if (this->index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->index(), target);
  }

  // optional uint32 status = 4;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->status(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDSetMicPosStatusNoty)
  return target;
}

int CMDSetMicPosStatusNoty::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDSetMicPosStatusNoty)
  int total_size = 0;

  // optional uint32 vcbid = 1;
  if (this->vcbid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->vcbid());
  }

  // optional uint32 userid = 2;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userid());
  }

  // optional uint32 index = 3;
  if (this->index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->index());
  }

  // optional uint32 status = 4;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->status());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDSetMicPosStatusNoty::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDSetMicPosStatusNoty)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDSetMicPosStatusNoty* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDSetMicPosStatusNoty>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDSetMicPosStatusNoty)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDSetMicPosStatusNoty)
    MergeFrom(*source);
  }
}

void CMDSetMicPosStatusNoty::MergeFrom(const CMDSetMicPosStatusNoty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDSetMicPosStatusNoty)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.vcbid() != 0) {
    set_vcbid(from.vcbid());
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.index() != 0) {
    set_index(from.index());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void CMDSetMicPosStatusNoty::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDSetMicPosStatusNoty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDSetMicPosStatusNoty::CopyFrom(const CMDSetMicPosStatusNoty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDSetMicPosStatusNoty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDSetMicPosStatusNoty::IsInitialized() const {

  return true;
}

void CMDSetMicPosStatusNoty::Swap(CMDSetMicPosStatusNoty* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDSetMicPosStatusNoty::InternalSwap(CMDSetMicPosStatusNoty* other) {
  std::swap(vcbid_, other->vcbid_);
  std::swap(userid_, other->userid_);
  std::swap(index_, other->index_);
  std::swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDSetMicPosStatusNoty::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDSetMicPosStatusNoty_descriptor_;
  metadata.reflection = CMDSetMicPosStatusNoty_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDSetMicPosStatusNoty

// optional uint32 vcbid = 1;
void CMDSetMicPosStatusNoty::clear_vcbid() {
  vcbid_ = 0u;
}
 ::google::protobuf::uint32 CMDSetMicPosStatusNoty::vcbid() const {
  // @@protoc_insertion_point(field_get:CMDSetMicPosStatusNoty.vcbid)
  return vcbid_;
}
 void CMDSetMicPosStatusNoty::set_vcbid(::google::protobuf::uint32 value) {
  
  vcbid_ = value;
  // @@protoc_insertion_point(field_set:CMDSetMicPosStatusNoty.vcbid)
}

// optional uint32 userid = 2;
void CMDSetMicPosStatusNoty::clear_userid() {
  userid_ = 0u;
}
 ::google::protobuf::uint32 CMDSetMicPosStatusNoty::userid() const {
  // @@protoc_insertion_point(field_get:CMDSetMicPosStatusNoty.userid)
  return userid_;
}
 void CMDSetMicPosStatusNoty::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDSetMicPosStatusNoty.userid)
}

// optional uint32 index = 3;
void CMDSetMicPosStatusNoty::clear_index() {
  index_ = 0u;
}
 ::google::protobuf::uint32 CMDSetMicPosStatusNoty::index() const {
  // @@protoc_insertion_point(field_get:CMDSetMicPosStatusNoty.index)
  return index_;
}
 void CMDSetMicPosStatusNoty::set_index(::google::protobuf::uint32 value) {
  
  index_ = value;
  // @@protoc_insertion_point(field_set:CMDSetMicPosStatusNoty.index)
}

// optional uint32 status = 4;
void CMDSetMicPosStatusNoty::clear_status() {
  status_ = 0u;
}
 ::google::protobuf::uint32 CMDSetMicPosStatusNoty::status() const {
  // @@protoc_insertion_point(field_get:CMDSetMicPosStatusNoty.status)
  return status_;
}
 void CMDSetMicPosStatusNoty::set_status(::google::protobuf::uint32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:CMDSetMicPosStatusNoty.status)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDRoomInfoExtReq::kVcbidFieldNumber;
const int CMDRoomInfoExtReq::kUseridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDRoomInfoExtReq::CMDRoomInfoExtReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDRoomInfoExtReq)
}

void CMDRoomInfoExtReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDRoomInfoExtReq::CMDRoomInfoExtReq(const CMDRoomInfoExtReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDRoomInfoExtReq)
}

void CMDRoomInfoExtReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  vcbid_ = 0;
  userid_ = 0;
}

CMDRoomInfoExtReq::~CMDRoomInfoExtReq() {
  // @@protoc_insertion_point(destructor:CMDRoomInfoExtReq)
  SharedDtor();
}

void CMDRoomInfoExtReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMDRoomInfoExtReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDRoomInfoExtReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDRoomInfoExtReq_descriptor_;
}

const CMDRoomInfoExtReq& CMDRoomInfoExtReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RoomSvr_2eproto();
  return *default_instance_;
}

CMDRoomInfoExtReq* CMDRoomInfoExtReq::default_instance_ = NULL;

CMDRoomInfoExtReq* CMDRoomInfoExtReq::New(::google::protobuf::Arena* arena) const {
  CMDRoomInfoExtReq* n = new CMDRoomInfoExtReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDRoomInfoExtReq::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDRoomInfoExtReq)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDRoomInfoExtReq, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDRoomInfoExtReq*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(vcbid_, userid_);

#undef ZR_HELPER_
#undef ZR_

}

bool CMDRoomInfoExtReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDRoomInfoExtReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 vcbid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vcbid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_userid;
        break;
      }

      // optional int32 userid = 2;
      case 2: {
        if (tag == 16) {
         parse_userid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDRoomInfoExtReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDRoomInfoExtReq)
  return false;
#undef DO_
}

void CMDRoomInfoExtReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDRoomInfoExtReq)
  // optional int32 vcbid = 1;
  if (this->vcbid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->vcbid(), output);
  }

  // optional int32 userid = 2;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->userid(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDRoomInfoExtReq)
}

::google::protobuf::uint8* CMDRoomInfoExtReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDRoomInfoExtReq)
  // optional int32 vcbid = 1;
  if (this->vcbid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->vcbid(), target);
  }

  // optional int32 userid = 2;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->userid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDRoomInfoExtReq)
  return target;
}

int CMDRoomInfoExtReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDRoomInfoExtReq)
  int total_size = 0;

  // optional int32 vcbid = 1;
  if (this->vcbid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->vcbid());
  }

  // optional int32 userid = 2;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->userid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDRoomInfoExtReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDRoomInfoExtReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDRoomInfoExtReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDRoomInfoExtReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDRoomInfoExtReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDRoomInfoExtReq)
    MergeFrom(*source);
  }
}

void CMDRoomInfoExtReq::MergeFrom(const CMDRoomInfoExtReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDRoomInfoExtReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.vcbid() != 0) {
    set_vcbid(from.vcbid());
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
}

void CMDRoomInfoExtReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDRoomInfoExtReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDRoomInfoExtReq::CopyFrom(const CMDRoomInfoExtReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDRoomInfoExtReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDRoomInfoExtReq::IsInitialized() const {

  return true;
}

void CMDRoomInfoExtReq::Swap(CMDRoomInfoExtReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDRoomInfoExtReq::InternalSwap(CMDRoomInfoExtReq* other) {
  std::swap(vcbid_, other->vcbid_);
  std::swap(userid_, other->userid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDRoomInfoExtReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDRoomInfoExtReq_descriptor_;
  metadata.reflection = CMDRoomInfoExtReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDRoomInfoExtReq

// optional int32 vcbid = 1;
void CMDRoomInfoExtReq::clear_vcbid() {
  vcbid_ = 0;
}
 ::google::protobuf::int32 CMDRoomInfoExtReq::vcbid() const {
  // @@protoc_insertion_point(field_get:CMDRoomInfoExtReq.vcbid)
  return vcbid_;
}
 void CMDRoomInfoExtReq::set_vcbid(::google::protobuf::int32 value) {
  
  vcbid_ = value;
  // @@protoc_insertion_point(field_set:CMDRoomInfoExtReq.vcbid)
}

// optional int32 userid = 2;
void CMDRoomInfoExtReq::clear_userid() {
  userid_ = 0;
}
 ::google::protobuf::int32 CMDRoomInfoExtReq::userid() const {
  // @@protoc_insertion_point(field_get:CMDRoomInfoExtReq.userid)
  return userid_;
}
 void CMDRoomInfoExtReq::set_userid(::google::protobuf::int32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDRoomInfoExtReq.userid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDRoomInfoExtResp::kVcbidFieldNumber;
const int CMDRoomInfoExtResp::kMicmodeFieldNumber;
const int CMDRoomInfoExtResp::kNameFieldNumber;
const int CMDRoomInfoExtResp::kIconFieldNumber;
const int CMDRoomInfoExtResp::kMicsecFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDRoomInfoExtResp::CMDRoomInfoExtResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDRoomInfoExtResp)
}

void CMDRoomInfoExtResp::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDRoomInfoExtResp::CMDRoomInfoExtResp(const CMDRoomInfoExtResp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDRoomInfoExtResp)
}

void CMDRoomInfoExtResp::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  vcbid_ = 0;
  micmode_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  icon_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  micsec_ = 0;
}

CMDRoomInfoExtResp::~CMDRoomInfoExtResp() {
  // @@protoc_insertion_point(destructor:CMDRoomInfoExtResp)
  SharedDtor();
}

void CMDRoomInfoExtResp::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  icon_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CMDRoomInfoExtResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDRoomInfoExtResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDRoomInfoExtResp_descriptor_;
}

const CMDRoomInfoExtResp& CMDRoomInfoExtResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RoomSvr_2eproto();
  return *default_instance_;
}

CMDRoomInfoExtResp* CMDRoomInfoExtResp::default_instance_ = NULL;

CMDRoomInfoExtResp* CMDRoomInfoExtResp::New(::google::protobuf::Arena* arena) const {
  CMDRoomInfoExtResp* n = new CMDRoomInfoExtResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDRoomInfoExtResp::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDRoomInfoExtResp)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDRoomInfoExtResp, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDRoomInfoExtResp*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(vcbid_, micmode_);
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  icon_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  micsec_ = 0;

#undef ZR_HELPER_
#undef ZR_

}

bool CMDRoomInfoExtResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDRoomInfoExtResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 vcbid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vcbid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_micmode;
        break;
      }

      // optional .e_MicMode micmode = 2;
      case 2: {
        if (tag == 16) {
         parse_micmode:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_micmode(static_cast< ::e_MicMode >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_name;
        break;
      }

      // optional string name = 3;
      case 3: {
        if (tag == 26) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMDRoomInfoExtResp.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_icon;
        break;
      }

      // optional string icon = 4;
      case 4: {
        if (tag == 34) {
         parse_icon:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_icon()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->icon().data(), this->icon().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMDRoomInfoExtResp.icon"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_micsec;
        break;
      }

      // optional int32 micsec = 5;
      case 5: {
        if (tag == 40) {
         parse_micsec:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &micsec_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDRoomInfoExtResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDRoomInfoExtResp)
  return false;
#undef DO_
}

void CMDRoomInfoExtResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDRoomInfoExtResp)
  // optional int32 vcbid = 1;
  if (this->vcbid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->vcbid(), output);
  }

  // optional .e_MicMode micmode = 2;
  if (this->micmode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->micmode(), output);
  }

  // optional string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDRoomInfoExtResp.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // optional string icon = 4;
  if (this->icon().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->icon().data(), this->icon().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDRoomInfoExtResp.icon");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->icon(), output);
  }

  // optional int32 micsec = 5;
  if (this->micsec() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->micsec(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDRoomInfoExtResp)
}

::google::protobuf::uint8* CMDRoomInfoExtResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDRoomInfoExtResp)
  // optional int32 vcbid = 1;
  if (this->vcbid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->vcbid(), target);
  }

  // optional .e_MicMode micmode = 2;
  if (this->micmode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->micmode(), target);
  }

  // optional string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDRoomInfoExtResp.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // optional string icon = 4;
  if (this->icon().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->icon().data(), this->icon().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDRoomInfoExtResp.icon");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->icon(), target);
  }

  // optional int32 micsec = 5;
  if (this->micsec() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->micsec(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDRoomInfoExtResp)
  return target;
}

int CMDRoomInfoExtResp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDRoomInfoExtResp)
  int total_size = 0;

  // optional int32 vcbid = 1;
  if (this->vcbid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->vcbid());
  }

  // optional .e_MicMode micmode = 2;
  if (this->micmode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->micmode());
  }

  // optional string name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional string icon = 4;
  if (this->icon().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->icon());
  }

  // optional int32 micsec = 5;
  if (this->micsec() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->micsec());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDRoomInfoExtResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDRoomInfoExtResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDRoomInfoExtResp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDRoomInfoExtResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDRoomInfoExtResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDRoomInfoExtResp)
    MergeFrom(*source);
  }
}

void CMDRoomInfoExtResp::MergeFrom(const CMDRoomInfoExtResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDRoomInfoExtResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.vcbid() != 0) {
    set_vcbid(from.vcbid());
  }
  if (from.micmode() != 0) {
    set_micmode(from.micmode());
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.icon().size() > 0) {

    icon_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.icon_);
  }
  if (from.micsec() != 0) {
    set_micsec(from.micsec());
  }
}

void CMDRoomInfoExtResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDRoomInfoExtResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDRoomInfoExtResp::CopyFrom(const CMDRoomInfoExtResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDRoomInfoExtResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDRoomInfoExtResp::IsInitialized() const {

  return true;
}

void CMDRoomInfoExtResp::Swap(CMDRoomInfoExtResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDRoomInfoExtResp::InternalSwap(CMDRoomInfoExtResp* other) {
  std::swap(vcbid_, other->vcbid_);
  std::swap(micmode_, other->micmode_);
  name_.Swap(&other->name_);
  icon_.Swap(&other->icon_);
  std::swap(micsec_, other->micsec_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDRoomInfoExtResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDRoomInfoExtResp_descriptor_;
  metadata.reflection = CMDRoomInfoExtResp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDRoomInfoExtResp

// optional int32 vcbid = 1;
void CMDRoomInfoExtResp::clear_vcbid() {
  vcbid_ = 0;
}
 ::google::protobuf::int32 CMDRoomInfoExtResp::vcbid() const {
  // @@protoc_insertion_point(field_get:CMDRoomInfoExtResp.vcbid)
  return vcbid_;
}
 void CMDRoomInfoExtResp::set_vcbid(::google::protobuf::int32 value) {
  
  vcbid_ = value;
  // @@protoc_insertion_point(field_set:CMDRoomInfoExtResp.vcbid)
}

// optional .e_MicMode micmode = 2;
void CMDRoomInfoExtResp::clear_micmode() {
  micmode_ = 0;
}
 ::e_MicMode CMDRoomInfoExtResp::micmode() const {
  // @@protoc_insertion_point(field_get:CMDRoomInfoExtResp.micmode)
  return static_cast< ::e_MicMode >(micmode_);
}
 void CMDRoomInfoExtResp::set_micmode(::e_MicMode value) {
  
  micmode_ = value;
  // @@protoc_insertion_point(field_set:CMDRoomInfoExtResp.micmode)
}

// optional string name = 3;
void CMDRoomInfoExtResp::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CMDRoomInfoExtResp::name() const {
  // @@protoc_insertion_point(field_get:CMDRoomInfoExtResp.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDRoomInfoExtResp::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDRoomInfoExtResp.name)
}
 void CMDRoomInfoExtResp::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDRoomInfoExtResp.name)
}
 void CMDRoomInfoExtResp::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDRoomInfoExtResp.name)
}
 ::std::string* CMDRoomInfoExtResp::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:CMDRoomInfoExtResp.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMDRoomInfoExtResp::release_name() {
  // @@protoc_insertion_point(field_release:CMDRoomInfoExtResp.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDRoomInfoExtResp::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:CMDRoomInfoExtResp.name)
}

// optional string icon = 4;
void CMDRoomInfoExtResp::clear_icon() {
  icon_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CMDRoomInfoExtResp::icon() const {
  // @@protoc_insertion_point(field_get:CMDRoomInfoExtResp.icon)
  return icon_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDRoomInfoExtResp::set_icon(const ::std::string& value) {
  
  icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDRoomInfoExtResp.icon)
}
 void CMDRoomInfoExtResp::set_icon(const char* value) {
  
  icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDRoomInfoExtResp.icon)
}
 void CMDRoomInfoExtResp::set_icon(const char* value, size_t size) {
  
  icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDRoomInfoExtResp.icon)
}
 ::std::string* CMDRoomInfoExtResp::mutable_icon() {
  
  // @@protoc_insertion_point(field_mutable:CMDRoomInfoExtResp.icon)
  return icon_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMDRoomInfoExtResp::release_icon() {
  // @@protoc_insertion_point(field_release:CMDRoomInfoExtResp.icon)
  
  return icon_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDRoomInfoExtResp::set_allocated_icon(::std::string* icon) {
  if (icon != NULL) {
    
  } else {
    
  }
  icon_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), icon);
  // @@protoc_insertion_point(field_set_allocated:CMDRoomInfoExtResp.icon)
}

// optional int32 micsec = 5;
void CMDRoomInfoExtResp::clear_micsec() {
  micsec_ = 0;
}
 ::google::protobuf::int32 CMDRoomInfoExtResp::micsec() const {
  // @@protoc_insertion_point(field_get:CMDRoomInfoExtResp.micsec)
  return micsec_;
}
 void CMDRoomInfoExtResp::set_micsec(::google::protobuf::int32 value) {
  
  micsec_ = value;
  // @@protoc_insertion_point(field_set:CMDRoomInfoExtResp.micsec)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDInviteOnMic::kRunuseridFieldNumber;
const int CMDInviteOnMic::kTouseridFieldNumber;
const int CMDInviteOnMic::kOptypeFieldNumber;
const int CMDInviteOnMic::kVcbidFieldNumber;
const int CMDInviteOnMic::kSessionidFieldNumber;
const int CMDInviteOnMic::kErrInfoFieldNumber;
const int CMDInviteOnMic::kIntimacyFieldNumber;
const int CMDInviteOnMic::kThresholdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDInviteOnMic::CMDInviteOnMic()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDInviteOnMic)
}

void CMDInviteOnMic::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  errinfo_ = const_cast< ::CMDErrCode*>(&::CMDErrCode::default_instance());
}

CMDInviteOnMic::CMDInviteOnMic(const CMDInviteOnMic& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDInviteOnMic)
}

void CMDInviteOnMic::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  runuserid_ = 0;
  touserid_ = 0;
  optype_ = 0;
  vcbid_ = 0;
  sessionid_ = 0;
  errinfo_ = NULL;
  intimacy_ = 0;
  threshold_ = 0;
}

CMDInviteOnMic::~CMDInviteOnMic() {
  // @@protoc_insertion_point(destructor:CMDInviteOnMic)
  SharedDtor();
}

void CMDInviteOnMic::SharedDtor() {
  if (this != default_instance_) {
    delete errinfo_;
  }
}

void CMDInviteOnMic::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDInviteOnMic::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDInviteOnMic_descriptor_;
}

const CMDInviteOnMic& CMDInviteOnMic::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RoomSvr_2eproto();
  return *default_instance_;
}

CMDInviteOnMic* CMDInviteOnMic::default_instance_ = NULL;

CMDInviteOnMic* CMDInviteOnMic::New(::google::protobuf::Arena* arena) const {
  CMDInviteOnMic* n = new CMDInviteOnMic;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDInviteOnMic::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDInviteOnMic)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDInviteOnMic, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDInviteOnMic*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(runuserid_, vcbid_);
  ZR_(sessionid_, threshold_);
  if (GetArenaNoVirtual() == NULL && errinfo_ != NULL) delete errinfo_;
  errinfo_ = NULL;

#undef ZR_HELPER_
#undef ZR_

}

bool CMDInviteOnMic::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDInviteOnMic)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 runuserid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &runuserid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_touserid;
        break;
      }

      // optional int32 touserid = 2;
      case 2: {
        if (tag == 16) {
         parse_touserid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &touserid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_optype;
        break;
      }

      // optional int32 optype = 3;
      case 3: {
        if (tag == 24) {
         parse_optype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &optype_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_vcbid;
        break;
      }

      // optional int32 vcbid = 4;
      case 4: {
        if (tag == 32) {
         parse_vcbid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vcbid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_sessionid;
        break;
      }

      // optional int32 sessionid = 5;
      case 5: {
        if (tag == 40) {
         parse_sessionid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sessionid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_errInfo;
        break;
      }

      // optional .CMDErrCode errInfo = 6;
      case 6: {
        if (tag == 50) {
         parse_errInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_errinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_intimacy;
        break;
      }

      // optional int32 intimacy = 7;
      case 7: {
        if (tag == 56) {
         parse_intimacy:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &intimacy_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_threshold;
        break;
      }

      // optional int32 threshold = 8;
      case 8: {
        if (tag == 64) {
         parse_threshold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &threshold_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDInviteOnMic)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDInviteOnMic)
  return false;
#undef DO_
}

void CMDInviteOnMic::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDInviteOnMic)
  // optional int32 runuserid = 1;
  if (this->runuserid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->runuserid(), output);
  }

  // optional int32 touserid = 2;
  if (this->touserid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->touserid(), output);
  }

  // optional int32 optype = 3;
  if (this->optype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->optype(), output);
  }

  // optional int32 vcbid = 4;
  if (this->vcbid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->vcbid(), output);
  }

  // optional int32 sessionid = 5;
  if (this->sessionid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->sessionid(), output);
  }

  // optional .CMDErrCode errInfo = 6;
  if (this->has_errinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->errinfo_, output);
  }

  // optional int32 intimacy = 7;
  if (this->intimacy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->intimacy(), output);
  }

  // optional int32 threshold = 8;
  if (this->threshold() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->threshold(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDInviteOnMic)
}

::google::protobuf::uint8* CMDInviteOnMic::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDInviteOnMic)
  // optional int32 runuserid = 1;
  if (this->runuserid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->runuserid(), target);
  }

  // optional int32 touserid = 2;
  if (this->touserid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->touserid(), target);
  }

  // optional int32 optype = 3;
  if (this->optype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->optype(), target);
  }

  // optional int32 vcbid = 4;
  if (this->vcbid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->vcbid(), target);
  }

  // optional int32 sessionid = 5;
  if (this->sessionid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->sessionid(), target);
  }

  // optional .CMDErrCode errInfo = 6;
  if (this->has_errinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->errinfo_, false, target);
  }

  // optional int32 intimacy = 7;
  if (this->intimacy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->intimacy(), target);
  }

  // optional int32 threshold = 8;
  if (this->threshold() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->threshold(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDInviteOnMic)
  return target;
}

int CMDInviteOnMic::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDInviteOnMic)
  int total_size = 0;

  // optional int32 runuserid = 1;
  if (this->runuserid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->runuserid());
  }

  // optional int32 touserid = 2;
  if (this->touserid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->touserid());
  }

  // optional int32 optype = 3;
  if (this->optype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->optype());
  }

  // optional int32 vcbid = 4;
  if (this->vcbid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->vcbid());
  }

  // optional int32 sessionid = 5;
  if (this->sessionid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sessionid());
  }

  // optional .CMDErrCode errInfo = 6;
  if (this->has_errinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->errinfo_);
  }

  // optional int32 intimacy = 7;
  if (this->intimacy() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->intimacy());
  }

  // optional int32 threshold = 8;
  if (this->threshold() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->threshold());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDInviteOnMic::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDInviteOnMic)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDInviteOnMic* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDInviteOnMic>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDInviteOnMic)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDInviteOnMic)
    MergeFrom(*source);
  }
}

void CMDInviteOnMic::MergeFrom(const CMDInviteOnMic& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDInviteOnMic)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.runuserid() != 0) {
    set_runuserid(from.runuserid());
  }
  if (from.touserid() != 0) {
    set_touserid(from.touserid());
  }
  if (from.optype() != 0) {
    set_optype(from.optype());
  }
  if (from.vcbid() != 0) {
    set_vcbid(from.vcbid());
  }
  if (from.sessionid() != 0) {
    set_sessionid(from.sessionid());
  }
  if (from.has_errinfo()) {
    mutable_errinfo()->::CMDErrCode::MergeFrom(from.errinfo());
  }
  if (from.intimacy() != 0) {
    set_intimacy(from.intimacy());
  }
  if (from.threshold() != 0) {
    set_threshold(from.threshold());
  }
}

void CMDInviteOnMic::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDInviteOnMic)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDInviteOnMic::CopyFrom(const CMDInviteOnMic& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDInviteOnMic)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDInviteOnMic::IsInitialized() const {

  return true;
}

void CMDInviteOnMic::Swap(CMDInviteOnMic* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDInviteOnMic::InternalSwap(CMDInviteOnMic* other) {
  std::swap(runuserid_, other->runuserid_);
  std::swap(touserid_, other->touserid_);
  std::swap(optype_, other->optype_);
  std::swap(vcbid_, other->vcbid_);
  std::swap(sessionid_, other->sessionid_);
  std::swap(errinfo_, other->errinfo_);
  std::swap(intimacy_, other->intimacy_);
  std::swap(threshold_, other->threshold_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDInviteOnMic::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDInviteOnMic_descriptor_;
  metadata.reflection = CMDInviteOnMic_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDInviteOnMic

// optional int32 runuserid = 1;
void CMDInviteOnMic::clear_runuserid() {
  runuserid_ = 0;
}
 ::google::protobuf::int32 CMDInviteOnMic::runuserid() const {
  // @@protoc_insertion_point(field_get:CMDInviteOnMic.runuserid)
  return runuserid_;
}
 void CMDInviteOnMic::set_runuserid(::google::protobuf::int32 value) {
  
  runuserid_ = value;
  // @@protoc_insertion_point(field_set:CMDInviteOnMic.runuserid)
}

// optional int32 touserid = 2;
void CMDInviteOnMic::clear_touserid() {
  touserid_ = 0;
}
 ::google::protobuf::int32 CMDInviteOnMic::touserid() const {
  // @@protoc_insertion_point(field_get:CMDInviteOnMic.touserid)
  return touserid_;
}
 void CMDInviteOnMic::set_touserid(::google::protobuf::int32 value) {
  
  touserid_ = value;
  // @@protoc_insertion_point(field_set:CMDInviteOnMic.touserid)
}

// optional int32 optype = 3;
void CMDInviteOnMic::clear_optype() {
  optype_ = 0;
}
 ::google::protobuf::int32 CMDInviteOnMic::optype() const {
  // @@protoc_insertion_point(field_get:CMDInviteOnMic.optype)
  return optype_;
}
 void CMDInviteOnMic::set_optype(::google::protobuf::int32 value) {
  
  optype_ = value;
  // @@protoc_insertion_point(field_set:CMDInviteOnMic.optype)
}

// optional int32 vcbid = 4;
void CMDInviteOnMic::clear_vcbid() {
  vcbid_ = 0;
}
 ::google::protobuf::int32 CMDInviteOnMic::vcbid() const {
  // @@protoc_insertion_point(field_get:CMDInviteOnMic.vcbid)
  return vcbid_;
}
 void CMDInviteOnMic::set_vcbid(::google::protobuf::int32 value) {
  
  vcbid_ = value;
  // @@protoc_insertion_point(field_set:CMDInviteOnMic.vcbid)
}

// optional int32 sessionid = 5;
void CMDInviteOnMic::clear_sessionid() {
  sessionid_ = 0;
}
 ::google::protobuf::int32 CMDInviteOnMic::sessionid() const {
  // @@protoc_insertion_point(field_get:CMDInviteOnMic.sessionid)
  return sessionid_;
}
 void CMDInviteOnMic::set_sessionid(::google::protobuf::int32 value) {
  
  sessionid_ = value;
  // @@protoc_insertion_point(field_set:CMDInviteOnMic.sessionid)
}

// optional .CMDErrCode errInfo = 6;
bool CMDInviteOnMic::has_errinfo() const {
  return !_is_default_instance_ && errinfo_ != NULL;
}
void CMDInviteOnMic::clear_errinfo() {
  if (GetArenaNoVirtual() == NULL && errinfo_ != NULL) delete errinfo_;
  errinfo_ = NULL;
}
const ::CMDErrCode& CMDInviteOnMic::errinfo() const {
  // @@protoc_insertion_point(field_get:CMDInviteOnMic.errInfo)
  return errinfo_ != NULL ? *errinfo_ : *default_instance_->errinfo_;
}
::CMDErrCode* CMDInviteOnMic::mutable_errinfo() {
  
  if (errinfo_ == NULL) {
    errinfo_ = new ::CMDErrCode;
  }
  // @@protoc_insertion_point(field_mutable:CMDInviteOnMic.errInfo)
  return errinfo_;
}
::CMDErrCode* CMDInviteOnMic::release_errinfo() {
  // @@protoc_insertion_point(field_release:CMDInviteOnMic.errInfo)
  
  ::CMDErrCode* temp = errinfo_;
  errinfo_ = NULL;
  return temp;
}
void CMDInviteOnMic::set_allocated_errinfo(::CMDErrCode* errinfo) {
  delete errinfo_;
  errinfo_ = errinfo;
  if (errinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDInviteOnMic.errInfo)
}

// optional int32 intimacy = 7;
void CMDInviteOnMic::clear_intimacy() {
  intimacy_ = 0;
}
 ::google::protobuf::int32 CMDInviteOnMic::intimacy() const {
  // @@protoc_insertion_point(field_get:CMDInviteOnMic.intimacy)
  return intimacy_;
}
 void CMDInviteOnMic::set_intimacy(::google::protobuf::int32 value) {
  
  intimacy_ = value;
  // @@protoc_insertion_point(field_set:CMDInviteOnMic.intimacy)
}

// optional int32 threshold = 8;
void CMDInviteOnMic::clear_threshold() {
  threshold_ = 0;
}
 ::google::protobuf::int32 CMDInviteOnMic::threshold() const {
  // @@protoc_insertion_point(field_get:CMDInviteOnMic.threshold)
  return threshold_;
}
 void CMDInviteOnMic::set_threshold(::google::protobuf::int32 value) {
  
  threshold_ = value;
  // @@protoc_insertion_point(field_set:CMDInviteOnMic.threshold)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDGroupUserSettingReq::kGroupidFieldNumber;
const int CMDGroupUserSettingReq::kUseridFieldNumber;
const int CMDGroupUserSettingReq::kPChatThresholdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDGroupUserSettingReq::CMDGroupUserSettingReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDGroupUserSettingReq)
}

void CMDGroupUserSettingReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  pchatthreshold_ = const_cast< ::CMDUInt32*>(&::CMDUInt32::default_instance());
}

CMDGroupUserSettingReq::CMDGroupUserSettingReq(const CMDGroupUserSettingReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDGroupUserSettingReq)
}

void CMDGroupUserSettingReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  groupid_ = 0u;
  userid_ = 0u;
  pchatthreshold_ = NULL;
}

CMDGroupUserSettingReq::~CMDGroupUserSettingReq() {
  // @@protoc_insertion_point(destructor:CMDGroupUserSettingReq)
  SharedDtor();
}

void CMDGroupUserSettingReq::SharedDtor() {
  if (this != default_instance_) {
    delete pchatthreshold_;
  }
}

void CMDGroupUserSettingReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDGroupUserSettingReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDGroupUserSettingReq_descriptor_;
}

const CMDGroupUserSettingReq& CMDGroupUserSettingReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RoomSvr_2eproto();
  return *default_instance_;
}

CMDGroupUserSettingReq* CMDGroupUserSettingReq::default_instance_ = NULL;

CMDGroupUserSettingReq* CMDGroupUserSettingReq::New(::google::protobuf::Arena* arena) const {
  CMDGroupUserSettingReq* n = new CMDGroupUserSettingReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDGroupUserSettingReq::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDGroupUserSettingReq)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDGroupUserSettingReq, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDGroupUserSettingReq*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(groupid_, userid_);
  if (GetArenaNoVirtual() == NULL && pchatthreshold_ != NULL) delete pchatthreshold_;
  pchatthreshold_ = NULL;

#undef ZR_HELPER_
#undef ZR_

}

bool CMDGroupUserSettingReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDGroupUserSettingReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 groupid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &groupid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_userid;
        break;
      }

      // optional uint32 userid = 2;
      case 2: {
        if (tag == 16) {
         parse_userid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_PChatThreshold;
        break;
      }

      // optional .CMDUInt32 PChatThreshold = 3;
      case 3: {
        if (tag == 26) {
         parse_PChatThreshold:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pchatthreshold()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDGroupUserSettingReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDGroupUserSettingReq)
  return false;
#undef DO_
}

void CMDGroupUserSettingReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDGroupUserSettingReq)
  // optional uint32 groupid = 1;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->groupid(), output);
  }

  // optional uint32 userid = 2;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->userid(), output);
  }

  // optional .CMDUInt32 PChatThreshold = 3;
  if (this->has_pchatthreshold()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->pchatthreshold_, output);
  }

  // @@protoc_insertion_point(serialize_end:CMDGroupUserSettingReq)
}

::google::protobuf::uint8* CMDGroupUserSettingReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDGroupUserSettingReq)
  // optional uint32 groupid = 1;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->groupid(), target);
  }

  // optional uint32 userid = 2;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->userid(), target);
  }

  // optional .CMDUInt32 PChatThreshold = 3;
  if (this->has_pchatthreshold()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->pchatthreshold_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDGroupUserSettingReq)
  return target;
}

int CMDGroupUserSettingReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDGroupUserSettingReq)
  int total_size = 0;

  // optional uint32 groupid = 1;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->groupid());
  }

  // optional uint32 userid = 2;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userid());
  }

  // optional .CMDUInt32 PChatThreshold = 3;
  if (this->has_pchatthreshold()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pchatthreshold_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDGroupUserSettingReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDGroupUserSettingReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDGroupUserSettingReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDGroupUserSettingReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDGroupUserSettingReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDGroupUserSettingReq)
    MergeFrom(*source);
  }
}

void CMDGroupUserSettingReq::MergeFrom(const CMDGroupUserSettingReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDGroupUserSettingReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.has_pchatthreshold()) {
    mutable_pchatthreshold()->::CMDUInt32::MergeFrom(from.pchatthreshold());
  }
}

void CMDGroupUserSettingReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDGroupUserSettingReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDGroupUserSettingReq::CopyFrom(const CMDGroupUserSettingReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDGroupUserSettingReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDGroupUserSettingReq::IsInitialized() const {

  return true;
}

void CMDGroupUserSettingReq::Swap(CMDGroupUserSettingReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDGroupUserSettingReq::InternalSwap(CMDGroupUserSettingReq* other) {
  std::swap(groupid_, other->groupid_);
  std::swap(userid_, other->userid_);
  std::swap(pchatthreshold_, other->pchatthreshold_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDGroupUserSettingReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDGroupUserSettingReq_descriptor_;
  metadata.reflection = CMDGroupUserSettingReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDGroupUserSettingReq

// optional uint32 groupid = 1;
void CMDGroupUserSettingReq::clear_groupid() {
  groupid_ = 0u;
}
 ::google::protobuf::uint32 CMDGroupUserSettingReq::groupid() const {
  // @@protoc_insertion_point(field_get:CMDGroupUserSettingReq.groupid)
  return groupid_;
}
 void CMDGroupUserSettingReq::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDGroupUserSettingReq.groupid)
}

// optional uint32 userid = 2;
void CMDGroupUserSettingReq::clear_userid() {
  userid_ = 0u;
}
 ::google::protobuf::uint32 CMDGroupUserSettingReq::userid() const {
  // @@protoc_insertion_point(field_get:CMDGroupUserSettingReq.userid)
  return userid_;
}
 void CMDGroupUserSettingReq::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDGroupUserSettingReq.userid)
}

// optional .CMDUInt32 PChatThreshold = 3;
bool CMDGroupUserSettingReq::has_pchatthreshold() const {
  return !_is_default_instance_ && pchatthreshold_ != NULL;
}
void CMDGroupUserSettingReq::clear_pchatthreshold() {
  if (GetArenaNoVirtual() == NULL && pchatthreshold_ != NULL) delete pchatthreshold_;
  pchatthreshold_ = NULL;
}
const ::CMDUInt32& CMDGroupUserSettingReq::pchatthreshold() const {
  // @@protoc_insertion_point(field_get:CMDGroupUserSettingReq.PChatThreshold)
  return pchatthreshold_ != NULL ? *pchatthreshold_ : *default_instance_->pchatthreshold_;
}
::CMDUInt32* CMDGroupUserSettingReq::mutable_pchatthreshold() {
  
  if (pchatthreshold_ == NULL) {
    pchatthreshold_ = new ::CMDUInt32;
  }
  // @@protoc_insertion_point(field_mutable:CMDGroupUserSettingReq.PChatThreshold)
  return pchatthreshold_;
}
::CMDUInt32* CMDGroupUserSettingReq::release_pchatthreshold() {
  // @@protoc_insertion_point(field_release:CMDGroupUserSettingReq.PChatThreshold)
  
  ::CMDUInt32* temp = pchatthreshold_;
  pchatthreshold_ = NULL;
  return temp;
}
void CMDGroupUserSettingReq::set_allocated_pchatthreshold(::CMDUInt32* pchatthreshold) {
  delete pchatthreshold_;
  pchatthreshold_ = pchatthreshold;
  if (pchatthreshold) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDGroupUserSettingReq.PChatThreshold)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDGroupUserSettingResp::kErrInfoFieldNumber;
const int CMDGroupUserSettingResp::kGroupidFieldNumber;
const int CMDGroupUserSettingResp::kUseridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDGroupUserSettingResp::CMDGroupUserSettingResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDGroupUserSettingResp)
}

void CMDGroupUserSettingResp::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  errinfo_ = const_cast< ::CMDErrCode*>(&::CMDErrCode::default_instance());
}

CMDGroupUserSettingResp::CMDGroupUserSettingResp(const CMDGroupUserSettingResp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDGroupUserSettingResp)
}

void CMDGroupUserSettingResp::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  errinfo_ = NULL;
  groupid_ = 0u;
  userid_ = 0u;
}

CMDGroupUserSettingResp::~CMDGroupUserSettingResp() {
  // @@protoc_insertion_point(destructor:CMDGroupUserSettingResp)
  SharedDtor();
}

void CMDGroupUserSettingResp::SharedDtor() {
  if (this != default_instance_) {
    delete errinfo_;
  }
}

void CMDGroupUserSettingResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDGroupUserSettingResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDGroupUserSettingResp_descriptor_;
}

const CMDGroupUserSettingResp& CMDGroupUserSettingResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RoomSvr_2eproto();
  return *default_instance_;
}

CMDGroupUserSettingResp* CMDGroupUserSettingResp::default_instance_ = NULL;

CMDGroupUserSettingResp* CMDGroupUserSettingResp::New(::google::protobuf::Arena* arena) const {
  CMDGroupUserSettingResp* n = new CMDGroupUserSettingResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDGroupUserSettingResp::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDGroupUserSettingResp)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDGroupUserSettingResp, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDGroupUserSettingResp*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(groupid_, userid_);
  if (GetArenaNoVirtual() == NULL && errinfo_ != NULL) delete errinfo_;
  errinfo_ = NULL;

#undef ZR_HELPER_
#undef ZR_

}

bool CMDGroupUserSettingResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDGroupUserSettingResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CMDErrCode errInfo = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_errinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_groupid;
        break;
      }

      // optional uint32 groupid = 2;
      case 2: {
        if (tag == 16) {
         parse_groupid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &groupid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_userid;
        break;
      }

      // optional uint32 userid = 3;
      case 3: {
        if (tag == 24) {
         parse_userid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDGroupUserSettingResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDGroupUserSettingResp)
  return false;
#undef DO_
}

void CMDGroupUserSettingResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDGroupUserSettingResp)
  // optional .CMDErrCode errInfo = 1;
  if (this->has_errinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->errinfo_, output);
  }

  // optional uint32 groupid = 2;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->groupid(), output);
  }

  // optional uint32 userid = 3;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->userid(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDGroupUserSettingResp)
}

::google::protobuf::uint8* CMDGroupUserSettingResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDGroupUserSettingResp)
  // optional .CMDErrCode errInfo = 1;
  if (this->has_errinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->errinfo_, false, target);
  }

  // optional uint32 groupid = 2;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->groupid(), target);
  }

  // optional uint32 userid = 3;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->userid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDGroupUserSettingResp)
  return target;
}

int CMDGroupUserSettingResp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDGroupUserSettingResp)
  int total_size = 0;

  // optional .CMDErrCode errInfo = 1;
  if (this->has_errinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->errinfo_);
  }

  // optional uint32 groupid = 2;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->groupid());
  }

  // optional uint32 userid = 3;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDGroupUserSettingResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDGroupUserSettingResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDGroupUserSettingResp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDGroupUserSettingResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDGroupUserSettingResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDGroupUserSettingResp)
    MergeFrom(*source);
  }
}

void CMDGroupUserSettingResp::MergeFrom(const CMDGroupUserSettingResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDGroupUserSettingResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.has_errinfo()) {
    mutable_errinfo()->::CMDErrCode::MergeFrom(from.errinfo());
  }
  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
}

void CMDGroupUserSettingResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDGroupUserSettingResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDGroupUserSettingResp::CopyFrom(const CMDGroupUserSettingResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDGroupUserSettingResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDGroupUserSettingResp::IsInitialized() const {

  return true;
}

void CMDGroupUserSettingResp::Swap(CMDGroupUserSettingResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDGroupUserSettingResp::InternalSwap(CMDGroupUserSettingResp* other) {
  std::swap(errinfo_, other->errinfo_);
  std::swap(groupid_, other->groupid_);
  std::swap(userid_, other->userid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDGroupUserSettingResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDGroupUserSettingResp_descriptor_;
  metadata.reflection = CMDGroupUserSettingResp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDGroupUserSettingResp

// optional .CMDErrCode errInfo = 1;
bool CMDGroupUserSettingResp::has_errinfo() const {
  return !_is_default_instance_ && errinfo_ != NULL;
}
void CMDGroupUserSettingResp::clear_errinfo() {
  if (GetArenaNoVirtual() == NULL && errinfo_ != NULL) delete errinfo_;
  errinfo_ = NULL;
}
const ::CMDErrCode& CMDGroupUserSettingResp::errinfo() const {
  // @@protoc_insertion_point(field_get:CMDGroupUserSettingResp.errInfo)
  return errinfo_ != NULL ? *errinfo_ : *default_instance_->errinfo_;
}
::CMDErrCode* CMDGroupUserSettingResp::mutable_errinfo() {
  
  if (errinfo_ == NULL) {
    errinfo_ = new ::CMDErrCode;
  }
  // @@protoc_insertion_point(field_mutable:CMDGroupUserSettingResp.errInfo)
  return errinfo_;
}
::CMDErrCode* CMDGroupUserSettingResp::release_errinfo() {
  // @@protoc_insertion_point(field_release:CMDGroupUserSettingResp.errInfo)
  
  ::CMDErrCode* temp = errinfo_;
  errinfo_ = NULL;
  return temp;
}
void CMDGroupUserSettingResp::set_allocated_errinfo(::CMDErrCode* errinfo) {
  delete errinfo_;
  errinfo_ = errinfo;
  if (errinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDGroupUserSettingResp.errInfo)
}

// optional uint32 groupid = 2;
void CMDGroupUserSettingResp::clear_groupid() {
  groupid_ = 0u;
}
 ::google::protobuf::uint32 CMDGroupUserSettingResp::groupid() const {
  // @@protoc_insertion_point(field_get:CMDGroupUserSettingResp.groupid)
  return groupid_;
}
 void CMDGroupUserSettingResp::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDGroupUserSettingResp.groupid)
}

// optional uint32 userid = 3;
void CMDGroupUserSettingResp::clear_userid() {
  userid_ = 0u;
}
 ::google::protobuf::uint32 CMDGroupUserSettingResp::userid() const {
  // @@protoc_insertion_point(field_get:CMDGroupUserSettingResp.userid)
  return userid_;
}
 void CMDGroupUserSettingResp::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDGroupUserSettingResp.userid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDAuthStateNoty::kUseridFieldNumber;
const int CMDAuthStateNoty::kGroupidFieldNumber;
const int CMDAuthStateNoty::kAuthStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDAuthStateNoty::CMDAuthStateNoty()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDAuthStateNoty)
}

void CMDAuthStateNoty::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDAuthStateNoty::CMDAuthStateNoty(const CMDAuthStateNoty& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDAuthStateNoty)
}

void CMDAuthStateNoty::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  userid_ = 0u;
  groupid_ = 0u;
  authstate_ = 0u;
}

CMDAuthStateNoty::~CMDAuthStateNoty() {
  // @@protoc_insertion_point(destructor:CMDAuthStateNoty)
  SharedDtor();
}

void CMDAuthStateNoty::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMDAuthStateNoty::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDAuthStateNoty::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDAuthStateNoty_descriptor_;
}

const CMDAuthStateNoty& CMDAuthStateNoty::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RoomSvr_2eproto();
  return *default_instance_;
}

CMDAuthStateNoty* CMDAuthStateNoty::default_instance_ = NULL;

CMDAuthStateNoty* CMDAuthStateNoty::New(::google::protobuf::Arena* arena) const {
  CMDAuthStateNoty* n = new CMDAuthStateNoty;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDAuthStateNoty::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDAuthStateNoty)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDAuthStateNoty, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDAuthStateNoty*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(userid_, authstate_);

#undef ZR_HELPER_
#undef ZR_

}

bool CMDAuthStateNoty::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDAuthStateNoty)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 userid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_groupid;
        break;
      }

      // optional uint32 groupid = 2;
      case 2: {
        if (tag == 16) {
         parse_groupid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &groupid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_authState;
        break;
      }

      // optional uint32 authState = 3;
      case 3: {
        if (tag == 24) {
         parse_authState:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &authstate_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDAuthStateNoty)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDAuthStateNoty)
  return false;
#undef DO_
}

void CMDAuthStateNoty::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDAuthStateNoty)
  // optional uint32 userid = 1;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->userid(), output);
  }

  // optional uint32 groupid = 2;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->groupid(), output);
  }

  // optional uint32 authState = 3;
  if (this->authstate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->authstate(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDAuthStateNoty)
}

::google::protobuf::uint8* CMDAuthStateNoty::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDAuthStateNoty)
  // optional uint32 userid = 1;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->userid(), target);
  }

  // optional uint32 groupid = 2;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->groupid(), target);
  }

  // optional uint32 authState = 3;
  if (this->authstate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->authstate(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDAuthStateNoty)
  return target;
}

int CMDAuthStateNoty::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDAuthStateNoty)
  int total_size = 0;

  // optional uint32 userid = 1;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userid());
  }

  // optional uint32 groupid = 2;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->groupid());
  }

  // optional uint32 authState = 3;
  if (this->authstate() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->authstate());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDAuthStateNoty::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDAuthStateNoty)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDAuthStateNoty* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDAuthStateNoty>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDAuthStateNoty)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDAuthStateNoty)
    MergeFrom(*source);
  }
}

void CMDAuthStateNoty::MergeFrom(const CMDAuthStateNoty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDAuthStateNoty)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
  if (from.authstate() != 0) {
    set_authstate(from.authstate());
  }
}

void CMDAuthStateNoty::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDAuthStateNoty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDAuthStateNoty::CopyFrom(const CMDAuthStateNoty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDAuthStateNoty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDAuthStateNoty::IsInitialized() const {

  return true;
}

void CMDAuthStateNoty::Swap(CMDAuthStateNoty* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDAuthStateNoty::InternalSwap(CMDAuthStateNoty* other) {
  std::swap(userid_, other->userid_);
  std::swap(groupid_, other->groupid_);
  std::swap(authstate_, other->authstate_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDAuthStateNoty::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDAuthStateNoty_descriptor_;
  metadata.reflection = CMDAuthStateNoty_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDAuthStateNoty

// optional uint32 userid = 1;
void CMDAuthStateNoty::clear_userid() {
  userid_ = 0u;
}
 ::google::protobuf::uint32 CMDAuthStateNoty::userid() const {
  // @@protoc_insertion_point(field_get:CMDAuthStateNoty.userid)
  return userid_;
}
 void CMDAuthStateNoty::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDAuthStateNoty.userid)
}

// optional uint32 groupid = 2;
void CMDAuthStateNoty::clear_groupid() {
  groupid_ = 0u;
}
 ::google::protobuf::uint32 CMDAuthStateNoty::groupid() const {
  // @@protoc_insertion_point(field_get:CMDAuthStateNoty.groupid)
  return groupid_;
}
 void CMDAuthStateNoty::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDAuthStateNoty.groupid)
}

// optional uint32 authState = 3;
void CMDAuthStateNoty::clear_authstate() {
  authstate_ = 0u;
}
 ::google::protobuf::uint32 CMDAuthStateNoty::authstate() const {
  // @@protoc_insertion_point(field_get:CMDAuthStateNoty.authState)
  return authstate_;
}
 void CMDAuthStateNoty::set_authstate(::google::protobuf::uint32 value) {
  
  authstate_ = value;
  // @@protoc_insertion_point(field_set:CMDAuthStateNoty.authState)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDAuthReq::kUseridFieldNumber;
const int CMDAuthReq::kVcbidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDAuthReq::CMDAuthReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDAuthReq)
}

void CMDAuthReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDAuthReq::CMDAuthReq(const CMDAuthReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDAuthReq)
}

void CMDAuthReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  userid_ = 0u;
  vcbid_ = 0u;
}

CMDAuthReq::~CMDAuthReq() {
  // @@protoc_insertion_point(destructor:CMDAuthReq)
  SharedDtor();
}

void CMDAuthReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMDAuthReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDAuthReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDAuthReq_descriptor_;
}

const CMDAuthReq& CMDAuthReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RoomSvr_2eproto();
  return *default_instance_;
}

CMDAuthReq* CMDAuthReq::default_instance_ = NULL;

CMDAuthReq* CMDAuthReq::New(::google::protobuf::Arena* arena) const {
  CMDAuthReq* n = new CMDAuthReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDAuthReq::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDAuthReq)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDAuthReq, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDAuthReq*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(userid_, vcbid_);

#undef ZR_HELPER_
#undef ZR_

}

bool CMDAuthReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDAuthReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 userid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_vcbid;
        break;
      }

      // optional uint32 vcbid = 2;
      case 2: {
        if (tag == 16) {
         parse_vcbid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &vcbid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDAuthReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDAuthReq)
  return false;
#undef DO_
}

void CMDAuthReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDAuthReq)
  // optional uint32 userid = 1;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->userid(), output);
  }

  // optional uint32 vcbid = 2;
  if (this->vcbid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->vcbid(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDAuthReq)
}

::google::protobuf::uint8* CMDAuthReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDAuthReq)
  // optional uint32 userid = 1;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->userid(), target);
  }

  // optional uint32 vcbid = 2;
  if (this->vcbid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->vcbid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDAuthReq)
  return target;
}

int CMDAuthReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDAuthReq)
  int total_size = 0;

  // optional uint32 userid = 1;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userid());
  }

  // optional uint32 vcbid = 2;
  if (this->vcbid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->vcbid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDAuthReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDAuthReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDAuthReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDAuthReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDAuthReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDAuthReq)
    MergeFrom(*source);
  }
}

void CMDAuthReq::MergeFrom(const CMDAuthReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDAuthReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.vcbid() != 0) {
    set_vcbid(from.vcbid());
  }
}

void CMDAuthReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDAuthReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDAuthReq::CopyFrom(const CMDAuthReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDAuthReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDAuthReq::IsInitialized() const {

  return true;
}

void CMDAuthReq::Swap(CMDAuthReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDAuthReq::InternalSwap(CMDAuthReq* other) {
  std::swap(userid_, other->userid_);
  std::swap(vcbid_, other->vcbid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDAuthReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDAuthReq_descriptor_;
  metadata.reflection = CMDAuthReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDAuthReq

// optional uint32 userid = 1;
void CMDAuthReq::clear_userid() {
  userid_ = 0u;
}
 ::google::protobuf::uint32 CMDAuthReq::userid() const {
  // @@protoc_insertion_point(field_get:CMDAuthReq.userid)
  return userid_;
}
 void CMDAuthReq::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDAuthReq.userid)
}

// optional uint32 vcbid = 2;
void CMDAuthReq::clear_vcbid() {
  vcbid_ = 0u;
}
 ::google::protobuf::uint32 CMDAuthReq::vcbid() const {
  // @@protoc_insertion_point(field_get:CMDAuthReq.vcbid)
  return vcbid_;
}
 void CMDAuthReq::set_vcbid(::google::protobuf::uint32 value) {
  
  vcbid_ = value;
  // @@protoc_insertion_point(field_set:CMDAuthReq.vcbid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDAuthResp::kUseridFieldNumber;
const int CMDAuthResp::kVcbidFieldNumber;
const int CMDAuthResp::kAppidFieldNumber;
const int CMDAuthResp::kRecvkeyFieldNumber;
const int CMDAuthResp::kSendkeyFieldNumber;
const int CMDAuthResp::kErrcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDAuthResp::CMDAuthResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDAuthResp)
}

void CMDAuthResp::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDAuthResp::CMDAuthResp(const CMDAuthResp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDAuthResp)
}

void CMDAuthResp::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  userid_ = 0u;
  vcbid_ = 0u;
  appid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  recvkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sendkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0u;
}

CMDAuthResp::~CMDAuthResp() {
  // @@protoc_insertion_point(destructor:CMDAuthResp)
  SharedDtor();
}

void CMDAuthResp::SharedDtor() {
  appid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  recvkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sendkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CMDAuthResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDAuthResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDAuthResp_descriptor_;
}

const CMDAuthResp& CMDAuthResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RoomSvr_2eproto();
  return *default_instance_;
}

CMDAuthResp* CMDAuthResp::default_instance_ = NULL;

CMDAuthResp* CMDAuthResp::New(::google::protobuf::Arena* arena) const {
  CMDAuthResp* n = new CMDAuthResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDAuthResp::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDAuthResp)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDAuthResp, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDAuthResp*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(userid_, vcbid_);
  appid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  recvkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sendkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0u;

#undef ZR_HELPER_
#undef ZR_

}

bool CMDAuthResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDAuthResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 userid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_vcbid;
        break;
      }

      // optional uint32 vcbid = 2;
      case 2: {
        if (tag == 16) {
         parse_vcbid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &vcbid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_appid;
        break;
      }

      // optional string appid = 3;
      case 3: {
        if (tag == 26) {
         parse_appid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appid().data(), this->appid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMDAuthResp.appid"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_recvkey;
        break;
      }

      // optional string recvkey = 4;
      case 4: {
        if (tag == 34) {
         parse_recvkey:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_recvkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->recvkey().data(), this->recvkey().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMDAuthResp.recvkey"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_sendkey;
        break;
      }

      // optional string sendkey = 5;
      case 5: {
        if (tag == 42) {
         parse_sendkey:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sendkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sendkey().data(), this->sendkey().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMDAuthResp.sendkey"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_errcode;
        break;
      }

      // optional uint32 errcode = 6;
      case 6: {
        if (tag == 48) {
         parse_errcode:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &errcode_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDAuthResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDAuthResp)
  return false;
#undef DO_
}

void CMDAuthResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDAuthResp)
  // optional uint32 userid = 1;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->userid(), output);
  }

  // optional uint32 vcbid = 2;
  if (this->vcbid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->vcbid(), output);
  }

  // optional string appid = 3;
  if (this->appid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appid().data(), this->appid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDAuthResp.appid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->appid(), output);
  }

  // optional string recvkey = 4;
  if (this->recvkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->recvkey().data(), this->recvkey().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDAuthResp.recvkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->recvkey(), output);
  }

  // optional string sendkey = 5;
  if (this->sendkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sendkey().data(), this->sendkey().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDAuthResp.sendkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->sendkey(), output);
  }

  // optional uint32 errcode = 6;
  if (this->errcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->errcode(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDAuthResp)
}

::google::protobuf::uint8* CMDAuthResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDAuthResp)
  // optional uint32 userid = 1;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->userid(), target);
  }

  // optional uint32 vcbid = 2;
  if (this->vcbid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->vcbid(), target);
  }

  // optional string appid = 3;
  if (this->appid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appid().data(), this->appid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDAuthResp.appid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->appid(), target);
  }

  // optional string recvkey = 4;
  if (this->recvkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->recvkey().data(), this->recvkey().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDAuthResp.recvkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->recvkey(), target);
  }

  // optional string sendkey = 5;
  if (this->sendkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sendkey().data(), this->sendkey().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDAuthResp.sendkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->sendkey(), target);
  }

  // optional uint32 errcode = 6;
  if (this->errcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->errcode(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDAuthResp)
  return target;
}

int CMDAuthResp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDAuthResp)
  int total_size = 0;

  // optional uint32 userid = 1;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userid());
  }

  // optional uint32 vcbid = 2;
  if (this->vcbid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->vcbid());
  }

  // optional string appid = 3;
  if (this->appid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appid());
  }

  // optional string recvkey = 4;
  if (this->recvkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->recvkey());
  }

  // optional string sendkey = 5;
  if (this->sendkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sendkey());
  }

  // optional uint32 errcode = 6;
  if (this->errcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->errcode());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDAuthResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDAuthResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDAuthResp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDAuthResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDAuthResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDAuthResp)
    MergeFrom(*source);
  }
}

void CMDAuthResp::MergeFrom(const CMDAuthResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDAuthResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.vcbid() != 0) {
    set_vcbid(from.vcbid());
  }
  if (from.appid().size() > 0) {

    appid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appid_);
  }
  if (from.recvkey().size() > 0) {

    recvkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.recvkey_);
  }
  if (from.sendkey().size() > 0) {

    sendkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sendkey_);
  }
  if (from.errcode() != 0) {
    set_errcode(from.errcode());
  }
}

void CMDAuthResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDAuthResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDAuthResp::CopyFrom(const CMDAuthResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDAuthResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDAuthResp::IsInitialized() const {

  return true;
}

void CMDAuthResp::Swap(CMDAuthResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDAuthResp::InternalSwap(CMDAuthResp* other) {
  std::swap(userid_, other->userid_);
  std::swap(vcbid_, other->vcbid_);
  appid_.Swap(&other->appid_);
  recvkey_.Swap(&other->recvkey_);
  sendkey_.Swap(&other->sendkey_);
  std::swap(errcode_, other->errcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDAuthResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDAuthResp_descriptor_;
  metadata.reflection = CMDAuthResp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDAuthResp

// optional uint32 userid = 1;
void CMDAuthResp::clear_userid() {
  userid_ = 0u;
}
 ::google::protobuf::uint32 CMDAuthResp::userid() const {
  // @@protoc_insertion_point(field_get:CMDAuthResp.userid)
  return userid_;
}
 void CMDAuthResp::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDAuthResp.userid)
}

// optional uint32 vcbid = 2;
void CMDAuthResp::clear_vcbid() {
  vcbid_ = 0u;
}
 ::google::protobuf::uint32 CMDAuthResp::vcbid() const {
  // @@protoc_insertion_point(field_get:CMDAuthResp.vcbid)
  return vcbid_;
}
 void CMDAuthResp::set_vcbid(::google::protobuf::uint32 value) {
  
  vcbid_ = value;
  // @@protoc_insertion_point(field_set:CMDAuthResp.vcbid)
}

// optional string appid = 3;
void CMDAuthResp::clear_appid() {
  appid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CMDAuthResp::appid() const {
  // @@protoc_insertion_point(field_get:CMDAuthResp.appid)
  return appid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDAuthResp::set_appid(const ::std::string& value) {
  
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDAuthResp.appid)
}
 void CMDAuthResp::set_appid(const char* value) {
  
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDAuthResp.appid)
}
 void CMDAuthResp::set_appid(const char* value, size_t size) {
  
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDAuthResp.appid)
}
 ::std::string* CMDAuthResp::mutable_appid() {
  
  // @@protoc_insertion_point(field_mutable:CMDAuthResp.appid)
  return appid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMDAuthResp::release_appid() {
  // @@protoc_insertion_point(field_release:CMDAuthResp.appid)
  
  return appid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDAuthResp::set_allocated_appid(::std::string* appid) {
  if (appid != NULL) {
    
  } else {
    
  }
  appid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appid);
  // @@protoc_insertion_point(field_set_allocated:CMDAuthResp.appid)
}

// optional string recvkey = 4;
void CMDAuthResp::clear_recvkey() {
  recvkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CMDAuthResp::recvkey() const {
  // @@protoc_insertion_point(field_get:CMDAuthResp.recvkey)
  return recvkey_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDAuthResp::set_recvkey(const ::std::string& value) {
  
  recvkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDAuthResp.recvkey)
}
 void CMDAuthResp::set_recvkey(const char* value) {
  
  recvkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDAuthResp.recvkey)
}
 void CMDAuthResp::set_recvkey(const char* value, size_t size) {
  
  recvkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDAuthResp.recvkey)
}
 ::std::string* CMDAuthResp::mutable_recvkey() {
  
  // @@protoc_insertion_point(field_mutable:CMDAuthResp.recvkey)
  return recvkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMDAuthResp::release_recvkey() {
  // @@protoc_insertion_point(field_release:CMDAuthResp.recvkey)
  
  return recvkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDAuthResp::set_allocated_recvkey(::std::string* recvkey) {
  if (recvkey != NULL) {
    
  } else {
    
  }
  recvkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), recvkey);
  // @@protoc_insertion_point(field_set_allocated:CMDAuthResp.recvkey)
}

// optional string sendkey = 5;
void CMDAuthResp::clear_sendkey() {
  sendkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CMDAuthResp::sendkey() const {
  // @@protoc_insertion_point(field_get:CMDAuthResp.sendkey)
  return sendkey_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDAuthResp::set_sendkey(const ::std::string& value) {
  
  sendkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDAuthResp.sendkey)
}
 void CMDAuthResp::set_sendkey(const char* value) {
  
  sendkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDAuthResp.sendkey)
}
 void CMDAuthResp::set_sendkey(const char* value, size_t size) {
  
  sendkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDAuthResp.sendkey)
}
 ::std::string* CMDAuthResp::mutable_sendkey() {
  
  // @@protoc_insertion_point(field_mutable:CMDAuthResp.sendkey)
  return sendkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMDAuthResp::release_sendkey() {
  // @@protoc_insertion_point(field_release:CMDAuthResp.sendkey)
  
  return sendkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDAuthResp::set_allocated_sendkey(::std::string* sendkey) {
  if (sendkey != NULL) {
    
  } else {
    
  }
  sendkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sendkey);
  // @@protoc_insertion_point(field_set_allocated:CMDAuthResp.sendkey)
}

// optional uint32 errcode = 6;
void CMDAuthResp::clear_errcode() {
  errcode_ = 0u;
}
 ::google::protobuf::uint32 CMDAuthResp::errcode() const {
  // @@protoc_insertion_point(field_get:CMDAuthResp.errcode)
  return errcode_;
}
 void CMDAuthResp::set_errcode(::google::protobuf::uint32 value) {
  
  errcode_ = value;
  // @@protoc_insertion_point(field_set:CMDAuthResp.errcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDGroupOnlineMemberList::kGroupidFieldNumber;
const int CMDGroupOnlineMemberList::kListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDGroupOnlineMemberList::CMDGroupOnlineMemberList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDGroupOnlineMemberList)
}

void CMDGroupOnlineMemberList::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDGroupOnlineMemberList::CMDGroupOnlineMemberList(const CMDGroupOnlineMemberList& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDGroupOnlineMemberList)
}

void CMDGroupOnlineMemberList::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  groupid_ = 0u;
}

CMDGroupOnlineMemberList::~CMDGroupOnlineMemberList() {
  // @@protoc_insertion_point(destructor:CMDGroupOnlineMemberList)
  SharedDtor();
}

void CMDGroupOnlineMemberList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMDGroupOnlineMemberList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDGroupOnlineMemberList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDGroupOnlineMemberList_descriptor_;
}

const CMDGroupOnlineMemberList& CMDGroupOnlineMemberList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RoomSvr_2eproto();
  return *default_instance_;
}

CMDGroupOnlineMemberList* CMDGroupOnlineMemberList::default_instance_ = NULL;

CMDGroupOnlineMemberList* CMDGroupOnlineMemberList::New(::google::protobuf::Arena* arena) const {
  CMDGroupOnlineMemberList* n = new CMDGroupOnlineMemberList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDGroupOnlineMemberList::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDGroupOnlineMemberList)
  groupid_ = 0u;
  list_.Clear();
}

bool CMDGroupOnlineMemberList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDGroupOnlineMemberList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 groupid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &groupid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_list;
        break;
      }

      // repeated uint32 list = 2;
      case 2: {
        if (tag == 18) {
         parse_list:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_list())));
        } else if (tag == 16) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18, input, this->mutable_list())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDGroupOnlineMemberList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDGroupOnlineMemberList)
  return false;
#undef DO_
}

void CMDGroupOnlineMemberList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDGroupOnlineMemberList)
  // optional uint32 groupid = 1;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->groupid(), output);
  }

  // repeated uint32 list = 2;
  if (this->list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_list_cached_byte_size_);
  }
  for (int i = 0; i < this->list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->list(i), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDGroupOnlineMemberList)
}

::google::protobuf::uint8* CMDGroupOnlineMemberList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDGroupOnlineMemberList)
  // optional uint32 groupid = 1;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->groupid(), target);
  }

  // repeated uint32 list = 2;
  if (this->list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _list_cached_byte_size_, target);
  }
  for (int i = 0; i < this->list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->list(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDGroupOnlineMemberList)
  return target;
}

int CMDGroupOnlineMemberList::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDGroupOnlineMemberList)
  int total_size = 0;

  // optional uint32 groupid = 1;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->groupid());
  }

  // repeated uint32 list = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->list_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->list(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _list_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDGroupOnlineMemberList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDGroupOnlineMemberList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDGroupOnlineMemberList* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDGroupOnlineMemberList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDGroupOnlineMemberList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDGroupOnlineMemberList)
    MergeFrom(*source);
  }
}

void CMDGroupOnlineMemberList::MergeFrom(const CMDGroupOnlineMemberList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDGroupOnlineMemberList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  list_.MergeFrom(from.list_);
  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
}

void CMDGroupOnlineMemberList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDGroupOnlineMemberList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDGroupOnlineMemberList::CopyFrom(const CMDGroupOnlineMemberList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDGroupOnlineMemberList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDGroupOnlineMemberList::IsInitialized() const {

  return true;
}

void CMDGroupOnlineMemberList::Swap(CMDGroupOnlineMemberList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDGroupOnlineMemberList::InternalSwap(CMDGroupOnlineMemberList* other) {
  std::swap(groupid_, other->groupid_);
  list_.UnsafeArenaSwap(&other->list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDGroupOnlineMemberList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDGroupOnlineMemberList_descriptor_;
  metadata.reflection = CMDGroupOnlineMemberList_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDGroupOnlineMemberList

// optional uint32 groupid = 1;
void CMDGroupOnlineMemberList::clear_groupid() {
  groupid_ = 0u;
}
 ::google::protobuf::uint32 CMDGroupOnlineMemberList::groupid() const {
  // @@protoc_insertion_point(field_get:CMDGroupOnlineMemberList.groupid)
  return groupid_;
}
 void CMDGroupOnlineMemberList::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDGroupOnlineMemberList.groupid)
}

// repeated uint32 list = 2;
int CMDGroupOnlineMemberList::list_size() const {
  return list_.size();
}
void CMDGroupOnlineMemberList::clear_list() {
  list_.Clear();
}
 ::google::protobuf::uint32 CMDGroupOnlineMemberList::list(int index) const {
  // @@protoc_insertion_point(field_get:CMDGroupOnlineMemberList.list)
  return list_.Get(index);
}
 void CMDGroupOnlineMemberList::set_list(int index, ::google::protobuf::uint32 value) {
  list_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMDGroupOnlineMemberList.list)
}
 void CMDGroupOnlineMemberList::add_list(::google::protobuf::uint32 value) {
  list_.Add(value);
  // @@protoc_insertion_point(field_add:CMDGroupOnlineMemberList.list)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMDGroupOnlineMemberList::list() const {
  // @@protoc_insertion_point(field_list:CMDGroupOnlineMemberList.list)
  return list_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMDGroupOnlineMemberList::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:CMDGroupOnlineMemberList.list)
  return &list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDMemberEnterGroup::kGroupidFieldNumber;
const int CMDMemberEnterGroup::kUseridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDMemberEnterGroup::CMDMemberEnterGroup()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDMemberEnterGroup)
}

void CMDMemberEnterGroup::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDMemberEnterGroup::CMDMemberEnterGroup(const CMDMemberEnterGroup& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDMemberEnterGroup)
}

void CMDMemberEnterGroup::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  groupid_ = 0u;
  userid_ = 0u;
}

CMDMemberEnterGroup::~CMDMemberEnterGroup() {
  // @@protoc_insertion_point(destructor:CMDMemberEnterGroup)
  SharedDtor();
}

void CMDMemberEnterGroup::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMDMemberEnterGroup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDMemberEnterGroup::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDMemberEnterGroup_descriptor_;
}

const CMDMemberEnterGroup& CMDMemberEnterGroup::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RoomSvr_2eproto();
  return *default_instance_;
}

CMDMemberEnterGroup* CMDMemberEnterGroup::default_instance_ = NULL;

CMDMemberEnterGroup* CMDMemberEnterGroup::New(::google::protobuf::Arena* arena) const {
  CMDMemberEnterGroup* n = new CMDMemberEnterGroup;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDMemberEnterGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDMemberEnterGroup)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDMemberEnterGroup, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDMemberEnterGroup*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(groupid_, userid_);

#undef ZR_HELPER_
#undef ZR_

}

bool CMDMemberEnterGroup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDMemberEnterGroup)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 groupid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &groupid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_userid;
        break;
      }

      // optional uint32 userid = 2;
      case 2: {
        if (tag == 16) {
         parse_userid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDMemberEnterGroup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDMemberEnterGroup)
  return false;
#undef DO_
}

void CMDMemberEnterGroup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDMemberEnterGroup)
  // optional uint32 groupid = 1;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->groupid(), output);
  }

  // optional uint32 userid = 2;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->userid(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDMemberEnterGroup)
}

::google::protobuf::uint8* CMDMemberEnterGroup::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDMemberEnterGroup)
  // optional uint32 groupid = 1;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->groupid(), target);
  }

  // optional uint32 userid = 2;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->userid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDMemberEnterGroup)
  return target;
}

int CMDMemberEnterGroup::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDMemberEnterGroup)
  int total_size = 0;

  // optional uint32 groupid = 1;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->groupid());
  }

  // optional uint32 userid = 2;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDMemberEnterGroup::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDMemberEnterGroup)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDMemberEnterGroup* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDMemberEnterGroup>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDMemberEnterGroup)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDMemberEnterGroup)
    MergeFrom(*source);
  }
}

void CMDMemberEnterGroup::MergeFrom(const CMDMemberEnterGroup& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDMemberEnterGroup)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
}

void CMDMemberEnterGroup::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDMemberEnterGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDMemberEnterGroup::CopyFrom(const CMDMemberEnterGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDMemberEnterGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDMemberEnterGroup::IsInitialized() const {

  return true;
}

void CMDMemberEnterGroup::Swap(CMDMemberEnterGroup* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDMemberEnterGroup::InternalSwap(CMDMemberEnterGroup* other) {
  std::swap(groupid_, other->groupid_);
  std::swap(userid_, other->userid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDMemberEnterGroup::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDMemberEnterGroup_descriptor_;
  metadata.reflection = CMDMemberEnterGroup_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDMemberEnterGroup

// optional uint32 groupid = 1;
void CMDMemberEnterGroup::clear_groupid() {
  groupid_ = 0u;
}
 ::google::protobuf::uint32 CMDMemberEnterGroup::groupid() const {
  // @@protoc_insertion_point(field_get:CMDMemberEnterGroup.groupid)
  return groupid_;
}
 void CMDMemberEnterGroup::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDMemberEnterGroup.groupid)
}

// optional uint32 userid = 2;
void CMDMemberEnterGroup::clear_userid() {
  userid_ = 0u;
}
 ::google::protobuf::uint32 CMDMemberEnterGroup::userid() const {
  // @@protoc_insertion_point(field_get:CMDMemberEnterGroup.userid)
  return userid_;
}
 void CMDMemberEnterGroup::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDMemberEnterGroup.userid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDMemberExitGroup::kGroupidFieldNumber;
const int CMDMemberExitGroup::kUseridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDMemberExitGroup::CMDMemberExitGroup()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDMemberExitGroup)
}

void CMDMemberExitGroup::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDMemberExitGroup::CMDMemberExitGroup(const CMDMemberExitGroup& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDMemberExitGroup)
}

void CMDMemberExitGroup::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  groupid_ = 0u;
  userid_ = 0u;
}

CMDMemberExitGroup::~CMDMemberExitGroup() {
  // @@protoc_insertion_point(destructor:CMDMemberExitGroup)
  SharedDtor();
}

void CMDMemberExitGroup::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMDMemberExitGroup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDMemberExitGroup::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDMemberExitGroup_descriptor_;
}

const CMDMemberExitGroup& CMDMemberExitGroup::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RoomSvr_2eproto();
  return *default_instance_;
}

CMDMemberExitGroup* CMDMemberExitGroup::default_instance_ = NULL;

CMDMemberExitGroup* CMDMemberExitGroup::New(::google::protobuf::Arena* arena) const {
  CMDMemberExitGroup* n = new CMDMemberExitGroup;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDMemberExitGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDMemberExitGroup)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDMemberExitGroup, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDMemberExitGroup*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(groupid_, userid_);

#undef ZR_HELPER_
#undef ZR_

}

bool CMDMemberExitGroup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDMemberExitGroup)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 groupid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &groupid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_userid;
        break;
      }

      // optional uint32 userid = 2;
      case 2: {
        if (tag == 16) {
         parse_userid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDMemberExitGroup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDMemberExitGroup)
  return false;
#undef DO_
}

void CMDMemberExitGroup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDMemberExitGroup)
  // optional uint32 groupid = 1;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->groupid(), output);
  }

  // optional uint32 userid = 2;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->userid(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDMemberExitGroup)
}

::google::protobuf::uint8* CMDMemberExitGroup::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDMemberExitGroup)
  // optional uint32 groupid = 1;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->groupid(), target);
  }

  // optional uint32 userid = 2;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->userid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDMemberExitGroup)
  return target;
}

int CMDMemberExitGroup::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDMemberExitGroup)
  int total_size = 0;

  // optional uint32 groupid = 1;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->groupid());
  }

  // optional uint32 userid = 2;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDMemberExitGroup::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDMemberExitGroup)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDMemberExitGroup* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDMemberExitGroup>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDMemberExitGroup)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDMemberExitGroup)
    MergeFrom(*source);
  }
}

void CMDMemberExitGroup::MergeFrom(const CMDMemberExitGroup& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDMemberExitGroup)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
}

void CMDMemberExitGroup::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDMemberExitGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDMemberExitGroup::CopyFrom(const CMDMemberExitGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDMemberExitGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDMemberExitGroup::IsInitialized() const {

  return true;
}

void CMDMemberExitGroup::Swap(CMDMemberExitGroup* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDMemberExitGroup::InternalSwap(CMDMemberExitGroup* other) {
  std::swap(groupid_, other->groupid_);
  std::swap(userid_, other->userid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDMemberExitGroup::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDMemberExitGroup_descriptor_;
  metadata.reflection = CMDMemberExitGroup_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDMemberExitGroup

// optional uint32 groupid = 1;
void CMDMemberExitGroup::clear_groupid() {
  groupid_ = 0u;
}
 ::google::protobuf::uint32 CMDMemberExitGroup::groupid() const {
  // @@protoc_insertion_point(field_get:CMDMemberExitGroup.groupid)
  return groupid_;
}
 void CMDMemberExitGroup::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDMemberExitGroup.groupid)
}

// optional uint32 userid = 2;
void CMDMemberExitGroup::clear_userid() {
  userid_ = 0u;
}
 ::google::protobuf::uint32 CMDMemberExitGroup::userid() const {
  // @@protoc_insertion_point(field_get:CMDMemberExitGroup.userid)
  return userid_;
}
 void CMDMemberExitGroup::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDMemberExitGroup.userid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDForbidUserChat::kGroupidFieldNumber;
const int CMDForbidUserChat::kUseridFieldNumber;
const int CMDForbidUserChat::kToidFieldNumber;
const int CMDForbidUserChat::kStatusFieldNumber;
const int CMDForbidUserChat::kErridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDForbidUserChat::CMDForbidUserChat()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDForbidUserChat)
}

void CMDForbidUserChat::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDForbidUserChat::CMDForbidUserChat(const CMDForbidUserChat& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDForbidUserChat)
}

void CMDForbidUserChat::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  groupid_ = 0u;
  userid_ = 0u;
  toid_ = 0u;
  status_ = 0u;
  errid_ = 0u;
}

CMDForbidUserChat::~CMDForbidUserChat() {
  // @@protoc_insertion_point(destructor:CMDForbidUserChat)
  SharedDtor();
}

void CMDForbidUserChat::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMDForbidUserChat::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDForbidUserChat::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDForbidUserChat_descriptor_;
}

const CMDForbidUserChat& CMDForbidUserChat::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RoomSvr_2eproto();
  return *default_instance_;
}

CMDForbidUserChat* CMDForbidUserChat::default_instance_ = NULL;

CMDForbidUserChat* CMDForbidUserChat::New(::google::protobuf::Arena* arena) const {
  CMDForbidUserChat* n = new CMDForbidUserChat;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDForbidUserChat::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDForbidUserChat)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDForbidUserChat, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDForbidUserChat*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(groupid_, errid_);

#undef ZR_HELPER_
#undef ZR_

}

bool CMDForbidUserChat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDForbidUserChat)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 groupid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &groupid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_userid;
        break;
      }

      // optional uint32 userid = 2;
      case 2: {
        if (tag == 16) {
         parse_userid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_toid;
        break;
      }

      // optional uint32 toid = 3;
      case 3: {
        if (tag == 24) {
         parse_toid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &toid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_status;
        break;
      }

      // optional uint32 status = 4;
      case 4: {
        if (tag == 32) {
         parse_status:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &status_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_errid;
        break;
      }

      // optional uint32 errid = 5;
      case 5: {
        if (tag == 40) {
         parse_errid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &errid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDForbidUserChat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDForbidUserChat)
  return false;
#undef DO_
}

void CMDForbidUserChat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDForbidUserChat)
  // optional uint32 groupid = 1;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->groupid(), output);
  }

  // optional uint32 userid = 2;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->userid(), output);
  }

  // optional uint32 toid = 3;
  if (this->toid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->toid(), output);
  }

  // optional uint32 status = 4;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->status(), output);
  }

  // optional uint32 errid = 5;
  if (this->errid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->errid(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDForbidUserChat)
}

::google::protobuf::uint8* CMDForbidUserChat::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDForbidUserChat)
  // optional uint32 groupid = 1;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->groupid(), target);
  }

  // optional uint32 userid = 2;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->userid(), target);
  }

  // optional uint32 toid = 3;
  if (this->toid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->toid(), target);
  }

  // optional uint32 status = 4;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->status(), target);
  }

  // optional uint32 errid = 5;
  if (this->errid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->errid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDForbidUserChat)
  return target;
}

int CMDForbidUserChat::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDForbidUserChat)
  int total_size = 0;

  // optional uint32 groupid = 1;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->groupid());
  }

  // optional uint32 userid = 2;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userid());
  }

  // optional uint32 toid = 3;
  if (this->toid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->toid());
  }

  // optional uint32 status = 4;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->status());
  }

  // optional uint32 errid = 5;
  if (this->errid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->errid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDForbidUserChat::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDForbidUserChat)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDForbidUserChat* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDForbidUserChat>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDForbidUserChat)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDForbidUserChat)
    MergeFrom(*source);
  }
}

void CMDForbidUserChat::MergeFrom(const CMDForbidUserChat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDForbidUserChat)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.toid() != 0) {
    set_toid(from.toid());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
  if (from.errid() != 0) {
    set_errid(from.errid());
  }
}

void CMDForbidUserChat::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDForbidUserChat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDForbidUserChat::CopyFrom(const CMDForbidUserChat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDForbidUserChat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDForbidUserChat::IsInitialized() const {

  return true;
}

void CMDForbidUserChat::Swap(CMDForbidUserChat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDForbidUserChat::InternalSwap(CMDForbidUserChat* other) {
  std::swap(groupid_, other->groupid_);
  std::swap(userid_, other->userid_);
  std::swap(toid_, other->toid_);
  std::swap(status_, other->status_);
  std::swap(errid_, other->errid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDForbidUserChat::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDForbidUserChat_descriptor_;
  metadata.reflection = CMDForbidUserChat_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDForbidUserChat

// optional uint32 groupid = 1;
void CMDForbidUserChat::clear_groupid() {
  groupid_ = 0u;
}
 ::google::protobuf::uint32 CMDForbidUserChat::groupid() const {
  // @@protoc_insertion_point(field_get:CMDForbidUserChat.groupid)
  return groupid_;
}
 void CMDForbidUserChat::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDForbidUserChat.groupid)
}

// optional uint32 userid = 2;
void CMDForbidUserChat::clear_userid() {
  userid_ = 0u;
}
 ::google::protobuf::uint32 CMDForbidUserChat::userid() const {
  // @@protoc_insertion_point(field_get:CMDForbidUserChat.userid)
  return userid_;
}
 void CMDForbidUserChat::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDForbidUserChat.userid)
}

// optional uint32 toid = 3;
void CMDForbidUserChat::clear_toid() {
  toid_ = 0u;
}
 ::google::protobuf::uint32 CMDForbidUserChat::toid() const {
  // @@protoc_insertion_point(field_get:CMDForbidUserChat.toid)
  return toid_;
}
 void CMDForbidUserChat::set_toid(::google::protobuf::uint32 value) {
  
  toid_ = value;
  // @@protoc_insertion_point(field_set:CMDForbidUserChat.toid)
}

// optional uint32 status = 4;
void CMDForbidUserChat::clear_status() {
  status_ = 0u;
}
 ::google::protobuf::uint32 CMDForbidUserChat::status() const {
  // @@protoc_insertion_point(field_get:CMDForbidUserChat.status)
  return status_;
}
 void CMDForbidUserChat::set_status(::google::protobuf::uint32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:CMDForbidUserChat.status)
}

// optional uint32 errid = 5;
void CMDForbidUserChat::clear_errid() {
  errid_ = 0u;
}
 ::google::protobuf::uint32 CMDForbidUserChat::errid() const {
  // @@protoc_insertion_point(field_get:CMDForbidUserChat.errid)
  return errid_;
}
 void CMDForbidUserChat::set_errid(::google::protobuf::uint32 value) {
  
  errid_ = value;
  // @@protoc_insertion_point(field_set:CMDForbidUserChat.errid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDCourseFinish::kGroupidFieldNumber;
const int CMDCourseFinish::kUseridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDCourseFinish::CMDCourseFinish()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDCourseFinish)
}

void CMDCourseFinish::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDCourseFinish::CMDCourseFinish(const CMDCourseFinish& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDCourseFinish)
}

void CMDCourseFinish::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  groupid_ = 0u;
  userid_ = 0u;
}

CMDCourseFinish::~CMDCourseFinish() {
  // @@protoc_insertion_point(destructor:CMDCourseFinish)
  SharedDtor();
}

void CMDCourseFinish::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMDCourseFinish::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDCourseFinish::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDCourseFinish_descriptor_;
}

const CMDCourseFinish& CMDCourseFinish::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RoomSvr_2eproto();
  return *default_instance_;
}

CMDCourseFinish* CMDCourseFinish::default_instance_ = NULL;

CMDCourseFinish* CMDCourseFinish::New(::google::protobuf::Arena* arena) const {
  CMDCourseFinish* n = new CMDCourseFinish;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDCourseFinish::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDCourseFinish)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDCourseFinish, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDCourseFinish*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(groupid_, userid_);

#undef ZR_HELPER_
#undef ZR_

}

bool CMDCourseFinish::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDCourseFinish)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 groupid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &groupid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_userid;
        break;
      }

      // optional uint32 userid = 2;
      case 2: {
        if (tag == 16) {
         parse_userid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDCourseFinish)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDCourseFinish)
  return false;
#undef DO_
}

void CMDCourseFinish::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDCourseFinish)
  // optional uint32 groupid = 1;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->groupid(), output);
  }

  // optional uint32 userid = 2;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->userid(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDCourseFinish)
}

::google::protobuf::uint8* CMDCourseFinish::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDCourseFinish)
  // optional uint32 groupid = 1;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->groupid(), target);
  }

  // optional uint32 userid = 2;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->userid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDCourseFinish)
  return target;
}

int CMDCourseFinish::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDCourseFinish)
  int total_size = 0;

  // optional uint32 groupid = 1;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->groupid());
  }

  // optional uint32 userid = 2;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDCourseFinish::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDCourseFinish)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDCourseFinish* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDCourseFinish>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDCourseFinish)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDCourseFinish)
    MergeFrom(*source);
  }
}

void CMDCourseFinish::MergeFrom(const CMDCourseFinish& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDCourseFinish)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
}

void CMDCourseFinish::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDCourseFinish)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDCourseFinish::CopyFrom(const CMDCourseFinish& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDCourseFinish)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDCourseFinish::IsInitialized() const {

  return true;
}

void CMDCourseFinish::Swap(CMDCourseFinish* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDCourseFinish::InternalSwap(CMDCourseFinish* other) {
  std::swap(groupid_, other->groupid_);
  std::swap(userid_, other->userid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDCourseFinish::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDCourseFinish_descriptor_;
  metadata.reflection = CMDCourseFinish_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDCourseFinish

// optional uint32 groupid = 1;
void CMDCourseFinish::clear_groupid() {
  groupid_ = 0u;
}
 ::google::protobuf::uint32 CMDCourseFinish::groupid() const {
  // @@protoc_insertion_point(field_get:CMDCourseFinish.groupid)
  return groupid_;
}
 void CMDCourseFinish::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDCourseFinish.groupid)
}

// optional uint32 userid = 2;
void CMDCourseFinish::clear_userid() {
  userid_ = 0u;
}
 ::google::protobuf::uint32 CMDCourseFinish::userid() const {
  // @@protoc_insertion_point(field_get:CMDCourseFinish.userid)
  return userid_;
}
 void CMDCourseFinish::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDCourseFinish.userid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDSilenceNoty_tipUser::kSrcnameFieldNumber;
const int CMDSilenceNoty_tipUser::kSrcheadFieldNumber;
const int CMDSilenceNoty_tipUser::kGifnameFieldNumber;
const int CMDSilenceNoty_tipUser::kGifpictureFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDSilenceNoty_tipUser::CMDSilenceNoty_tipUser()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDSilenceNoty.tipUser)
}

void CMDSilenceNoty_tipUser::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDSilenceNoty_tipUser::CMDSilenceNoty_tipUser(const CMDSilenceNoty_tipUser& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDSilenceNoty.tipUser)
}

void CMDSilenceNoty_tipUser::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  srcname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  srchead_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gifname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gifpicture_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CMDSilenceNoty_tipUser::~CMDSilenceNoty_tipUser() {
  // @@protoc_insertion_point(destructor:CMDSilenceNoty.tipUser)
  SharedDtor();
}

void CMDSilenceNoty_tipUser::SharedDtor() {
  srcname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  srchead_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gifname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gifpicture_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CMDSilenceNoty_tipUser::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDSilenceNoty_tipUser::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDSilenceNoty_tipUser_descriptor_;
}

const CMDSilenceNoty_tipUser& CMDSilenceNoty_tipUser::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RoomSvr_2eproto();
  return *default_instance_;
}

CMDSilenceNoty_tipUser* CMDSilenceNoty_tipUser::default_instance_ = NULL;

CMDSilenceNoty_tipUser* CMDSilenceNoty_tipUser::New(::google::protobuf::Arena* arena) const {
  CMDSilenceNoty_tipUser* n = new CMDSilenceNoty_tipUser;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDSilenceNoty_tipUser::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDSilenceNoty.tipUser)
  srcname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  srchead_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gifname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gifpicture_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool CMDSilenceNoty_tipUser::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDSilenceNoty.tipUser)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string srcname = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_srcname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->srcname().data(), this->srcname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMDSilenceNoty.tipUser.srcname"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_srchead;
        break;
      }

      // optional string srchead = 2;
      case 2: {
        if (tag == 18) {
         parse_srchead:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_srchead()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->srchead().data(), this->srchead().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMDSilenceNoty.tipUser.srchead"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_gifname;
        break;
      }

      // optional string gifname = 3;
      case 3: {
        if (tag == 26) {
         parse_gifname:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gifname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->gifname().data(), this->gifname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMDSilenceNoty.tipUser.gifname"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_gifpicture;
        break;
      }

      // optional string gifpicture = 4;
      case 4: {
        if (tag == 34) {
         parse_gifpicture:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gifpicture()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->gifpicture().data(), this->gifpicture().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMDSilenceNoty.tipUser.gifpicture"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDSilenceNoty.tipUser)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDSilenceNoty.tipUser)
  return false;
#undef DO_
}

void CMDSilenceNoty_tipUser::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDSilenceNoty.tipUser)
  // optional string srcname = 1;
  if (this->srcname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->srcname().data(), this->srcname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDSilenceNoty.tipUser.srcname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->srcname(), output);
  }

  // optional string srchead = 2;
  if (this->srchead().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->srchead().data(), this->srchead().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDSilenceNoty.tipUser.srchead");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->srchead(), output);
  }

  // optional string gifname = 3;
  if (this->gifname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gifname().data(), this->gifname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDSilenceNoty.tipUser.gifname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->gifname(), output);
  }

  // optional string gifpicture = 4;
  if (this->gifpicture().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gifpicture().data(), this->gifpicture().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDSilenceNoty.tipUser.gifpicture");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->gifpicture(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDSilenceNoty.tipUser)
}

::google::protobuf::uint8* CMDSilenceNoty_tipUser::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDSilenceNoty.tipUser)
  // optional string srcname = 1;
  if (this->srcname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->srcname().data(), this->srcname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDSilenceNoty.tipUser.srcname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->srcname(), target);
  }

  // optional string srchead = 2;
  if (this->srchead().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->srchead().data(), this->srchead().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDSilenceNoty.tipUser.srchead");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->srchead(), target);
  }

  // optional string gifname = 3;
  if (this->gifname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gifname().data(), this->gifname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDSilenceNoty.tipUser.gifname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->gifname(), target);
  }

  // optional string gifpicture = 4;
  if (this->gifpicture().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gifpicture().data(), this->gifpicture().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDSilenceNoty.tipUser.gifpicture");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->gifpicture(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDSilenceNoty.tipUser)
  return target;
}

int CMDSilenceNoty_tipUser::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDSilenceNoty.tipUser)
  int total_size = 0;

  // optional string srcname = 1;
  if (this->srcname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->srcname());
  }

  // optional string srchead = 2;
  if (this->srchead().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->srchead());
  }

  // optional string gifname = 3;
  if (this->gifname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->gifname());
  }

  // optional string gifpicture = 4;
  if (this->gifpicture().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->gifpicture());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDSilenceNoty_tipUser::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDSilenceNoty.tipUser)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDSilenceNoty_tipUser* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDSilenceNoty_tipUser>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDSilenceNoty.tipUser)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDSilenceNoty.tipUser)
    MergeFrom(*source);
  }
}

void CMDSilenceNoty_tipUser::MergeFrom(const CMDSilenceNoty_tipUser& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDSilenceNoty.tipUser)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.srcname().size() > 0) {

    srcname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.srcname_);
  }
  if (from.srchead().size() > 0) {

    srchead_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.srchead_);
  }
  if (from.gifname().size() > 0) {

    gifname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gifname_);
  }
  if (from.gifpicture().size() > 0) {

    gifpicture_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gifpicture_);
  }
}

void CMDSilenceNoty_tipUser::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDSilenceNoty.tipUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDSilenceNoty_tipUser::CopyFrom(const CMDSilenceNoty_tipUser& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDSilenceNoty.tipUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDSilenceNoty_tipUser::IsInitialized() const {

  return true;
}

void CMDSilenceNoty_tipUser::Swap(CMDSilenceNoty_tipUser* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDSilenceNoty_tipUser::InternalSwap(CMDSilenceNoty_tipUser* other) {
  srcname_.Swap(&other->srcname_);
  srchead_.Swap(&other->srchead_);
  gifname_.Swap(&other->gifname_);
  gifpicture_.Swap(&other->gifpicture_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDSilenceNoty_tipUser::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDSilenceNoty_tipUser_descriptor_;
  metadata.reflection = CMDSilenceNoty_tipUser_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDSilenceNoty::kGroupidFieldNumber;
const int CMDSilenceNoty::kUserFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDSilenceNoty::CMDSilenceNoty()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDSilenceNoty)
}

void CMDSilenceNoty::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDSilenceNoty::CMDSilenceNoty(const CMDSilenceNoty& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDSilenceNoty)
}

void CMDSilenceNoty::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  groupid_ = 0u;
}

CMDSilenceNoty::~CMDSilenceNoty() {
  // @@protoc_insertion_point(destructor:CMDSilenceNoty)
  SharedDtor();
}

void CMDSilenceNoty::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMDSilenceNoty::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDSilenceNoty::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDSilenceNoty_descriptor_;
}

const CMDSilenceNoty& CMDSilenceNoty::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RoomSvr_2eproto();
  return *default_instance_;
}

CMDSilenceNoty* CMDSilenceNoty::default_instance_ = NULL;

CMDSilenceNoty* CMDSilenceNoty::New(::google::protobuf::Arena* arena) const {
  CMDSilenceNoty* n = new CMDSilenceNoty;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDSilenceNoty::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDSilenceNoty)
  groupid_ = 0u;
  user_.Clear();
}

bool CMDSilenceNoty::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDSilenceNoty)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 groupid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &groupid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_user;
        break;
      }

      // repeated .CMDSilenceNoty.tipUser user = 2;
      case 2: {
        if (tag == 18) {
         parse_user:
          DO_(input->IncrementRecursionDepth());
         parse_loop_user:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_user()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_user;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDSilenceNoty)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDSilenceNoty)
  return false;
#undef DO_
}

void CMDSilenceNoty::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDSilenceNoty)
  // optional uint32 groupid = 1;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->groupid(), output);
  }

  // repeated .CMDSilenceNoty.tipUser user = 2;
  for (unsigned int i = 0, n = this->user_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->user(i), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDSilenceNoty)
}

::google::protobuf::uint8* CMDSilenceNoty::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDSilenceNoty)
  // optional uint32 groupid = 1;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->groupid(), target);
  }

  // repeated .CMDSilenceNoty.tipUser user = 2;
  for (unsigned int i = 0, n = this->user_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->user(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDSilenceNoty)
  return target;
}

int CMDSilenceNoty::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDSilenceNoty)
  int total_size = 0;

  // optional uint32 groupid = 1;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->groupid());
  }

  // repeated .CMDSilenceNoty.tipUser user = 2;
  total_size += 1 * this->user_size();
  for (int i = 0; i < this->user_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->user(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDSilenceNoty::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDSilenceNoty)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDSilenceNoty* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDSilenceNoty>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDSilenceNoty)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDSilenceNoty)
    MergeFrom(*source);
  }
}

void CMDSilenceNoty::MergeFrom(const CMDSilenceNoty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDSilenceNoty)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  user_.MergeFrom(from.user_);
  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
}

void CMDSilenceNoty::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDSilenceNoty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDSilenceNoty::CopyFrom(const CMDSilenceNoty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDSilenceNoty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDSilenceNoty::IsInitialized() const {

  return true;
}

void CMDSilenceNoty::Swap(CMDSilenceNoty* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDSilenceNoty::InternalSwap(CMDSilenceNoty* other) {
  std::swap(groupid_, other->groupid_);
  user_.UnsafeArenaSwap(&other->user_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDSilenceNoty::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDSilenceNoty_descriptor_;
  metadata.reflection = CMDSilenceNoty_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDSilenceNoty_tipUser

// optional string srcname = 1;
void CMDSilenceNoty_tipUser::clear_srcname() {
  srcname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CMDSilenceNoty_tipUser::srcname() const {
  // @@protoc_insertion_point(field_get:CMDSilenceNoty.tipUser.srcname)
  return srcname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDSilenceNoty_tipUser::set_srcname(const ::std::string& value) {
  
  srcname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDSilenceNoty.tipUser.srcname)
}
 void CMDSilenceNoty_tipUser::set_srcname(const char* value) {
  
  srcname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDSilenceNoty.tipUser.srcname)
}
 void CMDSilenceNoty_tipUser::set_srcname(const char* value, size_t size) {
  
  srcname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDSilenceNoty.tipUser.srcname)
}
 ::std::string* CMDSilenceNoty_tipUser::mutable_srcname() {
  
  // @@protoc_insertion_point(field_mutable:CMDSilenceNoty.tipUser.srcname)
  return srcname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMDSilenceNoty_tipUser::release_srcname() {
  // @@protoc_insertion_point(field_release:CMDSilenceNoty.tipUser.srcname)
  
  return srcname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDSilenceNoty_tipUser::set_allocated_srcname(::std::string* srcname) {
  if (srcname != NULL) {
    
  } else {
    
  }
  srcname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), srcname);
  // @@protoc_insertion_point(field_set_allocated:CMDSilenceNoty.tipUser.srcname)
}

// optional string srchead = 2;
void CMDSilenceNoty_tipUser::clear_srchead() {
  srchead_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CMDSilenceNoty_tipUser::srchead() const {
  // @@protoc_insertion_point(field_get:CMDSilenceNoty.tipUser.srchead)
  return srchead_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDSilenceNoty_tipUser::set_srchead(const ::std::string& value) {
  
  srchead_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDSilenceNoty.tipUser.srchead)
}
 void CMDSilenceNoty_tipUser::set_srchead(const char* value) {
  
  srchead_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDSilenceNoty.tipUser.srchead)
}
 void CMDSilenceNoty_tipUser::set_srchead(const char* value, size_t size) {
  
  srchead_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDSilenceNoty.tipUser.srchead)
}
 ::std::string* CMDSilenceNoty_tipUser::mutable_srchead() {
  
  // @@protoc_insertion_point(field_mutable:CMDSilenceNoty.tipUser.srchead)
  return srchead_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMDSilenceNoty_tipUser::release_srchead() {
  // @@protoc_insertion_point(field_release:CMDSilenceNoty.tipUser.srchead)
  
  return srchead_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDSilenceNoty_tipUser::set_allocated_srchead(::std::string* srchead) {
  if (srchead != NULL) {
    
  } else {
    
  }
  srchead_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), srchead);
  // @@protoc_insertion_point(field_set_allocated:CMDSilenceNoty.tipUser.srchead)
}

// optional string gifname = 3;
void CMDSilenceNoty_tipUser::clear_gifname() {
  gifname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CMDSilenceNoty_tipUser::gifname() const {
  // @@protoc_insertion_point(field_get:CMDSilenceNoty.tipUser.gifname)
  return gifname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDSilenceNoty_tipUser::set_gifname(const ::std::string& value) {
  
  gifname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDSilenceNoty.tipUser.gifname)
}
 void CMDSilenceNoty_tipUser::set_gifname(const char* value) {
  
  gifname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDSilenceNoty.tipUser.gifname)
}
 void CMDSilenceNoty_tipUser::set_gifname(const char* value, size_t size) {
  
  gifname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDSilenceNoty.tipUser.gifname)
}
 ::std::string* CMDSilenceNoty_tipUser::mutable_gifname() {
  
  // @@protoc_insertion_point(field_mutable:CMDSilenceNoty.tipUser.gifname)
  return gifname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMDSilenceNoty_tipUser::release_gifname() {
  // @@protoc_insertion_point(field_release:CMDSilenceNoty.tipUser.gifname)
  
  return gifname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDSilenceNoty_tipUser::set_allocated_gifname(::std::string* gifname) {
  if (gifname != NULL) {
    
  } else {
    
  }
  gifname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gifname);
  // @@protoc_insertion_point(field_set_allocated:CMDSilenceNoty.tipUser.gifname)
}

// optional string gifpicture = 4;
void CMDSilenceNoty_tipUser::clear_gifpicture() {
  gifpicture_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CMDSilenceNoty_tipUser::gifpicture() const {
  // @@protoc_insertion_point(field_get:CMDSilenceNoty.tipUser.gifpicture)
  return gifpicture_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDSilenceNoty_tipUser::set_gifpicture(const ::std::string& value) {
  
  gifpicture_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDSilenceNoty.tipUser.gifpicture)
}
 void CMDSilenceNoty_tipUser::set_gifpicture(const char* value) {
  
  gifpicture_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDSilenceNoty.tipUser.gifpicture)
}
 void CMDSilenceNoty_tipUser::set_gifpicture(const char* value, size_t size) {
  
  gifpicture_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDSilenceNoty.tipUser.gifpicture)
}
 ::std::string* CMDSilenceNoty_tipUser::mutable_gifpicture() {
  
  // @@protoc_insertion_point(field_mutable:CMDSilenceNoty.tipUser.gifpicture)
  return gifpicture_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMDSilenceNoty_tipUser::release_gifpicture() {
  // @@protoc_insertion_point(field_release:CMDSilenceNoty.tipUser.gifpicture)
  
  return gifpicture_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDSilenceNoty_tipUser::set_allocated_gifpicture(::std::string* gifpicture) {
  if (gifpicture != NULL) {
    
  } else {
    
  }
  gifpicture_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gifpicture);
  // @@protoc_insertion_point(field_set_allocated:CMDSilenceNoty.tipUser.gifpicture)
}

// -------------------------------------------------------------------

// CMDSilenceNoty

// optional uint32 groupid = 1;
void CMDSilenceNoty::clear_groupid() {
  groupid_ = 0u;
}
 ::google::protobuf::uint32 CMDSilenceNoty::groupid() const {
  // @@protoc_insertion_point(field_get:CMDSilenceNoty.groupid)
  return groupid_;
}
 void CMDSilenceNoty::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDSilenceNoty.groupid)
}

// repeated .CMDSilenceNoty.tipUser user = 2;
int CMDSilenceNoty::user_size() const {
  return user_.size();
}
void CMDSilenceNoty::clear_user() {
  user_.Clear();
}
const ::CMDSilenceNoty_tipUser& CMDSilenceNoty::user(int index) const {
  // @@protoc_insertion_point(field_get:CMDSilenceNoty.user)
  return user_.Get(index);
}
::CMDSilenceNoty_tipUser* CMDSilenceNoty::mutable_user(int index) {
  // @@protoc_insertion_point(field_mutable:CMDSilenceNoty.user)
  return user_.Mutable(index);
}
::CMDSilenceNoty_tipUser* CMDSilenceNoty::add_user() {
  // @@protoc_insertion_point(field_add:CMDSilenceNoty.user)
  return user_.Add();
}
::google::protobuf::RepeatedPtrField< ::CMDSilenceNoty_tipUser >*
CMDSilenceNoty::mutable_user() {
  // @@protoc_insertion_point(field_mutable_list:CMDSilenceNoty.user)
  return &user_;
}
const ::google::protobuf::RepeatedPtrField< ::CMDSilenceNoty_tipUser >&
CMDSilenceNoty::user() const {
  // @@protoc_insertion_point(field_list:CMDSilenceNoty.user)
  return user_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDNoticeNoty::kNoticeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDNoticeNoty::CMDNoticeNoty()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDNoticeNoty)
}

void CMDNoticeNoty::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDNoticeNoty::CMDNoticeNoty(const CMDNoticeNoty& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDNoticeNoty)
}

void CMDNoticeNoty::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  notice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CMDNoticeNoty::~CMDNoticeNoty() {
  // @@protoc_insertion_point(destructor:CMDNoticeNoty)
  SharedDtor();
}

void CMDNoticeNoty::SharedDtor() {
  notice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CMDNoticeNoty::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDNoticeNoty::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDNoticeNoty_descriptor_;
}

const CMDNoticeNoty& CMDNoticeNoty::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RoomSvr_2eproto();
  return *default_instance_;
}

CMDNoticeNoty* CMDNoticeNoty::default_instance_ = NULL;

CMDNoticeNoty* CMDNoticeNoty::New(::google::protobuf::Arena* arena) const {
  CMDNoticeNoty* n = new CMDNoticeNoty;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDNoticeNoty::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDNoticeNoty)
  notice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool CMDNoticeNoty::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDNoticeNoty)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string notice = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_notice()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->notice().data(), this->notice().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMDNoticeNoty.notice"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDNoticeNoty)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDNoticeNoty)
  return false;
#undef DO_
}

void CMDNoticeNoty::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDNoticeNoty)
  // optional string notice = 1;
  if (this->notice().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->notice().data(), this->notice().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDNoticeNoty.notice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->notice(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDNoticeNoty)
}

::google::protobuf::uint8* CMDNoticeNoty::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDNoticeNoty)
  // optional string notice = 1;
  if (this->notice().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->notice().data(), this->notice().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDNoticeNoty.notice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->notice(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDNoticeNoty)
  return target;
}

int CMDNoticeNoty::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDNoticeNoty)
  int total_size = 0;

  // optional string notice = 1;
  if (this->notice().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->notice());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDNoticeNoty::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDNoticeNoty)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDNoticeNoty* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDNoticeNoty>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDNoticeNoty)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDNoticeNoty)
    MergeFrom(*source);
  }
}

void CMDNoticeNoty::MergeFrom(const CMDNoticeNoty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDNoticeNoty)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.notice().size() > 0) {

    notice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.notice_);
  }
}

void CMDNoticeNoty::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDNoticeNoty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDNoticeNoty::CopyFrom(const CMDNoticeNoty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDNoticeNoty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDNoticeNoty::IsInitialized() const {

  return true;
}

void CMDNoticeNoty::Swap(CMDNoticeNoty* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDNoticeNoty::InternalSwap(CMDNoticeNoty* other) {
  notice_.Swap(&other->notice_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDNoticeNoty::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDNoticeNoty_descriptor_;
  metadata.reflection = CMDNoticeNoty_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDNoticeNoty

// optional string notice = 1;
void CMDNoticeNoty::clear_notice() {
  notice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CMDNoticeNoty::notice() const {
  // @@protoc_insertion_point(field_get:CMDNoticeNoty.notice)
  return notice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDNoticeNoty::set_notice(const ::std::string& value) {
  
  notice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDNoticeNoty.notice)
}
 void CMDNoticeNoty::set_notice(const char* value) {
  
  notice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDNoticeNoty.notice)
}
 void CMDNoticeNoty::set_notice(const char* value, size_t size) {
  
  notice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDNoticeNoty.notice)
}
 ::std::string* CMDNoticeNoty::mutable_notice() {
  
  // @@protoc_insertion_point(field_mutable:CMDNoticeNoty.notice)
  return notice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMDNoticeNoty::release_notice() {
  // @@protoc_insertion_point(field_release:CMDNoticeNoty.notice)
  
  return notice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDNoticeNoty::set_allocated_notice(::std::string* notice) {
  if (notice != NULL) {
    
  } else {
    
  }
  notice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), notice);
  // @@protoc_insertion_point(field_set_allocated:CMDNoticeNoty.notice)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDCloseLiveAndCourseeNoty::kGroupidFieldNumber;
const int CMDCloseLiveAndCourseeNoty::kRunuseridFieldNumber;
const int CMDCloseLiveAndCourseeNoty::kToidFieldNumber;
const int CMDCloseLiveAndCourseeNoty::kStatusFieldNumber;
const int CMDCloseLiveAndCourseeNoty::kTypeFieldNumber;
const int CMDCloseLiveAndCourseeNoty::kErridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDCloseLiveAndCourseeNoty::CMDCloseLiveAndCourseeNoty()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDCloseLiveAndCourseeNoty)
}

void CMDCloseLiveAndCourseeNoty::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDCloseLiveAndCourseeNoty::CMDCloseLiveAndCourseeNoty(const CMDCloseLiveAndCourseeNoty& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDCloseLiveAndCourseeNoty)
}

void CMDCloseLiveAndCourseeNoty::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  groupid_ = 0u;
  runuserid_ = 0u;
  toid_ = 0u;
  status_ = 0u;
  type_ = 0u;
  errid_ = 0u;
}

CMDCloseLiveAndCourseeNoty::~CMDCloseLiveAndCourseeNoty() {
  // @@protoc_insertion_point(destructor:CMDCloseLiveAndCourseeNoty)
  SharedDtor();
}

void CMDCloseLiveAndCourseeNoty::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMDCloseLiveAndCourseeNoty::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDCloseLiveAndCourseeNoty::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDCloseLiveAndCourseeNoty_descriptor_;
}

const CMDCloseLiveAndCourseeNoty& CMDCloseLiveAndCourseeNoty::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RoomSvr_2eproto();
  return *default_instance_;
}

CMDCloseLiveAndCourseeNoty* CMDCloseLiveAndCourseeNoty::default_instance_ = NULL;

CMDCloseLiveAndCourseeNoty* CMDCloseLiveAndCourseeNoty::New(::google::protobuf::Arena* arena) const {
  CMDCloseLiveAndCourseeNoty* n = new CMDCloseLiveAndCourseeNoty;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDCloseLiveAndCourseeNoty::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDCloseLiveAndCourseeNoty)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDCloseLiveAndCourseeNoty, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDCloseLiveAndCourseeNoty*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(groupid_, errid_);

#undef ZR_HELPER_
#undef ZR_

}

bool CMDCloseLiveAndCourseeNoty::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDCloseLiveAndCourseeNoty)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 groupid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &groupid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_runuserid;
        break;
      }

      // optional uint32 runuserid = 2;
      case 2: {
        if (tag == 16) {
         parse_runuserid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &runuserid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_toid;
        break;
      }

      // optional uint32 toid = 3;
      case 3: {
        if (tag == 24) {
         parse_toid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &toid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_status;
        break;
      }

      // optional uint32 status = 4;
      case 4: {
        if (tag == 32) {
         parse_status:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &status_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_type;
        break;
      }

      // optional uint32 type = 5;
      case 5: {
        if (tag == 40) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_errid;
        break;
      }

      // optional uint32 errid = 6;
      case 6: {
        if (tag == 48) {
         parse_errid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &errid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDCloseLiveAndCourseeNoty)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDCloseLiveAndCourseeNoty)
  return false;
#undef DO_
}

void CMDCloseLiveAndCourseeNoty::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDCloseLiveAndCourseeNoty)
  // optional uint32 groupid = 1;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->groupid(), output);
  }

  // optional uint32 runuserid = 2;
  if (this->runuserid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->runuserid(), output);
  }

  // optional uint32 toid = 3;
  if (this->toid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->toid(), output);
  }

  // optional uint32 status = 4;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->status(), output);
  }

  // optional uint32 type = 5;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->type(), output);
  }

  // optional uint32 errid = 6;
  if (this->errid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->errid(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDCloseLiveAndCourseeNoty)
}

::google::protobuf::uint8* CMDCloseLiveAndCourseeNoty::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDCloseLiveAndCourseeNoty)
  // optional uint32 groupid = 1;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->groupid(), target);
  }

  // optional uint32 runuserid = 2;
  if (this->runuserid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->runuserid(), target);
  }

  // optional uint32 toid = 3;
  if (this->toid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->toid(), target);
  }

  // optional uint32 status = 4;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->status(), target);
  }

  // optional uint32 type = 5;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->type(), target);
  }

  // optional uint32 errid = 6;
  if (this->errid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->errid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDCloseLiveAndCourseeNoty)
  return target;
}

int CMDCloseLiveAndCourseeNoty::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDCloseLiveAndCourseeNoty)
  int total_size = 0;

  // optional uint32 groupid = 1;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->groupid());
  }

  // optional uint32 runuserid = 2;
  if (this->runuserid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->runuserid());
  }

  // optional uint32 toid = 3;
  if (this->toid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->toid());
  }

  // optional uint32 status = 4;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->status());
  }

  // optional uint32 type = 5;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type());
  }

  // optional uint32 errid = 6;
  if (this->errid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->errid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDCloseLiveAndCourseeNoty::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDCloseLiveAndCourseeNoty)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDCloseLiveAndCourseeNoty* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDCloseLiveAndCourseeNoty>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDCloseLiveAndCourseeNoty)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDCloseLiveAndCourseeNoty)
    MergeFrom(*source);
  }
}

void CMDCloseLiveAndCourseeNoty::MergeFrom(const CMDCloseLiveAndCourseeNoty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDCloseLiveAndCourseeNoty)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
  if (from.runuserid() != 0) {
    set_runuserid(from.runuserid());
  }
  if (from.toid() != 0) {
    set_toid(from.toid());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.errid() != 0) {
    set_errid(from.errid());
  }
}

void CMDCloseLiveAndCourseeNoty::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDCloseLiveAndCourseeNoty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDCloseLiveAndCourseeNoty::CopyFrom(const CMDCloseLiveAndCourseeNoty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDCloseLiveAndCourseeNoty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDCloseLiveAndCourseeNoty::IsInitialized() const {

  return true;
}

void CMDCloseLiveAndCourseeNoty::Swap(CMDCloseLiveAndCourseeNoty* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDCloseLiveAndCourseeNoty::InternalSwap(CMDCloseLiveAndCourseeNoty* other) {
  std::swap(groupid_, other->groupid_);
  std::swap(runuserid_, other->runuserid_);
  std::swap(toid_, other->toid_);
  std::swap(status_, other->status_);
  std::swap(type_, other->type_);
  std::swap(errid_, other->errid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDCloseLiveAndCourseeNoty::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDCloseLiveAndCourseeNoty_descriptor_;
  metadata.reflection = CMDCloseLiveAndCourseeNoty_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDCloseLiveAndCourseeNoty

// optional uint32 groupid = 1;
void CMDCloseLiveAndCourseeNoty::clear_groupid() {
  groupid_ = 0u;
}
 ::google::protobuf::uint32 CMDCloseLiveAndCourseeNoty::groupid() const {
  // @@protoc_insertion_point(field_get:CMDCloseLiveAndCourseeNoty.groupid)
  return groupid_;
}
 void CMDCloseLiveAndCourseeNoty::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDCloseLiveAndCourseeNoty.groupid)
}

// optional uint32 runuserid = 2;
void CMDCloseLiveAndCourseeNoty::clear_runuserid() {
  runuserid_ = 0u;
}
 ::google::protobuf::uint32 CMDCloseLiveAndCourseeNoty::runuserid() const {
  // @@protoc_insertion_point(field_get:CMDCloseLiveAndCourseeNoty.runuserid)
  return runuserid_;
}
 void CMDCloseLiveAndCourseeNoty::set_runuserid(::google::protobuf::uint32 value) {
  
  runuserid_ = value;
  // @@protoc_insertion_point(field_set:CMDCloseLiveAndCourseeNoty.runuserid)
}

// optional uint32 toid = 3;
void CMDCloseLiveAndCourseeNoty::clear_toid() {
  toid_ = 0u;
}
 ::google::protobuf::uint32 CMDCloseLiveAndCourseeNoty::toid() const {
  // @@protoc_insertion_point(field_get:CMDCloseLiveAndCourseeNoty.toid)
  return toid_;
}
 void CMDCloseLiveAndCourseeNoty::set_toid(::google::protobuf::uint32 value) {
  
  toid_ = value;
  // @@protoc_insertion_point(field_set:CMDCloseLiveAndCourseeNoty.toid)
}

// optional uint32 status = 4;
void CMDCloseLiveAndCourseeNoty::clear_status() {
  status_ = 0u;
}
 ::google::protobuf::uint32 CMDCloseLiveAndCourseeNoty::status() const {
  // @@protoc_insertion_point(field_get:CMDCloseLiveAndCourseeNoty.status)
  return status_;
}
 void CMDCloseLiveAndCourseeNoty::set_status(::google::protobuf::uint32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:CMDCloseLiveAndCourseeNoty.status)
}

// optional uint32 type = 5;
void CMDCloseLiveAndCourseeNoty::clear_type() {
  type_ = 0u;
}
 ::google::protobuf::uint32 CMDCloseLiveAndCourseeNoty::type() const {
  // @@protoc_insertion_point(field_get:CMDCloseLiveAndCourseeNoty.type)
  return type_;
}
 void CMDCloseLiveAndCourseeNoty::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:CMDCloseLiveAndCourseeNoty.type)
}

// optional uint32 errid = 6;
void CMDCloseLiveAndCourseeNoty::clear_errid() {
  errid_ = 0u;
}
 ::google::protobuf::uint32 CMDCloseLiveAndCourseeNoty::errid() const {
  // @@protoc_insertion_point(field_get:CMDCloseLiveAndCourseeNoty.errid)
  return errid_;
}
 void CMDCloseLiveAndCourseeNoty::set_errid(::google::protobuf::uint32 value) {
  
  errid_ = value;
  // @@protoc_insertion_point(field_set:CMDCloseLiveAndCourseeNoty.errid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDLiveStartNoty::kGroupidFieldNumber;
const int CMDLiveStartNoty::kUidFieldNumber;
const int CMDLiveStartNoty::kLiveUrlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDLiveStartNoty::CMDLiveStartNoty()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDLiveStartNoty)
}

void CMDLiveStartNoty::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDLiveStartNoty::CMDLiveStartNoty(const CMDLiveStartNoty& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDLiveStartNoty)
}

void CMDLiveStartNoty::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  groupid_ = 0u;
  uid_ = 0u;
  liveurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CMDLiveStartNoty::~CMDLiveStartNoty() {
  // @@protoc_insertion_point(destructor:CMDLiveStartNoty)
  SharedDtor();
}

void CMDLiveStartNoty::SharedDtor() {
  liveurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CMDLiveStartNoty::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDLiveStartNoty::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDLiveStartNoty_descriptor_;
}

const CMDLiveStartNoty& CMDLiveStartNoty::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RoomSvr_2eproto();
  return *default_instance_;
}

CMDLiveStartNoty* CMDLiveStartNoty::default_instance_ = NULL;

CMDLiveStartNoty* CMDLiveStartNoty::New(::google::protobuf::Arena* arena) const {
  CMDLiveStartNoty* n = new CMDLiveStartNoty;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDLiveStartNoty::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDLiveStartNoty)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDLiveStartNoty, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDLiveStartNoty*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(groupid_, uid_);
  liveurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool CMDLiveStartNoty::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDLiveStartNoty)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 groupid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &groupid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_uid;
        break;
      }

      // optional uint32 uid = 2;
      case 2: {
        if (tag == 16) {
         parse_uid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_liveUrl;
        break;
      }

      // optional string liveUrl = 3;
      case 3: {
        if (tag == 26) {
         parse_liveUrl:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_liveurl()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->liveurl().data(), this->liveurl().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMDLiveStartNoty.liveUrl"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDLiveStartNoty)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDLiveStartNoty)
  return false;
#undef DO_
}

void CMDLiveStartNoty::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDLiveStartNoty)
  // optional uint32 groupid = 1;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->groupid(), output);
  }

  // optional uint32 uid = 2;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->uid(), output);
  }

  // optional string liveUrl = 3;
  if (this->liveurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->liveurl().data(), this->liveurl().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDLiveStartNoty.liveUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->liveurl(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDLiveStartNoty)
}

::google::protobuf::uint8* CMDLiveStartNoty::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDLiveStartNoty)
  // optional uint32 groupid = 1;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->groupid(), target);
  }

  // optional uint32 uid = 2;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->uid(), target);
  }

  // optional string liveUrl = 3;
  if (this->liveurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->liveurl().data(), this->liveurl().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDLiveStartNoty.liveUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->liveurl(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDLiveStartNoty)
  return target;
}

int CMDLiveStartNoty::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDLiveStartNoty)
  int total_size = 0;

  // optional uint32 groupid = 1;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->groupid());
  }

  // optional uint32 uid = 2;
  if (this->uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uid());
  }

  // optional string liveUrl = 3;
  if (this->liveurl().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->liveurl());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDLiveStartNoty::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDLiveStartNoty)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDLiveStartNoty* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDLiveStartNoty>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDLiveStartNoty)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDLiveStartNoty)
    MergeFrom(*source);
  }
}

void CMDLiveStartNoty::MergeFrom(const CMDLiveStartNoty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDLiveStartNoty)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
  if (from.uid() != 0) {
    set_uid(from.uid());
  }
  if (from.liveurl().size() > 0) {

    liveurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.liveurl_);
  }
}

void CMDLiveStartNoty::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDLiveStartNoty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDLiveStartNoty::CopyFrom(const CMDLiveStartNoty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDLiveStartNoty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDLiveStartNoty::IsInitialized() const {

  return true;
}

void CMDLiveStartNoty::Swap(CMDLiveStartNoty* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDLiveStartNoty::InternalSwap(CMDLiveStartNoty* other) {
  std::swap(groupid_, other->groupid_);
  std::swap(uid_, other->uid_);
  liveurl_.Swap(&other->liveurl_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDLiveStartNoty::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDLiveStartNoty_descriptor_;
  metadata.reflection = CMDLiveStartNoty_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDLiveStartNoty

// optional uint32 groupid = 1;
void CMDLiveStartNoty::clear_groupid() {
  groupid_ = 0u;
}
 ::google::protobuf::uint32 CMDLiveStartNoty::groupid() const {
  // @@protoc_insertion_point(field_get:CMDLiveStartNoty.groupid)
  return groupid_;
}
 void CMDLiveStartNoty::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDLiveStartNoty.groupid)
}

// optional uint32 uid = 2;
void CMDLiveStartNoty::clear_uid() {
  uid_ = 0u;
}
 ::google::protobuf::uint32 CMDLiveStartNoty::uid() const {
  // @@protoc_insertion_point(field_get:CMDLiveStartNoty.uid)
  return uid_;
}
 void CMDLiveStartNoty::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:CMDLiveStartNoty.uid)
}

// optional string liveUrl = 3;
void CMDLiveStartNoty::clear_liveurl() {
  liveurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CMDLiveStartNoty::liveurl() const {
  // @@protoc_insertion_point(field_get:CMDLiveStartNoty.liveUrl)
  return liveurl_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDLiveStartNoty::set_liveurl(const ::std::string& value) {
  
  liveurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDLiveStartNoty.liveUrl)
}
 void CMDLiveStartNoty::set_liveurl(const char* value) {
  
  liveurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDLiveStartNoty.liveUrl)
}
 void CMDLiveStartNoty::set_liveurl(const char* value, size_t size) {
  
  liveurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDLiveStartNoty.liveUrl)
}
 ::std::string* CMDLiveStartNoty::mutable_liveurl() {
  
  // @@protoc_insertion_point(field_mutable:CMDLiveStartNoty.liveUrl)
  return liveurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMDLiveStartNoty::release_liveurl() {
  // @@protoc_insertion_point(field_release:CMDLiveStartNoty.liveUrl)
  
  return liveurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDLiveStartNoty::set_allocated_liveurl(::std::string* liveurl) {
  if (liveurl != NULL) {
    
  } else {
    
  }
  liveurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), liveurl);
  // @@protoc_insertion_point(field_set_allocated:CMDLiveStartNoty.liveUrl)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDLiveStopNoty::kGroupidFieldNumber;
const int CMDLiveStopNoty::kUidFieldNumber;
const int CMDLiveStopNoty::kLiveUrlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDLiveStopNoty::CMDLiveStopNoty()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDLiveStopNoty)
}

void CMDLiveStopNoty::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDLiveStopNoty::CMDLiveStopNoty(const CMDLiveStopNoty& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDLiveStopNoty)
}

void CMDLiveStopNoty::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  groupid_ = 0u;
  uid_ = 0u;
  liveurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CMDLiveStopNoty::~CMDLiveStopNoty() {
  // @@protoc_insertion_point(destructor:CMDLiveStopNoty)
  SharedDtor();
}

void CMDLiveStopNoty::SharedDtor() {
  liveurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CMDLiveStopNoty::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDLiveStopNoty::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDLiveStopNoty_descriptor_;
}

const CMDLiveStopNoty& CMDLiveStopNoty::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RoomSvr_2eproto();
  return *default_instance_;
}

CMDLiveStopNoty* CMDLiveStopNoty::default_instance_ = NULL;

CMDLiveStopNoty* CMDLiveStopNoty::New(::google::protobuf::Arena* arena) const {
  CMDLiveStopNoty* n = new CMDLiveStopNoty;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDLiveStopNoty::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDLiveStopNoty)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDLiveStopNoty, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDLiveStopNoty*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(groupid_, uid_);
  liveurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool CMDLiveStopNoty::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDLiveStopNoty)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 groupid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &groupid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_uid;
        break;
      }

      // optional uint32 uid = 2;
      case 2: {
        if (tag == 16) {
         parse_uid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_liveUrl;
        break;
      }

      // optional string liveUrl = 3;
      case 3: {
        if (tag == 26) {
         parse_liveUrl:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_liveurl()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->liveurl().data(), this->liveurl().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMDLiveStopNoty.liveUrl"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDLiveStopNoty)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDLiveStopNoty)
  return false;
#undef DO_
}

void CMDLiveStopNoty::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDLiveStopNoty)
  // optional uint32 groupid = 1;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->groupid(), output);
  }

  // optional uint32 uid = 2;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->uid(), output);
  }

  // optional string liveUrl = 3;
  if (this->liveurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->liveurl().data(), this->liveurl().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDLiveStopNoty.liveUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->liveurl(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDLiveStopNoty)
}

::google::protobuf::uint8* CMDLiveStopNoty::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDLiveStopNoty)
  // optional uint32 groupid = 1;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->groupid(), target);
  }

  // optional uint32 uid = 2;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->uid(), target);
  }

  // optional string liveUrl = 3;
  if (this->liveurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->liveurl().data(), this->liveurl().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDLiveStopNoty.liveUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->liveurl(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDLiveStopNoty)
  return target;
}

int CMDLiveStopNoty::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDLiveStopNoty)
  int total_size = 0;

  // optional uint32 groupid = 1;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->groupid());
  }

  // optional uint32 uid = 2;
  if (this->uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uid());
  }

  // optional string liveUrl = 3;
  if (this->liveurl().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->liveurl());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDLiveStopNoty::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDLiveStopNoty)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDLiveStopNoty* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDLiveStopNoty>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDLiveStopNoty)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDLiveStopNoty)
    MergeFrom(*source);
  }
}

void CMDLiveStopNoty::MergeFrom(const CMDLiveStopNoty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDLiveStopNoty)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
  if (from.uid() != 0) {
    set_uid(from.uid());
  }
  if (from.liveurl().size() > 0) {

    liveurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.liveurl_);
  }
}

void CMDLiveStopNoty::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDLiveStopNoty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDLiveStopNoty::CopyFrom(const CMDLiveStopNoty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDLiveStopNoty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDLiveStopNoty::IsInitialized() const {

  return true;
}

void CMDLiveStopNoty::Swap(CMDLiveStopNoty* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDLiveStopNoty::InternalSwap(CMDLiveStopNoty* other) {
  std::swap(groupid_, other->groupid_);
  std::swap(uid_, other->uid_);
  liveurl_.Swap(&other->liveurl_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDLiveStopNoty::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDLiveStopNoty_descriptor_;
  metadata.reflection = CMDLiveStopNoty_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDLiveStopNoty

// optional uint32 groupid = 1;
void CMDLiveStopNoty::clear_groupid() {
  groupid_ = 0u;
}
 ::google::protobuf::uint32 CMDLiveStopNoty::groupid() const {
  // @@protoc_insertion_point(field_get:CMDLiveStopNoty.groupid)
  return groupid_;
}
 void CMDLiveStopNoty::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDLiveStopNoty.groupid)
}

// optional uint32 uid = 2;
void CMDLiveStopNoty::clear_uid() {
  uid_ = 0u;
}
 ::google::protobuf::uint32 CMDLiveStopNoty::uid() const {
  // @@protoc_insertion_point(field_get:CMDLiveStopNoty.uid)
  return uid_;
}
 void CMDLiveStopNoty::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:CMDLiveStopNoty.uid)
}

// optional string liveUrl = 3;
void CMDLiveStopNoty::clear_liveurl() {
  liveurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CMDLiveStopNoty::liveurl() const {
  // @@protoc_insertion_point(field_get:CMDLiveStopNoty.liveUrl)
  return liveurl_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDLiveStopNoty::set_liveurl(const ::std::string& value) {
  
  liveurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDLiveStopNoty.liveUrl)
}
 void CMDLiveStopNoty::set_liveurl(const char* value) {
  
  liveurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDLiveStopNoty.liveUrl)
}
 void CMDLiveStopNoty::set_liveurl(const char* value, size_t size) {
  
  liveurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDLiveStopNoty.liveUrl)
}
 ::std::string* CMDLiveStopNoty::mutable_liveurl() {
  
  // @@protoc_insertion_point(field_mutable:CMDLiveStopNoty.liveUrl)
  return liveurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMDLiveStopNoty::release_liveurl() {
  // @@protoc_insertion_point(field_release:CMDLiveStopNoty.liveUrl)
  
  return liveurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDLiveStopNoty::set_allocated_liveurl(::std::string* liveurl) {
  if (liveurl != NULL) {
    
  } else {
    
  }
  liveurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), liveurl);
  // @@protoc_insertion_point(field_set_allocated:CMDLiveStopNoty.liveUrl)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDCourseStartNoty::kGroupidFieldNumber;
const int CMDCourseStartNoty::kUseridFieldNumber;
const int CMDCourseStartNoty::kTitleFieldNumber;
const int CMDCourseStartNoty::kContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDCourseStartNoty::CMDCourseStartNoty()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDCourseStartNoty)
}

void CMDCourseStartNoty::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDCourseStartNoty::CMDCourseStartNoty(const CMDCourseStartNoty& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDCourseStartNoty)
}

void CMDCourseStartNoty::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  groupid_ = 0u;
  userid_ = 0u;
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CMDCourseStartNoty::~CMDCourseStartNoty() {
  // @@protoc_insertion_point(destructor:CMDCourseStartNoty)
  SharedDtor();
}

void CMDCourseStartNoty::SharedDtor() {
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CMDCourseStartNoty::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDCourseStartNoty::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDCourseStartNoty_descriptor_;
}

const CMDCourseStartNoty& CMDCourseStartNoty::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RoomSvr_2eproto();
  return *default_instance_;
}

CMDCourseStartNoty* CMDCourseStartNoty::default_instance_ = NULL;

CMDCourseStartNoty* CMDCourseStartNoty::New(::google::protobuf::Arena* arena) const {
  CMDCourseStartNoty* n = new CMDCourseStartNoty;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDCourseStartNoty::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDCourseStartNoty)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDCourseStartNoty, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDCourseStartNoty*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(groupid_, userid_);
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool CMDCourseStartNoty::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDCourseStartNoty)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 groupid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &groupid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_userid;
        break;
      }

      // optional uint32 userid = 2;
      case 2: {
        if (tag == 16) {
         parse_userid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_title;
        break;
      }

      // optional string title = 3;
      case 3: {
        if (tag == 26) {
         parse_title:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->title().data(), this->title().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMDCourseStartNoty.title"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_content;
        break;
      }

      // optional string content = 4;
      case 4: {
        if (tag == 34) {
         parse_content:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->content().data(), this->content().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMDCourseStartNoty.content"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDCourseStartNoty)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDCourseStartNoty)
  return false;
#undef DO_
}

void CMDCourseStartNoty::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDCourseStartNoty)
  // optional uint32 groupid = 1;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->groupid(), output);
  }

  // optional uint32 userid = 2;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->userid(), output);
  }

  // optional string title = 3;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDCourseStartNoty.title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->title(), output);
  }

  // optional string content = 4;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDCourseStartNoty.content");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->content(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDCourseStartNoty)
}

::google::protobuf::uint8* CMDCourseStartNoty::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDCourseStartNoty)
  // optional uint32 groupid = 1;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->groupid(), target);
  }

  // optional uint32 userid = 2;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->userid(), target);
  }

  // optional string title = 3;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDCourseStartNoty.title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->title(), target);
  }

  // optional string content = 4;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDCourseStartNoty.content");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->content(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDCourseStartNoty)
  return target;
}

int CMDCourseStartNoty::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDCourseStartNoty)
  int total_size = 0;

  // optional uint32 groupid = 1;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->groupid());
  }

  // optional uint32 userid = 2;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userid());
  }

  // optional string title = 3;
  if (this->title().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->title());
  }

  // optional string content = 4;
  if (this->content().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->content());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDCourseStartNoty::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDCourseStartNoty)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDCourseStartNoty* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDCourseStartNoty>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDCourseStartNoty)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDCourseStartNoty)
    MergeFrom(*source);
  }
}

void CMDCourseStartNoty::MergeFrom(const CMDCourseStartNoty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDCourseStartNoty)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.title().size() > 0) {

    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  if (from.content().size() > 0) {

    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
}

void CMDCourseStartNoty::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDCourseStartNoty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDCourseStartNoty::CopyFrom(const CMDCourseStartNoty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDCourseStartNoty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDCourseStartNoty::IsInitialized() const {

  return true;
}

void CMDCourseStartNoty::Swap(CMDCourseStartNoty* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDCourseStartNoty::InternalSwap(CMDCourseStartNoty* other) {
  std::swap(groupid_, other->groupid_);
  std::swap(userid_, other->userid_);
  title_.Swap(&other->title_);
  content_.Swap(&other->content_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDCourseStartNoty::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDCourseStartNoty_descriptor_;
  metadata.reflection = CMDCourseStartNoty_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDCourseStartNoty

// optional uint32 groupid = 1;
void CMDCourseStartNoty::clear_groupid() {
  groupid_ = 0u;
}
 ::google::protobuf::uint32 CMDCourseStartNoty::groupid() const {
  // @@protoc_insertion_point(field_get:CMDCourseStartNoty.groupid)
  return groupid_;
}
 void CMDCourseStartNoty::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDCourseStartNoty.groupid)
}

// optional uint32 userid = 2;
void CMDCourseStartNoty::clear_userid() {
  userid_ = 0u;
}
 ::google::protobuf::uint32 CMDCourseStartNoty::userid() const {
  // @@protoc_insertion_point(field_get:CMDCourseStartNoty.userid)
  return userid_;
}
 void CMDCourseStartNoty::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDCourseStartNoty.userid)
}

// optional string title = 3;
void CMDCourseStartNoty::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CMDCourseStartNoty::title() const {
  // @@protoc_insertion_point(field_get:CMDCourseStartNoty.title)
  return title_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDCourseStartNoty::set_title(const ::std::string& value) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDCourseStartNoty.title)
}
 void CMDCourseStartNoty::set_title(const char* value) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDCourseStartNoty.title)
}
 void CMDCourseStartNoty::set_title(const char* value, size_t size) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDCourseStartNoty.title)
}
 ::std::string* CMDCourseStartNoty::mutable_title() {
  
  // @@protoc_insertion_point(field_mutable:CMDCourseStartNoty.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMDCourseStartNoty::release_title() {
  // @@protoc_insertion_point(field_release:CMDCourseStartNoty.title)
  
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDCourseStartNoty::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    
  } else {
    
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:CMDCourseStartNoty.title)
}

// optional string content = 4;
void CMDCourseStartNoty::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CMDCourseStartNoty::content() const {
  // @@protoc_insertion_point(field_get:CMDCourseStartNoty.content)
  return content_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDCourseStartNoty::set_content(const ::std::string& value) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDCourseStartNoty.content)
}
 void CMDCourseStartNoty::set_content(const char* value) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDCourseStartNoty.content)
}
 void CMDCourseStartNoty::set_content(const char* value, size_t size) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDCourseStartNoty.content)
}
 ::std::string* CMDCourseStartNoty::mutable_content() {
  
  // @@protoc_insertion_point(field_mutable:CMDCourseStartNoty.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMDCourseStartNoty::release_content() {
  // @@protoc_insertion_point(field_release:CMDCourseStartNoty.content)
  
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDCourseStartNoty::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    
  } else {
    
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:CMDCourseStartNoty.content)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDNewSubCourseNoty::kCourseIdFieldNumber;
const int CMDNewSubCourseNoty::kSubCourseIdFieldNumber;
const int CMDNewSubCourseNoty::kUserIdFieldNumber;
const int CMDNewSubCourseNoty::kCourseNameFieldNumber;
const int CMDNewSubCourseNoty::kSubCourseNameFieldNumber;
const int CMDNewSubCourseNoty::kBeginTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDNewSubCourseNoty::CMDNewSubCourseNoty()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDNewSubCourseNoty)
}

void CMDNewSubCourseNoty::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDNewSubCourseNoty::CMDNewSubCourseNoty(const CMDNewSubCourseNoty& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDNewSubCourseNoty)
}

void CMDNewSubCourseNoty::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  courseid_ = 0u;
  subcourseid_ = 0u;
  userid_ = 0u;
  coursename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subcoursename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  begintime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CMDNewSubCourseNoty::~CMDNewSubCourseNoty() {
  // @@protoc_insertion_point(destructor:CMDNewSubCourseNoty)
  SharedDtor();
}

void CMDNewSubCourseNoty::SharedDtor() {
  coursename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subcoursename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  begintime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CMDNewSubCourseNoty::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDNewSubCourseNoty::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDNewSubCourseNoty_descriptor_;
}

const CMDNewSubCourseNoty& CMDNewSubCourseNoty::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RoomSvr_2eproto();
  return *default_instance_;
}

CMDNewSubCourseNoty* CMDNewSubCourseNoty::default_instance_ = NULL;

CMDNewSubCourseNoty* CMDNewSubCourseNoty::New(::google::protobuf::Arena* arena) const {
  CMDNewSubCourseNoty* n = new CMDNewSubCourseNoty;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDNewSubCourseNoty::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDNewSubCourseNoty)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDNewSubCourseNoty, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDNewSubCourseNoty*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(courseid_, subcourseid_);
  userid_ = 0u;
  coursename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subcoursename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  begintime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool CMDNewSubCourseNoty::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDNewSubCourseNoty)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 courseId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &courseid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_subCourseId;
        break;
      }

      // optional uint32 subCourseId = 2;
      case 2: {
        if (tag == 16) {
         parse_subCourseId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &subcourseid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_userId;
        break;
      }

      // optional uint32 userId = 3;
      case 3: {
        if (tag == 24) {
         parse_userId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_courseName;
        break;
      }

      // optional string courseName = 4;
      case 4: {
        if (tag == 34) {
         parse_courseName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_coursename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->coursename().data(), this->coursename().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMDNewSubCourseNoty.courseName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_subCourseName;
        break;
      }

      // optional string subCourseName = 5;
      case 5: {
        if (tag == 42) {
         parse_subCourseName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_subcoursename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->subcoursename().data(), this->subcoursename().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMDNewSubCourseNoty.subCourseName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_beginTime;
        break;
      }

      // optional string beginTime = 6;
      case 6: {
        if (tag == 50) {
         parse_beginTime:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_begintime()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->begintime().data(), this->begintime().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMDNewSubCourseNoty.beginTime"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDNewSubCourseNoty)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDNewSubCourseNoty)
  return false;
#undef DO_
}

void CMDNewSubCourseNoty::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDNewSubCourseNoty)
  // optional uint32 courseId = 1;
  if (this->courseid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->courseid(), output);
  }

  // optional uint32 subCourseId = 2;
  if (this->subcourseid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->subcourseid(), output);
  }

  // optional uint32 userId = 3;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->userid(), output);
  }

  // optional string courseName = 4;
  if (this->coursename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->coursename().data(), this->coursename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDNewSubCourseNoty.courseName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->coursename(), output);
  }

  // optional string subCourseName = 5;
  if (this->subcoursename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subcoursename().data(), this->subcoursename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDNewSubCourseNoty.subCourseName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->subcoursename(), output);
  }

  // optional string beginTime = 6;
  if (this->begintime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->begintime().data(), this->begintime().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDNewSubCourseNoty.beginTime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->begintime(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDNewSubCourseNoty)
}

::google::protobuf::uint8* CMDNewSubCourseNoty::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDNewSubCourseNoty)
  // optional uint32 courseId = 1;
  if (this->courseid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->courseid(), target);
  }

  // optional uint32 subCourseId = 2;
  if (this->subcourseid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->subcourseid(), target);
  }

  // optional uint32 userId = 3;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->userid(), target);
  }

  // optional string courseName = 4;
  if (this->coursename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->coursename().data(), this->coursename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDNewSubCourseNoty.courseName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->coursename(), target);
  }

  // optional string subCourseName = 5;
  if (this->subcoursename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subcoursename().data(), this->subcoursename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDNewSubCourseNoty.subCourseName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->subcoursename(), target);
  }

  // optional string beginTime = 6;
  if (this->begintime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->begintime().data(), this->begintime().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDNewSubCourseNoty.beginTime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->begintime(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDNewSubCourseNoty)
  return target;
}

int CMDNewSubCourseNoty::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDNewSubCourseNoty)
  int total_size = 0;

  // optional uint32 courseId = 1;
  if (this->courseid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->courseid());
  }

  // optional uint32 subCourseId = 2;
  if (this->subcourseid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->subcourseid());
  }

  // optional uint32 userId = 3;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userid());
  }

  // optional string courseName = 4;
  if (this->coursename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->coursename());
  }

  // optional string subCourseName = 5;
  if (this->subcoursename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->subcoursename());
  }

  // optional string beginTime = 6;
  if (this->begintime().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->begintime());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDNewSubCourseNoty::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDNewSubCourseNoty)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDNewSubCourseNoty* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDNewSubCourseNoty>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDNewSubCourseNoty)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDNewSubCourseNoty)
    MergeFrom(*source);
  }
}

void CMDNewSubCourseNoty::MergeFrom(const CMDNewSubCourseNoty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDNewSubCourseNoty)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.courseid() != 0) {
    set_courseid(from.courseid());
  }
  if (from.subcourseid() != 0) {
    set_subcourseid(from.subcourseid());
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.coursename().size() > 0) {

    coursename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.coursename_);
  }
  if (from.subcoursename().size() > 0) {

    subcoursename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subcoursename_);
  }
  if (from.begintime().size() > 0) {

    begintime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.begintime_);
  }
}

void CMDNewSubCourseNoty::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDNewSubCourseNoty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDNewSubCourseNoty::CopyFrom(const CMDNewSubCourseNoty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDNewSubCourseNoty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDNewSubCourseNoty::IsInitialized() const {

  return true;
}

void CMDNewSubCourseNoty::Swap(CMDNewSubCourseNoty* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDNewSubCourseNoty::InternalSwap(CMDNewSubCourseNoty* other) {
  std::swap(courseid_, other->courseid_);
  std::swap(subcourseid_, other->subcourseid_);
  std::swap(userid_, other->userid_);
  coursename_.Swap(&other->coursename_);
  subcoursename_.Swap(&other->subcoursename_);
  begintime_.Swap(&other->begintime_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDNewSubCourseNoty::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDNewSubCourseNoty_descriptor_;
  metadata.reflection = CMDNewSubCourseNoty_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDNewSubCourseNoty

// optional uint32 courseId = 1;
void CMDNewSubCourseNoty::clear_courseid() {
  courseid_ = 0u;
}
 ::google::protobuf::uint32 CMDNewSubCourseNoty::courseid() const {
  // @@protoc_insertion_point(field_get:CMDNewSubCourseNoty.courseId)
  return courseid_;
}
 void CMDNewSubCourseNoty::set_courseid(::google::protobuf::uint32 value) {
  
  courseid_ = value;
  // @@protoc_insertion_point(field_set:CMDNewSubCourseNoty.courseId)
}

// optional uint32 subCourseId = 2;
void CMDNewSubCourseNoty::clear_subcourseid() {
  subcourseid_ = 0u;
}
 ::google::protobuf::uint32 CMDNewSubCourseNoty::subcourseid() const {
  // @@protoc_insertion_point(field_get:CMDNewSubCourseNoty.subCourseId)
  return subcourseid_;
}
 void CMDNewSubCourseNoty::set_subcourseid(::google::protobuf::uint32 value) {
  
  subcourseid_ = value;
  // @@protoc_insertion_point(field_set:CMDNewSubCourseNoty.subCourseId)
}

// optional uint32 userId = 3;
void CMDNewSubCourseNoty::clear_userid() {
  userid_ = 0u;
}
 ::google::protobuf::uint32 CMDNewSubCourseNoty::userid() const {
  // @@protoc_insertion_point(field_get:CMDNewSubCourseNoty.userId)
  return userid_;
}
 void CMDNewSubCourseNoty::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDNewSubCourseNoty.userId)
}

// optional string courseName = 4;
void CMDNewSubCourseNoty::clear_coursename() {
  coursename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CMDNewSubCourseNoty::coursename() const {
  // @@protoc_insertion_point(field_get:CMDNewSubCourseNoty.courseName)
  return coursename_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDNewSubCourseNoty::set_coursename(const ::std::string& value) {
  
  coursename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDNewSubCourseNoty.courseName)
}
 void CMDNewSubCourseNoty::set_coursename(const char* value) {
  
  coursename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDNewSubCourseNoty.courseName)
}
 void CMDNewSubCourseNoty::set_coursename(const char* value, size_t size) {
  
  coursename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDNewSubCourseNoty.courseName)
}
 ::std::string* CMDNewSubCourseNoty::mutable_coursename() {
  
  // @@protoc_insertion_point(field_mutable:CMDNewSubCourseNoty.courseName)
  return coursename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMDNewSubCourseNoty::release_coursename() {
  // @@protoc_insertion_point(field_release:CMDNewSubCourseNoty.courseName)
  
  return coursename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDNewSubCourseNoty::set_allocated_coursename(::std::string* coursename) {
  if (coursename != NULL) {
    
  } else {
    
  }
  coursename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), coursename);
  // @@protoc_insertion_point(field_set_allocated:CMDNewSubCourseNoty.courseName)
}

// optional string subCourseName = 5;
void CMDNewSubCourseNoty::clear_subcoursename() {
  subcoursename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CMDNewSubCourseNoty::subcoursename() const {
  // @@protoc_insertion_point(field_get:CMDNewSubCourseNoty.subCourseName)
  return subcoursename_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDNewSubCourseNoty::set_subcoursename(const ::std::string& value) {
  
  subcoursename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDNewSubCourseNoty.subCourseName)
}
 void CMDNewSubCourseNoty::set_subcoursename(const char* value) {
  
  subcoursename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDNewSubCourseNoty.subCourseName)
}
 void CMDNewSubCourseNoty::set_subcoursename(const char* value, size_t size) {
  
  subcoursename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDNewSubCourseNoty.subCourseName)
}
 ::std::string* CMDNewSubCourseNoty::mutable_subcoursename() {
  
  // @@protoc_insertion_point(field_mutable:CMDNewSubCourseNoty.subCourseName)
  return subcoursename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMDNewSubCourseNoty::release_subcoursename() {
  // @@protoc_insertion_point(field_release:CMDNewSubCourseNoty.subCourseName)
  
  return subcoursename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDNewSubCourseNoty::set_allocated_subcoursename(::std::string* subcoursename) {
  if (subcoursename != NULL) {
    
  } else {
    
  }
  subcoursename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), subcoursename);
  // @@protoc_insertion_point(field_set_allocated:CMDNewSubCourseNoty.subCourseName)
}

// optional string beginTime = 6;
void CMDNewSubCourseNoty::clear_begintime() {
  begintime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CMDNewSubCourseNoty::begintime() const {
  // @@protoc_insertion_point(field_get:CMDNewSubCourseNoty.beginTime)
  return begintime_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDNewSubCourseNoty::set_begintime(const ::std::string& value) {
  
  begintime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDNewSubCourseNoty.beginTime)
}
 void CMDNewSubCourseNoty::set_begintime(const char* value) {
  
  begintime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDNewSubCourseNoty.beginTime)
}
 void CMDNewSubCourseNoty::set_begintime(const char* value, size_t size) {
  
  begintime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDNewSubCourseNoty.beginTime)
}
 ::std::string* CMDNewSubCourseNoty::mutable_begintime() {
  
  // @@protoc_insertion_point(field_mutable:CMDNewSubCourseNoty.beginTime)
  return begintime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMDNewSubCourseNoty::release_begintime() {
  // @@protoc_insertion_point(field_release:CMDNewSubCourseNoty.beginTime)
  
  return begintime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDNewSubCourseNoty::set_allocated_begintime(::std::string* begintime) {
  if (begintime != NULL) {
    
  } else {
    
  }
  begintime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), begintime);
  // @@protoc_insertion_point(field_set_allocated:CMDNewSubCourseNoty.beginTime)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDNewCourseNoty::kLiveIdFieldNumber;
const int CMDNewCourseNoty::kUserIdFieldNumber;
const int CMDNewCourseNoty::kCourseIdFieldNumber;
const int CMDNewCourseNoty::kRoomNameFieldNumber;
const int CMDNewCourseNoty::kUserAliasFieldNumber;
const int CMDNewCourseNoty::kCourseNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDNewCourseNoty::CMDNewCourseNoty()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDNewCourseNoty)
}

void CMDNewCourseNoty::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDNewCourseNoty::CMDNewCourseNoty(const CMDNewCourseNoty& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDNewCourseNoty)
}

void CMDNewCourseNoty::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  liveid_ = 0u;
  userid_ = 0u;
  courseid_ = 0u;
  roomname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  useralias_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  coursename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CMDNewCourseNoty::~CMDNewCourseNoty() {
  // @@protoc_insertion_point(destructor:CMDNewCourseNoty)
  SharedDtor();
}

void CMDNewCourseNoty::SharedDtor() {
  roomname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  useralias_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  coursename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CMDNewCourseNoty::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDNewCourseNoty::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDNewCourseNoty_descriptor_;
}

const CMDNewCourseNoty& CMDNewCourseNoty::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RoomSvr_2eproto();
  return *default_instance_;
}

CMDNewCourseNoty* CMDNewCourseNoty::default_instance_ = NULL;

CMDNewCourseNoty* CMDNewCourseNoty::New(::google::protobuf::Arena* arena) const {
  CMDNewCourseNoty* n = new CMDNewCourseNoty;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDNewCourseNoty::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDNewCourseNoty)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDNewCourseNoty, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDNewCourseNoty*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(liveid_, userid_);
  courseid_ = 0u;
  roomname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  useralias_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  coursename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool CMDNewCourseNoty::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDNewCourseNoty)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 liveId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &liveid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_userId;
        break;
      }

      // optional uint32 userId = 2;
      case 2: {
        if (tag == 16) {
         parse_userId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_courseId;
        break;
      }

      // optional uint32 courseId = 3;
      case 3: {
        if (tag == 24) {
         parse_courseId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &courseid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_roomName;
        break;
      }

      // optional string roomName = 4;
      case 4: {
        if (tag == 34) {
         parse_roomName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_roomname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->roomname().data(), this->roomname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMDNewCourseNoty.roomName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_userAlias;
        break;
      }

      // optional string userAlias = 5;
      case 5: {
        if (tag == 42) {
         parse_userAlias:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_useralias()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->useralias().data(), this->useralias().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMDNewCourseNoty.userAlias"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_courseName;
        break;
      }

      // optional string courseName = 6;
      case 6: {
        if (tag == 50) {
         parse_courseName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_coursename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->coursename().data(), this->coursename().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMDNewCourseNoty.courseName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDNewCourseNoty)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDNewCourseNoty)
  return false;
#undef DO_
}

void CMDNewCourseNoty::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDNewCourseNoty)
  // optional uint32 liveId = 1;
  if (this->liveid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->liveid(), output);
  }

  // optional uint32 userId = 2;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->userid(), output);
  }

  // optional uint32 courseId = 3;
  if (this->courseid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->courseid(), output);
  }

  // optional string roomName = 4;
  if (this->roomname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->roomname().data(), this->roomname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDNewCourseNoty.roomName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->roomname(), output);
  }

  // optional string userAlias = 5;
  if (this->useralias().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->useralias().data(), this->useralias().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDNewCourseNoty.userAlias");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->useralias(), output);
  }

  // optional string courseName = 6;
  if (this->coursename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->coursename().data(), this->coursename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDNewCourseNoty.courseName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->coursename(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDNewCourseNoty)
}

::google::protobuf::uint8* CMDNewCourseNoty::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDNewCourseNoty)
  // optional uint32 liveId = 1;
  if (this->liveid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->liveid(), target);
  }

  // optional uint32 userId = 2;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->userid(), target);
  }

  // optional uint32 courseId = 3;
  if (this->courseid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->courseid(), target);
  }

  // optional string roomName = 4;
  if (this->roomname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->roomname().data(), this->roomname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDNewCourseNoty.roomName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->roomname(), target);
  }

  // optional string userAlias = 5;
  if (this->useralias().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->useralias().data(), this->useralias().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDNewCourseNoty.userAlias");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->useralias(), target);
  }

  // optional string courseName = 6;
  if (this->coursename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->coursename().data(), this->coursename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDNewCourseNoty.courseName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->coursename(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDNewCourseNoty)
  return target;
}

int CMDNewCourseNoty::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDNewCourseNoty)
  int total_size = 0;

  // optional uint32 liveId = 1;
  if (this->liveid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->liveid());
  }

  // optional uint32 userId = 2;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userid());
  }

  // optional uint32 courseId = 3;
  if (this->courseid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->courseid());
  }

  // optional string roomName = 4;
  if (this->roomname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->roomname());
  }

  // optional string userAlias = 5;
  if (this->useralias().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->useralias());
  }

  // optional string courseName = 6;
  if (this->coursename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->coursename());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDNewCourseNoty::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDNewCourseNoty)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDNewCourseNoty* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDNewCourseNoty>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDNewCourseNoty)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDNewCourseNoty)
    MergeFrom(*source);
  }
}

void CMDNewCourseNoty::MergeFrom(const CMDNewCourseNoty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDNewCourseNoty)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.liveid() != 0) {
    set_liveid(from.liveid());
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.courseid() != 0) {
    set_courseid(from.courseid());
  }
  if (from.roomname().size() > 0) {

    roomname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.roomname_);
  }
  if (from.useralias().size() > 0) {

    useralias_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.useralias_);
  }
  if (from.coursename().size() > 0) {

    coursename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.coursename_);
  }
}

void CMDNewCourseNoty::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDNewCourseNoty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDNewCourseNoty::CopyFrom(const CMDNewCourseNoty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDNewCourseNoty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDNewCourseNoty::IsInitialized() const {

  return true;
}

void CMDNewCourseNoty::Swap(CMDNewCourseNoty* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDNewCourseNoty::InternalSwap(CMDNewCourseNoty* other) {
  std::swap(liveid_, other->liveid_);
  std::swap(userid_, other->userid_);
  std::swap(courseid_, other->courseid_);
  roomname_.Swap(&other->roomname_);
  useralias_.Swap(&other->useralias_);
  coursename_.Swap(&other->coursename_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDNewCourseNoty::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDNewCourseNoty_descriptor_;
  metadata.reflection = CMDNewCourseNoty_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDNewCourseNoty

// optional uint32 liveId = 1;
void CMDNewCourseNoty::clear_liveid() {
  liveid_ = 0u;
}
 ::google::protobuf::uint32 CMDNewCourseNoty::liveid() const {
  // @@protoc_insertion_point(field_get:CMDNewCourseNoty.liveId)
  return liveid_;
}
 void CMDNewCourseNoty::set_liveid(::google::protobuf::uint32 value) {
  
  liveid_ = value;
  // @@protoc_insertion_point(field_set:CMDNewCourseNoty.liveId)
}

// optional uint32 userId = 2;
void CMDNewCourseNoty::clear_userid() {
  userid_ = 0u;
}
 ::google::protobuf::uint32 CMDNewCourseNoty::userid() const {
  // @@protoc_insertion_point(field_get:CMDNewCourseNoty.userId)
  return userid_;
}
 void CMDNewCourseNoty::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDNewCourseNoty.userId)
}

// optional uint32 courseId = 3;
void CMDNewCourseNoty::clear_courseid() {
  courseid_ = 0u;
}
 ::google::protobuf::uint32 CMDNewCourseNoty::courseid() const {
  // @@protoc_insertion_point(field_get:CMDNewCourseNoty.courseId)
  return courseid_;
}
 void CMDNewCourseNoty::set_courseid(::google::protobuf::uint32 value) {
  
  courseid_ = value;
  // @@protoc_insertion_point(field_set:CMDNewCourseNoty.courseId)
}

// optional string roomName = 4;
void CMDNewCourseNoty::clear_roomname() {
  roomname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CMDNewCourseNoty::roomname() const {
  // @@protoc_insertion_point(field_get:CMDNewCourseNoty.roomName)
  return roomname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDNewCourseNoty::set_roomname(const ::std::string& value) {
  
  roomname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDNewCourseNoty.roomName)
}
 void CMDNewCourseNoty::set_roomname(const char* value) {
  
  roomname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDNewCourseNoty.roomName)
}
 void CMDNewCourseNoty::set_roomname(const char* value, size_t size) {
  
  roomname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDNewCourseNoty.roomName)
}
 ::std::string* CMDNewCourseNoty::mutable_roomname() {
  
  // @@protoc_insertion_point(field_mutable:CMDNewCourseNoty.roomName)
  return roomname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMDNewCourseNoty::release_roomname() {
  // @@protoc_insertion_point(field_release:CMDNewCourseNoty.roomName)
  
  return roomname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDNewCourseNoty::set_allocated_roomname(::std::string* roomname) {
  if (roomname != NULL) {
    
  } else {
    
  }
  roomname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), roomname);
  // @@protoc_insertion_point(field_set_allocated:CMDNewCourseNoty.roomName)
}

// optional string userAlias = 5;
void CMDNewCourseNoty::clear_useralias() {
  useralias_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CMDNewCourseNoty::useralias() const {
  // @@protoc_insertion_point(field_get:CMDNewCourseNoty.userAlias)
  return useralias_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDNewCourseNoty::set_useralias(const ::std::string& value) {
  
  useralias_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDNewCourseNoty.userAlias)
}
 void CMDNewCourseNoty::set_useralias(const char* value) {
  
  useralias_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDNewCourseNoty.userAlias)
}
 void CMDNewCourseNoty::set_useralias(const char* value, size_t size) {
  
  useralias_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDNewCourseNoty.userAlias)
}
 ::std::string* CMDNewCourseNoty::mutable_useralias() {
  
  // @@protoc_insertion_point(field_mutable:CMDNewCourseNoty.userAlias)
  return useralias_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMDNewCourseNoty::release_useralias() {
  // @@protoc_insertion_point(field_release:CMDNewCourseNoty.userAlias)
  
  return useralias_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDNewCourseNoty::set_allocated_useralias(::std::string* useralias) {
  if (useralias != NULL) {
    
  } else {
    
  }
  useralias_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), useralias);
  // @@protoc_insertion_point(field_set_allocated:CMDNewCourseNoty.userAlias)
}

// optional string courseName = 6;
void CMDNewCourseNoty::clear_coursename() {
  coursename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CMDNewCourseNoty::coursename() const {
  // @@protoc_insertion_point(field_get:CMDNewCourseNoty.courseName)
  return coursename_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDNewCourseNoty::set_coursename(const ::std::string& value) {
  
  coursename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDNewCourseNoty.courseName)
}
 void CMDNewCourseNoty::set_coursename(const char* value) {
  
  coursename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDNewCourseNoty.courseName)
}
 void CMDNewCourseNoty::set_coursename(const char* value, size_t size) {
  
  coursename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDNewCourseNoty.courseName)
}
 ::std::string* CMDNewCourseNoty::mutable_coursename() {
  
  // @@protoc_insertion_point(field_mutable:CMDNewCourseNoty.courseName)
  return coursename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMDNewCourseNoty::release_coursename() {
  // @@protoc_insertion_point(field_release:CMDNewCourseNoty.courseName)
  
  return coursename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDNewCourseNoty::set_allocated_coursename(::std::string* coursename) {
  if (coursename != NULL) {
    
  } else {
    
  }
  coursename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), coursename);
  // @@protoc_insertion_point(field_set_allocated:CMDNewCourseNoty.courseName)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
