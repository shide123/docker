1.聊天内部结构:
msgid:34
{
	"chattype": 0,	//1-私聊.2-群聊天
    "msgtype": 0,	//0-文字.1-语音.
    "timestamp": 1481957534,
    "srcuserid": 5130,
    "srcgroupid": 50001,
    "touseid": [1782874,1772171],	//-1表示@All
	"togroupid": 50001,
    "content": "<SPANstyle=\'FONT-FAMILY:TimesNewRoman;COLOR:#000000;FONT-SIZE:14px\'>dd</SPAN>"
}

2.私聊
  Redis:sorted set
  取私聊的双方，取id小的在前，大的在后，组成key
  1772171_1782874
  zadd 1772171_1782874 34 "{\"msgid\":34,\"chattype\":0}"
  取私聊key来单独分配msgID
  
3.群聊天
  Redis:sorted set
  取群groupID来做key，单独分配msgID
  key格式:  "group:ID",例如:"group:60001"
  zadd group:60001 70 "{\"msgid\":70,\"chattype\":2}"
  
4.user用redis的hash结构保存客户端收到的msgID,key为 user_msg:1782874
  127.0.0.1:6381> HGETALL user_msg:1782874
  1) ...
  2) ...
  3) "srcuser:1772171"		//源是1772171的私聊的msgid
  4) "733"
  5) "pmsgstate"			//私聊的总状态
  6) "1"					//0-init,1-ready,0表示接受私聊的历史消息,1表示可以接受私聊的新消息
  ...
  17) "groupid:50001"		//群ID是50001的聊天msgid
  18) "756"
  19) "groupstate:50001"	//群ID是50001的聊天状态
  20) "1"					//0-init,1-ready,0表示接受群50001的历史消息,1表示可以接受群50001的新消息
  21) ...
  22) ...
  
5.群里的用户列表（存redis和mysql）（redis set）
  127.0.0.1:6381> type group_userids:50001
  set
  127.0.0.1:6381> SMEMBERS group_userids:50001
   1) "10391"
   2) "14665"
   3) "40212"
   4) "47141"
   5) "47343"
   6) "50414"
   7) "79641"
   8) "97237"
   9) "137793"
  10) "193272"
  11) "197031"
  12) "219588"
  13) "219708"
  14) "219826"
  15) "219827"
  16) "219833"
  17) "220217"

mysql:
  create table user_group_info
  {
	`id` int(10) unsigned NOT NULL AUTO_INCREMENT,
	`userid` int(11) NOT NULL COMMENT '用户ID',
	`groupid` int(11) NOT NULL COMMENT '群ID',
	`inserttime` datetime NOT NULL COMMENT '插入时间',
	PRIMARY KEY (`id`),
	UNIQUE KEY `uni_user_group_info_userid_groupid` (`userid`,`groupid`)
  }
  
6.用户的群列表（存mysql）
  mysql存储的表和第5点存储的表可为一张表 user_group_info





