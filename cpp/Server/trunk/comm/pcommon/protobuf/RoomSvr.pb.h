// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: RoomSvr.proto

#ifndef PROTOBUF_RoomSvr_2eproto__INCLUDED
#define PROTOBUF_RoomSvr_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "Common.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_RoomSvr_2eproto();
void protobuf_AssignDesc_RoomSvr_2eproto();
void protobuf_ShutdownFile_RoomSvr_2eproto();

class CMDApplyJoinGroupAuthReq;
class CMDApplyJoinGroupAuthResp;
class CMDAuthReq;
class CMDAuthResp;
class CMDAuthStateNoty;
class CMDChangeWaitMicIndexNoty;
class CMDChangeWaitMicIndexResp;
class CMDCloseLiveAndCourseeNoty;
class CMDCourseFinish;
class CMDCourseStartNoty;
class CMDForbidJoinGroupKillVisitor;
class CMDForbidUserChat;
class CMDGateJoinRoomReq;
class CMDGateJoinRoomResp;
class CMDGroupMemberReq;
class CMDGroupOnlineMemberList;
class CMDGroupSettingStatNotify;
class CMDGroupSettingStatReq;
class CMDGroupUserSettingReq;
class CMDGroupUserSettingResp;
class CMDHandleJoinGroupAuthReq;
class CMDHandleJoinGroupAuthResp;
class CMDInviteOnMic;
class CMDJoinGroupReq;
class CMDJoinGroupResp;
class CMDJoinRoomErr;
class CMDJoinRoomReq;
class CMDJoinRoomResp;
class CMDLiveStartNoty;
class CMDLiveStopNoty;
class CMDMemberEnterGroup;
class CMDMemberExitGroup;
class CMDMicStateListReq;
class CMDMicStateListResp;
class CMDMicStateListResp_PubMic;
class CMDNewCourseNoty;
class CMDNewSubCourseNoty;
class CMDNoticeInfo;
class CMDNoticeNoty;
class CMDOperateWaitMic;
class CMDQryGroupVisitCountReq;
class CMDQryGroupVisitCountResp;
class CMDQryJoinGroupCondReq;
class CMDQryJoinGroupCondResp;
class CMDQuitGroupReq;
class CMDQuitGroupResp;
class CMDRoomBaseInfo;
class CMDRoomInfoExtReq;
class CMDRoomInfoExtResp;
class CMDRoomInfoReq;
class CMDRoomInfoResp;
class CMDRoomMicModSet;
class CMDRoomUserInfo;
class CMDRoomUserInfos;
class CMDSetGroupMsgMuteReq;
class CMDSetGroupMsgMuteResp;
class CMDSetMicModeNoty;
class CMDSetMicModeReq;
class CMDSetMicModeResp;
class CMDSetMicPosStatusNoty;
class CMDSetMicPosStatusReq;
class CMDSetMicPosStatusResp;
class CMDSetUserPriorityNoty;
class CMDSetUserPriorityReq;
class CMDSetUserPriorityResp;
class CMDSettingStat;
class CMDSilenceNoty;
class CMDSilenceNoty_tipUser;
class CMDUpWaitMic;
class CMDUpWaitMicList;
class CMDUserExceptExitRoomInfo;
class CMDUserExitRoomInfo;
class CMDUserExitRoomInfo_ext;
class CMDUserGroupInfoReq;
class CMDUserGroupInfoResp;
class CMDUserKickoutRoomInfo;
class CMDUserKickoutRoomResp;
class CMDUserMicState;

enum e_SettingType {
  e_Setting_All = 0,
  e_Setting_JoinGroup = 1,
  e_Setting_KillVisitor = 2,
  e_Setting_ContributionList = 3,
  e_Setting_VoiceChat = 4,
  e_Setting_AllowVisitorOnMic = 5,
  e_Setting_PChat_Switch = 8,
  e_SettingType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  e_SettingType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool e_SettingType_IsValid(int value);
const e_SettingType e_SettingType_MIN = e_Setting_All;
const e_SettingType e_SettingType_MAX = e_Setting_PChat_Switch;
const int e_SettingType_ARRAYSIZE = e_SettingType_MAX + 1;

const ::google::protobuf::EnumDescriptor* e_SettingType_descriptor();
inline const ::std::string& e_SettingType_Name(e_SettingType value) {
  return ::google::protobuf::internal::NameOfEnum(
    e_SettingType_descriptor(), value);
}
inline bool e_SettingType_Parse(
    const ::std::string& name, e_SettingType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<e_SettingType>(
    e_SettingType_descriptor(), name, value);
}
enum e_UserJoinGroupAuthType {
  e_NoNeedAuth = 0,
  e_RedPacketAuth = 1,
  e_VideoAuth = 2,
  e_MsgAuth = 3,
  e_Forbidden = 4,
  e_UserJoinGroupAuthType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  e_UserJoinGroupAuthType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool e_UserJoinGroupAuthType_IsValid(int value);
const e_UserJoinGroupAuthType e_UserJoinGroupAuthType_MIN = e_NoNeedAuth;
const e_UserJoinGroupAuthType e_UserJoinGroupAuthType_MAX = e_Forbidden;
const int e_UserJoinGroupAuthType_ARRAYSIZE = e_UserJoinGroupAuthType_MAX + 1;

const ::google::protobuf::EnumDescriptor* e_UserJoinGroupAuthType_descriptor();
inline const ::std::string& e_UserJoinGroupAuthType_Name(e_UserJoinGroupAuthType value) {
  return ::google::protobuf::internal::NameOfEnum(
    e_UserJoinGroupAuthType_descriptor(), value);
}
inline bool e_UserJoinGroupAuthType_Parse(
    const ::std::string& name, e_UserJoinGroupAuthType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<e_UserJoinGroupAuthType>(
    e_UserJoinGroupAuthType_descriptor(), name, value);
}
enum e_MicMode {
  e_FreeMode = 0,
  e_ChairmanMode = 1,
  e_QueueMode = 2,
  e_MicMode_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  e_MicMode_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool e_MicMode_IsValid(int value);
const e_MicMode e_MicMode_MIN = e_FreeMode;
const e_MicMode e_MicMode_MAX = e_QueueMode;
const int e_MicMode_ARRAYSIZE = e_MicMode_MAX + 1;

const ::google::protobuf::EnumDescriptor* e_MicMode_descriptor();
inline const ::std::string& e_MicMode_Name(e_MicMode value) {
  return ::google::protobuf::internal::NameOfEnum(
    e_MicMode_descriptor(), value);
}
inline bool e_MicMode_Parse(
    const ::std::string& name, e_MicMode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<e_MicMode>(
    e_MicMode_descriptor(), name, value);
}
// ===================================================================

class CMDJoinRoomReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDJoinRoomReq) */ {
 public:
  CMDJoinRoomReq();
  virtual ~CMDJoinRoomReq();

  CMDJoinRoomReq(const CMDJoinRoomReq& from);

  inline CMDJoinRoomReq& operator=(const CMDJoinRoomReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDJoinRoomReq& default_instance();

  void Swap(CMDJoinRoomReq* other);

  // implements Message ----------------------------------------------

  inline CMDJoinRoomReq* New() const { return New(NULL); }

  CMDJoinRoomReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDJoinRoomReq& from);
  void MergeFrom(const CMDJoinRoomReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDJoinRoomReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 userid = 1;
  void clear_userid();
  static const int kUseridFieldNumber = 1;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // optional int32 vcbid = 2;
  void clear_vcbid();
  static const int kVcbidFieldNumber = 2;
  ::google::protobuf::int32 vcbid() const;
  void set_vcbid(::google::protobuf::int32 value);

  // optional int32 devtype = 3;
  void clear_devtype();
  static const int kDevtypeFieldNumber = 3;
  ::google::protobuf::int32 devtype() const;
  void set_devtype(::google::protobuf::int32 value);

  // optional int32 time = 4;
  void clear_time();
  static const int kTimeFieldNumber = 4;
  ::google::protobuf::int32 time() const;
  void set_time(::google::protobuf::int32 value);

  // optional int32 crc32 = 5;
  void clear_crc32();
  static const int kCrc32FieldNumber = 5;
  ::google::protobuf::int32 crc32() const;
  void set_crc32(::google::protobuf::int32 value);

  // optional int32 coremessagever = 6;
  void clear_coremessagever();
  static const int kCoremessageverFieldNumber = 6;
  ::google::protobuf::int32 coremessagever() const;
  void set_coremessagever(::google::protobuf::int32 value);

  // optional string cuserpwd = 7;
  void clear_cuserpwd();
  static const int kCuserpwdFieldNumber = 7;
  const ::std::string& cuserpwd() const;
  void set_cuserpwd(const ::std::string& value);
  void set_cuserpwd(const char* value);
  void set_cuserpwd(const char* value, size_t size);
  ::std::string* mutable_cuserpwd();
  ::std::string* release_cuserpwd();
  void set_allocated_cuserpwd(::std::string* cuserpwd);

  // optional string croompwd = 8;
  void clear_croompwd();
  static const int kCroompwdFieldNumber = 8;
  const ::std::string& croompwd() const;
  void set_croompwd(const ::std::string& value);
  void set_croompwd(const char* value);
  void set_croompwd(const char* value, size_t size);
  ::std::string* mutable_croompwd();
  ::std::string* release_croompwd();
  void set_allocated_croompwd(::std::string* croompwd);

  // optional string cSerial = 9;
  void clear_cserial();
  static const int kCSerialFieldNumber = 9;
  const ::std::string& cserial() const;
  void set_cserial(const ::std::string& value);
  void set_cserial(const char* value);
  void set_cserial(const char* value, size_t size);
  ::std::string* mutable_cserial();
  ::std::string* release_cserial();
  void set_allocated_cserial(::std::string* cserial);

  // optional string cMacAddr = 10;
  void clear_cmacaddr();
  static const int kCMacAddrFieldNumber = 10;
  const ::std::string& cmacaddr() const;
  void set_cmacaddr(const ::std::string& value);
  void set_cmacaddr(const char* value);
  void set_cmacaddr(const char* value, size_t size);
  ::std::string* mutable_cmacaddr();
  ::std::string* release_cmacaddr();
  void set_allocated_cmacaddr(::std::string* cmacaddr);

  // optional string cIpAddr = 11;
  void clear_cipaddr();
  static const int kCIpAddrFieldNumber = 11;
  const ::std::string& cipaddr() const;
  void set_cipaddr(const ::std::string& value);
  void set_cipaddr(const char* value);
  void set_cipaddr(const char* value, size_t size);
  ::std::string* mutable_cipaddr();
  ::std::string* release_cipaddr();
  void set_allocated_cipaddr(::std::string* cipaddr);

  // optional int32 bloginSource = 12;
  void clear_bloginsource();
  static const int kBloginSourceFieldNumber = 12;
  ::google::protobuf::int32 bloginsource() const;
  void set_bloginsource(::google::protobuf::int32 value);

  // optional int32 reserve1 = 13;
  void clear_reserve1();
  static const int kReserve1FieldNumber = 13;
  ::google::protobuf::int32 reserve1() const;
  void set_reserve1(::google::protobuf::int32 value);

  // optional int32 reserve2 = 14;
  void clear_reserve2();
  static const int kReserve2FieldNumber = 14;
  ::google::protobuf::int32 reserve2() const;
  void set_reserve2(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CMDJoinRoomReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 userid_;
  ::google::protobuf::int32 vcbid_;
  ::google::protobuf::int32 devtype_;
  ::google::protobuf::int32 time_;
  ::google::protobuf::int32 crc32_;
  ::google::protobuf::int32 coremessagever_;
  ::google::protobuf::internal::ArenaStringPtr cuserpwd_;
  ::google::protobuf::internal::ArenaStringPtr croompwd_;
  ::google::protobuf::internal::ArenaStringPtr cserial_;
  ::google::protobuf::internal::ArenaStringPtr cmacaddr_;
  ::google::protobuf::internal::ArenaStringPtr cipaddr_;
  ::google::protobuf::int32 bloginsource_;
  ::google::protobuf::int32 reserve1_;
  ::google::protobuf::int32 reserve2_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_RoomSvr_2eproto();
  friend void protobuf_AssignDesc_RoomSvr_2eproto();
  friend void protobuf_ShutdownFile_RoomSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDJoinRoomReq* default_instance_;
};
// -------------------------------------------------------------------

class CMDJoinRoomResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDJoinRoomResp) */ {
 public:
  CMDJoinRoomResp();
  virtual ~CMDJoinRoomResp();

  CMDJoinRoomResp(const CMDJoinRoomResp& from);

  inline CMDJoinRoomResp& operator=(const CMDJoinRoomResp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDJoinRoomResp& default_instance();

  void Swap(CMDJoinRoomResp* other);

  // implements Message ----------------------------------------------

  inline CMDJoinRoomResp* New() const { return New(NULL); }

  CMDJoinRoomResp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDJoinRoomResp& from);
  void MergeFrom(const CMDJoinRoomResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDJoinRoomResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 userid = 1;
  void clear_userid();
  static const int kUseridFieldNumber = 1;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // optional uint32 vcbid = 2;
  void clear_vcbid();
  static const int kVcbidFieldNumber = 2;
  ::google::protobuf::uint32 vcbid() const;
  void set_vcbid(::google::protobuf::uint32 value);

  // optional uint32 roomtype = 3;
  void clear_roomtype();
  static const int kRoomtypeFieldNumber = 3;
  ::google::protobuf::uint32 roomtype() const;
  void set_roomtype(::google::protobuf::uint32 value);

  // optional uint32 busepwd = 4;
  void clear_busepwd();
  static const int kBusepwdFieldNumber = 4;
  ::google::protobuf::uint32 busepwd() const;
  void set_busepwd(::google::protobuf::uint32 value);

  // optional uint32 bIsCollectRoom = 5;
  void clear_biscollectroom();
  static const int kBIsCollectRoomFieldNumber = 5;
  ::google::protobuf::uint32 biscollectroom() const;
  void set_biscollectroom(::google::protobuf::uint32 value);

  // optional uint32 devtype = 6;
  void clear_devtype();
  static const int kDevtypeFieldNumber = 6;
  ::google::protobuf::uint32 devtype() const;
  void set_devtype(::google::protobuf::uint32 value);

  // optional uint32 seats = 7;
  void clear_seats();
  static const int kSeatsFieldNumber = 7;
  ::google::protobuf::uint32 seats() const;
  void set_seats(::google::protobuf::uint32 value);

  // optional uint32 groupid = 8;
  void clear_groupid();
  static const int kGroupidFieldNumber = 8;
  ::google::protobuf::uint32 groupid() const;
  void set_groupid(::google::protobuf::uint32 value);

  // optional uint32 runstate = 9;
  void clear_runstate();
  static const int kRunstateFieldNumber = 9;
  ::google::protobuf::uint32 runstate() const;
  void set_runstate(::google::protobuf::uint32 value);

  // optional uint32 creatorid = 10;
  void clear_creatorid();
  static const int kCreatoridFieldNumber = 10;
  ::google::protobuf::uint32 creatorid() const;
  void set_creatorid(::google::protobuf::uint32 value);

  // optional uint32 op1id = 11;
  void clear_op1id();
  static const int kOp1IdFieldNumber = 11;
  ::google::protobuf::uint32 op1id() const;
  void set_op1id(::google::protobuf::uint32 value);

  // optional uint32 op2id = 12;
  void clear_op2id();
  static const int kOp2IdFieldNumber = 12;
  ::google::protobuf::uint32 op2id() const;
  void set_op2id(::google::protobuf::uint32 value);

  // optional uint32 op3id = 13;
  void clear_op3id();
  static const int kOp3IdFieldNumber = 13;
  ::google::protobuf::uint32 op3id() const;
  void set_op3id(::google::protobuf::uint32 value);

  // optional uint32 op4id = 14;
  void clear_op4id();
  static const int kOp4IdFieldNumber = 14;
  ::google::protobuf::uint32 op4id() const;
  void set_op4id(::google::protobuf::uint32 value);

  // optional uint32 inroomstate = 15;
  void clear_inroomstate();
  static const int kInroomstateFieldNumber = 15;
  ::google::protobuf::uint32 inroomstate() const;
  void set_inroomstate(::google::protobuf::uint32 value);

  // optional int64 nk = 16;
  void clear_nk();
  static const int kNkFieldNumber = 16;
  ::google::protobuf::int64 nk() const;
  void set_nk(::google::protobuf::int64 value);

  // optional int64 nb = 17;
  void clear_nb();
  static const int kNbFieldNumber = 17;
  ::google::protobuf::int64 nb() const;
  void set_nb(::google::protobuf::int64 value);

  // optional int64 nlotterypool = 18;
  void clear_nlotterypool();
  static const int kNlotterypoolFieldNumber = 18;
  ::google::protobuf::int64 nlotterypool() const;
  void set_nlotterypool(::google::protobuf::int64 value);

  // optional int32 nchestnum = 19;
  void clear_nchestnum();
  static const int kNchestnumFieldNumber = 19;
  ::google::protobuf::int32 nchestnum() const;
  void set_nchestnum(::google::protobuf::int32 value);

  // optional string cname = 20;
  void clear_cname();
  static const int kCnameFieldNumber = 20;
  const ::std::string& cname() const;
  void set_cname(const ::std::string& value);
  void set_cname(const char* value);
  void set_cname(const char* value, size_t size);
  ::std::string* mutable_cname();
  ::std::string* release_cname();
  void set_allocated_cname(::std::string* cname);

  // optional string cmediaaddr = 21;
  void clear_cmediaaddr();
  static const int kCmediaaddrFieldNumber = 21;
  const ::std::string& cmediaaddr() const;
  void set_cmediaaddr(const ::std::string& value);
  void set_cmediaaddr(const char* value);
  void set_cmediaaddr(const char* value, size_t size);
  ::std::string* mutable_cmediaaddr();
  ::std::string* release_cmediaaddr();
  void set_allocated_cmediaaddr(::std::string* cmediaaddr);

  // optional string cpwd = 22;
  void clear_cpwd();
  static const int kCpwdFieldNumber = 22;
  const ::std::string& cpwd() const;
  void set_cpwd(const ::std::string& value);
  void set_cpwd(const char* value);
  void set_cpwd(const char* value, size_t size);
  ::std::string* mutable_cpwd();
  ::std::string* release_cpwd();
  void set_allocated_cpwd(::std::string* cpwd);

  // optional uint64 npopularity_ = 23;
  void clear_npopularity_();
  static const int kNpopularityFieldNumber = 23;
  ::google::protobuf::uint64 npopularity_() const;
  void set_npopularity_(::google::protobuf::uint64 value);

  // optional uint32 ncollect_times = 24;
  void clear_ncollect_times();
  static const int kNcollectTimesFieldNumber = 24;
  ::google::protobuf::uint32 ncollect_times() const;
  void set_ncollect_times(::google::protobuf::uint32 value);

  // optional uint32 userRoleType = 25;
  void clear_userroletype();
  static const int kUserRoleTypeFieldNumber = 25;
  ::google::protobuf::uint32 userroletype() const;
  void set_userroletype(::google::protobuf::uint32 value);

  // optional string groupIcon = 26;
  void clear_groupicon();
  static const int kGroupIconFieldNumber = 26;
  const ::std::string& groupicon() const;
  void set_groupicon(const ::std::string& value);
  void set_groupicon(const char* value);
  void set_groupicon(const char* value, size_t size);
  ::std::string* mutable_groupicon();
  ::std::string* release_groupicon();
  void set_allocated_groupicon(::std::string* groupicon);

  // optional uint32 groupShowID = 27;
  void clear_groupshowid();
  static const int kGroupShowIDFieldNumber = 27;
  ::google::protobuf::uint32 groupshowid() const;
  void set_groupshowid(::google::protobuf::uint32 value);

  // optional uint32 muteSwitch = 28;
  void clear_muteswitch();
  static const int kMuteSwitchFieldNumber = 28;
  ::google::protobuf::uint32 muteswitch() const;
  void set_muteswitch(::google::protobuf::uint32 value);

  // optional string liveUrl = 29;
  void clear_liveurl();
  static const int kLiveUrlFieldNumber = 29;
  const ::std::string& liveurl() const;
  void set_liveurl(const ::std::string& value);
  void set_liveurl(const char* value);
  void set_liveurl(const char* value, size_t size);
  ::std::string* mutable_liveurl();
  ::std::string* release_liveurl();
  void set_allocated_liveurl(::std::string* liveurl);

  // @@protoc_insertion_point(class_scope:CMDJoinRoomResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 vcbid_;
  ::google::protobuf::uint32 roomtype_;
  ::google::protobuf::uint32 busepwd_;
  ::google::protobuf::uint32 biscollectroom_;
  ::google::protobuf::uint32 devtype_;
  ::google::protobuf::uint32 seats_;
  ::google::protobuf::uint32 groupid_;
  ::google::protobuf::uint32 runstate_;
  ::google::protobuf::uint32 creatorid_;
  ::google::protobuf::uint32 op1id_;
  ::google::protobuf::uint32 op2id_;
  ::google::protobuf::uint32 op3id_;
  ::google::protobuf::uint32 op4id_;
  ::google::protobuf::int64 nk_;
  ::google::protobuf::int64 nb_;
  ::google::protobuf::uint32 inroomstate_;
  ::google::protobuf::int32 nchestnum_;
  ::google::protobuf::int64 nlotterypool_;
  ::google::protobuf::internal::ArenaStringPtr cname_;
  ::google::protobuf::internal::ArenaStringPtr cmediaaddr_;
  ::google::protobuf::internal::ArenaStringPtr cpwd_;
  ::google::protobuf::uint64 npopularity__;
  ::google::protobuf::uint32 ncollect_times_;
  ::google::protobuf::uint32 userroletype_;
  ::google::protobuf::internal::ArenaStringPtr groupicon_;
  ::google::protobuf::uint32 groupshowid_;
  ::google::protobuf::uint32 muteswitch_;
  ::google::protobuf::internal::ArenaStringPtr liveurl_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_RoomSvr_2eproto();
  friend void protobuf_AssignDesc_RoomSvr_2eproto();
  friend void protobuf_ShutdownFile_RoomSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDJoinRoomResp* default_instance_;
};
// -------------------------------------------------------------------

class CMDGateJoinRoomReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDGateJoinRoomReq) */ {
 public:
  CMDGateJoinRoomReq();
  virtual ~CMDGateJoinRoomReq();

  CMDGateJoinRoomReq(const CMDGateJoinRoomReq& from);

  inline CMDGateJoinRoomReq& operator=(const CMDGateJoinRoomReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDGateJoinRoomReq& default_instance();

  void Swap(CMDGateJoinRoomReq* other);

  // implements Message ----------------------------------------------

  inline CMDGateJoinRoomReq* New() const { return New(NULL); }

  CMDGateJoinRoomReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDGateJoinRoomReq& from);
  void MergeFrom(const CMDGateJoinRoomReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDGateJoinRoomReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 userid = 1;
  void clear_userid();
  static const int kUseridFieldNumber = 1;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // optional int32 vcbid = 2;
  void clear_vcbid();
  static const int kVcbidFieldNumber = 2;
  ::google::protobuf::int32 vcbid() const;
  void set_vcbid(::google::protobuf::int32 value);

  // optional string cIpAddr = 3;
  void clear_cipaddr();
  static const int kCIpAddrFieldNumber = 3;
  const ::std::string& cipaddr() const;
  void set_cipaddr(const ::std::string& value);
  void set_cipaddr(const char* value);
  void set_cipaddr(const char* value, size_t size);
  ::std::string* mutable_cipaddr();
  ::std::string* release_cipaddr();
  void set_allocated_cipaddr(::std::string* cipaddr);

  // optional string uuid = 4;
  void clear_uuid();
  static const int kUuidFieldNumber = 4;
  const ::std::string& uuid() const;
  void set_uuid(const ::std::string& value);
  void set_uuid(const char* value);
  void set_uuid(const char* value, size_t size);
  ::std::string* mutable_uuid();
  ::std::string* release_uuid();
  void set_allocated_uuid(::std::string* uuid);

  // optional int32 devtype = 5;
  void clear_devtype();
  static const int kDevtypeFieldNumber = 5;
  ::google::protobuf::int32 devtype() const;
  void set_devtype(::google::protobuf::int32 value);

  // optional int32 micuserid = 6;
  void clear_micuserid();
  static const int kMicuseridFieldNumber = 6;
  ::google::protobuf::int32 micuserid() const;
  void set_micuserid(::google::protobuf::int32 value);

  // optional int32 micstate = 7;
  void clear_micstate();
  static const int kMicstateFieldNumber = 7;
  ::google::protobuf::int32 micstate() const;
  void set_micstate(::google::protobuf::int32 value);

  // optional int32 micindex = 8;
  void clear_micindex();
  static const int kMicindexFieldNumber = 8;
  ::google::protobuf::int32 micindex() const;
  void set_micindex(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CMDGateJoinRoomReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 userid_;
  ::google::protobuf::int32 vcbid_;
  ::google::protobuf::internal::ArenaStringPtr cipaddr_;
  ::google::protobuf::internal::ArenaStringPtr uuid_;
  ::google::protobuf::int32 devtype_;
  ::google::protobuf::int32 micuserid_;
  ::google::protobuf::int32 micstate_;
  ::google::protobuf::int32 micindex_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_RoomSvr_2eproto();
  friend void protobuf_AssignDesc_RoomSvr_2eproto();
  friend void protobuf_ShutdownFile_RoomSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDGateJoinRoomReq* default_instance_;
};
// -------------------------------------------------------------------

class CMDGateJoinRoomResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDGateJoinRoomResp) */ {
 public:
  CMDGateJoinRoomResp();
  virtual ~CMDGateJoinRoomResp();

  CMDGateJoinRoomResp(const CMDGateJoinRoomResp& from);

  inline CMDGateJoinRoomResp& operator=(const CMDGateJoinRoomResp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDGateJoinRoomResp& default_instance();

  void Swap(CMDGateJoinRoomResp* other);

  // implements Message ----------------------------------------------

  inline CMDGateJoinRoomResp* New() const { return New(NULL); }

  CMDGateJoinRoomResp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDGateJoinRoomResp& from);
  void MergeFrom(const CMDGateJoinRoomResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDGateJoinRoomResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 userid = 1;
  void clear_userid();
  static const int kUseridFieldNumber = 1;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // optional int32 vcbid = 2;
  void clear_vcbid();
  static const int kVcbidFieldNumber = 2;
  ::google::protobuf::int32 vcbid() const;
  void set_vcbid(::google::protobuf::int32 value);

  // optional .CMDErrCode errInfo = 3;
  bool has_errinfo() const;
  void clear_errinfo();
  static const int kErrInfoFieldNumber = 3;
  const ::CMDErrCode& errinfo() const;
  ::CMDErrCode* mutable_errinfo();
  ::CMDErrCode* release_errinfo();
  void set_allocated_errinfo(::CMDErrCode* errinfo);

  // @@protoc_insertion_point(class_scope:CMDGateJoinRoomResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 userid_;
  ::google::protobuf::int32 vcbid_;
  ::CMDErrCode* errinfo_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_RoomSvr_2eproto();
  friend void protobuf_AssignDesc_RoomSvr_2eproto();
  friend void protobuf_ShutdownFile_RoomSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDGateJoinRoomResp* default_instance_;
};
// -------------------------------------------------------------------

class CMDJoinRoomErr : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDJoinRoomErr) */ {
 public:
  CMDJoinRoomErr();
  virtual ~CMDJoinRoomErr();

  CMDJoinRoomErr(const CMDJoinRoomErr& from);

  inline CMDJoinRoomErr& operator=(const CMDJoinRoomErr& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDJoinRoomErr& default_instance();

  void Swap(CMDJoinRoomErr* other);

  // implements Message ----------------------------------------------

  inline CMDJoinRoomErr* New() const { return New(NULL); }

  CMDJoinRoomErr* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDJoinRoomErr& from);
  void MergeFrom(const CMDJoinRoomErr& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDJoinRoomErr* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 userid = 1;
  void clear_userid();
  static const int kUseridFieldNumber = 1;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // optional int32 vcbid = 2;
  void clear_vcbid();
  static const int kVcbidFieldNumber = 2;
  ::google::protobuf::int32 vcbid() const;
  void set_vcbid(::google::protobuf::int32 value);

  // optional .CMDErrCode errInfo = 3;
  bool has_errinfo() const;
  void clear_errinfo();
  static const int kErrInfoFieldNumber = 3;
  const ::CMDErrCode& errinfo() const;
  ::CMDErrCode* mutable_errinfo();
  ::CMDErrCode* release_errinfo();
  void set_allocated_errinfo(::CMDErrCode* errinfo);

  // optional int32 data1 = 4;
  void clear_data1();
  static const int kData1FieldNumber = 4;
  ::google::protobuf::int32 data1() const;
  void set_data1(::google::protobuf::int32 value);

  // optional int32 data2 = 5;
  void clear_data2();
  static const int kData2FieldNumber = 5;
  ::google::protobuf::int32 data2() const;
  void set_data2(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CMDJoinRoomErr)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 userid_;
  ::google::protobuf::int32 vcbid_;
  ::CMDErrCode* errinfo_;
  ::google::protobuf::int32 data1_;
  ::google::protobuf::int32 data2_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_RoomSvr_2eproto();
  friend void protobuf_AssignDesc_RoomSvr_2eproto();
  friend void protobuf_ShutdownFile_RoomSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDJoinRoomErr* default_instance_;
};
// -------------------------------------------------------------------

class CMDUserMicState : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDUserMicState) */ {
 public:
  CMDUserMicState();
  virtual ~CMDUserMicState();

  CMDUserMicState(const CMDUserMicState& from);

  inline CMDUserMicState& operator=(const CMDUserMicState& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDUserMicState& default_instance();

  void Swap(CMDUserMicState* other);

  // implements Message ----------------------------------------------

  inline CMDUserMicState* New() const { return New(NULL); }

  CMDUserMicState* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDUserMicState& from);
  void MergeFrom(const CMDUserMicState& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDUserMicState* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 vcbid = 1;
  void clear_vcbid();
  static const int kVcbidFieldNumber = 1;
  ::google::protobuf::uint32 vcbid() const;
  void set_vcbid(::google::protobuf::uint32 value);

  // optional .UserInfo_t runid = 2;
  bool has_runid() const;
  void clear_runid();
  static const int kRunidFieldNumber = 2;
  const ::UserInfo_t& runid() const;
  ::UserInfo_t* mutable_runid();
  ::UserInfo_t* release_runid();
  void set_allocated_runid(::UserInfo_t* runid);

  // optional .UserInfo_t toid = 3;
  bool has_toid() const;
  void clear_toid();
  static const int kToidFieldNumber = 3;
  const ::UserInfo_t& toid() const;
  ::UserInfo_t* mutable_toid();
  ::UserInfo_t* release_toid();
  void set_allocated_toid(::UserInfo_t* toid);

  // optional int32 giftid = 4;
  void clear_giftid();
  static const int kGiftidFieldNumber = 4;
  ::google::protobuf::int32 giftid() const;
  void set_giftid(::google::protobuf::int32 value);

  // optional int32 giftnum = 5;
  void clear_giftnum();
  static const int kGiftnumFieldNumber = 5;
  ::google::protobuf::int32 giftnum() const;
  void set_giftnum(::google::protobuf::int32 value);

  // optional int32 micstate = 6;
  void clear_micstate();
  static const int kMicstateFieldNumber = 6;
  ::google::protobuf::int32 micstate() const;
  void set_micstate(::google::protobuf::int32 value);

  // optional int32 micindex = 7;
  void clear_micindex();
  static const int kMicindexFieldNumber = 7;
  ::google::protobuf::int32 micindex() const;
  void set_micindex(::google::protobuf::int32 value);

  // optional int32 optype = 8;
  void clear_optype();
  static const int kOptypeFieldNumber = 8;
  ::google::protobuf::int32 optype() const;
  void set_optype(::google::protobuf::int32 value);

  // optional int32 reserve11 = 9;
  void clear_reserve11();
  static const int kReserve11FieldNumber = 9;
  ::google::protobuf::int32 reserve11() const;
  void set_reserve11(::google::protobuf::int32 value);

  // optional .CMDErrCode errInfo = 10;
  bool has_errinfo() const;
  void clear_errinfo();
  static const int kErrInfoFieldNumber = 10;
  const ::CMDErrCode& errinfo() const;
  ::CMDErrCode* mutable_errinfo();
  ::CMDErrCode* release_errinfo();
  void set_allocated_errinfo(::CMDErrCode* errinfo);

  // optional int32 micsecond = 11;
  void clear_micsecond();
  static const int kMicsecondFieldNumber = 11;
  ::google::protobuf::int32 micsecond() const;
  void set_micsecond(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CMDUserMicState)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::UserInfo_t* runid_;
  ::google::protobuf::uint32 vcbid_;
  ::google::protobuf::int32 giftid_;
  ::UserInfo_t* toid_;
  ::google::protobuf::int32 giftnum_;
  ::google::protobuf::int32 micstate_;
  ::google::protobuf::int32 micindex_;
  ::google::protobuf::int32 optype_;
  ::CMDErrCode* errinfo_;
  ::google::protobuf::int32 reserve11_;
  ::google::protobuf::int32 micsecond_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_RoomSvr_2eproto();
  friend void protobuf_AssignDesc_RoomSvr_2eproto();
  friend void protobuf_ShutdownFile_RoomSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDUserMicState* default_instance_;
};
// -------------------------------------------------------------------

class CMDUpWaitMic : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDUpWaitMic) */ {
 public:
  CMDUpWaitMic();
  virtual ~CMDUpWaitMic();

  CMDUpWaitMic(const CMDUpWaitMic& from);

  inline CMDUpWaitMic& operator=(const CMDUpWaitMic& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDUpWaitMic& default_instance();

  void Swap(CMDUpWaitMic* other);

  // implements Message ----------------------------------------------

  inline CMDUpWaitMic* New() const { return New(NULL); }

  CMDUpWaitMic* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDUpWaitMic& from);
  void MergeFrom(const CMDUpWaitMic& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDUpWaitMic* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 vcbid = 1;
  void clear_vcbid();
  static const int kVcbidFieldNumber = 1;
  ::google::protobuf::uint32 vcbid() const;
  void set_vcbid(::google::protobuf::uint32 value);

  // optional uint32 ruunerid = 2;
  void clear_ruunerid();
  static const int kRuuneridFieldNumber = 2;
  ::google::protobuf::uint32 ruunerid() const;
  void set_ruunerid(::google::protobuf::uint32 value);

  // optional uint32 touser = 3;
  void clear_touser();
  static const int kTouserFieldNumber = 3;
  ::google::protobuf::uint32 touser() const;
  void set_touser(::google::protobuf::uint32 value);

  // optional int32 nmicindex = 4;
  void clear_nmicindex();
  static const int kNmicindexFieldNumber = 4;
  ::google::protobuf::int32 nmicindex() const;
  void set_nmicindex(::google::protobuf::int32 value);

  // optional .CMDErrCode errInfo = 5;
  bool has_errinfo() const;
  void clear_errinfo();
  static const int kErrInfoFieldNumber = 5;
  const ::CMDErrCode& errinfo() const;
  ::CMDErrCode* mutable_errinfo();
  ::CMDErrCode* release_errinfo();
  void set_allocated_errinfo(::CMDErrCode* errinfo);

  // @@protoc_insertion_point(class_scope:CMDUpWaitMic)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 vcbid_;
  ::google::protobuf::uint32 ruunerid_;
  ::google::protobuf::uint32 touser_;
  ::google::protobuf::int32 nmicindex_;
  ::CMDErrCode* errinfo_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_RoomSvr_2eproto();
  friend void protobuf_AssignDesc_RoomSvr_2eproto();
  friend void protobuf_ShutdownFile_RoomSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDUpWaitMic* default_instance_;
};
// -------------------------------------------------------------------

class CMDUpWaitMicList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDUpWaitMicList) */ {
 public:
  CMDUpWaitMicList();
  virtual ~CMDUpWaitMicList();

  CMDUpWaitMicList(const CMDUpWaitMicList& from);

  inline CMDUpWaitMicList& operator=(const CMDUpWaitMicList& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDUpWaitMicList& default_instance();

  void Swap(CMDUpWaitMicList* other);

  // implements Message ----------------------------------------------

  inline CMDUpWaitMicList* New() const { return New(NULL); }

  CMDUpWaitMicList* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDUpWaitMicList& from);
  void MergeFrom(const CMDUpWaitMicList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDUpWaitMicList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 size = 1;
  void clear_size();
  static const int kSizeFieldNumber = 1;
  ::google::protobuf::uint32 size() const;
  void set_size(::google::protobuf::uint32 value);

  // repeated .UserInfo_t userid = 2;
  int userid_size() const;
  void clear_userid();
  static const int kUseridFieldNumber = 2;
  const ::UserInfo_t& userid(int index) const;
  ::UserInfo_t* mutable_userid(int index);
  ::UserInfo_t* add_userid();
  ::google::protobuf::RepeatedPtrField< ::UserInfo_t >*
      mutable_userid();
  const ::google::protobuf::RepeatedPtrField< ::UserInfo_t >&
      userid() const;

  // optional uint32 vcbid = 3;
  void clear_vcbid();
  static const int kVcbidFieldNumber = 3;
  ::google::protobuf::uint32 vcbid() const;
  void set_vcbid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMDUpWaitMicList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::UserInfo_t > userid_;
  ::google::protobuf::uint32 size_;
  ::google::protobuf::uint32 vcbid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_RoomSvr_2eproto();
  friend void protobuf_AssignDesc_RoomSvr_2eproto();
  friend void protobuf_ShutdownFile_RoomSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDUpWaitMicList* default_instance_;
};
// -------------------------------------------------------------------

class CMDMicStateListReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDMicStateListReq) */ {
 public:
  CMDMicStateListReq();
  virtual ~CMDMicStateListReq();

  CMDMicStateListReq(const CMDMicStateListReq& from);

  inline CMDMicStateListReq& operator=(const CMDMicStateListReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDMicStateListReq& default_instance();

  void Swap(CMDMicStateListReq* other);

  // implements Message ----------------------------------------------

  inline CMDMicStateListReq* New() const { return New(NULL); }

  CMDMicStateListReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDMicStateListReq& from);
  void MergeFrom(const CMDMicStateListReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDMicStateListReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 vcbid = 1;
  void clear_vcbid();
  static const int kVcbidFieldNumber = 1;
  ::google::protobuf::uint32 vcbid() const;
  void set_vcbid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMDMicStateListReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 vcbid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_RoomSvr_2eproto();
  friend void protobuf_AssignDesc_RoomSvr_2eproto();
  friend void protobuf_ShutdownFile_RoomSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDMicStateListReq* default_instance_;
};
// -------------------------------------------------------------------

class CMDMicStateListResp_PubMic : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDMicStateListResp.PubMic) */ {
 public:
  CMDMicStateListResp_PubMic();
  virtual ~CMDMicStateListResp_PubMic();

  CMDMicStateListResp_PubMic(const CMDMicStateListResp_PubMic& from);

  inline CMDMicStateListResp_PubMic& operator=(const CMDMicStateListResp_PubMic& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDMicStateListResp_PubMic& default_instance();

  void Swap(CMDMicStateListResp_PubMic* other);

  // implements Message ----------------------------------------------

  inline CMDMicStateListResp_PubMic* New() const { return New(NULL); }

  CMDMicStateListResp_PubMic* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDMicStateListResp_PubMic& from);
  void MergeFrom(const CMDMicStateListResp_PubMic& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDMicStateListResp_PubMic* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .UserInfo_t userinfo = 1;
  bool has_userinfo() const;
  void clear_userinfo();
  static const int kUserinfoFieldNumber = 1;
  const ::UserInfo_t& userinfo() const;
  ::UserInfo_t* mutable_userinfo();
  ::UserInfo_t* release_userinfo();
  void set_allocated_userinfo(::UserInfo_t* userinfo);

  // optional int32 status = 2;
  void clear_status();
  static const int kStatusFieldNumber = 2;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CMDMicStateListResp.PubMic)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::UserInfo_t* userinfo_;
  ::google::protobuf::int32 status_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_RoomSvr_2eproto();
  friend void protobuf_AssignDesc_RoomSvr_2eproto();
  friend void protobuf_ShutdownFile_RoomSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDMicStateListResp_PubMic* default_instance_;
};
// -------------------------------------------------------------------

class CMDMicStateListResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDMicStateListResp) */ {
 public:
  CMDMicStateListResp();
  virtual ~CMDMicStateListResp();

  CMDMicStateListResp(const CMDMicStateListResp& from);

  inline CMDMicStateListResp& operator=(const CMDMicStateListResp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDMicStateListResp& default_instance();

  void Swap(CMDMicStateListResp* other);

  // implements Message ----------------------------------------------

  inline CMDMicStateListResp* New() const { return New(NULL); }

  CMDMicStateListResp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDMicStateListResp& from);
  void MergeFrom(const CMDMicStateListResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDMicStateListResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMDMicStateListResp_PubMic PubMic;

  // accessors -------------------------------------------------------

  // optional uint32 vcbid = 1;
  void clear_vcbid();
  static const int kVcbidFieldNumber = 1;
  ::google::protobuf::uint32 vcbid() const;
  void set_vcbid(::google::protobuf::uint32 value);

  // repeated .CMDMicStateListResp.PubMic pubmic = 2;
  int pubmic_size() const;
  void clear_pubmic();
  static const int kPubmicFieldNumber = 2;
  const ::CMDMicStateListResp_PubMic& pubmic(int index) const;
  ::CMDMicStateListResp_PubMic* mutable_pubmic(int index);
  ::CMDMicStateListResp_PubMic* add_pubmic();
  ::google::protobuf::RepeatedPtrField< ::CMDMicStateListResp_PubMic >*
      mutable_pubmic();
  const ::google::protobuf::RepeatedPtrField< ::CMDMicStateListResp_PubMic >&
      pubmic() const;

  // @@protoc_insertion_point(class_scope:CMDMicStateListResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::CMDMicStateListResp_PubMic > pubmic_;
  ::google::protobuf::uint32 vcbid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_RoomSvr_2eproto();
  friend void protobuf_AssignDesc_RoomSvr_2eproto();
  friend void protobuf_ShutdownFile_RoomSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDMicStateListResp* default_instance_;
};
// -------------------------------------------------------------------

class CMDRoomUserInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDRoomUserInfo) */ {
 public:
  CMDRoomUserInfo();
  virtual ~CMDRoomUserInfo();

  CMDRoomUserInfo(const CMDRoomUserInfo& from);

  inline CMDRoomUserInfo& operator=(const CMDRoomUserInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDRoomUserInfo& default_instance();

  void Swap(CMDRoomUserInfo* other);

  // implements Message ----------------------------------------------

  inline CMDRoomUserInfo* New() const { return New(NULL); }

  CMDRoomUserInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDRoomUserInfo& from);
  void MergeFrom(const CMDRoomUserInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDRoomUserInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 userid = 1;
  void clear_userid();
  static const int kUseridFieldNumber = 1;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // optional uint32 vcbid = 2;
  void clear_vcbid();
  static const int kVcbidFieldNumber = 2;
  ::google::protobuf::uint32 vcbid() const;
  void set_vcbid(::google::protobuf::uint32 value);

  // optional uint32 userlevel = 3;
  void clear_userlevel();
  static const int kUserlevelFieldNumber = 3;
  ::google::protobuf::uint32 userlevel() const;
  void set_userlevel(::google::protobuf::uint32 value);

  // optional uint32 userviplevel = 4;
  void clear_userviplevel();
  static const int kUserviplevelFieldNumber = 4;
  ::google::protobuf::uint32 userviplevel() const;
  void set_userviplevel(::google::protobuf::uint32 value);

  // optional uint32 gender = 5;
  void clear_gender();
  static const int kGenderFieldNumber = 5;
  ::google::protobuf::uint32 gender() const;
  void set_gender(::google::protobuf::uint32 value);

  // optional uint32 devtype = 6;
  void clear_devtype();
  static const int kDevtypeFieldNumber = 6;
  ::google::protobuf::uint32 devtype() const;
  void set_devtype(::google::protobuf::uint32 value);

  // optional uint32 pubmicindex = 7;
  void clear_pubmicindex();
  static const int kPubmicindexFieldNumber = 7;
  ::google::protobuf::uint32 pubmicindex() const;
  void set_pubmicindex(::google::protobuf::uint32 value);

  // optional uint32 roomlevel = 8;
  void clear_roomlevel();
  static const int kRoomlevelFieldNumber = 8;
  ::google::protobuf::uint32 roomlevel() const;
  void set_roomlevel(::google::protobuf::uint32 value);

  // optional uint32 usertype = 9;
  void clear_usertype();
  static const int kUsertypeFieldNumber = 9;
  ::google::protobuf::uint32 usertype() const;
  void set_usertype(::google::protobuf::uint32 value);

  // optional uint32 cometime = 10;
  void clear_cometime();
  static const int kCometimeFieldNumber = 10;
  ::google::protobuf::uint32 cometime() const;
  void set_cometime(::google::protobuf::uint32 value);

  // optional string chead = 11;
  void clear_chead();
  static const int kCheadFieldNumber = 11;
  const ::std::string& chead() const;
  void set_chead(const ::std::string& value);
  void set_chead(const char* value);
  void set_chead(const char* value, size_t size);
  ::std::string* mutable_chead();
  ::std::string* release_chead();
  void set_allocated_chead(::std::string* chead);

  // optional uint32 userstate = 12;
  void clear_userstate();
  static const int kUserstateFieldNumber = 12;
  ::google::protobuf::uint32 userstate() const;
  void set_userstate(::google::protobuf::uint32 value);

  // optional int32 bforbidchat = 13;
  void clear_bforbidchat();
  static const int kBforbidchatFieldNumber = 13;
  ::google::protobuf::int32 bforbidchat() const;
  void set_bforbidchat(::google::protobuf::int32 value);

  // optional string useralias = 14;
  void clear_useralias();
  static const int kUseraliasFieldNumber = 14;
  const ::std::string& useralias() const;
  void set_useralias(const ::std::string& value);
  void set_useralias(const char* value);
  void set_useralias(const char* value, size_t size);
  ::std::string* mutable_useralias();
  ::std::string* release_useralias();
  void set_allocated_useralias(::std::string* useralias);

  // optional uint32 authState = 15;
  void clear_authstate();
  static const int kAuthStateFieldNumber = 15;
  ::google::protobuf::uint32 authstate() const;
  void set_authstate(::google::protobuf::uint32 value);

  // optional string videoUrl = 16;
  void clear_videourl();
  static const int kVideoUrlFieldNumber = 16;
  const ::std::string& videourl() const;
  void set_videourl(const ::std::string& value);
  void set_videourl(const char* value);
  void set_videourl(const char* value, size_t size);
  ::std::string* mutable_videourl();
  ::std::string* release_videourl();
  void set_allocated_videourl(::std::string* videourl);

  // @@protoc_insertion_point(class_scope:CMDRoomUserInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 vcbid_;
  ::google::protobuf::uint32 userlevel_;
  ::google::protobuf::uint32 userviplevel_;
  ::google::protobuf::uint32 gender_;
  ::google::protobuf::uint32 devtype_;
  ::google::protobuf::uint32 pubmicindex_;
  ::google::protobuf::uint32 roomlevel_;
  ::google::protobuf::uint32 usertype_;
  ::google::protobuf::uint32 cometime_;
  ::google::protobuf::internal::ArenaStringPtr chead_;
  ::google::protobuf::uint32 userstate_;
  ::google::protobuf::int32 bforbidchat_;
  ::google::protobuf::internal::ArenaStringPtr useralias_;
  ::google::protobuf::internal::ArenaStringPtr videourl_;
  ::google::protobuf::uint32 authstate_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_RoomSvr_2eproto();
  friend void protobuf_AssignDesc_RoomSvr_2eproto();
  friend void protobuf_ShutdownFile_RoomSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDRoomUserInfo* default_instance_;
};
// -------------------------------------------------------------------

class CMDRoomUserInfos : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDRoomUserInfos) */ {
 public:
  CMDRoomUserInfos();
  virtual ~CMDRoomUserInfos();

  CMDRoomUserInfos(const CMDRoomUserInfos& from);

  inline CMDRoomUserInfos& operator=(const CMDRoomUserInfos& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDRoomUserInfos& default_instance();

  void Swap(CMDRoomUserInfos* other);

  // implements Message ----------------------------------------------

  inline CMDRoomUserInfos* New() const { return New(NULL); }

  CMDRoomUserInfos* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDRoomUserInfos& from);
  void MergeFrom(const CMDRoomUserInfos& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDRoomUserInfos* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CMDRoomUserInfo UserInfo = 1;
  int userinfo_size() const;
  void clear_userinfo();
  static const int kUserInfoFieldNumber = 1;
  const ::CMDRoomUserInfo& userinfo(int index) const;
  ::CMDRoomUserInfo* mutable_userinfo(int index);
  ::CMDRoomUserInfo* add_userinfo();
  ::google::protobuf::RepeatedPtrField< ::CMDRoomUserInfo >*
      mutable_userinfo();
  const ::google::protobuf::RepeatedPtrField< ::CMDRoomUserInfo >&
      userinfo() const;

  // @@protoc_insertion_point(class_scope:CMDRoomUserInfos)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::CMDRoomUserInfo > userinfo_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_RoomSvr_2eproto();
  friend void protobuf_AssignDesc_RoomSvr_2eproto();
  friend void protobuf_ShutdownFile_RoomSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDRoomUserInfos* default_instance_;
};
// -------------------------------------------------------------------

class CMDUserExitRoomInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDUserExitRoomInfo) */ {
 public:
  CMDUserExitRoomInfo();
  virtual ~CMDUserExitRoomInfo();

  CMDUserExitRoomInfo(const CMDUserExitRoomInfo& from);

  inline CMDUserExitRoomInfo& operator=(const CMDUserExitRoomInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDUserExitRoomInfo& default_instance();

  void Swap(CMDUserExitRoomInfo* other);

  // implements Message ----------------------------------------------

  inline CMDUserExitRoomInfo* New() const { return New(NULL); }

  CMDUserExitRoomInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDUserExitRoomInfo& from);
  void MergeFrom(const CMDUserExitRoomInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDUserExitRoomInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 userid = 1;
  void clear_userid();
  static const int kUseridFieldNumber = 1;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // optional uint32 vcbid = 2;
  void clear_vcbid();
  static const int kVcbidFieldNumber = 2;
  ::google::protobuf::uint32 vcbid() const;
  void set_vcbid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMDUserExitRoomInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 vcbid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_RoomSvr_2eproto();
  friend void protobuf_AssignDesc_RoomSvr_2eproto();
  friend void protobuf_ShutdownFile_RoomSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDUserExitRoomInfo* default_instance_;
};
// -------------------------------------------------------------------

class CMDUserExitRoomInfo_ext : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDUserExitRoomInfo_ext) */ {
 public:
  CMDUserExitRoomInfo_ext();
  virtual ~CMDUserExitRoomInfo_ext();

  CMDUserExitRoomInfo_ext(const CMDUserExitRoomInfo_ext& from);

  inline CMDUserExitRoomInfo_ext& operator=(const CMDUserExitRoomInfo_ext& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDUserExitRoomInfo_ext& default_instance();

  void Swap(CMDUserExitRoomInfo_ext* other);

  // implements Message ----------------------------------------------

  inline CMDUserExitRoomInfo_ext* New() const { return New(NULL); }

  CMDUserExitRoomInfo_ext* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDUserExitRoomInfo_ext& from);
  void MergeFrom(const CMDUserExitRoomInfo_ext& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDUserExitRoomInfo_ext* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 userid = 1;
  void clear_userid();
  static const int kUseridFieldNumber = 1;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // optional uint32 vcbid = 2;
  void clear_vcbid();
  static const int kVcbidFieldNumber = 2;
  ::google::protobuf::uint32 vcbid() const;
  void set_vcbid(::google::protobuf::uint32 value);

  // optional uint32 roleType = 3;
  void clear_roletype();
  static const int kRoleTypeFieldNumber = 3;
  ::google::protobuf::uint32 roletype() const;
  void set_roletype(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMDUserExitRoomInfo_ext)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 vcbid_;
  ::google::protobuf::uint32 roletype_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_RoomSvr_2eproto();
  friend void protobuf_AssignDesc_RoomSvr_2eproto();
  friend void protobuf_ShutdownFile_RoomSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDUserExitRoomInfo_ext* default_instance_;
};
// -------------------------------------------------------------------

class CMDUserExceptExitRoomInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDUserExceptExitRoomInfo) */ {
 public:
  CMDUserExceptExitRoomInfo();
  virtual ~CMDUserExceptExitRoomInfo();

  CMDUserExceptExitRoomInfo(const CMDUserExceptExitRoomInfo& from);

  inline CMDUserExceptExitRoomInfo& operator=(const CMDUserExceptExitRoomInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDUserExceptExitRoomInfo& default_instance();

  void Swap(CMDUserExceptExitRoomInfo* other);

  // implements Message ----------------------------------------------

  inline CMDUserExceptExitRoomInfo* New() const { return New(NULL); }

  CMDUserExceptExitRoomInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDUserExceptExitRoomInfo& from);
  void MergeFrom(const CMDUserExceptExitRoomInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDUserExceptExitRoomInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 userid = 1;
  void clear_userid();
  static const int kUseridFieldNumber = 1;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // optional uint32 vcbid = 2;
  void clear_vcbid();
  static const int kVcbidFieldNumber = 2;
  ::google::protobuf::uint32 vcbid() const;
  void set_vcbid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMDUserExceptExitRoomInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 vcbid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_RoomSvr_2eproto();
  friend void protobuf_AssignDesc_RoomSvr_2eproto();
  friend void protobuf_ShutdownFile_RoomSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDUserExceptExitRoomInfo* default_instance_;
};
// -------------------------------------------------------------------

class CMDOperateWaitMic : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDOperateWaitMic) */ {
 public:
  CMDOperateWaitMic();
  virtual ~CMDOperateWaitMic();

  CMDOperateWaitMic(const CMDOperateWaitMic& from);

  inline CMDOperateWaitMic& operator=(const CMDOperateWaitMic& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDOperateWaitMic& default_instance();

  void Swap(CMDOperateWaitMic* other);

  // implements Message ----------------------------------------------

  inline CMDOperateWaitMic* New() const { return New(NULL); }

  CMDOperateWaitMic* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDOperateWaitMic& from);
  void MergeFrom(const CMDOperateWaitMic& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDOperateWaitMic* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 vcbid = 1;
  void clear_vcbid();
  static const int kVcbidFieldNumber = 1;
  ::google::protobuf::uint32 vcbid() const;
  void set_vcbid(::google::protobuf::uint32 value);

  // optional uint32 ruunerid = 2;
  void clear_ruunerid();
  static const int kRuuneridFieldNumber = 2;
  ::google::protobuf::uint32 ruunerid() const;
  void set_ruunerid(::google::protobuf::uint32 value);

  // optional uint32 userid = 3;
  void clear_userid();
  static const int kUseridFieldNumber = 3;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // optional int32 micid = 4;
  void clear_micid();
  static const int kMicidFieldNumber = 4;
  ::google::protobuf::int32 micid() const;
  void set_micid(::google::protobuf::int32 value);

  // optional int32 optype = 5;
  void clear_optype();
  static const int kOptypeFieldNumber = 5;
  ::google::protobuf::int32 optype() const;
  void set_optype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CMDOperateWaitMic)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 vcbid_;
  ::google::protobuf::uint32 ruunerid_;
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::int32 micid_;
  ::google::protobuf::int32 optype_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_RoomSvr_2eproto();
  friend void protobuf_AssignDesc_RoomSvr_2eproto();
  friend void protobuf_ShutdownFile_RoomSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDOperateWaitMic* default_instance_;
};
// -------------------------------------------------------------------

class CMDChangeWaitMicIndexResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDChangeWaitMicIndexResp) */ {
 public:
  CMDChangeWaitMicIndexResp();
  virtual ~CMDChangeWaitMicIndexResp();

  CMDChangeWaitMicIndexResp(const CMDChangeWaitMicIndexResp& from);

  inline CMDChangeWaitMicIndexResp& operator=(const CMDChangeWaitMicIndexResp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDChangeWaitMicIndexResp& default_instance();

  void Swap(CMDChangeWaitMicIndexResp* other);

  // implements Message ----------------------------------------------

  inline CMDChangeWaitMicIndexResp* New() const { return New(NULL); }

  CMDChangeWaitMicIndexResp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDChangeWaitMicIndexResp& from);
  void MergeFrom(const CMDChangeWaitMicIndexResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDChangeWaitMicIndexResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 vcbid = 1;
  void clear_vcbid();
  static const int kVcbidFieldNumber = 1;
  ::google::protobuf::uint32 vcbid() const;
  void set_vcbid(::google::protobuf::uint32 value);

  // optional .CMDErrCode errInfo = 2;
  bool has_errinfo() const;
  void clear_errinfo();
  static const int kErrInfoFieldNumber = 2;
  const ::CMDErrCode& errinfo() const;
  ::CMDErrCode* mutable_errinfo();
  ::CMDErrCode* release_errinfo();
  void set_allocated_errinfo(::CMDErrCode* errinfo);

  // @@protoc_insertion_point(class_scope:CMDChangeWaitMicIndexResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::CMDErrCode* errinfo_;
  ::google::protobuf::uint32 vcbid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_RoomSvr_2eproto();
  friend void protobuf_AssignDesc_RoomSvr_2eproto();
  friend void protobuf_ShutdownFile_RoomSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDChangeWaitMicIndexResp* default_instance_;
};
// -------------------------------------------------------------------

class CMDChangeWaitMicIndexNoty : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDChangeWaitMicIndexNoty) */ {
 public:
  CMDChangeWaitMicIndexNoty();
  virtual ~CMDChangeWaitMicIndexNoty();

  CMDChangeWaitMicIndexNoty(const CMDChangeWaitMicIndexNoty& from);

  inline CMDChangeWaitMicIndexNoty& operator=(const CMDChangeWaitMicIndexNoty& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDChangeWaitMicIndexNoty& default_instance();

  void Swap(CMDChangeWaitMicIndexNoty* other);

  // implements Message ----------------------------------------------

  inline CMDChangeWaitMicIndexNoty* New() const { return New(NULL); }

  CMDChangeWaitMicIndexNoty* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDChangeWaitMicIndexNoty& from);
  void MergeFrom(const CMDChangeWaitMicIndexNoty& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDChangeWaitMicIndexNoty* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 vcbid = 1;
  void clear_vcbid();
  static const int kVcbidFieldNumber = 1;
  ::google::protobuf::uint32 vcbid() const;
  void set_vcbid(::google::protobuf::uint32 value);

  // optional uint32 ruunerid = 2;
  void clear_ruunerid();
  static const int kRuuneridFieldNumber = 2;
  ::google::protobuf::uint32 ruunerid() const;
  void set_ruunerid(::google::protobuf::uint32 value);

  // optional uint32 userid = 3;
  void clear_userid();
  static const int kUseridFieldNumber = 3;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // optional int32 micid = 4;
  void clear_micid();
  static const int kMicidFieldNumber = 4;
  ::google::protobuf::int32 micid() const;
  void set_micid(::google::protobuf::int32 value);

  // optional int32 optype = 5;
  void clear_optype();
  static const int kOptypeFieldNumber = 5;
  ::google::protobuf::int32 optype() const;
  void set_optype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CMDChangeWaitMicIndexNoty)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 vcbid_;
  ::google::protobuf::uint32 ruunerid_;
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::int32 micid_;
  ::google::protobuf::int32 optype_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_RoomSvr_2eproto();
  friend void protobuf_AssignDesc_RoomSvr_2eproto();
  friend void protobuf_ShutdownFile_RoomSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDChangeWaitMicIndexNoty* default_instance_;
};
// -------------------------------------------------------------------

class CMDRoomMicModSet : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDRoomMicModSet) */ {
 public:
  CMDRoomMicModSet();
  virtual ~CMDRoomMicModSet();

  CMDRoomMicModSet(const CMDRoomMicModSet& from);

  inline CMDRoomMicModSet& operator=(const CMDRoomMicModSet& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDRoomMicModSet& default_instance();

  void Swap(CMDRoomMicModSet* other);

  // implements Message ----------------------------------------------

  inline CMDRoomMicModSet* New() const { return New(NULL); }

  CMDRoomMicModSet* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDRoomMicModSet& from);
  void MergeFrom(const CMDRoomMicModSet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDRoomMicModSet* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 vcbid = 1;
  void clear_vcbid();
  static const int kVcbidFieldNumber = 1;
  ::google::protobuf::int32 vcbid() const;
  void set_vcbid(::google::protobuf::int32 value);

  // optional int32 micstatus = 2;
  void clear_micstatus();
  static const int kMicstatusFieldNumber = 2;
  ::google::protobuf::int32 micstatus() const;
  void set_micstatus(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CMDRoomMicModSet)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 vcbid_;
  ::google::protobuf::int32 micstatus_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_RoomSvr_2eproto();
  friend void protobuf_AssignDesc_RoomSvr_2eproto();
  friend void protobuf_ShutdownFile_RoomSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDRoomMicModSet* default_instance_;
};
// -------------------------------------------------------------------

class CMDUserKickoutRoomInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDUserKickoutRoomInfo) */ {
 public:
  CMDUserKickoutRoomInfo();
  virtual ~CMDUserKickoutRoomInfo();

  CMDUserKickoutRoomInfo(const CMDUserKickoutRoomInfo& from);

  inline CMDUserKickoutRoomInfo& operator=(const CMDUserKickoutRoomInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDUserKickoutRoomInfo& default_instance();

  void Swap(CMDUserKickoutRoomInfo* other);

  // implements Message ----------------------------------------------

  inline CMDUserKickoutRoomInfo* New() const { return New(NULL); }

  CMDUserKickoutRoomInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDUserKickoutRoomInfo& from);
  void MergeFrom(const CMDUserKickoutRoomInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDUserKickoutRoomInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 vcbid = 1;
  void clear_vcbid();
  static const int kVcbidFieldNumber = 1;
  ::google::protobuf::uint32 vcbid() const;
  void set_vcbid(::google::protobuf::uint32 value);

  // optional uint32 srcid = 2;
  void clear_srcid();
  static const int kSrcidFieldNumber = 2;
  ::google::protobuf::uint32 srcid() const;
  void set_srcid(::google::protobuf::uint32 value);

  // optional uint32 toid = 3;
  void clear_toid();
  static const int kToidFieldNumber = 3;
  ::google::protobuf::uint32 toid() const;
  void set_toid(::google::protobuf::uint32 value);

  // optional int32 resonid = 4;
  void clear_resonid();
  static const int kResonidFieldNumber = 4;
  ::google::protobuf::int32 resonid() const;
  void set_resonid(::google::protobuf::int32 value);

  // optional int32 mins = 5;
  void clear_mins();
  static const int kMinsFieldNumber = 5;
  ::google::protobuf::int32 mins() const;
  void set_mins(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CMDUserKickoutRoomInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 vcbid_;
  ::google::protobuf::uint32 srcid_;
  ::google::protobuf::uint32 toid_;
  ::google::protobuf::int32 resonid_;
  ::google::protobuf::int32 mins_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_RoomSvr_2eproto();
  friend void protobuf_AssignDesc_RoomSvr_2eproto();
  friend void protobuf_ShutdownFile_RoomSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDUserKickoutRoomInfo* default_instance_;
};
// -------------------------------------------------------------------

class CMDUserKickoutRoomResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDUserKickoutRoomResp) */ {
 public:
  CMDUserKickoutRoomResp();
  virtual ~CMDUserKickoutRoomResp();

  CMDUserKickoutRoomResp(const CMDUserKickoutRoomResp& from);

  inline CMDUserKickoutRoomResp& operator=(const CMDUserKickoutRoomResp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDUserKickoutRoomResp& default_instance();

  void Swap(CMDUserKickoutRoomResp* other);

  // implements Message ----------------------------------------------

  inline CMDUserKickoutRoomResp* New() const { return New(NULL); }

  CMDUserKickoutRoomResp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDUserKickoutRoomResp& from);
  void MergeFrom(const CMDUserKickoutRoomResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDUserKickoutRoomResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CMDErrCode errInfo = 1;
  bool has_errinfo() const;
  void clear_errinfo();
  static const int kErrInfoFieldNumber = 1;
  const ::CMDErrCode& errinfo() const;
  ::CMDErrCode* mutable_errinfo();
  ::CMDErrCode* release_errinfo();
  void set_allocated_errinfo(::CMDErrCode* errinfo);

  // optional uint32 vcbid = 2;
  void clear_vcbid();
  static const int kVcbidFieldNumber = 2;
  ::google::protobuf::uint32 vcbid() const;
  void set_vcbid(::google::protobuf::uint32 value);

  // optional uint32 srcid = 3;
  void clear_srcid();
  static const int kSrcidFieldNumber = 3;
  ::google::protobuf::uint32 srcid() const;
  void set_srcid(::google::protobuf::uint32 value);

  // optional uint32 toid = 4;
  void clear_toid();
  static const int kToidFieldNumber = 4;
  ::google::protobuf::uint32 toid() const;
  void set_toid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMDUserKickoutRoomResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::CMDErrCode* errinfo_;
  ::google::protobuf::uint32 vcbid_;
  ::google::protobuf::uint32 srcid_;
  ::google::protobuf::uint32 toid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_RoomSvr_2eproto();
  friend void protobuf_AssignDesc_RoomSvr_2eproto();
  friend void protobuf_ShutdownFile_RoomSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDUserKickoutRoomResp* default_instance_;
};
// -------------------------------------------------------------------

class CMDRoomInfoReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDRoomInfoReq) */ {
 public:
  CMDRoomInfoReq();
  virtual ~CMDRoomInfoReq();

  CMDRoomInfoReq(const CMDRoomInfoReq& from);

  inline CMDRoomInfoReq& operator=(const CMDRoomInfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDRoomInfoReq& default_instance();

  void Swap(CMDRoomInfoReq* other);

  // implements Message ----------------------------------------------

  inline CMDRoomInfoReq* New() const { return New(NULL); }

  CMDRoomInfoReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDRoomInfoReq& from);
  void MergeFrom(const CMDRoomInfoReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDRoomInfoReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 vcbid = 1;
  void clear_vcbid();
  static const int kVcbidFieldNumber = 1;
  ::google::protobuf::uint32 vcbid() const;
  void set_vcbid(::google::protobuf::uint32 value);

  // optional uint32 runnerid = 2;
  void clear_runnerid();
  static const int kRunneridFieldNumber = 2;
  ::google::protobuf::uint32 runnerid() const;
  void set_runnerid(::google::protobuf::uint32 value);

  // optional .CMDString roomname = 3;
  bool has_roomname() const;
  void clear_roomname();
  static const int kRoomnameFieldNumber = 3;
  const ::CMDString& roomname() const;
  ::CMDString* mutable_roomname();
  ::CMDString* release_roomname();
  void set_allocated_roomname(::CMDString* roomname);

  // optional .CMDString roomnotice = 4;
  bool has_roomnotice() const;
  void clear_roomnotice();
  static const int kRoomnoticeFieldNumber = 4;
  const ::CMDString& roomnotice() const;
  ::CMDString* mutable_roomnotice();
  ::CMDString* release_roomnotice();
  void set_allocated_roomnotice(::CMDString* roomnotice);

  // optional .CMDString roomremark = 5;
  bool has_roomremark() const;
  void clear_roomremark();
  static const int kRoomremarkFieldNumber = 5;
  const ::CMDString& roomremark() const;
  ::CMDString* mutable_roomremark();
  ::CMDString* release_roomremark();
  void set_allocated_roomremark(::CMDString* roomremark);

  // @@protoc_insertion_point(class_scope:CMDRoomInfoReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 vcbid_;
  ::google::protobuf::uint32 runnerid_;
  ::CMDString* roomname_;
  ::CMDString* roomnotice_;
  ::CMDString* roomremark_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_RoomSvr_2eproto();
  friend void protobuf_AssignDesc_RoomSvr_2eproto();
  friend void protobuf_ShutdownFile_RoomSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDRoomInfoReq* default_instance_;
};
// -------------------------------------------------------------------

class CMDRoomInfoResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDRoomInfoResp) */ {
 public:
  CMDRoomInfoResp();
  virtual ~CMDRoomInfoResp();

  CMDRoomInfoResp(const CMDRoomInfoResp& from);

  inline CMDRoomInfoResp& operator=(const CMDRoomInfoResp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDRoomInfoResp& default_instance();

  void Swap(CMDRoomInfoResp* other);

  // implements Message ----------------------------------------------

  inline CMDRoomInfoResp* New() const { return New(NULL); }

  CMDRoomInfoResp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDRoomInfoResp& from);
  void MergeFrom(const CMDRoomInfoResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDRoomInfoResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 vcbid = 1;
  void clear_vcbid();
  static const int kVcbidFieldNumber = 1;
  ::google::protobuf::uint32 vcbid() const;
  void set_vcbid(::google::protobuf::uint32 value);

  // optional uint32 runnerid = 2;
  void clear_runnerid();
  static const int kRunneridFieldNumber = 2;
  ::google::protobuf::uint32 runnerid() const;
  void set_runnerid(::google::protobuf::uint32 value);

  // optional .CMDErrCode errInfo = 3;
  bool has_errinfo() const;
  void clear_errinfo();
  static const int kErrInfoFieldNumber = 3;
  const ::CMDErrCode& errinfo() const;
  ::CMDErrCode* mutable_errinfo();
  ::CMDErrCode* release_errinfo();
  void set_allocated_errinfo(::CMDErrCode* errinfo);

  // @@protoc_insertion_point(class_scope:CMDRoomInfoResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 vcbid_;
  ::google::protobuf::uint32 runnerid_;
  ::CMDErrCode* errinfo_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_RoomSvr_2eproto();
  friend void protobuf_AssignDesc_RoomSvr_2eproto();
  friend void protobuf_ShutdownFile_RoomSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDRoomInfoResp* default_instance_;
};
// -------------------------------------------------------------------

class CMDNoticeInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDNoticeInfo) */ {
 public:
  CMDNoticeInfo();
  virtual ~CMDNoticeInfo();

  CMDNoticeInfo(const CMDNoticeInfo& from);

  inline CMDNoticeInfo& operator=(const CMDNoticeInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDNoticeInfo& default_instance();

  void Swap(CMDNoticeInfo* other);

  // implements Message ----------------------------------------------

  inline CMDNoticeInfo* New() const { return New(NULL); }

  CMDNoticeInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDNoticeInfo& from);
  void MergeFrom(const CMDNoticeInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDNoticeInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 noticeUserID = 1;
  void clear_noticeuserid();
  static const int kNoticeUserIDFieldNumber = 1;
  ::google::protobuf::uint32 noticeuserid() const;
  void set_noticeuserid(::google::protobuf::uint32 value);

  // optional string roomNotice = 2;
  void clear_roomnotice();
  static const int kRoomNoticeFieldNumber = 2;
  const ::std::string& roomnotice() const;
  void set_roomnotice(const ::std::string& value);
  void set_roomnotice(const char* value);
  void set_roomnotice(const char* value, size_t size);
  ::std::string* mutable_roomnotice();
  ::std::string* release_roomnotice();
  void set_allocated_roomnotice(::std::string* roomnotice);

  // optional uint32 noticeTime = 3;
  void clear_noticetime();
  static const int kNoticeTimeFieldNumber = 3;
  ::google::protobuf::uint32 noticetime() const;
  void set_noticetime(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMDNoticeInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr roomnotice_;
  ::google::protobuf::uint32 noticeuserid_;
  ::google::protobuf::uint32 noticetime_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_RoomSvr_2eproto();
  friend void protobuf_AssignDesc_RoomSvr_2eproto();
  friend void protobuf_ShutdownFile_RoomSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDNoticeInfo* default_instance_;
};
// -------------------------------------------------------------------

class CMDRoomBaseInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDRoomBaseInfo) */ {
 public:
  CMDRoomBaseInfo();
  virtual ~CMDRoomBaseInfo();

  CMDRoomBaseInfo(const CMDRoomBaseInfo& from);

  inline CMDRoomBaseInfo& operator=(const CMDRoomBaseInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDRoomBaseInfo& default_instance();

  void Swap(CMDRoomBaseInfo* other);

  // implements Message ----------------------------------------------

  inline CMDRoomBaseInfo* New() const { return New(NULL); }

  CMDRoomBaseInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDRoomBaseInfo& from);
  void MergeFrom(const CMDRoomBaseInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDRoomBaseInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 vcbid = 1;
  void clear_vcbid();
  static const int kVcbidFieldNumber = 1;
  ::google::protobuf::uint32 vcbid() const;
  void set_vcbid(::google::protobuf::uint32 value);

  // optional uint32 seats = 2;
  void clear_seats();
  static const int kSeatsFieldNumber = 2;
  ::google::protobuf::uint32 seats() const;
  void set_seats(::google::protobuf::uint32 value);

  // optional uint32 creatorid = 3;
  void clear_creatorid();
  static const int kCreatoridFieldNumber = 3;
  ::google::protobuf::uint32 creatorid() const;
  void set_creatorid(::google::protobuf::uint32 value);

  // optional uint32 opstate = 4;
  void clear_opstate();
  static const int kOpstateFieldNumber = 4;
  ::google::protobuf::uint32 opstate() const;
  void set_opstate(::google::protobuf::uint32 value);

  // optional .CMDString roomname = 5;
  bool has_roomname() const;
  void clear_roomname();
  static const int kRoomnameFieldNumber = 5;
  const ::CMDString& roomname() const;
  ::CMDString* mutable_roomname();
  ::CMDString* release_roomname();
  void set_allocated_roomname(::CMDString* roomname);

  // optional .CMDString icon = 6;
  bool has_icon() const;
  void clear_icon();
  static const int kIconFieldNumber = 6;
  const ::CMDString& icon() const;
  ::CMDString* mutable_icon();
  ::CMDString* release_icon();
  void set_allocated_icon(::CMDString* icon);

  // optional .CMDNoticeInfo noticeInfo = 7;
  bool has_noticeinfo() const;
  void clear_noticeinfo();
  static const int kNoticeInfoFieldNumber = 7;
  const ::CMDNoticeInfo& noticeinfo() const;
  ::CMDNoticeInfo* mutable_noticeinfo();
  ::CMDNoticeInfo* release_noticeinfo();
  void set_allocated_noticeinfo(::CMDNoticeInfo* noticeinfo);

  // optional .CMDString roomremark = 8;
  bool has_roomremark() const;
  void clear_roomremark();
  static const int kRoomremarkFieldNumber = 8;
  const ::CMDString& roomremark() const;
  ::CMDString* mutable_roomremark();
  ::CMDString* release_roomremark();
  void set_allocated_roomremark(::CMDString* roomremark);

  // @@protoc_insertion_point(class_scope:CMDRoomBaseInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 vcbid_;
  ::google::protobuf::uint32 seats_;
  ::google::protobuf::uint32 creatorid_;
  ::google::protobuf::uint32 opstate_;
  ::CMDString* roomname_;
  ::CMDString* icon_;
  ::CMDNoticeInfo* noticeinfo_;
  ::CMDString* roomremark_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_RoomSvr_2eproto();
  friend void protobuf_AssignDesc_RoomSvr_2eproto();
  friend void protobuf_ShutdownFile_RoomSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDRoomBaseInfo* default_instance_;
};
// -------------------------------------------------------------------

class CMDGroupMemberReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDGroupMemberReq) */ {
 public:
  CMDGroupMemberReq();
  virtual ~CMDGroupMemberReq();

  CMDGroupMemberReq(const CMDGroupMemberReq& from);

  inline CMDGroupMemberReq& operator=(const CMDGroupMemberReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDGroupMemberReq& default_instance();

  void Swap(CMDGroupMemberReq* other);

  // implements Message ----------------------------------------------

  inline CMDGroupMemberReq* New() const { return New(NULL); }

  CMDGroupMemberReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDGroupMemberReq& from);
  void MergeFrom(const CMDGroupMemberReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDGroupMemberReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 userID = 1;
  void clear_userid();
  static const int kUserIDFieldNumber = 1;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // optional uint32 groupID = 2;
  void clear_groupid();
  static const int kGroupIDFieldNumber = 2;
  ::google::protobuf::uint32 groupid() const;
  void set_groupid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMDGroupMemberReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 groupid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_RoomSvr_2eproto();
  friend void protobuf_AssignDesc_RoomSvr_2eproto();
  friend void protobuf_ShutdownFile_RoomSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDGroupMemberReq* default_instance_;
};
// -------------------------------------------------------------------

class CMDUserGroupInfoReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDUserGroupInfoReq) */ {
 public:
  CMDUserGroupInfoReq();
  virtual ~CMDUserGroupInfoReq();

  CMDUserGroupInfoReq(const CMDUserGroupInfoReq& from);

  inline CMDUserGroupInfoReq& operator=(const CMDUserGroupInfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDUserGroupInfoReq& default_instance();

  void Swap(CMDUserGroupInfoReq* other);

  // implements Message ----------------------------------------------

  inline CMDUserGroupInfoReq* New() const { return New(NULL); }

  CMDUserGroupInfoReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDUserGroupInfoReq& from);
  void MergeFrom(const CMDUserGroupInfoReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDUserGroupInfoReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 userID = 1;
  void clear_userid();
  static const int kUserIDFieldNumber = 1;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // optional uint32 groupID = 2;
  void clear_groupid();
  static const int kGroupIDFieldNumber = 2;
  ::google::protobuf::uint32 groupid() const;
  void set_groupid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMDUserGroupInfoReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 groupid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_RoomSvr_2eproto();
  friend void protobuf_AssignDesc_RoomSvr_2eproto();
  friend void protobuf_ShutdownFile_RoomSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDUserGroupInfoReq* default_instance_;
};
// -------------------------------------------------------------------

class CMDUserGroupInfoResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDUserGroupInfoResp) */ {
 public:
  CMDUserGroupInfoResp();
  virtual ~CMDUserGroupInfoResp();

  CMDUserGroupInfoResp(const CMDUserGroupInfoResp& from);

  inline CMDUserGroupInfoResp& operator=(const CMDUserGroupInfoResp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDUserGroupInfoResp& default_instance();

  void Swap(CMDUserGroupInfoResp* other);

  // implements Message ----------------------------------------------

  inline CMDUserGroupInfoResp* New() const { return New(NULL); }

  CMDUserGroupInfoResp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDUserGroupInfoResp& from);
  void MergeFrom(const CMDUserGroupInfoResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDUserGroupInfoResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CMDErrCode errInfo = 1;
  bool has_errinfo() const;
  void clear_errinfo();
  static const int kErrInfoFieldNumber = 1;
  const ::CMDErrCode& errinfo() const;
  ::CMDErrCode* mutable_errinfo();
  ::CMDErrCode* release_errinfo();
  void set_allocated_errinfo(::CMDErrCode* errinfo);

  // optional .CMDRoomUserInfo userInfo = 2;
  bool has_userinfo() const;
  void clear_userinfo();
  static const int kUserInfoFieldNumber = 2;
  const ::CMDRoomUserInfo& userinfo() const;
  ::CMDRoomUserInfo* mutable_userinfo();
  ::CMDRoomUserInfo* release_userinfo();
  void set_allocated_userinfo(::CMDRoomUserInfo* userinfo);

  // @@protoc_insertion_point(class_scope:CMDUserGroupInfoResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::CMDErrCode* errinfo_;
  ::CMDRoomUserInfo* userinfo_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_RoomSvr_2eproto();
  friend void protobuf_AssignDesc_RoomSvr_2eproto();
  friend void protobuf_ShutdownFile_RoomSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDUserGroupInfoResp* default_instance_;
};
// -------------------------------------------------------------------

class CMDSetGroupMsgMuteReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDSetGroupMsgMuteReq) */ {
 public:
  CMDSetGroupMsgMuteReq();
  virtual ~CMDSetGroupMsgMuteReq();

  CMDSetGroupMsgMuteReq(const CMDSetGroupMsgMuteReq& from);

  inline CMDSetGroupMsgMuteReq& operator=(const CMDSetGroupMsgMuteReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDSetGroupMsgMuteReq& default_instance();

  void Swap(CMDSetGroupMsgMuteReq* other);

  // implements Message ----------------------------------------------

  inline CMDSetGroupMsgMuteReq* New() const { return New(NULL); }

  CMDSetGroupMsgMuteReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDSetGroupMsgMuteReq& from);
  void MergeFrom(const CMDSetGroupMsgMuteReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDSetGroupMsgMuteReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 userID = 1;
  void clear_userid();
  static const int kUserIDFieldNumber = 1;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // optional uint32 groupID = 2;
  void clear_groupid();
  static const int kGroupIDFieldNumber = 2;
  ::google::protobuf::uint32 groupid() const;
  void set_groupid(::google::protobuf::uint32 value);

  // optional uint32 muteSet = 3;
  void clear_muteset();
  static const int kMuteSetFieldNumber = 3;
  ::google::protobuf::uint32 muteset() const;
  void set_muteset(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMDSetGroupMsgMuteReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 groupid_;
  ::google::protobuf::uint32 muteset_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_RoomSvr_2eproto();
  friend void protobuf_AssignDesc_RoomSvr_2eproto();
  friend void protobuf_ShutdownFile_RoomSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDSetGroupMsgMuteReq* default_instance_;
};
// -------------------------------------------------------------------

class CMDSetGroupMsgMuteResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDSetGroupMsgMuteResp) */ {
 public:
  CMDSetGroupMsgMuteResp();
  virtual ~CMDSetGroupMsgMuteResp();

  CMDSetGroupMsgMuteResp(const CMDSetGroupMsgMuteResp& from);

  inline CMDSetGroupMsgMuteResp& operator=(const CMDSetGroupMsgMuteResp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDSetGroupMsgMuteResp& default_instance();

  void Swap(CMDSetGroupMsgMuteResp* other);

  // implements Message ----------------------------------------------

  inline CMDSetGroupMsgMuteResp* New() const { return New(NULL); }

  CMDSetGroupMsgMuteResp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDSetGroupMsgMuteResp& from);
  void MergeFrom(const CMDSetGroupMsgMuteResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDSetGroupMsgMuteResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CMDErrCode errInfo = 1;
  bool has_errinfo() const;
  void clear_errinfo();
  static const int kErrInfoFieldNumber = 1;
  const ::CMDErrCode& errinfo() const;
  ::CMDErrCode* mutable_errinfo();
  ::CMDErrCode* release_errinfo();
  void set_allocated_errinfo(::CMDErrCode* errinfo);

  // optional uint32 userID = 2;
  void clear_userid();
  static const int kUserIDFieldNumber = 2;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // optional uint32 groupID = 3;
  void clear_groupid();
  static const int kGroupIDFieldNumber = 3;
  ::google::protobuf::uint32 groupid() const;
  void set_groupid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMDSetGroupMsgMuteResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::CMDErrCode* errinfo_;
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 groupid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_RoomSvr_2eproto();
  friend void protobuf_AssignDesc_RoomSvr_2eproto();
  friend void protobuf_ShutdownFile_RoomSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDSetGroupMsgMuteResp* default_instance_;
};
// -------------------------------------------------------------------

class CMDQuitGroupReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDQuitGroupReq) */ {
 public:
  CMDQuitGroupReq();
  virtual ~CMDQuitGroupReq();

  CMDQuitGroupReq(const CMDQuitGroupReq& from);

  inline CMDQuitGroupReq& operator=(const CMDQuitGroupReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDQuitGroupReq& default_instance();

  void Swap(CMDQuitGroupReq* other);

  // implements Message ----------------------------------------------

  inline CMDQuitGroupReq* New() const { return New(NULL); }

  CMDQuitGroupReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDQuitGroupReq& from);
  void MergeFrom(const CMDQuitGroupReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDQuitGroupReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 userID = 1;
  void clear_userid();
  static const int kUserIDFieldNumber = 1;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // optional uint32 groupID = 2;
  void clear_groupid();
  static const int kGroupIDFieldNumber = 2;
  ::google::protobuf::uint32 groupid() const;
  void set_groupid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMDQuitGroupReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 groupid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_RoomSvr_2eproto();
  friend void protobuf_AssignDesc_RoomSvr_2eproto();
  friend void protobuf_ShutdownFile_RoomSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDQuitGroupReq* default_instance_;
};
// -------------------------------------------------------------------

class CMDQuitGroupResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDQuitGroupResp) */ {
 public:
  CMDQuitGroupResp();
  virtual ~CMDQuitGroupResp();

  CMDQuitGroupResp(const CMDQuitGroupResp& from);

  inline CMDQuitGroupResp& operator=(const CMDQuitGroupResp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDQuitGroupResp& default_instance();

  void Swap(CMDQuitGroupResp* other);

  // implements Message ----------------------------------------------

  inline CMDQuitGroupResp* New() const { return New(NULL); }

  CMDQuitGroupResp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDQuitGroupResp& from);
  void MergeFrom(const CMDQuitGroupResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDQuitGroupResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CMDErrCode errInfo = 1;
  bool has_errinfo() const;
  void clear_errinfo();
  static const int kErrInfoFieldNumber = 1;
  const ::CMDErrCode& errinfo() const;
  ::CMDErrCode* mutable_errinfo();
  ::CMDErrCode* release_errinfo();
  void set_allocated_errinfo(::CMDErrCode* errinfo);

  // optional uint32 userID = 2;
  void clear_userid();
  static const int kUserIDFieldNumber = 2;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // optional uint32 groupID = 3;
  void clear_groupid();
  static const int kGroupIDFieldNumber = 3;
  ::google::protobuf::uint32 groupid() const;
  void set_groupid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMDQuitGroupResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::CMDErrCode* errinfo_;
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 groupid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_RoomSvr_2eproto();
  friend void protobuf_AssignDesc_RoomSvr_2eproto();
  friend void protobuf_ShutdownFile_RoomSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDQuitGroupResp* default_instance_;
};
// -------------------------------------------------------------------

class CMDSetUserPriorityReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDSetUserPriorityReq) */ {
 public:
  CMDSetUserPriorityReq();
  virtual ~CMDSetUserPriorityReq();

  CMDSetUserPriorityReq(const CMDSetUserPriorityReq& from);

  inline CMDSetUserPriorityReq& operator=(const CMDSetUserPriorityReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDSetUserPriorityReq& default_instance();

  void Swap(CMDSetUserPriorityReq* other);

  // implements Message ----------------------------------------------

  inline CMDSetUserPriorityReq* New() const { return New(NULL); }

  CMDSetUserPriorityReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDSetUserPriorityReq& from);
  void MergeFrom(const CMDSetUserPriorityReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDSetUserPriorityReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 run_userID = 1;
  void clear_run_userid();
  static const int kRunUserIDFieldNumber = 1;
  ::google::protobuf::uint32 run_userid() const;
  void set_run_userid(::google::protobuf::uint32 value);

  // optional uint32 to_userID = 2;
  void clear_to_userid();
  static const int kToUserIDFieldNumber = 2;
  ::google::protobuf::uint32 to_userid() const;
  void set_to_userid(::google::protobuf::uint32 value);

  // optional uint32 groupID = 3;
  void clear_groupid();
  static const int kGroupIDFieldNumber = 3;
  ::google::protobuf::uint32 groupid() const;
  void set_groupid(::google::protobuf::uint32 value);

  // optional uint32 roleType = 4;
  void clear_roletype();
  static const int kRoleTypeFieldNumber = 4;
  ::google::protobuf::uint32 roletype() const;
  void set_roletype(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMDSetUserPriorityReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 run_userid_;
  ::google::protobuf::uint32 to_userid_;
  ::google::protobuf::uint32 groupid_;
  ::google::protobuf::uint32 roletype_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_RoomSvr_2eproto();
  friend void protobuf_AssignDesc_RoomSvr_2eproto();
  friend void protobuf_ShutdownFile_RoomSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDSetUserPriorityReq* default_instance_;
};
// -------------------------------------------------------------------

class CMDSetUserPriorityResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDSetUserPriorityResp) */ {
 public:
  CMDSetUserPriorityResp();
  virtual ~CMDSetUserPriorityResp();

  CMDSetUserPriorityResp(const CMDSetUserPriorityResp& from);

  inline CMDSetUserPriorityResp& operator=(const CMDSetUserPriorityResp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDSetUserPriorityResp& default_instance();

  void Swap(CMDSetUserPriorityResp* other);

  // implements Message ----------------------------------------------

  inline CMDSetUserPriorityResp* New() const { return New(NULL); }

  CMDSetUserPriorityResp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDSetUserPriorityResp& from);
  void MergeFrom(const CMDSetUserPriorityResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDSetUserPriorityResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CMDErrCode errInfo = 1;
  bool has_errinfo() const;
  void clear_errinfo();
  static const int kErrInfoFieldNumber = 1;
  const ::CMDErrCode& errinfo() const;
  ::CMDErrCode* mutable_errinfo();
  ::CMDErrCode* release_errinfo();
  void set_allocated_errinfo(::CMDErrCode* errinfo);

  // optional uint32 run_userID = 2;
  void clear_run_userid();
  static const int kRunUserIDFieldNumber = 2;
  ::google::protobuf::uint32 run_userid() const;
  void set_run_userid(::google::protobuf::uint32 value);

  // optional uint32 to_userID = 3;
  void clear_to_userid();
  static const int kToUserIDFieldNumber = 3;
  ::google::protobuf::uint32 to_userid() const;
  void set_to_userid(::google::protobuf::uint32 value);

  // optional uint32 groupID = 4;
  void clear_groupid();
  static const int kGroupIDFieldNumber = 4;
  ::google::protobuf::uint32 groupid() const;
  void set_groupid(::google::protobuf::uint32 value);

  // optional uint32 roleType = 5;
  void clear_roletype();
  static const int kRoleTypeFieldNumber = 5;
  ::google::protobuf::uint32 roletype() const;
  void set_roletype(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMDSetUserPriorityResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::CMDErrCode* errinfo_;
  ::google::protobuf::uint32 run_userid_;
  ::google::protobuf::uint32 to_userid_;
  ::google::protobuf::uint32 groupid_;
  ::google::protobuf::uint32 roletype_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_RoomSvr_2eproto();
  friend void protobuf_AssignDesc_RoomSvr_2eproto();
  friend void protobuf_ShutdownFile_RoomSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDSetUserPriorityResp* default_instance_;
};
// -------------------------------------------------------------------

class CMDSetUserPriorityNoty : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDSetUserPriorityNoty) */ {
 public:
  CMDSetUserPriorityNoty();
  virtual ~CMDSetUserPriorityNoty();

  CMDSetUserPriorityNoty(const CMDSetUserPriorityNoty& from);

  inline CMDSetUserPriorityNoty& operator=(const CMDSetUserPriorityNoty& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDSetUserPriorityNoty& default_instance();

  void Swap(CMDSetUserPriorityNoty* other);

  // implements Message ----------------------------------------------

  inline CMDSetUserPriorityNoty* New() const { return New(NULL); }

  CMDSetUserPriorityNoty* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDSetUserPriorityNoty& from);
  void MergeFrom(const CMDSetUserPriorityNoty& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDSetUserPriorityNoty* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 run_userID = 1;
  void clear_run_userid();
  static const int kRunUserIDFieldNumber = 1;
  ::google::protobuf::uint32 run_userid() const;
  void set_run_userid(::google::protobuf::uint32 value);

  // optional uint32 to_userID = 2;
  void clear_to_userid();
  static const int kToUserIDFieldNumber = 2;
  ::google::protobuf::uint32 to_userid() const;
  void set_to_userid(::google::protobuf::uint32 value);

  // optional uint32 groupID = 3;
  void clear_groupid();
  static const int kGroupIDFieldNumber = 3;
  ::google::protobuf::uint32 groupid() const;
  void set_groupid(::google::protobuf::uint32 value);

  // optional uint32 roleType = 4;
  void clear_roletype();
  static const int kRoleTypeFieldNumber = 4;
  ::google::protobuf::uint32 roletype() const;
  void set_roletype(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMDSetUserPriorityNoty)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 run_userid_;
  ::google::protobuf::uint32 to_userid_;
  ::google::protobuf::uint32 groupid_;
  ::google::protobuf::uint32 roletype_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_RoomSvr_2eproto();
  friend void protobuf_AssignDesc_RoomSvr_2eproto();
  friend void protobuf_ShutdownFile_RoomSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDSetUserPriorityNoty* default_instance_;
};
// -------------------------------------------------------------------

class CMDQryGroupVisitCountReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDQryGroupVisitCountReq) */ {
 public:
  CMDQryGroupVisitCountReq();
  virtual ~CMDQryGroupVisitCountReq();

  CMDQryGroupVisitCountReq(const CMDQryGroupVisitCountReq& from);

  inline CMDQryGroupVisitCountReq& operator=(const CMDQryGroupVisitCountReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDQryGroupVisitCountReq& default_instance();

  void Swap(CMDQryGroupVisitCountReq* other);

  // implements Message ----------------------------------------------

  inline CMDQryGroupVisitCountReq* New() const { return New(NULL); }

  CMDQryGroupVisitCountReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDQryGroupVisitCountReq& from);
  void MergeFrom(const CMDQryGroupVisitCountReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDQryGroupVisitCountReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 groupID = 1;
  void clear_groupid();
  static const int kGroupIDFieldNumber = 1;
  ::google::protobuf::uint32 groupid() const;
  void set_groupid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMDQryGroupVisitCountReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 groupid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_RoomSvr_2eproto();
  friend void protobuf_AssignDesc_RoomSvr_2eproto();
  friend void protobuf_ShutdownFile_RoomSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDQryGroupVisitCountReq* default_instance_;
};
// -------------------------------------------------------------------

class CMDQryGroupVisitCountResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDQryGroupVisitCountResp) */ {
 public:
  CMDQryGroupVisitCountResp();
  virtual ~CMDQryGroupVisitCountResp();

  CMDQryGroupVisitCountResp(const CMDQryGroupVisitCountResp& from);

  inline CMDQryGroupVisitCountResp& operator=(const CMDQryGroupVisitCountResp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDQryGroupVisitCountResp& default_instance();

  void Swap(CMDQryGroupVisitCountResp* other);

  // implements Message ----------------------------------------------

  inline CMDQryGroupVisitCountResp* New() const { return New(NULL); }

  CMDQryGroupVisitCountResp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDQryGroupVisitCountResp& from);
  void MergeFrom(const CMDQryGroupVisitCountResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDQryGroupVisitCountResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 groupID = 1;
  void clear_groupid();
  static const int kGroupIDFieldNumber = 1;
  ::google::protobuf::uint32 groupid() const;
  void set_groupid(::google::protobuf::uint32 value);

  // optional uint32 visitCount = 2;
  void clear_visitcount();
  static const int kVisitCountFieldNumber = 2;
  ::google::protobuf::uint32 visitcount() const;
  void set_visitcount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMDQryGroupVisitCountResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 groupid_;
  ::google::protobuf::uint32 visitcount_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_RoomSvr_2eproto();
  friend void protobuf_AssignDesc_RoomSvr_2eproto();
  friend void protobuf_ShutdownFile_RoomSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDQryGroupVisitCountResp* default_instance_;
};
// -------------------------------------------------------------------

class CMDJoinGroupReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDJoinGroupReq) */ {
 public:
  CMDJoinGroupReq();
  virtual ~CMDJoinGroupReq();

  CMDJoinGroupReq(const CMDJoinGroupReq& from);

  inline CMDJoinGroupReq& operator=(const CMDJoinGroupReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDJoinGroupReq& default_instance();

  void Swap(CMDJoinGroupReq* other);

  // implements Message ----------------------------------------------

  inline CMDJoinGroupReq* New() const { return New(NULL); }

  CMDJoinGroupReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDJoinGroupReq& from);
  void MergeFrom(const CMDJoinGroupReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDJoinGroupReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 userID = 1;
  void clear_userid();
  static const int kUserIDFieldNumber = 1;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // optional uint32 groupID = 2;
  void clear_groupid();
  static const int kGroupIDFieldNumber = 2;
  ::google::protobuf::uint32 groupid() const;
  void set_groupid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMDJoinGroupReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 groupid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_RoomSvr_2eproto();
  friend void protobuf_AssignDesc_RoomSvr_2eproto();
  friend void protobuf_ShutdownFile_RoomSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDJoinGroupReq* default_instance_;
};
// -------------------------------------------------------------------

class CMDJoinGroupResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDJoinGroupResp) */ {
 public:
  CMDJoinGroupResp();
  virtual ~CMDJoinGroupResp();

  CMDJoinGroupResp(const CMDJoinGroupResp& from);

  inline CMDJoinGroupResp& operator=(const CMDJoinGroupResp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDJoinGroupResp& default_instance();

  void Swap(CMDJoinGroupResp* other);

  // implements Message ----------------------------------------------

  inline CMDJoinGroupResp* New() const { return New(NULL); }

  CMDJoinGroupResp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDJoinGroupResp& from);
  void MergeFrom(const CMDJoinGroupResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDJoinGroupResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CMDErrCode errInfo = 1;
  bool has_errinfo() const;
  void clear_errinfo();
  static const int kErrInfoFieldNumber = 1;
  const ::CMDErrCode& errinfo() const;
  ::CMDErrCode* mutable_errinfo();
  ::CMDErrCode* release_errinfo();
  void set_allocated_errinfo(::CMDErrCode* errinfo);

  // optional uint32 userID = 2;
  void clear_userid();
  static const int kUserIDFieldNumber = 2;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // optional uint32 groupID = 3;
  void clear_groupid();
  static const int kGroupIDFieldNumber = 3;
  ::google::protobuf::uint32 groupid() const;
  void set_groupid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMDJoinGroupResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::CMDErrCode* errinfo_;
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 groupid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_RoomSvr_2eproto();
  friend void protobuf_AssignDesc_RoomSvr_2eproto();
  friend void protobuf_ShutdownFile_RoomSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDJoinGroupResp* default_instance_;
};
// -------------------------------------------------------------------

class CMDForbidJoinGroupKillVisitor : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDForbidJoinGroupKillVisitor) */ {
 public:
  CMDForbidJoinGroupKillVisitor();
  virtual ~CMDForbidJoinGroupKillVisitor();

  CMDForbidJoinGroupKillVisitor(const CMDForbidJoinGroupKillVisitor& from);

  inline CMDForbidJoinGroupKillVisitor& operator=(const CMDForbidJoinGroupKillVisitor& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDForbidJoinGroupKillVisitor& default_instance();

  void Swap(CMDForbidJoinGroupKillVisitor* other);

  // implements Message ----------------------------------------------

  inline CMDForbidJoinGroupKillVisitor* New() const { return New(NULL); }

  CMDForbidJoinGroupKillVisitor* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDForbidJoinGroupKillVisitor& from);
  void MergeFrom(const CMDForbidJoinGroupKillVisitor& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDForbidJoinGroupKillVisitor* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 groupID = 1;
  void clear_groupid();
  static const int kGroupIDFieldNumber = 1;
  ::google::protobuf::uint32 groupid() const;
  void set_groupid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMDForbidJoinGroupKillVisitor)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 groupid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_RoomSvr_2eproto();
  friend void protobuf_AssignDesc_RoomSvr_2eproto();
  friend void protobuf_ShutdownFile_RoomSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDForbidJoinGroupKillVisitor* default_instance_;
};
// -------------------------------------------------------------------

class CMDSettingStat : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDSettingStat) */ {
 public:
  CMDSettingStat();
  virtual ~CMDSettingStat();

  CMDSettingStat(const CMDSettingStat& from);

  inline CMDSettingStat& operator=(const CMDSettingStat& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDSettingStat& default_instance();

  void Swap(CMDSettingStat* other);

  // implements Message ----------------------------------------------

  inline CMDSettingStat* New() const { return New(NULL); }

  CMDSettingStat* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDSettingStat& from);
  void MergeFrom(const CMDSettingStat& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDSettingStat* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .e_SettingType type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::e_SettingType type() const;
  void set_type(::e_SettingType value);

  // optional int32 stat = 2;
  void clear_stat();
  static const int kStatFieldNumber = 2;
  ::google::protobuf::int32 stat() const;
  void set_stat(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CMDSettingStat)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  int type_;
  ::google::protobuf::int32 stat_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_RoomSvr_2eproto();
  friend void protobuf_AssignDesc_RoomSvr_2eproto();
  friend void protobuf_ShutdownFile_RoomSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDSettingStat* default_instance_;
};
// -------------------------------------------------------------------

class CMDGroupSettingStatNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDGroupSettingStatNotify) */ {
 public:
  CMDGroupSettingStatNotify();
  virtual ~CMDGroupSettingStatNotify();

  CMDGroupSettingStatNotify(const CMDGroupSettingStatNotify& from);

  inline CMDGroupSettingStatNotify& operator=(const CMDGroupSettingStatNotify& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDGroupSettingStatNotify& default_instance();

  void Swap(CMDGroupSettingStatNotify* other);

  // implements Message ----------------------------------------------

  inline CMDGroupSettingStatNotify* New() const { return New(NULL); }

  CMDGroupSettingStatNotify* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDGroupSettingStatNotify& from);
  void MergeFrom(const CMDGroupSettingStatNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDGroupSettingStatNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 runID = 1;
  void clear_runid();
  static const int kRunIDFieldNumber = 1;
  ::google::protobuf::uint32 runid() const;
  void set_runid(::google::protobuf::uint32 value);

  // optional uint32 groupID = 2;
  void clear_groupid();
  static const int kGroupIDFieldNumber = 2;
  ::google::protobuf::uint32 groupid() const;
  void set_groupid(::google::protobuf::uint32 value);

  // repeated .CMDSettingStat list = 3;
  int list_size() const;
  void clear_list();
  static const int kListFieldNumber = 3;
  const ::CMDSettingStat& list(int index) const;
  ::CMDSettingStat* mutable_list(int index);
  ::CMDSettingStat* add_list();
  ::google::protobuf::RepeatedPtrField< ::CMDSettingStat >*
      mutable_list();
  const ::google::protobuf::RepeatedPtrField< ::CMDSettingStat >&
      list() const;

  // @@protoc_insertion_point(class_scope:CMDGroupSettingStatNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 runid_;
  ::google::protobuf::uint32 groupid_;
  ::google::protobuf::RepeatedPtrField< ::CMDSettingStat > list_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_RoomSvr_2eproto();
  friend void protobuf_AssignDesc_RoomSvr_2eproto();
  friend void protobuf_ShutdownFile_RoomSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDGroupSettingStatNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMDGroupSettingStatReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDGroupSettingStatReq) */ {
 public:
  CMDGroupSettingStatReq();
  virtual ~CMDGroupSettingStatReq();

  CMDGroupSettingStatReq(const CMDGroupSettingStatReq& from);

  inline CMDGroupSettingStatReq& operator=(const CMDGroupSettingStatReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDGroupSettingStatReq& default_instance();

  void Swap(CMDGroupSettingStatReq* other);

  // implements Message ----------------------------------------------

  inline CMDGroupSettingStatReq* New() const { return New(NULL); }

  CMDGroupSettingStatReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDGroupSettingStatReq& from);
  void MergeFrom(const CMDGroupSettingStatReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDGroupSettingStatReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 userID = 1;
  void clear_userid();
  static const int kUserIDFieldNumber = 1;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // optional uint32 groupID = 2;
  void clear_groupid();
  static const int kGroupIDFieldNumber = 2;
  ::google::protobuf::uint32 groupid() const;
  void set_groupid(::google::protobuf::uint32 value);

  // optional .e_SettingType type = 3;
  void clear_type();
  static const int kTypeFieldNumber = 3;
  ::e_SettingType type() const;
  void set_type(::e_SettingType value);

  // @@protoc_insertion_point(class_scope:CMDGroupSettingStatReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 groupid_;
  int type_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_RoomSvr_2eproto();
  friend void protobuf_AssignDesc_RoomSvr_2eproto();
  friend void protobuf_ShutdownFile_RoomSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDGroupSettingStatReq* default_instance_;
};
// -------------------------------------------------------------------

class CMDQryJoinGroupCondReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDQryJoinGroupCondReq) */ {
 public:
  CMDQryJoinGroupCondReq();
  virtual ~CMDQryJoinGroupCondReq();

  CMDQryJoinGroupCondReq(const CMDQryJoinGroupCondReq& from);

  inline CMDQryJoinGroupCondReq& operator=(const CMDQryJoinGroupCondReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDQryJoinGroupCondReq& default_instance();

  void Swap(CMDQryJoinGroupCondReq* other);

  // implements Message ----------------------------------------------

  inline CMDQryJoinGroupCondReq* New() const { return New(NULL); }

  CMDQryJoinGroupCondReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDQryJoinGroupCondReq& from);
  void MergeFrom(const CMDQryJoinGroupCondReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDQryJoinGroupCondReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 userID = 1;
  void clear_userid();
  static const int kUserIDFieldNumber = 1;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // optional uint32 groupID = 2;
  void clear_groupid();
  static const int kGroupIDFieldNumber = 2;
  ::google::protobuf::uint32 groupid() const;
  void set_groupid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMDQryJoinGroupCondReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 groupid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_RoomSvr_2eproto();
  friend void protobuf_AssignDesc_RoomSvr_2eproto();
  friend void protobuf_ShutdownFile_RoomSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDQryJoinGroupCondReq* default_instance_;
};
// -------------------------------------------------------------------

class CMDQryJoinGroupCondResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDQryJoinGroupCondResp) */ {
 public:
  CMDQryJoinGroupCondResp();
  virtual ~CMDQryJoinGroupCondResp();

  CMDQryJoinGroupCondResp(const CMDQryJoinGroupCondResp& from);

  inline CMDQryJoinGroupCondResp& operator=(const CMDQryJoinGroupCondResp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDQryJoinGroupCondResp& default_instance();

  void Swap(CMDQryJoinGroupCondResp* other);

  // implements Message ----------------------------------------------

  inline CMDQryJoinGroupCondResp* New() const { return New(NULL); }

  CMDQryJoinGroupCondResp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDQryJoinGroupCondResp& from);
  void MergeFrom(const CMDQryJoinGroupCondResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDQryJoinGroupCondResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CMDErrCode errInfo = 1;
  bool has_errinfo() const;
  void clear_errinfo();
  static const int kErrInfoFieldNumber = 1;
  const ::CMDErrCode& errinfo() const;
  ::CMDErrCode* mutable_errinfo();
  ::CMDErrCode* release_errinfo();
  void set_allocated_errinfo(::CMDErrCode* errinfo);

  // optional uint32 userID = 2;
  void clear_userid();
  static const int kUserIDFieldNumber = 2;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // optional uint32 groupID = 3;
  void clear_groupid();
  static const int kGroupIDFieldNumber = 3;
  ::google::protobuf::uint32 groupid() const;
  void set_groupid(::google::protobuf::uint32 value);

  // optional string action = 4;
  void clear_action();
  static const int kActionFieldNumber = 4;
  const ::std::string& action() const;
  void set_action(const ::std::string& value);
  void set_action(const char* value);
  void set_action(const char* value, size_t size);
  ::std::string* mutable_action();
  ::std::string* release_action();
  void set_allocated_action(::std::string* action);

  // @@protoc_insertion_point(class_scope:CMDQryJoinGroupCondResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::CMDErrCode* errinfo_;
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 groupid_;
  ::google::protobuf::internal::ArenaStringPtr action_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_RoomSvr_2eproto();
  friend void protobuf_AssignDesc_RoomSvr_2eproto();
  friend void protobuf_ShutdownFile_RoomSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDQryJoinGroupCondResp* default_instance_;
};
// -------------------------------------------------------------------

class CMDApplyJoinGroupAuthReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDApplyJoinGroupAuthReq) */ {
 public:
  CMDApplyJoinGroupAuthReq();
  virtual ~CMDApplyJoinGroupAuthReq();

  CMDApplyJoinGroupAuthReq(const CMDApplyJoinGroupAuthReq& from);

  inline CMDApplyJoinGroupAuthReq& operator=(const CMDApplyJoinGroupAuthReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDApplyJoinGroupAuthReq& default_instance();

  void Swap(CMDApplyJoinGroupAuthReq* other);

  // implements Message ----------------------------------------------

  inline CMDApplyJoinGroupAuthReq* New() const { return New(NULL); }

  CMDApplyJoinGroupAuthReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDApplyJoinGroupAuthReq& from);
  void MergeFrom(const CMDApplyJoinGroupAuthReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDApplyJoinGroupAuthReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 userID = 1;
  void clear_userid();
  static const int kUserIDFieldNumber = 1;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // optional uint32 groupID = 2;
  void clear_groupid();
  static const int kGroupIDFieldNumber = 2;
  ::google::protobuf::uint32 groupid() const;
  void set_groupid(::google::protobuf::uint32 value);

  // optional .e_UserJoinGroupAuthType authType = 3;
  void clear_authtype();
  static const int kAuthTypeFieldNumber = 3;
  ::e_UserJoinGroupAuthType authtype() const;
  void set_authtype(::e_UserJoinGroupAuthType value);

  // optional string msg = 4;
  void clear_msg();
  static const int kMsgFieldNumber = 4;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // @@protoc_insertion_point(class_scope:CMDApplyJoinGroupAuthReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 groupid_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  int authtype_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_RoomSvr_2eproto();
  friend void protobuf_AssignDesc_RoomSvr_2eproto();
  friend void protobuf_ShutdownFile_RoomSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDApplyJoinGroupAuthReq* default_instance_;
};
// -------------------------------------------------------------------

class CMDApplyJoinGroupAuthResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDApplyJoinGroupAuthResp) */ {
 public:
  CMDApplyJoinGroupAuthResp();
  virtual ~CMDApplyJoinGroupAuthResp();

  CMDApplyJoinGroupAuthResp(const CMDApplyJoinGroupAuthResp& from);

  inline CMDApplyJoinGroupAuthResp& operator=(const CMDApplyJoinGroupAuthResp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDApplyJoinGroupAuthResp& default_instance();

  void Swap(CMDApplyJoinGroupAuthResp* other);

  // implements Message ----------------------------------------------

  inline CMDApplyJoinGroupAuthResp* New() const { return New(NULL); }

  CMDApplyJoinGroupAuthResp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDApplyJoinGroupAuthResp& from);
  void MergeFrom(const CMDApplyJoinGroupAuthResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDApplyJoinGroupAuthResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 userID = 1;
  void clear_userid();
  static const int kUserIDFieldNumber = 1;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // optional uint32 groupID = 2;
  void clear_groupid();
  static const int kGroupIDFieldNumber = 2;
  ::google::protobuf::uint32 groupid() const;
  void set_groupid(::google::protobuf::uint32 value);

  // optional .CMDErrCode errInfo = 3;
  bool has_errinfo() const;
  void clear_errinfo();
  static const int kErrInfoFieldNumber = 3;
  const ::CMDErrCode& errinfo() const;
  ::CMDErrCode* mutable_errinfo();
  ::CMDErrCode* release_errinfo();
  void set_allocated_errinfo(::CMDErrCode* errinfo);

  // @@protoc_insertion_point(class_scope:CMDApplyJoinGroupAuthResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 groupid_;
  ::CMDErrCode* errinfo_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_RoomSvr_2eproto();
  friend void protobuf_AssignDesc_RoomSvr_2eproto();
  friend void protobuf_ShutdownFile_RoomSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDApplyJoinGroupAuthResp* default_instance_;
};
// -------------------------------------------------------------------

class CMDHandleJoinGroupAuthReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDHandleJoinGroupAuthReq) */ {
 public:
  CMDHandleJoinGroupAuthReq();
  virtual ~CMDHandleJoinGroupAuthReq();

  CMDHandleJoinGroupAuthReq(const CMDHandleJoinGroupAuthReq& from);

  inline CMDHandleJoinGroupAuthReq& operator=(const CMDHandleJoinGroupAuthReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDHandleJoinGroupAuthReq& default_instance();

  void Swap(CMDHandleJoinGroupAuthReq* other);

  // implements Message ----------------------------------------------

  inline CMDHandleJoinGroupAuthReq* New() const { return New(NULL); }

  CMDHandleJoinGroupAuthReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDHandleJoinGroupAuthReq& from);
  void MergeFrom(const CMDHandleJoinGroupAuthReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDHandleJoinGroupAuthReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 run_userID = 1;
  void clear_run_userid();
  static const int kRunUserIDFieldNumber = 1;
  ::google::protobuf::uint32 run_userid() const;
  void set_run_userid(::google::protobuf::uint32 value);

  // optional uint32 groupID = 2;
  void clear_groupid();
  static const int kGroupIDFieldNumber = 2;
  ::google::protobuf::uint32 groupid() const;
  void set_groupid(::google::protobuf::uint32 value);

  // optional uint32 apply_userID = 3;
  void clear_apply_userid();
  static const int kApplyUserIDFieldNumber = 3;
  ::google::protobuf::uint32 apply_userid() const;
  void set_apply_userid(::google::protobuf::uint32 value);

  // optional uint32 authID = 4;
  void clear_authid();
  static const int kAuthIDFieldNumber = 4;
  ::google::protobuf::uint32 authid() const;
  void set_authid(::google::protobuf::uint32 value);

  // optional bool agree = 5;
  void clear_agree();
  static const int kAgreeFieldNumber = 5;
  bool agree() const;
  void set_agree(bool value);

  // @@protoc_insertion_point(class_scope:CMDHandleJoinGroupAuthReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 run_userid_;
  ::google::protobuf::uint32 groupid_;
  ::google::protobuf::uint32 apply_userid_;
  ::google::protobuf::uint32 authid_;
  bool agree_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_RoomSvr_2eproto();
  friend void protobuf_AssignDesc_RoomSvr_2eproto();
  friend void protobuf_ShutdownFile_RoomSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDHandleJoinGroupAuthReq* default_instance_;
};
// -------------------------------------------------------------------

class CMDHandleJoinGroupAuthResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDHandleJoinGroupAuthResp) */ {
 public:
  CMDHandleJoinGroupAuthResp();
  virtual ~CMDHandleJoinGroupAuthResp();

  CMDHandleJoinGroupAuthResp(const CMDHandleJoinGroupAuthResp& from);

  inline CMDHandleJoinGroupAuthResp& operator=(const CMDHandleJoinGroupAuthResp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDHandleJoinGroupAuthResp& default_instance();

  void Swap(CMDHandleJoinGroupAuthResp* other);

  // implements Message ----------------------------------------------

  inline CMDHandleJoinGroupAuthResp* New() const { return New(NULL); }

  CMDHandleJoinGroupAuthResp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDHandleJoinGroupAuthResp& from);
  void MergeFrom(const CMDHandleJoinGroupAuthResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDHandleJoinGroupAuthResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 run_userID = 1;
  void clear_run_userid();
  static const int kRunUserIDFieldNumber = 1;
  ::google::protobuf::uint32 run_userid() const;
  void set_run_userid(::google::protobuf::uint32 value);

  // optional uint32 groupID = 2;
  void clear_groupid();
  static const int kGroupIDFieldNumber = 2;
  ::google::protobuf::uint32 groupid() const;
  void set_groupid(::google::protobuf::uint32 value);

  // optional uint32 apply_userID = 3;
  void clear_apply_userid();
  static const int kApplyUserIDFieldNumber = 3;
  ::google::protobuf::uint32 apply_userid() const;
  void set_apply_userid(::google::protobuf::uint32 value);

  // optional uint32 authID = 4;
  void clear_authid();
  static const int kAuthIDFieldNumber = 4;
  ::google::protobuf::uint32 authid() const;
  void set_authid(::google::protobuf::uint32 value);

  // optional bool agree = 5;
  void clear_agree();
  static const int kAgreeFieldNumber = 5;
  bool agree() const;
  void set_agree(bool value);

  // optional .CMDErrCode errInfo = 6;
  bool has_errinfo() const;
  void clear_errinfo();
  static const int kErrInfoFieldNumber = 6;
  const ::CMDErrCode& errinfo() const;
  ::CMDErrCode* mutable_errinfo();
  ::CMDErrCode* release_errinfo();
  void set_allocated_errinfo(::CMDErrCode* errinfo);

  // @@protoc_insertion_point(class_scope:CMDHandleJoinGroupAuthResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 run_userid_;
  ::google::protobuf::uint32 groupid_;
  ::google::protobuf::uint32 apply_userid_;
  ::google::protobuf::uint32 authid_;
  ::CMDErrCode* errinfo_;
  bool agree_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_RoomSvr_2eproto();
  friend void protobuf_AssignDesc_RoomSvr_2eproto();
  friend void protobuf_ShutdownFile_RoomSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDHandleJoinGroupAuthResp* default_instance_;
};
// -------------------------------------------------------------------

class CMDSetMicModeReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDSetMicModeReq) */ {
 public:
  CMDSetMicModeReq();
  virtual ~CMDSetMicModeReq();

  CMDSetMicModeReq(const CMDSetMicModeReq& from);

  inline CMDSetMicModeReq& operator=(const CMDSetMicModeReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDSetMicModeReq& default_instance();

  void Swap(CMDSetMicModeReq* other);

  // implements Message ----------------------------------------------

  inline CMDSetMicModeReq* New() const { return New(NULL); }

  CMDSetMicModeReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDSetMicModeReq& from);
  void MergeFrom(const CMDSetMicModeReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDSetMicModeReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 vcbid = 1;
  void clear_vcbid();
  static const int kVcbidFieldNumber = 1;
  ::google::protobuf::uint32 vcbid() const;
  void set_vcbid(::google::protobuf::uint32 value);

  // optional uint32 userid = 2;
  void clear_userid();
  static const int kUseridFieldNumber = 2;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // optional .e_MicMode micmode = 3;
  void clear_micmode();
  static const int kMicmodeFieldNumber = 3;
  ::e_MicMode micmode() const;
  void set_micmode(::e_MicMode value);

  // @@protoc_insertion_point(class_scope:CMDSetMicModeReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 vcbid_;
  ::google::protobuf::uint32 userid_;
  int micmode_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_RoomSvr_2eproto();
  friend void protobuf_AssignDesc_RoomSvr_2eproto();
  friend void protobuf_ShutdownFile_RoomSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDSetMicModeReq* default_instance_;
};
// -------------------------------------------------------------------

class CMDSetMicModeResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDSetMicModeResp) */ {
 public:
  CMDSetMicModeResp();
  virtual ~CMDSetMicModeResp();

  CMDSetMicModeResp(const CMDSetMicModeResp& from);

  inline CMDSetMicModeResp& operator=(const CMDSetMicModeResp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDSetMicModeResp& default_instance();

  void Swap(CMDSetMicModeResp* other);

  // implements Message ----------------------------------------------

  inline CMDSetMicModeResp* New() const { return New(NULL); }

  CMDSetMicModeResp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDSetMicModeResp& from);
  void MergeFrom(const CMDSetMicModeResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDSetMicModeResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 vcbid = 1;
  void clear_vcbid();
  static const int kVcbidFieldNumber = 1;
  ::google::protobuf::uint32 vcbid() const;
  void set_vcbid(::google::protobuf::uint32 value);

  // optional uint32 userid = 2;
  void clear_userid();
  static const int kUseridFieldNumber = 2;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // optional .CMDErrCode errInfo = 3;
  bool has_errinfo() const;
  void clear_errinfo();
  static const int kErrInfoFieldNumber = 3;
  const ::CMDErrCode& errinfo() const;
  ::CMDErrCode* mutable_errinfo();
  ::CMDErrCode* release_errinfo();
  void set_allocated_errinfo(::CMDErrCode* errinfo);

  // @@protoc_insertion_point(class_scope:CMDSetMicModeResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 vcbid_;
  ::google::protobuf::uint32 userid_;
  ::CMDErrCode* errinfo_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_RoomSvr_2eproto();
  friend void protobuf_AssignDesc_RoomSvr_2eproto();
  friend void protobuf_ShutdownFile_RoomSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDSetMicModeResp* default_instance_;
};
// -------------------------------------------------------------------

class CMDSetMicModeNoty : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDSetMicModeNoty) */ {
 public:
  CMDSetMicModeNoty();
  virtual ~CMDSetMicModeNoty();

  CMDSetMicModeNoty(const CMDSetMicModeNoty& from);

  inline CMDSetMicModeNoty& operator=(const CMDSetMicModeNoty& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDSetMicModeNoty& default_instance();

  void Swap(CMDSetMicModeNoty* other);

  // implements Message ----------------------------------------------

  inline CMDSetMicModeNoty* New() const { return New(NULL); }

  CMDSetMicModeNoty* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDSetMicModeNoty& from);
  void MergeFrom(const CMDSetMicModeNoty& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDSetMicModeNoty* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 vcbid = 1;
  void clear_vcbid();
  static const int kVcbidFieldNumber = 1;
  ::google::protobuf::uint32 vcbid() const;
  void set_vcbid(::google::protobuf::uint32 value);

  // optional uint32 userid = 2;
  void clear_userid();
  static const int kUseridFieldNumber = 2;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // optional .e_MicMode micmode = 3;
  void clear_micmode();
  static const int kMicmodeFieldNumber = 3;
  ::e_MicMode micmode() const;
  void set_micmode(::e_MicMode value);

  // @@protoc_insertion_point(class_scope:CMDSetMicModeNoty)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 vcbid_;
  ::google::protobuf::uint32 userid_;
  int micmode_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_RoomSvr_2eproto();
  friend void protobuf_AssignDesc_RoomSvr_2eproto();
  friend void protobuf_ShutdownFile_RoomSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDSetMicModeNoty* default_instance_;
};
// -------------------------------------------------------------------

class CMDSetMicPosStatusReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDSetMicPosStatusReq) */ {
 public:
  CMDSetMicPosStatusReq();
  virtual ~CMDSetMicPosStatusReq();

  CMDSetMicPosStatusReq(const CMDSetMicPosStatusReq& from);

  inline CMDSetMicPosStatusReq& operator=(const CMDSetMicPosStatusReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDSetMicPosStatusReq& default_instance();

  void Swap(CMDSetMicPosStatusReq* other);

  // implements Message ----------------------------------------------

  inline CMDSetMicPosStatusReq* New() const { return New(NULL); }

  CMDSetMicPosStatusReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDSetMicPosStatusReq& from);
  void MergeFrom(const CMDSetMicPosStatusReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDSetMicPosStatusReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 vcbid = 1;
  void clear_vcbid();
  static const int kVcbidFieldNumber = 1;
  ::google::protobuf::uint32 vcbid() const;
  void set_vcbid(::google::protobuf::uint32 value);

  // optional uint32 userid = 2;
  void clear_userid();
  static const int kUseridFieldNumber = 2;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // optional uint32 index = 3;
  void clear_index();
  static const int kIndexFieldNumber = 3;
  ::google::protobuf::uint32 index() const;
  void set_index(::google::protobuf::uint32 value);

  // optional uint32 status = 4;
  void clear_status();
  static const int kStatusFieldNumber = 4;
  ::google::protobuf::uint32 status() const;
  void set_status(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMDSetMicPosStatusReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 vcbid_;
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 index_;
  ::google::protobuf::uint32 status_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_RoomSvr_2eproto();
  friend void protobuf_AssignDesc_RoomSvr_2eproto();
  friend void protobuf_ShutdownFile_RoomSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDSetMicPosStatusReq* default_instance_;
};
// -------------------------------------------------------------------

class CMDSetMicPosStatusResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDSetMicPosStatusResp) */ {
 public:
  CMDSetMicPosStatusResp();
  virtual ~CMDSetMicPosStatusResp();

  CMDSetMicPosStatusResp(const CMDSetMicPosStatusResp& from);

  inline CMDSetMicPosStatusResp& operator=(const CMDSetMicPosStatusResp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDSetMicPosStatusResp& default_instance();

  void Swap(CMDSetMicPosStatusResp* other);

  // implements Message ----------------------------------------------

  inline CMDSetMicPosStatusResp* New() const { return New(NULL); }

  CMDSetMicPosStatusResp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDSetMicPosStatusResp& from);
  void MergeFrom(const CMDSetMicPosStatusResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDSetMicPosStatusResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 vcbid = 1;
  void clear_vcbid();
  static const int kVcbidFieldNumber = 1;
  ::google::protobuf::uint32 vcbid() const;
  void set_vcbid(::google::protobuf::uint32 value);

  // optional uint32 userid = 2;
  void clear_userid();
  static const int kUseridFieldNumber = 2;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // optional .CMDErrCode errInfo = 3;
  bool has_errinfo() const;
  void clear_errinfo();
  static const int kErrInfoFieldNumber = 3;
  const ::CMDErrCode& errinfo() const;
  ::CMDErrCode* mutable_errinfo();
  ::CMDErrCode* release_errinfo();
  void set_allocated_errinfo(::CMDErrCode* errinfo);

  // @@protoc_insertion_point(class_scope:CMDSetMicPosStatusResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 vcbid_;
  ::google::protobuf::uint32 userid_;
  ::CMDErrCode* errinfo_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_RoomSvr_2eproto();
  friend void protobuf_AssignDesc_RoomSvr_2eproto();
  friend void protobuf_ShutdownFile_RoomSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDSetMicPosStatusResp* default_instance_;
};
// -------------------------------------------------------------------

class CMDSetMicPosStatusNoty : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDSetMicPosStatusNoty) */ {
 public:
  CMDSetMicPosStatusNoty();
  virtual ~CMDSetMicPosStatusNoty();

  CMDSetMicPosStatusNoty(const CMDSetMicPosStatusNoty& from);

  inline CMDSetMicPosStatusNoty& operator=(const CMDSetMicPosStatusNoty& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDSetMicPosStatusNoty& default_instance();

  void Swap(CMDSetMicPosStatusNoty* other);

  // implements Message ----------------------------------------------

  inline CMDSetMicPosStatusNoty* New() const { return New(NULL); }

  CMDSetMicPosStatusNoty* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDSetMicPosStatusNoty& from);
  void MergeFrom(const CMDSetMicPosStatusNoty& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDSetMicPosStatusNoty* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 vcbid = 1;
  void clear_vcbid();
  static const int kVcbidFieldNumber = 1;
  ::google::protobuf::uint32 vcbid() const;
  void set_vcbid(::google::protobuf::uint32 value);

  // optional uint32 userid = 2;
  void clear_userid();
  static const int kUseridFieldNumber = 2;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // optional uint32 index = 3;
  void clear_index();
  static const int kIndexFieldNumber = 3;
  ::google::protobuf::uint32 index() const;
  void set_index(::google::protobuf::uint32 value);

  // optional uint32 status = 4;
  void clear_status();
  static const int kStatusFieldNumber = 4;
  ::google::protobuf::uint32 status() const;
  void set_status(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMDSetMicPosStatusNoty)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 vcbid_;
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 index_;
  ::google::protobuf::uint32 status_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_RoomSvr_2eproto();
  friend void protobuf_AssignDesc_RoomSvr_2eproto();
  friend void protobuf_ShutdownFile_RoomSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDSetMicPosStatusNoty* default_instance_;
};
// -------------------------------------------------------------------

class CMDRoomInfoExtReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDRoomInfoExtReq) */ {
 public:
  CMDRoomInfoExtReq();
  virtual ~CMDRoomInfoExtReq();

  CMDRoomInfoExtReq(const CMDRoomInfoExtReq& from);

  inline CMDRoomInfoExtReq& operator=(const CMDRoomInfoExtReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDRoomInfoExtReq& default_instance();

  void Swap(CMDRoomInfoExtReq* other);

  // implements Message ----------------------------------------------

  inline CMDRoomInfoExtReq* New() const { return New(NULL); }

  CMDRoomInfoExtReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDRoomInfoExtReq& from);
  void MergeFrom(const CMDRoomInfoExtReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDRoomInfoExtReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 vcbid = 1;
  void clear_vcbid();
  static const int kVcbidFieldNumber = 1;
  ::google::protobuf::int32 vcbid() const;
  void set_vcbid(::google::protobuf::int32 value);

  // optional int32 userid = 2;
  void clear_userid();
  static const int kUseridFieldNumber = 2;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CMDRoomInfoExtReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 vcbid_;
  ::google::protobuf::int32 userid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_RoomSvr_2eproto();
  friend void protobuf_AssignDesc_RoomSvr_2eproto();
  friend void protobuf_ShutdownFile_RoomSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDRoomInfoExtReq* default_instance_;
};
// -------------------------------------------------------------------

class CMDRoomInfoExtResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDRoomInfoExtResp) */ {
 public:
  CMDRoomInfoExtResp();
  virtual ~CMDRoomInfoExtResp();

  CMDRoomInfoExtResp(const CMDRoomInfoExtResp& from);

  inline CMDRoomInfoExtResp& operator=(const CMDRoomInfoExtResp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDRoomInfoExtResp& default_instance();

  void Swap(CMDRoomInfoExtResp* other);

  // implements Message ----------------------------------------------

  inline CMDRoomInfoExtResp* New() const { return New(NULL); }

  CMDRoomInfoExtResp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDRoomInfoExtResp& from);
  void MergeFrom(const CMDRoomInfoExtResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDRoomInfoExtResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 vcbid = 1;
  void clear_vcbid();
  static const int kVcbidFieldNumber = 1;
  ::google::protobuf::int32 vcbid() const;
  void set_vcbid(::google::protobuf::int32 value);

  // optional .e_MicMode micmode = 2;
  void clear_micmode();
  static const int kMicmodeFieldNumber = 2;
  ::e_MicMode micmode() const;
  void set_micmode(::e_MicMode value);

  // optional string name = 3;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string icon = 4;
  void clear_icon();
  static const int kIconFieldNumber = 4;
  const ::std::string& icon() const;
  void set_icon(const ::std::string& value);
  void set_icon(const char* value);
  void set_icon(const char* value, size_t size);
  ::std::string* mutable_icon();
  ::std::string* release_icon();
  void set_allocated_icon(::std::string* icon);

  // optional int32 micsec = 5;
  void clear_micsec();
  static const int kMicsecFieldNumber = 5;
  ::google::protobuf::int32 micsec() const;
  void set_micsec(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CMDRoomInfoExtResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 vcbid_;
  int micmode_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr icon_;
  ::google::protobuf::int32 micsec_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_RoomSvr_2eproto();
  friend void protobuf_AssignDesc_RoomSvr_2eproto();
  friend void protobuf_ShutdownFile_RoomSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDRoomInfoExtResp* default_instance_;
};
// -------------------------------------------------------------------

class CMDInviteOnMic : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDInviteOnMic) */ {
 public:
  CMDInviteOnMic();
  virtual ~CMDInviteOnMic();

  CMDInviteOnMic(const CMDInviteOnMic& from);

  inline CMDInviteOnMic& operator=(const CMDInviteOnMic& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDInviteOnMic& default_instance();

  void Swap(CMDInviteOnMic* other);

  // implements Message ----------------------------------------------

  inline CMDInviteOnMic* New() const { return New(NULL); }

  CMDInviteOnMic* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDInviteOnMic& from);
  void MergeFrom(const CMDInviteOnMic& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDInviteOnMic* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 runuserid = 1;
  void clear_runuserid();
  static const int kRunuseridFieldNumber = 1;
  ::google::protobuf::int32 runuserid() const;
  void set_runuserid(::google::protobuf::int32 value);

  // optional int32 touserid = 2;
  void clear_touserid();
  static const int kTouseridFieldNumber = 2;
  ::google::protobuf::int32 touserid() const;
  void set_touserid(::google::protobuf::int32 value);

  // optional int32 optype = 3;
  void clear_optype();
  static const int kOptypeFieldNumber = 3;
  ::google::protobuf::int32 optype() const;
  void set_optype(::google::protobuf::int32 value);

  // optional int32 vcbid = 4;
  void clear_vcbid();
  static const int kVcbidFieldNumber = 4;
  ::google::protobuf::int32 vcbid() const;
  void set_vcbid(::google::protobuf::int32 value);

  // optional int32 sessionid = 5;
  void clear_sessionid();
  static const int kSessionidFieldNumber = 5;
  ::google::protobuf::int32 sessionid() const;
  void set_sessionid(::google::protobuf::int32 value);

  // optional .CMDErrCode errInfo = 6;
  bool has_errinfo() const;
  void clear_errinfo();
  static const int kErrInfoFieldNumber = 6;
  const ::CMDErrCode& errinfo() const;
  ::CMDErrCode* mutable_errinfo();
  ::CMDErrCode* release_errinfo();
  void set_allocated_errinfo(::CMDErrCode* errinfo);

  // optional int32 intimacy = 7;
  void clear_intimacy();
  static const int kIntimacyFieldNumber = 7;
  ::google::protobuf::int32 intimacy() const;
  void set_intimacy(::google::protobuf::int32 value);

  // optional int32 threshold = 8;
  void clear_threshold();
  static const int kThresholdFieldNumber = 8;
  ::google::protobuf::int32 threshold() const;
  void set_threshold(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CMDInviteOnMic)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 runuserid_;
  ::google::protobuf::int32 touserid_;
  ::google::protobuf::int32 optype_;
  ::google::protobuf::int32 vcbid_;
  ::CMDErrCode* errinfo_;
  ::google::protobuf::int32 sessionid_;
  ::google::protobuf::int32 intimacy_;
  ::google::protobuf::int32 threshold_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_RoomSvr_2eproto();
  friend void protobuf_AssignDesc_RoomSvr_2eproto();
  friend void protobuf_ShutdownFile_RoomSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDInviteOnMic* default_instance_;
};
// -------------------------------------------------------------------

class CMDGroupUserSettingReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDGroupUserSettingReq) */ {
 public:
  CMDGroupUserSettingReq();
  virtual ~CMDGroupUserSettingReq();

  CMDGroupUserSettingReq(const CMDGroupUserSettingReq& from);

  inline CMDGroupUserSettingReq& operator=(const CMDGroupUserSettingReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDGroupUserSettingReq& default_instance();

  void Swap(CMDGroupUserSettingReq* other);

  // implements Message ----------------------------------------------

  inline CMDGroupUserSettingReq* New() const { return New(NULL); }

  CMDGroupUserSettingReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDGroupUserSettingReq& from);
  void MergeFrom(const CMDGroupUserSettingReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDGroupUserSettingReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 groupid = 1;
  void clear_groupid();
  static const int kGroupidFieldNumber = 1;
  ::google::protobuf::uint32 groupid() const;
  void set_groupid(::google::protobuf::uint32 value);

  // optional uint32 userid = 2;
  void clear_userid();
  static const int kUseridFieldNumber = 2;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // optional .CMDUInt32 PChatThreshold = 3;
  bool has_pchatthreshold() const;
  void clear_pchatthreshold();
  static const int kPChatThresholdFieldNumber = 3;
  const ::CMDUInt32& pchatthreshold() const;
  ::CMDUInt32* mutable_pchatthreshold();
  ::CMDUInt32* release_pchatthreshold();
  void set_allocated_pchatthreshold(::CMDUInt32* pchatthreshold);

  // @@protoc_insertion_point(class_scope:CMDGroupUserSettingReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 groupid_;
  ::google::protobuf::uint32 userid_;
  ::CMDUInt32* pchatthreshold_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_RoomSvr_2eproto();
  friend void protobuf_AssignDesc_RoomSvr_2eproto();
  friend void protobuf_ShutdownFile_RoomSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDGroupUserSettingReq* default_instance_;
};
// -------------------------------------------------------------------

class CMDGroupUserSettingResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDGroupUserSettingResp) */ {
 public:
  CMDGroupUserSettingResp();
  virtual ~CMDGroupUserSettingResp();

  CMDGroupUserSettingResp(const CMDGroupUserSettingResp& from);

  inline CMDGroupUserSettingResp& operator=(const CMDGroupUserSettingResp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDGroupUserSettingResp& default_instance();

  void Swap(CMDGroupUserSettingResp* other);

  // implements Message ----------------------------------------------

  inline CMDGroupUserSettingResp* New() const { return New(NULL); }

  CMDGroupUserSettingResp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDGroupUserSettingResp& from);
  void MergeFrom(const CMDGroupUserSettingResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDGroupUserSettingResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CMDErrCode errInfo = 1;
  bool has_errinfo() const;
  void clear_errinfo();
  static const int kErrInfoFieldNumber = 1;
  const ::CMDErrCode& errinfo() const;
  ::CMDErrCode* mutable_errinfo();
  ::CMDErrCode* release_errinfo();
  void set_allocated_errinfo(::CMDErrCode* errinfo);

  // optional uint32 groupid = 2;
  void clear_groupid();
  static const int kGroupidFieldNumber = 2;
  ::google::protobuf::uint32 groupid() const;
  void set_groupid(::google::protobuf::uint32 value);

  // optional uint32 userid = 3;
  void clear_userid();
  static const int kUseridFieldNumber = 3;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMDGroupUserSettingResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::CMDErrCode* errinfo_;
  ::google::protobuf::uint32 groupid_;
  ::google::protobuf::uint32 userid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_RoomSvr_2eproto();
  friend void protobuf_AssignDesc_RoomSvr_2eproto();
  friend void protobuf_ShutdownFile_RoomSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDGroupUserSettingResp* default_instance_;
};
// -------------------------------------------------------------------

class CMDAuthStateNoty : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDAuthStateNoty) */ {
 public:
  CMDAuthStateNoty();
  virtual ~CMDAuthStateNoty();

  CMDAuthStateNoty(const CMDAuthStateNoty& from);

  inline CMDAuthStateNoty& operator=(const CMDAuthStateNoty& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDAuthStateNoty& default_instance();

  void Swap(CMDAuthStateNoty* other);

  // implements Message ----------------------------------------------

  inline CMDAuthStateNoty* New() const { return New(NULL); }

  CMDAuthStateNoty* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDAuthStateNoty& from);
  void MergeFrom(const CMDAuthStateNoty& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDAuthStateNoty* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 userid = 1;
  void clear_userid();
  static const int kUseridFieldNumber = 1;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // optional uint32 groupid = 2;
  void clear_groupid();
  static const int kGroupidFieldNumber = 2;
  ::google::protobuf::uint32 groupid() const;
  void set_groupid(::google::protobuf::uint32 value);

  // optional uint32 authState = 3;
  void clear_authstate();
  static const int kAuthStateFieldNumber = 3;
  ::google::protobuf::uint32 authstate() const;
  void set_authstate(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMDAuthStateNoty)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 groupid_;
  ::google::protobuf::uint32 authstate_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_RoomSvr_2eproto();
  friend void protobuf_AssignDesc_RoomSvr_2eproto();
  friend void protobuf_ShutdownFile_RoomSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDAuthStateNoty* default_instance_;
};
// -------------------------------------------------------------------

class CMDAuthReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDAuthReq) */ {
 public:
  CMDAuthReq();
  virtual ~CMDAuthReq();

  CMDAuthReq(const CMDAuthReq& from);

  inline CMDAuthReq& operator=(const CMDAuthReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDAuthReq& default_instance();

  void Swap(CMDAuthReq* other);

  // implements Message ----------------------------------------------

  inline CMDAuthReq* New() const { return New(NULL); }

  CMDAuthReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDAuthReq& from);
  void MergeFrom(const CMDAuthReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDAuthReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 userid = 1;
  void clear_userid();
  static const int kUseridFieldNumber = 1;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // optional uint32 vcbid = 2;
  void clear_vcbid();
  static const int kVcbidFieldNumber = 2;
  ::google::protobuf::uint32 vcbid() const;
  void set_vcbid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMDAuthReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 vcbid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_RoomSvr_2eproto();
  friend void protobuf_AssignDesc_RoomSvr_2eproto();
  friend void protobuf_ShutdownFile_RoomSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDAuthReq* default_instance_;
};
// -------------------------------------------------------------------

class CMDAuthResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDAuthResp) */ {
 public:
  CMDAuthResp();
  virtual ~CMDAuthResp();

  CMDAuthResp(const CMDAuthResp& from);

  inline CMDAuthResp& operator=(const CMDAuthResp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDAuthResp& default_instance();

  void Swap(CMDAuthResp* other);

  // implements Message ----------------------------------------------

  inline CMDAuthResp* New() const { return New(NULL); }

  CMDAuthResp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDAuthResp& from);
  void MergeFrom(const CMDAuthResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDAuthResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 userid = 1;
  void clear_userid();
  static const int kUseridFieldNumber = 1;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // optional uint32 vcbid = 2;
  void clear_vcbid();
  static const int kVcbidFieldNumber = 2;
  ::google::protobuf::uint32 vcbid() const;
  void set_vcbid(::google::protobuf::uint32 value);

  // optional string appid = 3;
  void clear_appid();
  static const int kAppidFieldNumber = 3;
  const ::std::string& appid() const;
  void set_appid(const ::std::string& value);
  void set_appid(const char* value);
  void set_appid(const char* value, size_t size);
  ::std::string* mutable_appid();
  ::std::string* release_appid();
  void set_allocated_appid(::std::string* appid);

  // optional string recvkey = 4;
  void clear_recvkey();
  static const int kRecvkeyFieldNumber = 4;
  const ::std::string& recvkey() const;
  void set_recvkey(const ::std::string& value);
  void set_recvkey(const char* value);
  void set_recvkey(const char* value, size_t size);
  ::std::string* mutable_recvkey();
  ::std::string* release_recvkey();
  void set_allocated_recvkey(::std::string* recvkey);

  // optional string sendkey = 5;
  void clear_sendkey();
  static const int kSendkeyFieldNumber = 5;
  const ::std::string& sendkey() const;
  void set_sendkey(const ::std::string& value);
  void set_sendkey(const char* value);
  void set_sendkey(const char* value, size_t size);
  ::std::string* mutable_sendkey();
  ::std::string* release_sendkey();
  void set_allocated_sendkey(::std::string* sendkey);

  // optional uint32 errcode = 6;
  void clear_errcode();
  static const int kErrcodeFieldNumber = 6;
  ::google::protobuf::uint32 errcode() const;
  void set_errcode(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMDAuthResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 vcbid_;
  ::google::protobuf::internal::ArenaStringPtr appid_;
  ::google::protobuf::internal::ArenaStringPtr recvkey_;
  ::google::protobuf::internal::ArenaStringPtr sendkey_;
  ::google::protobuf::uint32 errcode_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_RoomSvr_2eproto();
  friend void protobuf_AssignDesc_RoomSvr_2eproto();
  friend void protobuf_ShutdownFile_RoomSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDAuthResp* default_instance_;
};
// -------------------------------------------------------------------

class CMDGroupOnlineMemberList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDGroupOnlineMemberList) */ {
 public:
  CMDGroupOnlineMemberList();
  virtual ~CMDGroupOnlineMemberList();

  CMDGroupOnlineMemberList(const CMDGroupOnlineMemberList& from);

  inline CMDGroupOnlineMemberList& operator=(const CMDGroupOnlineMemberList& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDGroupOnlineMemberList& default_instance();

  void Swap(CMDGroupOnlineMemberList* other);

  // implements Message ----------------------------------------------

  inline CMDGroupOnlineMemberList* New() const { return New(NULL); }

  CMDGroupOnlineMemberList* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDGroupOnlineMemberList& from);
  void MergeFrom(const CMDGroupOnlineMemberList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDGroupOnlineMemberList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 groupid = 1;
  void clear_groupid();
  static const int kGroupidFieldNumber = 1;
  ::google::protobuf::uint32 groupid() const;
  void set_groupid(::google::protobuf::uint32 value);

  // repeated uint32 list = 2;
  int list_size() const;
  void clear_list();
  static const int kListFieldNumber = 2;
  ::google::protobuf::uint32 list(int index) const;
  void set_list(int index, ::google::protobuf::uint32 value);
  void add_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_list();

  // @@protoc_insertion_point(class_scope:CMDGroupOnlineMemberList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > list_;
  mutable int _list_cached_byte_size_;
  ::google::protobuf::uint32 groupid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_RoomSvr_2eproto();
  friend void protobuf_AssignDesc_RoomSvr_2eproto();
  friend void protobuf_ShutdownFile_RoomSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDGroupOnlineMemberList* default_instance_;
};
// -------------------------------------------------------------------

class CMDMemberEnterGroup : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDMemberEnterGroup) */ {
 public:
  CMDMemberEnterGroup();
  virtual ~CMDMemberEnterGroup();

  CMDMemberEnterGroup(const CMDMemberEnterGroup& from);

  inline CMDMemberEnterGroup& operator=(const CMDMemberEnterGroup& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDMemberEnterGroup& default_instance();

  void Swap(CMDMemberEnterGroup* other);

  // implements Message ----------------------------------------------

  inline CMDMemberEnterGroup* New() const { return New(NULL); }

  CMDMemberEnterGroup* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDMemberEnterGroup& from);
  void MergeFrom(const CMDMemberEnterGroup& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDMemberEnterGroup* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 groupid = 1;
  void clear_groupid();
  static const int kGroupidFieldNumber = 1;
  ::google::protobuf::uint32 groupid() const;
  void set_groupid(::google::protobuf::uint32 value);

  // optional uint32 userid = 2;
  void clear_userid();
  static const int kUseridFieldNumber = 2;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMDMemberEnterGroup)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 groupid_;
  ::google::protobuf::uint32 userid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_RoomSvr_2eproto();
  friend void protobuf_AssignDesc_RoomSvr_2eproto();
  friend void protobuf_ShutdownFile_RoomSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDMemberEnterGroup* default_instance_;
};
// -------------------------------------------------------------------

class CMDMemberExitGroup : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDMemberExitGroup) */ {
 public:
  CMDMemberExitGroup();
  virtual ~CMDMemberExitGroup();

  CMDMemberExitGroup(const CMDMemberExitGroup& from);

  inline CMDMemberExitGroup& operator=(const CMDMemberExitGroup& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDMemberExitGroup& default_instance();

  void Swap(CMDMemberExitGroup* other);

  // implements Message ----------------------------------------------

  inline CMDMemberExitGroup* New() const { return New(NULL); }

  CMDMemberExitGroup* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDMemberExitGroup& from);
  void MergeFrom(const CMDMemberExitGroup& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDMemberExitGroup* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 groupid = 1;
  void clear_groupid();
  static const int kGroupidFieldNumber = 1;
  ::google::protobuf::uint32 groupid() const;
  void set_groupid(::google::protobuf::uint32 value);

  // optional uint32 userid = 2;
  void clear_userid();
  static const int kUseridFieldNumber = 2;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMDMemberExitGroup)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 groupid_;
  ::google::protobuf::uint32 userid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_RoomSvr_2eproto();
  friend void protobuf_AssignDesc_RoomSvr_2eproto();
  friend void protobuf_ShutdownFile_RoomSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDMemberExitGroup* default_instance_;
};
// -------------------------------------------------------------------

class CMDForbidUserChat : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDForbidUserChat) */ {
 public:
  CMDForbidUserChat();
  virtual ~CMDForbidUserChat();

  CMDForbidUserChat(const CMDForbidUserChat& from);

  inline CMDForbidUserChat& operator=(const CMDForbidUserChat& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDForbidUserChat& default_instance();

  void Swap(CMDForbidUserChat* other);

  // implements Message ----------------------------------------------

  inline CMDForbidUserChat* New() const { return New(NULL); }

  CMDForbidUserChat* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDForbidUserChat& from);
  void MergeFrom(const CMDForbidUserChat& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDForbidUserChat* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 groupid = 1;
  void clear_groupid();
  static const int kGroupidFieldNumber = 1;
  ::google::protobuf::uint32 groupid() const;
  void set_groupid(::google::protobuf::uint32 value);

  // optional uint32 userid = 2;
  void clear_userid();
  static const int kUseridFieldNumber = 2;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // optional uint32 toid = 3;
  void clear_toid();
  static const int kToidFieldNumber = 3;
  ::google::protobuf::uint32 toid() const;
  void set_toid(::google::protobuf::uint32 value);

  // optional uint32 status = 4;
  void clear_status();
  static const int kStatusFieldNumber = 4;
  ::google::protobuf::uint32 status() const;
  void set_status(::google::protobuf::uint32 value);

  // optional uint32 errid = 5;
  void clear_errid();
  static const int kErridFieldNumber = 5;
  ::google::protobuf::uint32 errid() const;
  void set_errid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMDForbidUserChat)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 groupid_;
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 toid_;
  ::google::protobuf::uint32 status_;
  ::google::protobuf::uint32 errid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_RoomSvr_2eproto();
  friend void protobuf_AssignDesc_RoomSvr_2eproto();
  friend void protobuf_ShutdownFile_RoomSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDForbidUserChat* default_instance_;
};
// -------------------------------------------------------------------

class CMDCourseFinish : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDCourseFinish) */ {
 public:
  CMDCourseFinish();
  virtual ~CMDCourseFinish();

  CMDCourseFinish(const CMDCourseFinish& from);

  inline CMDCourseFinish& operator=(const CMDCourseFinish& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDCourseFinish& default_instance();

  void Swap(CMDCourseFinish* other);

  // implements Message ----------------------------------------------

  inline CMDCourseFinish* New() const { return New(NULL); }

  CMDCourseFinish* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDCourseFinish& from);
  void MergeFrom(const CMDCourseFinish& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDCourseFinish* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 groupid = 1;
  void clear_groupid();
  static const int kGroupidFieldNumber = 1;
  ::google::protobuf::uint32 groupid() const;
  void set_groupid(::google::protobuf::uint32 value);

  // optional uint32 userid = 2;
  void clear_userid();
  static const int kUseridFieldNumber = 2;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMDCourseFinish)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 groupid_;
  ::google::protobuf::uint32 userid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_RoomSvr_2eproto();
  friend void protobuf_AssignDesc_RoomSvr_2eproto();
  friend void protobuf_ShutdownFile_RoomSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDCourseFinish* default_instance_;
};
// -------------------------------------------------------------------

class CMDSilenceNoty_tipUser : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDSilenceNoty.tipUser) */ {
 public:
  CMDSilenceNoty_tipUser();
  virtual ~CMDSilenceNoty_tipUser();

  CMDSilenceNoty_tipUser(const CMDSilenceNoty_tipUser& from);

  inline CMDSilenceNoty_tipUser& operator=(const CMDSilenceNoty_tipUser& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDSilenceNoty_tipUser& default_instance();

  void Swap(CMDSilenceNoty_tipUser* other);

  // implements Message ----------------------------------------------

  inline CMDSilenceNoty_tipUser* New() const { return New(NULL); }

  CMDSilenceNoty_tipUser* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDSilenceNoty_tipUser& from);
  void MergeFrom(const CMDSilenceNoty_tipUser& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDSilenceNoty_tipUser* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string srcname = 1;
  void clear_srcname();
  static const int kSrcnameFieldNumber = 1;
  const ::std::string& srcname() const;
  void set_srcname(const ::std::string& value);
  void set_srcname(const char* value);
  void set_srcname(const char* value, size_t size);
  ::std::string* mutable_srcname();
  ::std::string* release_srcname();
  void set_allocated_srcname(::std::string* srcname);

  // optional string srchead = 2;
  void clear_srchead();
  static const int kSrcheadFieldNumber = 2;
  const ::std::string& srchead() const;
  void set_srchead(const ::std::string& value);
  void set_srchead(const char* value);
  void set_srchead(const char* value, size_t size);
  ::std::string* mutable_srchead();
  ::std::string* release_srchead();
  void set_allocated_srchead(::std::string* srchead);

  // optional string gifname = 3;
  void clear_gifname();
  static const int kGifnameFieldNumber = 3;
  const ::std::string& gifname() const;
  void set_gifname(const ::std::string& value);
  void set_gifname(const char* value);
  void set_gifname(const char* value, size_t size);
  ::std::string* mutable_gifname();
  ::std::string* release_gifname();
  void set_allocated_gifname(::std::string* gifname);

  // optional string gifpicture = 4;
  void clear_gifpicture();
  static const int kGifpictureFieldNumber = 4;
  const ::std::string& gifpicture() const;
  void set_gifpicture(const ::std::string& value);
  void set_gifpicture(const char* value);
  void set_gifpicture(const char* value, size_t size);
  ::std::string* mutable_gifpicture();
  ::std::string* release_gifpicture();
  void set_allocated_gifpicture(::std::string* gifpicture);

  // @@protoc_insertion_point(class_scope:CMDSilenceNoty.tipUser)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr srcname_;
  ::google::protobuf::internal::ArenaStringPtr srchead_;
  ::google::protobuf::internal::ArenaStringPtr gifname_;
  ::google::protobuf::internal::ArenaStringPtr gifpicture_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_RoomSvr_2eproto();
  friend void protobuf_AssignDesc_RoomSvr_2eproto();
  friend void protobuf_ShutdownFile_RoomSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDSilenceNoty_tipUser* default_instance_;
};
// -------------------------------------------------------------------

class CMDSilenceNoty : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDSilenceNoty) */ {
 public:
  CMDSilenceNoty();
  virtual ~CMDSilenceNoty();

  CMDSilenceNoty(const CMDSilenceNoty& from);

  inline CMDSilenceNoty& operator=(const CMDSilenceNoty& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDSilenceNoty& default_instance();

  void Swap(CMDSilenceNoty* other);

  // implements Message ----------------------------------------------

  inline CMDSilenceNoty* New() const { return New(NULL); }

  CMDSilenceNoty* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDSilenceNoty& from);
  void MergeFrom(const CMDSilenceNoty& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDSilenceNoty* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMDSilenceNoty_tipUser tipUser;

  // accessors -------------------------------------------------------

  // optional uint32 groupid = 1;
  void clear_groupid();
  static const int kGroupidFieldNumber = 1;
  ::google::protobuf::uint32 groupid() const;
  void set_groupid(::google::protobuf::uint32 value);

  // repeated .CMDSilenceNoty.tipUser user = 2;
  int user_size() const;
  void clear_user();
  static const int kUserFieldNumber = 2;
  const ::CMDSilenceNoty_tipUser& user(int index) const;
  ::CMDSilenceNoty_tipUser* mutable_user(int index);
  ::CMDSilenceNoty_tipUser* add_user();
  ::google::protobuf::RepeatedPtrField< ::CMDSilenceNoty_tipUser >*
      mutable_user();
  const ::google::protobuf::RepeatedPtrField< ::CMDSilenceNoty_tipUser >&
      user() const;

  // @@protoc_insertion_point(class_scope:CMDSilenceNoty)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::CMDSilenceNoty_tipUser > user_;
  ::google::protobuf::uint32 groupid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_RoomSvr_2eproto();
  friend void protobuf_AssignDesc_RoomSvr_2eproto();
  friend void protobuf_ShutdownFile_RoomSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDSilenceNoty* default_instance_;
};
// -------------------------------------------------------------------

class CMDNoticeNoty : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDNoticeNoty) */ {
 public:
  CMDNoticeNoty();
  virtual ~CMDNoticeNoty();

  CMDNoticeNoty(const CMDNoticeNoty& from);

  inline CMDNoticeNoty& operator=(const CMDNoticeNoty& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDNoticeNoty& default_instance();

  void Swap(CMDNoticeNoty* other);

  // implements Message ----------------------------------------------

  inline CMDNoticeNoty* New() const { return New(NULL); }

  CMDNoticeNoty* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDNoticeNoty& from);
  void MergeFrom(const CMDNoticeNoty& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDNoticeNoty* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string notice = 1;
  void clear_notice();
  static const int kNoticeFieldNumber = 1;
  const ::std::string& notice() const;
  void set_notice(const ::std::string& value);
  void set_notice(const char* value);
  void set_notice(const char* value, size_t size);
  ::std::string* mutable_notice();
  ::std::string* release_notice();
  void set_allocated_notice(::std::string* notice);

  // @@protoc_insertion_point(class_scope:CMDNoticeNoty)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr notice_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_RoomSvr_2eproto();
  friend void protobuf_AssignDesc_RoomSvr_2eproto();
  friend void protobuf_ShutdownFile_RoomSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDNoticeNoty* default_instance_;
};
// -------------------------------------------------------------------

class CMDCloseLiveAndCourseeNoty : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDCloseLiveAndCourseeNoty) */ {
 public:
  CMDCloseLiveAndCourseeNoty();
  virtual ~CMDCloseLiveAndCourseeNoty();

  CMDCloseLiveAndCourseeNoty(const CMDCloseLiveAndCourseeNoty& from);

  inline CMDCloseLiveAndCourseeNoty& operator=(const CMDCloseLiveAndCourseeNoty& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDCloseLiveAndCourseeNoty& default_instance();

  void Swap(CMDCloseLiveAndCourseeNoty* other);

  // implements Message ----------------------------------------------

  inline CMDCloseLiveAndCourseeNoty* New() const { return New(NULL); }

  CMDCloseLiveAndCourseeNoty* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDCloseLiveAndCourseeNoty& from);
  void MergeFrom(const CMDCloseLiveAndCourseeNoty& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDCloseLiveAndCourseeNoty* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 groupid = 1;
  void clear_groupid();
  static const int kGroupidFieldNumber = 1;
  ::google::protobuf::uint32 groupid() const;
  void set_groupid(::google::protobuf::uint32 value);

  // optional uint32 runuserid = 2;
  void clear_runuserid();
  static const int kRunuseridFieldNumber = 2;
  ::google::protobuf::uint32 runuserid() const;
  void set_runuserid(::google::protobuf::uint32 value);

  // optional uint32 toid = 3;
  void clear_toid();
  static const int kToidFieldNumber = 3;
  ::google::protobuf::uint32 toid() const;
  void set_toid(::google::protobuf::uint32 value);

  // optional uint32 status = 4;
  void clear_status();
  static const int kStatusFieldNumber = 4;
  ::google::protobuf::uint32 status() const;
  void set_status(::google::protobuf::uint32 value);

  // optional uint32 type = 5;
  void clear_type();
  static const int kTypeFieldNumber = 5;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // optional uint32 errid = 6;
  void clear_errid();
  static const int kErridFieldNumber = 6;
  ::google::protobuf::uint32 errid() const;
  void set_errid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMDCloseLiveAndCourseeNoty)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 groupid_;
  ::google::protobuf::uint32 runuserid_;
  ::google::protobuf::uint32 toid_;
  ::google::protobuf::uint32 status_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 errid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_RoomSvr_2eproto();
  friend void protobuf_AssignDesc_RoomSvr_2eproto();
  friend void protobuf_ShutdownFile_RoomSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDCloseLiveAndCourseeNoty* default_instance_;
};
// -------------------------------------------------------------------

class CMDLiveStartNoty : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDLiveStartNoty) */ {
 public:
  CMDLiveStartNoty();
  virtual ~CMDLiveStartNoty();

  CMDLiveStartNoty(const CMDLiveStartNoty& from);

  inline CMDLiveStartNoty& operator=(const CMDLiveStartNoty& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDLiveStartNoty& default_instance();

  void Swap(CMDLiveStartNoty* other);

  // implements Message ----------------------------------------------

  inline CMDLiveStartNoty* New() const { return New(NULL); }

  CMDLiveStartNoty* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDLiveStartNoty& from);
  void MergeFrom(const CMDLiveStartNoty& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDLiveStartNoty* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 groupid = 1;
  void clear_groupid();
  static const int kGroupidFieldNumber = 1;
  ::google::protobuf::uint32 groupid() const;
  void set_groupid(::google::protobuf::uint32 value);

  // optional uint32 uid = 2;
  void clear_uid();
  static const int kUidFieldNumber = 2;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // optional string liveUrl = 3;
  void clear_liveurl();
  static const int kLiveUrlFieldNumber = 3;
  const ::std::string& liveurl() const;
  void set_liveurl(const ::std::string& value);
  void set_liveurl(const char* value);
  void set_liveurl(const char* value, size_t size);
  ::std::string* mutable_liveurl();
  ::std::string* release_liveurl();
  void set_allocated_liveurl(::std::string* liveurl);

  // @@protoc_insertion_point(class_scope:CMDLiveStartNoty)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 groupid_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::internal::ArenaStringPtr liveurl_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_RoomSvr_2eproto();
  friend void protobuf_AssignDesc_RoomSvr_2eproto();
  friend void protobuf_ShutdownFile_RoomSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDLiveStartNoty* default_instance_;
};
// -------------------------------------------------------------------

class CMDLiveStopNoty : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDLiveStopNoty) */ {
 public:
  CMDLiveStopNoty();
  virtual ~CMDLiveStopNoty();

  CMDLiveStopNoty(const CMDLiveStopNoty& from);

  inline CMDLiveStopNoty& operator=(const CMDLiveStopNoty& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDLiveStopNoty& default_instance();

  void Swap(CMDLiveStopNoty* other);

  // implements Message ----------------------------------------------

  inline CMDLiveStopNoty* New() const { return New(NULL); }

  CMDLiveStopNoty* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDLiveStopNoty& from);
  void MergeFrom(const CMDLiveStopNoty& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDLiveStopNoty* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 groupid = 1;
  void clear_groupid();
  static const int kGroupidFieldNumber = 1;
  ::google::protobuf::uint32 groupid() const;
  void set_groupid(::google::protobuf::uint32 value);

  // optional uint32 uid = 2;
  void clear_uid();
  static const int kUidFieldNumber = 2;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // optional string liveUrl = 3;
  void clear_liveurl();
  static const int kLiveUrlFieldNumber = 3;
  const ::std::string& liveurl() const;
  void set_liveurl(const ::std::string& value);
  void set_liveurl(const char* value);
  void set_liveurl(const char* value, size_t size);
  ::std::string* mutable_liveurl();
  ::std::string* release_liveurl();
  void set_allocated_liveurl(::std::string* liveurl);

  // @@protoc_insertion_point(class_scope:CMDLiveStopNoty)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 groupid_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::internal::ArenaStringPtr liveurl_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_RoomSvr_2eproto();
  friend void protobuf_AssignDesc_RoomSvr_2eproto();
  friend void protobuf_ShutdownFile_RoomSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDLiveStopNoty* default_instance_;
};
// -------------------------------------------------------------------

class CMDCourseStartNoty : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDCourseStartNoty) */ {
 public:
  CMDCourseStartNoty();
  virtual ~CMDCourseStartNoty();

  CMDCourseStartNoty(const CMDCourseStartNoty& from);

  inline CMDCourseStartNoty& operator=(const CMDCourseStartNoty& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDCourseStartNoty& default_instance();

  void Swap(CMDCourseStartNoty* other);

  // implements Message ----------------------------------------------

  inline CMDCourseStartNoty* New() const { return New(NULL); }

  CMDCourseStartNoty* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDCourseStartNoty& from);
  void MergeFrom(const CMDCourseStartNoty& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDCourseStartNoty* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 groupid = 1;
  void clear_groupid();
  static const int kGroupidFieldNumber = 1;
  ::google::protobuf::uint32 groupid() const;
  void set_groupid(::google::protobuf::uint32 value);

  // optional uint32 userid = 2;
  void clear_userid();
  static const int kUseridFieldNumber = 2;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // optional string title = 3;
  void clear_title();
  static const int kTitleFieldNumber = 3;
  const ::std::string& title() const;
  void set_title(const ::std::string& value);
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  ::std::string* mutable_title();
  ::std::string* release_title();
  void set_allocated_title(::std::string* title);

  // optional string content = 4;
  void clear_content();
  static const int kContentFieldNumber = 4;
  const ::std::string& content() const;
  void set_content(const ::std::string& value);
  void set_content(const char* value);
  void set_content(const char* value, size_t size);
  ::std::string* mutable_content();
  ::std::string* release_content();
  void set_allocated_content(::std::string* content);

  // @@protoc_insertion_point(class_scope:CMDCourseStartNoty)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 groupid_;
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::internal::ArenaStringPtr title_;
  ::google::protobuf::internal::ArenaStringPtr content_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_RoomSvr_2eproto();
  friend void protobuf_AssignDesc_RoomSvr_2eproto();
  friend void protobuf_ShutdownFile_RoomSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDCourseStartNoty* default_instance_;
};
// -------------------------------------------------------------------

class CMDNewSubCourseNoty : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDNewSubCourseNoty) */ {
 public:
  CMDNewSubCourseNoty();
  virtual ~CMDNewSubCourseNoty();

  CMDNewSubCourseNoty(const CMDNewSubCourseNoty& from);

  inline CMDNewSubCourseNoty& operator=(const CMDNewSubCourseNoty& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDNewSubCourseNoty& default_instance();

  void Swap(CMDNewSubCourseNoty* other);

  // implements Message ----------------------------------------------

  inline CMDNewSubCourseNoty* New() const { return New(NULL); }

  CMDNewSubCourseNoty* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDNewSubCourseNoty& from);
  void MergeFrom(const CMDNewSubCourseNoty& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDNewSubCourseNoty* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 courseId = 1;
  void clear_courseid();
  static const int kCourseIdFieldNumber = 1;
  ::google::protobuf::uint32 courseid() const;
  void set_courseid(::google::protobuf::uint32 value);

  // optional uint32 subCourseId = 2;
  void clear_subcourseid();
  static const int kSubCourseIdFieldNumber = 2;
  ::google::protobuf::uint32 subcourseid() const;
  void set_subcourseid(::google::protobuf::uint32 value);

  // optional uint32 userId = 3;
  void clear_userid();
  static const int kUserIdFieldNumber = 3;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // optional string courseName = 4;
  void clear_coursename();
  static const int kCourseNameFieldNumber = 4;
  const ::std::string& coursename() const;
  void set_coursename(const ::std::string& value);
  void set_coursename(const char* value);
  void set_coursename(const char* value, size_t size);
  ::std::string* mutable_coursename();
  ::std::string* release_coursename();
  void set_allocated_coursename(::std::string* coursename);

  // optional string subCourseName = 5;
  void clear_subcoursename();
  static const int kSubCourseNameFieldNumber = 5;
  const ::std::string& subcoursename() const;
  void set_subcoursename(const ::std::string& value);
  void set_subcoursename(const char* value);
  void set_subcoursename(const char* value, size_t size);
  ::std::string* mutable_subcoursename();
  ::std::string* release_subcoursename();
  void set_allocated_subcoursename(::std::string* subcoursename);

  // optional string beginTime = 6;
  void clear_begintime();
  static const int kBeginTimeFieldNumber = 6;
  const ::std::string& begintime() const;
  void set_begintime(const ::std::string& value);
  void set_begintime(const char* value);
  void set_begintime(const char* value, size_t size);
  ::std::string* mutable_begintime();
  ::std::string* release_begintime();
  void set_allocated_begintime(::std::string* begintime);

  // @@protoc_insertion_point(class_scope:CMDNewSubCourseNoty)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 courseid_;
  ::google::protobuf::uint32 subcourseid_;
  ::google::protobuf::internal::ArenaStringPtr coursename_;
  ::google::protobuf::internal::ArenaStringPtr subcoursename_;
  ::google::protobuf::internal::ArenaStringPtr begintime_;
  ::google::protobuf::uint32 userid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_RoomSvr_2eproto();
  friend void protobuf_AssignDesc_RoomSvr_2eproto();
  friend void protobuf_ShutdownFile_RoomSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDNewSubCourseNoty* default_instance_;
};
// -------------------------------------------------------------------

class CMDNewCourseNoty : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDNewCourseNoty) */ {
 public:
  CMDNewCourseNoty();
  virtual ~CMDNewCourseNoty();

  CMDNewCourseNoty(const CMDNewCourseNoty& from);

  inline CMDNewCourseNoty& operator=(const CMDNewCourseNoty& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDNewCourseNoty& default_instance();

  void Swap(CMDNewCourseNoty* other);

  // implements Message ----------------------------------------------

  inline CMDNewCourseNoty* New() const { return New(NULL); }

  CMDNewCourseNoty* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDNewCourseNoty& from);
  void MergeFrom(const CMDNewCourseNoty& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDNewCourseNoty* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 liveId = 1;
  void clear_liveid();
  static const int kLiveIdFieldNumber = 1;
  ::google::protobuf::uint32 liveid() const;
  void set_liveid(::google::protobuf::uint32 value);

  // optional uint32 userId = 2;
  void clear_userid();
  static const int kUserIdFieldNumber = 2;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // optional uint32 courseId = 3;
  void clear_courseid();
  static const int kCourseIdFieldNumber = 3;
  ::google::protobuf::uint32 courseid() const;
  void set_courseid(::google::protobuf::uint32 value);

  // optional string roomName = 4;
  void clear_roomname();
  static const int kRoomNameFieldNumber = 4;
  const ::std::string& roomname() const;
  void set_roomname(const ::std::string& value);
  void set_roomname(const char* value);
  void set_roomname(const char* value, size_t size);
  ::std::string* mutable_roomname();
  ::std::string* release_roomname();
  void set_allocated_roomname(::std::string* roomname);

  // optional string userAlias = 5;
  void clear_useralias();
  static const int kUserAliasFieldNumber = 5;
  const ::std::string& useralias() const;
  void set_useralias(const ::std::string& value);
  void set_useralias(const char* value);
  void set_useralias(const char* value, size_t size);
  ::std::string* mutable_useralias();
  ::std::string* release_useralias();
  void set_allocated_useralias(::std::string* useralias);

  // optional string courseName = 6;
  void clear_coursename();
  static const int kCourseNameFieldNumber = 6;
  const ::std::string& coursename() const;
  void set_coursename(const ::std::string& value);
  void set_coursename(const char* value);
  void set_coursename(const char* value, size_t size);
  ::std::string* mutable_coursename();
  ::std::string* release_coursename();
  void set_allocated_coursename(::std::string* coursename);

  // @@protoc_insertion_point(class_scope:CMDNewCourseNoty)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 liveid_;
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::internal::ArenaStringPtr roomname_;
  ::google::protobuf::internal::ArenaStringPtr useralias_;
  ::google::protobuf::internal::ArenaStringPtr coursename_;
  ::google::protobuf::uint32 courseid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_RoomSvr_2eproto();
  friend void protobuf_AssignDesc_RoomSvr_2eproto();
  friend void protobuf_ShutdownFile_RoomSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDNewCourseNoty* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDJoinRoomReq

// optional int32 userid = 1;
inline void CMDJoinRoomReq::clear_userid() {
  userid_ = 0;
}
inline ::google::protobuf::int32 CMDJoinRoomReq::userid() const {
  // @@protoc_insertion_point(field_get:CMDJoinRoomReq.userid)
  return userid_;
}
inline void CMDJoinRoomReq::set_userid(::google::protobuf::int32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDJoinRoomReq.userid)
}

// optional int32 vcbid = 2;
inline void CMDJoinRoomReq::clear_vcbid() {
  vcbid_ = 0;
}
inline ::google::protobuf::int32 CMDJoinRoomReq::vcbid() const {
  // @@protoc_insertion_point(field_get:CMDJoinRoomReq.vcbid)
  return vcbid_;
}
inline void CMDJoinRoomReq::set_vcbid(::google::protobuf::int32 value) {
  
  vcbid_ = value;
  // @@protoc_insertion_point(field_set:CMDJoinRoomReq.vcbid)
}

// optional int32 devtype = 3;
inline void CMDJoinRoomReq::clear_devtype() {
  devtype_ = 0;
}
inline ::google::protobuf::int32 CMDJoinRoomReq::devtype() const {
  // @@protoc_insertion_point(field_get:CMDJoinRoomReq.devtype)
  return devtype_;
}
inline void CMDJoinRoomReq::set_devtype(::google::protobuf::int32 value) {
  
  devtype_ = value;
  // @@protoc_insertion_point(field_set:CMDJoinRoomReq.devtype)
}

// optional int32 time = 4;
inline void CMDJoinRoomReq::clear_time() {
  time_ = 0;
}
inline ::google::protobuf::int32 CMDJoinRoomReq::time() const {
  // @@protoc_insertion_point(field_get:CMDJoinRoomReq.time)
  return time_;
}
inline void CMDJoinRoomReq::set_time(::google::protobuf::int32 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:CMDJoinRoomReq.time)
}

// optional int32 crc32 = 5;
inline void CMDJoinRoomReq::clear_crc32() {
  crc32_ = 0;
}
inline ::google::protobuf::int32 CMDJoinRoomReq::crc32() const {
  // @@protoc_insertion_point(field_get:CMDJoinRoomReq.crc32)
  return crc32_;
}
inline void CMDJoinRoomReq::set_crc32(::google::protobuf::int32 value) {
  
  crc32_ = value;
  // @@protoc_insertion_point(field_set:CMDJoinRoomReq.crc32)
}

// optional int32 coremessagever = 6;
inline void CMDJoinRoomReq::clear_coremessagever() {
  coremessagever_ = 0;
}
inline ::google::protobuf::int32 CMDJoinRoomReq::coremessagever() const {
  // @@protoc_insertion_point(field_get:CMDJoinRoomReq.coremessagever)
  return coremessagever_;
}
inline void CMDJoinRoomReq::set_coremessagever(::google::protobuf::int32 value) {
  
  coremessagever_ = value;
  // @@protoc_insertion_point(field_set:CMDJoinRoomReq.coremessagever)
}

// optional string cuserpwd = 7;
inline void CMDJoinRoomReq::clear_cuserpwd() {
  cuserpwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMDJoinRoomReq::cuserpwd() const {
  // @@protoc_insertion_point(field_get:CMDJoinRoomReq.cuserpwd)
  return cuserpwd_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDJoinRoomReq::set_cuserpwd(const ::std::string& value) {
  
  cuserpwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDJoinRoomReq.cuserpwd)
}
inline void CMDJoinRoomReq::set_cuserpwd(const char* value) {
  
  cuserpwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDJoinRoomReq.cuserpwd)
}
inline void CMDJoinRoomReq::set_cuserpwd(const char* value, size_t size) {
  
  cuserpwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDJoinRoomReq.cuserpwd)
}
inline ::std::string* CMDJoinRoomReq::mutable_cuserpwd() {
  
  // @@protoc_insertion_point(field_mutable:CMDJoinRoomReq.cuserpwd)
  return cuserpwd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMDJoinRoomReq::release_cuserpwd() {
  // @@protoc_insertion_point(field_release:CMDJoinRoomReq.cuserpwd)
  
  return cuserpwd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDJoinRoomReq::set_allocated_cuserpwd(::std::string* cuserpwd) {
  if (cuserpwd != NULL) {
    
  } else {
    
  }
  cuserpwd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cuserpwd);
  // @@protoc_insertion_point(field_set_allocated:CMDJoinRoomReq.cuserpwd)
}

// optional string croompwd = 8;
inline void CMDJoinRoomReq::clear_croompwd() {
  croompwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMDJoinRoomReq::croompwd() const {
  // @@protoc_insertion_point(field_get:CMDJoinRoomReq.croompwd)
  return croompwd_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDJoinRoomReq::set_croompwd(const ::std::string& value) {
  
  croompwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDJoinRoomReq.croompwd)
}
inline void CMDJoinRoomReq::set_croompwd(const char* value) {
  
  croompwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDJoinRoomReq.croompwd)
}
inline void CMDJoinRoomReq::set_croompwd(const char* value, size_t size) {
  
  croompwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDJoinRoomReq.croompwd)
}
inline ::std::string* CMDJoinRoomReq::mutable_croompwd() {
  
  // @@protoc_insertion_point(field_mutable:CMDJoinRoomReq.croompwd)
  return croompwd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMDJoinRoomReq::release_croompwd() {
  // @@protoc_insertion_point(field_release:CMDJoinRoomReq.croompwd)
  
  return croompwd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDJoinRoomReq::set_allocated_croompwd(::std::string* croompwd) {
  if (croompwd != NULL) {
    
  } else {
    
  }
  croompwd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), croompwd);
  // @@protoc_insertion_point(field_set_allocated:CMDJoinRoomReq.croompwd)
}

// optional string cSerial = 9;
inline void CMDJoinRoomReq::clear_cserial() {
  cserial_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMDJoinRoomReq::cserial() const {
  // @@protoc_insertion_point(field_get:CMDJoinRoomReq.cSerial)
  return cserial_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDJoinRoomReq::set_cserial(const ::std::string& value) {
  
  cserial_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDJoinRoomReq.cSerial)
}
inline void CMDJoinRoomReq::set_cserial(const char* value) {
  
  cserial_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDJoinRoomReq.cSerial)
}
inline void CMDJoinRoomReq::set_cserial(const char* value, size_t size) {
  
  cserial_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDJoinRoomReq.cSerial)
}
inline ::std::string* CMDJoinRoomReq::mutable_cserial() {
  
  // @@protoc_insertion_point(field_mutable:CMDJoinRoomReq.cSerial)
  return cserial_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMDJoinRoomReq::release_cserial() {
  // @@protoc_insertion_point(field_release:CMDJoinRoomReq.cSerial)
  
  return cserial_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDJoinRoomReq::set_allocated_cserial(::std::string* cserial) {
  if (cserial != NULL) {
    
  } else {
    
  }
  cserial_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cserial);
  // @@protoc_insertion_point(field_set_allocated:CMDJoinRoomReq.cSerial)
}

// optional string cMacAddr = 10;
inline void CMDJoinRoomReq::clear_cmacaddr() {
  cmacaddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMDJoinRoomReq::cmacaddr() const {
  // @@protoc_insertion_point(field_get:CMDJoinRoomReq.cMacAddr)
  return cmacaddr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDJoinRoomReq::set_cmacaddr(const ::std::string& value) {
  
  cmacaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDJoinRoomReq.cMacAddr)
}
inline void CMDJoinRoomReq::set_cmacaddr(const char* value) {
  
  cmacaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDJoinRoomReq.cMacAddr)
}
inline void CMDJoinRoomReq::set_cmacaddr(const char* value, size_t size) {
  
  cmacaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDJoinRoomReq.cMacAddr)
}
inline ::std::string* CMDJoinRoomReq::mutable_cmacaddr() {
  
  // @@protoc_insertion_point(field_mutable:CMDJoinRoomReq.cMacAddr)
  return cmacaddr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMDJoinRoomReq::release_cmacaddr() {
  // @@protoc_insertion_point(field_release:CMDJoinRoomReq.cMacAddr)
  
  return cmacaddr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDJoinRoomReq::set_allocated_cmacaddr(::std::string* cmacaddr) {
  if (cmacaddr != NULL) {
    
  } else {
    
  }
  cmacaddr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cmacaddr);
  // @@protoc_insertion_point(field_set_allocated:CMDJoinRoomReq.cMacAddr)
}

// optional string cIpAddr = 11;
inline void CMDJoinRoomReq::clear_cipaddr() {
  cipaddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMDJoinRoomReq::cipaddr() const {
  // @@protoc_insertion_point(field_get:CMDJoinRoomReq.cIpAddr)
  return cipaddr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDJoinRoomReq::set_cipaddr(const ::std::string& value) {
  
  cipaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDJoinRoomReq.cIpAddr)
}
inline void CMDJoinRoomReq::set_cipaddr(const char* value) {
  
  cipaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDJoinRoomReq.cIpAddr)
}
inline void CMDJoinRoomReq::set_cipaddr(const char* value, size_t size) {
  
  cipaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDJoinRoomReq.cIpAddr)
}
inline ::std::string* CMDJoinRoomReq::mutable_cipaddr() {
  
  // @@protoc_insertion_point(field_mutable:CMDJoinRoomReq.cIpAddr)
  return cipaddr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMDJoinRoomReq::release_cipaddr() {
  // @@protoc_insertion_point(field_release:CMDJoinRoomReq.cIpAddr)
  
  return cipaddr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDJoinRoomReq::set_allocated_cipaddr(::std::string* cipaddr) {
  if (cipaddr != NULL) {
    
  } else {
    
  }
  cipaddr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cipaddr);
  // @@protoc_insertion_point(field_set_allocated:CMDJoinRoomReq.cIpAddr)
}

// optional int32 bloginSource = 12;
inline void CMDJoinRoomReq::clear_bloginsource() {
  bloginsource_ = 0;
}
inline ::google::protobuf::int32 CMDJoinRoomReq::bloginsource() const {
  // @@protoc_insertion_point(field_get:CMDJoinRoomReq.bloginSource)
  return bloginsource_;
}
inline void CMDJoinRoomReq::set_bloginsource(::google::protobuf::int32 value) {
  
  bloginsource_ = value;
  // @@protoc_insertion_point(field_set:CMDJoinRoomReq.bloginSource)
}

// optional int32 reserve1 = 13;
inline void CMDJoinRoomReq::clear_reserve1() {
  reserve1_ = 0;
}
inline ::google::protobuf::int32 CMDJoinRoomReq::reserve1() const {
  // @@protoc_insertion_point(field_get:CMDJoinRoomReq.reserve1)
  return reserve1_;
}
inline void CMDJoinRoomReq::set_reserve1(::google::protobuf::int32 value) {
  
  reserve1_ = value;
  // @@protoc_insertion_point(field_set:CMDJoinRoomReq.reserve1)
}

// optional int32 reserve2 = 14;
inline void CMDJoinRoomReq::clear_reserve2() {
  reserve2_ = 0;
}
inline ::google::protobuf::int32 CMDJoinRoomReq::reserve2() const {
  // @@protoc_insertion_point(field_get:CMDJoinRoomReq.reserve2)
  return reserve2_;
}
inline void CMDJoinRoomReq::set_reserve2(::google::protobuf::int32 value) {
  
  reserve2_ = value;
  // @@protoc_insertion_point(field_set:CMDJoinRoomReq.reserve2)
}

// -------------------------------------------------------------------

// CMDJoinRoomResp

// optional uint32 userid = 1;
inline void CMDJoinRoomResp::clear_userid() {
  userid_ = 0u;
}
inline ::google::protobuf::uint32 CMDJoinRoomResp::userid() const {
  // @@protoc_insertion_point(field_get:CMDJoinRoomResp.userid)
  return userid_;
}
inline void CMDJoinRoomResp::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDJoinRoomResp.userid)
}

// optional uint32 vcbid = 2;
inline void CMDJoinRoomResp::clear_vcbid() {
  vcbid_ = 0u;
}
inline ::google::protobuf::uint32 CMDJoinRoomResp::vcbid() const {
  // @@protoc_insertion_point(field_get:CMDJoinRoomResp.vcbid)
  return vcbid_;
}
inline void CMDJoinRoomResp::set_vcbid(::google::protobuf::uint32 value) {
  
  vcbid_ = value;
  // @@protoc_insertion_point(field_set:CMDJoinRoomResp.vcbid)
}

// optional uint32 roomtype = 3;
inline void CMDJoinRoomResp::clear_roomtype() {
  roomtype_ = 0u;
}
inline ::google::protobuf::uint32 CMDJoinRoomResp::roomtype() const {
  // @@protoc_insertion_point(field_get:CMDJoinRoomResp.roomtype)
  return roomtype_;
}
inline void CMDJoinRoomResp::set_roomtype(::google::protobuf::uint32 value) {
  
  roomtype_ = value;
  // @@protoc_insertion_point(field_set:CMDJoinRoomResp.roomtype)
}

// optional uint32 busepwd = 4;
inline void CMDJoinRoomResp::clear_busepwd() {
  busepwd_ = 0u;
}
inline ::google::protobuf::uint32 CMDJoinRoomResp::busepwd() const {
  // @@protoc_insertion_point(field_get:CMDJoinRoomResp.busepwd)
  return busepwd_;
}
inline void CMDJoinRoomResp::set_busepwd(::google::protobuf::uint32 value) {
  
  busepwd_ = value;
  // @@protoc_insertion_point(field_set:CMDJoinRoomResp.busepwd)
}

// optional uint32 bIsCollectRoom = 5;
inline void CMDJoinRoomResp::clear_biscollectroom() {
  biscollectroom_ = 0u;
}
inline ::google::protobuf::uint32 CMDJoinRoomResp::biscollectroom() const {
  // @@protoc_insertion_point(field_get:CMDJoinRoomResp.bIsCollectRoom)
  return biscollectroom_;
}
inline void CMDJoinRoomResp::set_biscollectroom(::google::protobuf::uint32 value) {
  
  biscollectroom_ = value;
  // @@protoc_insertion_point(field_set:CMDJoinRoomResp.bIsCollectRoom)
}

// optional uint32 devtype = 6;
inline void CMDJoinRoomResp::clear_devtype() {
  devtype_ = 0u;
}
inline ::google::protobuf::uint32 CMDJoinRoomResp::devtype() const {
  // @@protoc_insertion_point(field_get:CMDJoinRoomResp.devtype)
  return devtype_;
}
inline void CMDJoinRoomResp::set_devtype(::google::protobuf::uint32 value) {
  
  devtype_ = value;
  // @@protoc_insertion_point(field_set:CMDJoinRoomResp.devtype)
}

// optional uint32 seats = 7;
inline void CMDJoinRoomResp::clear_seats() {
  seats_ = 0u;
}
inline ::google::protobuf::uint32 CMDJoinRoomResp::seats() const {
  // @@protoc_insertion_point(field_get:CMDJoinRoomResp.seats)
  return seats_;
}
inline void CMDJoinRoomResp::set_seats(::google::protobuf::uint32 value) {
  
  seats_ = value;
  // @@protoc_insertion_point(field_set:CMDJoinRoomResp.seats)
}

// optional uint32 groupid = 8;
inline void CMDJoinRoomResp::clear_groupid() {
  groupid_ = 0u;
}
inline ::google::protobuf::uint32 CMDJoinRoomResp::groupid() const {
  // @@protoc_insertion_point(field_get:CMDJoinRoomResp.groupid)
  return groupid_;
}
inline void CMDJoinRoomResp::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDJoinRoomResp.groupid)
}

// optional uint32 runstate = 9;
inline void CMDJoinRoomResp::clear_runstate() {
  runstate_ = 0u;
}
inline ::google::protobuf::uint32 CMDJoinRoomResp::runstate() const {
  // @@protoc_insertion_point(field_get:CMDJoinRoomResp.runstate)
  return runstate_;
}
inline void CMDJoinRoomResp::set_runstate(::google::protobuf::uint32 value) {
  
  runstate_ = value;
  // @@protoc_insertion_point(field_set:CMDJoinRoomResp.runstate)
}

// optional uint32 creatorid = 10;
inline void CMDJoinRoomResp::clear_creatorid() {
  creatorid_ = 0u;
}
inline ::google::protobuf::uint32 CMDJoinRoomResp::creatorid() const {
  // @@protoc_insertion_point(field_get:CMDJoinRoomResp.creatorid)
  return creatorid_;
}
inline void CMDJoinRoomResp::set_creatorid(::google::protobuf::uint32 value) {
  
  creatorid_ = value;
  // @@protoc_insertion_point(field_set:CMDJoinRoomResp.creatorid)
}

// optional uint32 op1id = 11;
inline void CMDJoinRoomResp::clear_op1id() {
  op1id_ = 0u;
}
inline ::google::protobuf::uint32 CMDJoinRoomResp::op1id() const {
  // @@protoc_insertion_point(field_get:CMDJoinRoomResp.op1id)
  return op1id_;
}
inline void CMDJoinRoomResp::set_op1id(::google::protobuf::uint32 value) {
  
  op1id_ = value;
  // @@protoc_insertion_point(field_set:CMDJoinRoomResp.op1id)
}

// optional uint32 op2id = 12;
inline void CMDJoinRoomResp::clear_op2id() {
  op2id_ = 0u;
}
inline ::google::protobuf::uint32 CMDJoinRoomResp::op2id() const {
  // @@protoc_insertion_point(field_get:CMDJoinRoomResp.op2id)
  return op2id_;
}
inline void CMDJoinRoomResp::set_op2id(::google::protobuf::uint32 value) {
  
  op2id_ = value;
  // @@protoc_insertion_point(field_set:CMDJoinRoomResp.op2id)
}

// optional uint32 op3id = 13;
inline void CMDJoinRoomResp::clear_op3id() {
  op3id_ = 0u;
}
inline ::google::protobuf::uint32 CMDJoinRoomResp::op3id() const {
  // @@protoc_insertion_point(field_get:CMDJoinRoomResp.op3id)
  return op3id_;
}
inline void CMDJoinRoomResp::set_op3id(::google::protobuf::uint32 value) {
  
  op3id_ = value;
  // @@protoc_insertion_point(field_set:CMDJoinRoomResp.op3id)
}

// optional uint32 op4id = 14;
inline void CMDJoinRoomResp::clear_op4id() {
  op4id_ = 0u;
}
inline ::google::protobuf::uint32 CMDJoinRoomResp::op4id() const {
  // @@protoc_insertion_point(field_get:CMDJoinRoomResp.op4id)
  return op4id_;
}
inline void CMDJoinRoomResp::set_op4id(::google::protobuf::uint32 value) {
  
  op4id_ = value;
  // @@protoc_insertion_point(field_set:CMDJoinRoomResp.op4id)
}

// optional uint32 inroomstate = 15;
inline void CMDJoinRoomResp::clear_inroomstate() {
  inroomstate_ = 0u;
}
inline ::google::protobuf::uint32 CMDJoinRoomResp::inroomstate() const {
  // @@protoc_insertion_point(field_get:CMDJoinRoomResp.inroomstate)
  return inroomstate_;
}
inline void CMDJoinRoomResp::set_inroomstate(::google::protobuf::uint32 value) {
  
  inroomstate_ = value;
  // @@protoc_insertion_point(field_set:CMDJoinRoomResp.inroomstate)
}

// optional int64 nk = 16;
inline void CMDJoinRoomResp::clear_nk() {
  nk_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 CMDJoinRoomResp::nk() const {
  // @@protoc_insertion_point(field_get:CMDJoinRoomResp.nk)
  return nk_;
}
inline void CMDJoinRoomResp::set_nk(::google::protobuf::int64 value) {
  
  nk_ = value;
  // @@protoc_insertion_point(field_set:CMDJoinRoomResp.nk)
}

// optional int64 nb = 17;
inline void CMDJoinRoomResp::clear_nb() {
  nb_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 CMDJoinRoomResp::nb() const {
  // @@protoc_insertion_point(field_get:CMDJoinRoomResp.nb)
  return nb_;
}
inline void CMDJoinRoomResp::set_nb(::google::protobuf::int64 value) {
  
  nb_ = value;
  // @@protoc_insertion_point(field_set:CMDJoinRoomResp.nb)
}

// optional int64 nlotterypool = 18;
inline void CMDJoinRoomResp::clear_nlotterypool() {
  nlotterypool_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 CMDJoinRoomResp::nlotterypool() const {
  // @@protoc_insertion_point(field_get:CMDJoinRoomResp.nlotterypool)
  return nlotterypool_;
}
inline void CMDJoinRoomResp::set_nlotterypool(::google::protobuf::int64 value) {
  
  nlotterypool_ = value;
  // @@protoc_insertion_point(field_set:CMDJoinRoomResp.nlotterypool)
}

// optional int32 nchestnum = 19;
inline void CMDJoinRoomResp::clear_nchestnum() {
  nchestnum_ = 0;
}
inline ::google::protobuf::int32 CMDJoinRoomResp::nchestnum() const {
  // @@protoc_insertion_point(field_get:CMDJoinRoomResp.nchestnum)
  return nchestnum_;
}
inline void CMDJoinRoomResp::set_nchestnum(::google::protobuf::int32 value) {
  
  nchestnum_ = value;
  // @@protoc_insertion_point(field_set:CMDJoinRoomResp.nchestnum)
}

// optional string cname = 20;
inline void CMDJoinRoomResp::clear_cname() {
  cname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMDJoinRoomResp::cname() const {
  // @@protoc_insertion_point(field_get:CMDJoinRoomResp.cname)
  return cname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDJoinRoomResp::set_cname(const ::std::string& value) {
  
  cname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDJoinRoomResp.cname)
}
inline void CMDJoinRoomResp::set_cname(const char* value) {
  
  cname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDJoinRoomResp.cname)
}
inline void CMDJoinRoomResp::set_cname(const char* value, size_t size) {
  
  cname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDJoinRoomResp.cname)
}
inline ::std::string* CMDJoinRoomResp::mutable_cname() {
  
  // @@protoc_insertion_point(field_mutable:CMDJoinRoomResp.cname)
  return cname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMDJoinRoomResp::release_cname() {
  // @@protoc_insertion_point(field_release:CMDJoinRoomResp.cname)
  
  return cname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDJoinRoomResp::set_allocated_cname(::std::string* cname) {
  if (cname != NULL) {
    
  } else {
    
  }
  cname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cname);
  // @@protoc_insertion_point(field_set_allocated:CMDJoinRoomResp.cname)
}

// optional string cmediaaddr = 21;
inline void CMDJoinRoomResp::clear_cmediaaddr() {
  cmediaaddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMDJoinRoomResp::cmediaaddr() const {
  // @@protoc_insertion_point(field_get:CMDJoinRoomResp.cmediaaddr)
  return cmediaaddr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDJoinRoomResp::set_cmediaaddr(const ::std::string& value) {
  
  cmediaaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDJoinRoomResp.cmediaaddr)
}
inline void CMDJoinRoomResp::set_cmediaaddr(const char* value) {
  
  cmediaaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDJoinRoomResp.cmediaaddr)
}
inline void CMDJoinRoomResp::set_cmediaaddr(const char* value, size_t size) {
  
  cmediaaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDJoinRoomResp.cmediaaddr)
}
inline ::std::string* CMDJoinRoomResp::mutable_cmediaaddr() {
  
  // @@protoc_insertion_point(field_mutable:CMDJoinRoomResp.cmediaaddr)
  return cmediaaddr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMDJoinRoomResp::release_cmediaaddr() {
  // @@protoc_insertion_point(field_release:CMDJoinRoomResp.cmediaaddr)
  
  return cmediaaddr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDJoinRoomResp::set_allocated_cmediaaddr(::std::string* cmediaaddr) {
  if (cmediaaddr != NULL) {
    
  } else {
    
  }
  cmediaaddr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cmediaaddr);
  // @@protoc_insertion_point(field_set_allocated:CMDJoinRoomResp.cmediaaddr)
}

// optional string cpwd = 22;
inline void CMDJoinRoomResp::clear_cpwd() {
  cpwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMDJoinRoomResp::cpwd() const {
  // @@protoc_insertion_point(field_get:CMDJoinRoomResp.cpwd)
  return cpwd_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDJoinRoomResp::set_cpwd(const ::std::string& value) {
  
  cpwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDJoinRoomResp.cpwd)
}
inline void CMDJoinRoomResp::set_cpwd(const char* value) {
  
  cpwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDJoinRoomResp.cpwd)
}
inline void CMDJoinRoomResp::set_cpwd(const char* value, size_t size) {
  
  cpwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDJoinRoomResp.cpwd)
}
inline ::std::string* CMDJoinRoomResp::mutable_cpwd() {
  
  // @@protoc_insertion_point(field_mutable:CMDJoinRoomResp.cpwd)
  return cpwd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMDJoinRoomResp::release_cpwd() {
  // @@protoc_insertion_point(field_release:CMDJoinRoomResp.cpwd)
  
  return cpwd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDJoinRoomResp::set_allocated_cpwd(::std::string* cpwd) {
  if (cpwd != NULL) {
    
  } else {
    
  }
  cpwd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cpwd);
  // @@protoc_insertion_point(field_set_allocated:CMDJoinRoomResp.cpwd)
}

// optional uint64 npopularity_ = 23;
inline void CMDJoinRoomResp::clear_npopularity_() {
  npopularity__ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CMDJoinRoomResp::npopularity_() const {
  // @@protoc_insertion_point(field_get:CMDJoinRoomResp.npopularity_)
  return npopularity__;
}
inline void CMDJoinRoomResp::set_npopularity_(::google::protobuf::uint64 value) {
  
  npopularity__ = value;
  // @@protoc_insertion_point(field_set:CMDJoinRoomResp.npopularity_)
}

// optional uint32 ncollect_times = 24;
inline void CMDJoinRoomResp::clear_ncollect_times() {
  ncollect_times_ = 0u;
}
inline ::google::protobuf::uint32 CMDJoinRoomResp::ncollect_times() const {
  // @@protoc_insertion_point(field_get:CMDJoinRoomResp.ncollect_times)
  return ncollect_times_;
}
inline void CMDJoinRoomResp::set_ncollect_times(::google::protobuf::uint32 value) {
  
  ncollect_times_ = value;
  // @@protoc_insertion_point(field_set:CMDJoinRoomResp.ncollect_times)
}

// optional uint32 userRoleType = 25;
inline void CMDJoinRoomResp::clear_userroletype() {
  userroletype_ = 0u;
}
inline ::google::protobuf::uint32 CMDJoinRoomResp::userroletype() const {
  // @@protoc_insertion_point(field_get:CMDJoinRoomResp.userRoleType)
  return userroletype_;
}
inline void CMDJoinRoomResp::set_userroletype(::google::protobuf::uint32 value) {
  
  userroletype_ = value;
  // @@protoc_insertion_point(field_set:CMDJoinRoomResp.userRoleType)
}

// optional string groupIcon = 26;
inline void CMDJoinRoomResp::clear_groupicon() {
  groupicon_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMDJoinRoomResp::groupicon() const {
  // @@protoc_insertion_point(field_get:CMDJoinRoomResp.groupIcon)
  return groupicon_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDJoinRoomResp::set_groupicon(const ::std::string& value) {
  
  groupicon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDJoinRoomResp.groupIcon)
}
inline void CMDJoinRoomResp::set_groupicon(const char* value) {
  
  groupicon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDJoinRoomResp.groupIcon)
}
inline void CMDJoinRoomResp::set_groupicon(const char* value, size_t size) {
  
  groupicon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDJoinRoomResp.groupIcon)
}
inline ::std::string* CMDJoinRoomResp::mutable_groupicon() {
  
  // @@protoc_insertion_point(field_mutable:CMDJoinRoomResp.groupIcon)
  return groupicon_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMDJoinRoomResp::release_groupicon() {
  // @@protoc_insertion_point(field_release:CMDJoinRoomResp.groupIcon)
  
  return groupicon_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDJoinRoomResp::set_allocated_groupicon(::std::string* groupicon) {
  if (groupicon != NULL) {
    
  } else {
    
  }
  groupicon_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), groupicon);
  // @@protoc_insertion_point(field_set_allocated:CMDJoinRoomResp.groupIcon)
}

// optional uint32 groupShowID = 27;
inline void CMDJoinRoomResp::clear_groupshowid() {
  groupshowid_ = 0u;
}
inline ::google::protobuf::uint32 CMDJoinRoomResp::groupshowid() const {
  // @@protoc_insertion_point(field_get:CMDJoinRoomResp.groupShowID)
  return groupshowid_;
}
inline void CMDJoinRoomResp::set_groupshowid(::google::protobuf::uint32 value) {
  
  groupshowid_ = value;
  // @@protoc_insertion_point(field_set:CMDJoinRoomResp.groupShowID)
}

// optional uint32 muteSwitch = 28;
inline void CMDJoinRoomResp::clear_muteswitch() {
  muteswitch_ = 0u;
}
inline ::google::protobuf::uint32 CMDJoinRoomResp::muteswitch() const {
  // @@protoc_insertion_point(field_get:CMDJoinRoomResp.muteSwitch)
  return muteswitch_;
}
inline void CMDJoinRoomResp::set_muteswitch(::google::protobuf::uint32 value) {
  
  muteswitch_ = value;
  // @@protoc_insertion_point(field_set:CMDJoinRoomResp.muteSwitch)
}

// optional string liveUrl = 29;
inline void CMDJoinRoomResp::clear_liveurl() {
  liveurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMDJoinRoomResp::liveurl() const {
  // @@protoc_insertion_point(field_get:CMDJoinRoomResp.liveUrl)
  return liveurl_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDJoinRoomResp::set_liveurl(const ::std::string& value) {
  
  liveurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDJoinRoomResp.liveUrl)
}
inline void CMDJoinRoomResp::set_liveurl(const char* value) {
  
  liveurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDJoinRoomResp.liveUrl)
}
inline void CMDJoinRoomResp::set_liveurl(const char* value, size_t size) {
  
  liveurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDJoinRoomResp.liveUrl)
}
inline ::std::string* CMDJoinRoomResp::mutable_liveurl() {
  
  // @@protoc_insertion_point(field_mutable:CMDJoinRoomResp.liveUrl)
  return liveurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMDJoinRoomResp::release_liveurl() {
  // @@protoc_insertion_point(field_release:CMDJoinRoomResp.liveUrl)
  
  return liveurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDJoinRoomResp::set_allocated_liveurl(::std::string* liveurl) {
  if (liveurl != NULL) {
    
  } else {
    
  }
  liveurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), liveurl);
  // @@protoc_insertion_point(field_set_allocated:CMDJoinRoomResp.liveUrl)
}

// -------------------------------------------------------------------

// CMDGateJoinRoomReq

// optional int32 userid = 1;
inline void CMDGateJoinRoomReq::clear_userid() {
  userid_ = 0;
}
inline ::google::protobuf::int32 CMDGateJoinRoomReq::userid() const {
  // @@protoc_insertion_point(field_get:CMDGateJoinRoomReq.userid)
  return userid_;
}
inline void CMDGateJoinRoomReq::set_userid(::google::protobuf::int32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDGateJoinRoomReq.userid)
}

// optional int32 vcbid = 2;
inline void CMDGateJoinRoomReq::clear_vcbid() {
  vcbid_ = 0;
}
inline ::google::protobuf::int32 CMDGateJoinRoomReq::vcbid() const {
  // @@protoc_insertion_point(field_get:CMDGateJoinRoomReq.vcbid)
  return vcbid_;
}
inline void CMDGateJoinRoomReq::set_vcbid(::google::protobuf::int32 value) {
  
  vcbid_ = value;
  // @@protoc_insertion_point(field_set:CMDGateJoinRoomReq.vcbid)
}

// optional string cIpAddr = 3;
inline void CMDGateJoinRoomReq::clear_cipaddr() {
  cipaddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMDGateJoinRoomReq::cipaddr() const {
  // @@protoc_insertion_point(field_get:CMDGateJoinRoomReq.cIpAddr)
  return cipaddr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDGateJoinRoomReq::set_cipaddr(const ::std::string& value) {
  
  cipaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDGateJoinRoomReq.cIpAddr)
}
inline void CMDGateJoinRoomReq::set_cipaddr(const char* value) {
  
  cipaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDGateJoinRoomReq.cIpAddr)
}
inline void CMDGateJoinRoomReq::set_cipaddr(const char* value, size_t size) {
  
  cipaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDGateJoinRoomReq.cIpAddr)
}
inline ::std::string* CMDGateJoinRoomReq::mutable_cipaddr() {
  
  // @@protoc_insertion_point(field_mutable:CMDGateJoinRoomReq.cIpAddr)
  return cipaddr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMDGateJoinRoomReq::release_cipaddr() {
  // @@protoc_insertion_point(field_release:CMDGateJoinRoomReq.cIpAddr)
  
  return cipaddr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDGateJoinRoomReq::set_allocated_cipaddr(::std::string* cipaddr) {
  if (cipaddr != NULL) {
    
  } else {
    
  }
  cipaddr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cipaddr);
  // @@protoc_insertion_point(field_set_allocated:CMDGateJoinRoomReq.cIpAddr)
}

// optional string uuid = 4;
inline void CMDGateJoinRoomReq::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMDGateJoinRoomReq::uuid() const {
  // @@protoc_insertion_point(field_get:CMDGateJoinRoomReq.uuid)
  return uuid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDGateJoinRoomReq::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDGateJoinRoomReq.uuid)
}
inline void CMDGateJoinRoomReq::set_uuid(const char* value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDGateJoinRoomReq.uuid)
}
inline void CMDGateJoinRoomReq::set_uuid(const char* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDGateJoinRoomReq.uuid)
}
inline ::std::string* CMDGateJoinRoomReq::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:CMDGateJoinRoomReq.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMDGateJoinRoomReq::release_uuid() {
  // @@protoc_insertion_point(field_release:CMDGateJoinRoomReq.uuid)
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDGateJoinRoomReq::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:CMDGateJoinRoomReq.uuid)
}

// optional int32 devtype = 5;
inline void CMDGateJoinRoomReq::clear_devtype() {
  devtype_ = 0;
}
inline ::google::protobuf::int32 CMDGateJoinRoomReq::devtype() const {
  // @@protoc_insertion_point(field_get:CMDGateJoinRoomReq.devtype)
  return devtype_;
}
inline void CMDGateJoinRoomReq::set_devtype(::google::protobuf::int32 value) {
  
  devtype_ = value;
  // @@protoc_insertion_point(field_set:CMDGateJoinRoomReq.devtype)
}

// optional int32 micuserid = 6;
inline void CMDGateJoinRoomReq::clear_micuserid() {
  micuserid_ = 0;
}
inline ::google::protobuf::int32 CMDGateJoinRoomReq::micuserid() const {
  // @@protoc_insertion_point(field_get:CMDGateJoinRoomReq.micuserid)
  return micuserid_;
}
inline void CMDGateJoinRoomReq::set_micuserid(::google::protobuf::int32 value) {
  
  micuserid_ = value;
  // @@protoc_insertion_point(field_set:CMDGateJoinRoomReq.micuserid)
}

// optional int32 micstate = 7;
inline void CMDGateJoinRoomReq::clear_micstate() {
  micstate_ = 0;
}
inline ::google::protobuf::int32 CMDGateJoinRoomReq::micstate() const {
  // @@protoc_insertion_point(field_get:CMDGateJoinRoomReq.micstate)
  return micstate_;
}
inline void CMDGateJoinRoomReq::set_micstate(::google::protobuf::int32 value) {
  
  micstate_ = value;
  // @@protoc_insertion_point(field_set:CMDGateJoinRoomReq.micstate)
}

// optional int32 micindex = 8;
inline void CMDGateJoinRoomReq::clear_micindex() {
  micindex_ = 0;
}
inline ::google::protobuf::int32 CMDGateJoinRoomReq::micindex() const {
  // @@protoc_insertion_point(field_get:CMDGateJoinRoomReq.micindex)
  return micindex_;
}
inline void CMDGateJoinRoomReq::set_micindex(::google::protobuf::int32 value) {
  
  micindex_ = value;
  // @@protoc_insertion_point(field_set:CMDGateJoinRoomReq.micindex)
}

// -------------------------------------------------------------------

// CMDGateJoinRoomResp

// optional int32 userid = 1;
inline void CMDGateJoinRoomResp::clear_userid() {
  userid_ = 0;
}
inline ::google::protobuf::int32 CMDGateJoinRoomResp::userid() const {
  // @@protoc_insertion_point(field_get:CMDGateJoinRoomResp.userid)
  return userid_;
}
inline void CMDGateJoinRoomResp::set_userid(::google::protobuf::int32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDGateJoinRoomResp.userid)
}

// optional int32 vcbid = 2;
inline void CMDGateJoinRoomResp::clear_vcbid() {
  vcbid_ = 0;
}
inline ::google::protobuf::int32 CMDGateJoinRoomResp::vcbid() const {
  // @@protoc_insertion_point(field_get:CMDGateJoinRoomResp.vcbid)
  return vcbid_;
}
inline void CMDGateJoinRoomResp::set_vcbid(::google::protobuf::int32 value) {
  
  vcbid_ = value;
  // @@protoc_insertion_point(field_set:CMDGateJoinRoomResp.vcbid)
}

// optional .CMDErrCode errInfo = 3;
inline bool CMDGateJoinRoomResp::has_errinfo() const {
  return !_is_default_instance_ && errinfo_ != NULL;
}
inline void CMDGateJoinRoomResp::clear_errinfo() {
  if (GetArenaNoVirtual() == NULL && errinfo_ != NULL) delete errinfo_;
  errinfo_ = NULL;
}
inline const ::CMDErrCode& CMDGateJoinRoomResp::errinfo() const {
  // @@protoc_insertion_point(field_get:CMDGateJoinRoomResp.errInfo)
  return errinfo_ != NULL ? *errinfo_ : *default_instance_->errinfo_;
}
inline ::CMDErrCode* CMDGateJoinRoomResp::mutable_errinfo() {
  
  if (errinfo_ == NULL) {
    errinfo_ = new ::CMDErrCode;
  }
  // @@protoc_insertion_point(field_mutable:CMDGateJoinRoomResp.errInfo)
  return errinfo_;
}
inline ::CMDErrCode* CMDGateJoinRoomResp::release_errinfo() {
  // @@protoc_insertion_point(field_release:CMDGateJoinRoomResp.errInfo)
  
  ::CMDErrCode* temp = errinfo_;
  errinfo_ = NULL;
  return temp;
}
inline void CMDGateJoinRoomResp::set_allocated_errinfo(::CMDErrCode* errinfo) {
  delete errinfo_;
  errinfo_ = errinfo;
  if (errinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDGateJoinRoomResp.errInfo)
}

// -------------------------------------------------------------------

// CMDJoinRoomErr

// optional int32 userid = 1;
inline void CMDJoinRoomErr::clear_userid() {
  userid_ = 0;
}
inline ::google::protobuf::int32 CMDJoinRoomErr::userid() const {
  // @@protoc_insertion_point(field_get:CMDJoinRoomErr.userid)
  return userid_;
}
inline void CMDJoinRoomErr::set_userid(::google::protobuf::int32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDJoinRoomErr.userid)
}

// optional int32 vcbid = 2;
inline void CMDJoinRoomErr::clear_vcbid() {
  vcbid_ = 0;
}
inline ::google::protobuf::int32 CMDJoinRoomErr::vcbid() const {
  // @@protoc_insertion_point(field_get:CMDJoinRoomErr.vcbid)
  return vcbid_;
}
inline void CMDJoinRoomErr::set_vcbid(::google::protobuf::int32 value) {
  
  vcbid_ = value;
  // @@protoc_insertion_point(field_set:CMDJoinRoomErr.vcbid)
}

// optional .CMDErrCode errInfo = 3;
inline bool CMDJoinRoomErr::has_errinfo() const {
  return !_is_default_instance_ && errinfo_ != NULL;
}
inline void CMDJoinRoomErr::clear_errinfo() {
  if (GetArenaNoVirtual() == NULL && errinfo_ != NULL) delete errinfo_;
  errinfo_ = NULL;
}
inline const ::CMDErrCode& CMDJoinRoomErr::errinfo() const {
  // @@protoc_insertion_point(field_get:CMDJoinRoomErr.errInfo)
  return errinfo_ != NULL ? *errinfo_ : *default_instance_->errinfo_;
}
inline ::CMDErrCode* CMDJoinRoomErr::mutable_errinfo() {
  
  if (errinfo_ == NULL) {
    errinfo_ = new ::CMDErrCode;
  }
  // @@protoc_insertion_point(field_mutable:CMDJoinRoomErr.errInfo)
  return errinfo_;
}
inline ::CMDErrCode* CMDJoinRoomErr::release_errinfo() {
  // @@protoc_insertion_point(field_release:CMDJoinRoomErr.errInfo)
  
  ::CMDErrCode* temp = errinfo_;
  errinfo_ = NULL;
  return temp;
}
inline void CMDJoinRoomErr::set_allocated_errinfo(::CMDErrCode* errinfo) {
  delete errinfo_;
  errinfo_ = errinfo;
  if (errinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDJoinRoomErr.errInfo)
}

// optional int32 data1 = 4;
inline void CMDJoinRoomErr::clear_data1() {
  data1_ = 0;
}
inline ::google::protobuf::int32 CMDJoinRoomErr::data1() const {
  // @@protoc_insertion_point(field_get:CMDJoinRoomErr.data1)
  return data1_;
}
inline void CMDJoinRoomErr::set_data1(::google::protobuf::int32 value) {
  
  data1_ = value;
  // @@protoc_insertion_point(field_set:CMDJoinRoomErr.data1)
}

// optional int32 data2 = 5;
inline void CMDJoinRoomErr::clear_data2() {
  data2_ = 0;
}
inline ::google::protobuf::int32 CMDJoinRoomErr::data2() const {
  // @@protoc_insertion_point(field_get:CMDJoinRoomErr.data2)
  return data2_;
}
inline void CMDJoinRoomErr::set_data2(::google::protobuf::int32 value) {
  
  data2_ = value;
  // @@protoc_insertion_point(field_set:CMDJoinRoomErr.data2)
}

// -------------------------------------------------------------------

// CMDUserMicState

// optional uint32 vcbid = 1;
inline void CMDUserMicState::clear_vcbid() {
  vcbid_ = 0u;
}
inline ::google::protobuf::uint32 CMDUserMicState::vcbid() const {
  // @@protoc_insertion_point(field_get:CMDUserMicState.vcbid)
  return vcbid_;
}
inline void CMDUserMicState::set_vcbid(::google::protobuf::uint32 value) {
  
  vcbid_ = value;
  // @@protoc_insertion_point(field_set:CMDUserMicState.vcbid)
}

// optional .UserInfo_t runid = 2;
inline bool CMDUserMicState::has_runid() const {
  return !_is_default_instance_ && runid_ != NULL;
}
inline void CMDUserMicState::clear_runid() {
  if (GetArenaNoVirtual() == NULL && runid_ != NULL) delete runid_;
  runid_ = NULL;
}
inline const ::UserInfo_t& CMDUserMicState::runid() const {
  // @@protoc_insertion_point(field_get:CMDUserMicState.runid)
  return runid_ != NULL ? *runid_ : *default_instance_->runid_;
}
inline ::UserInfo_t* CMDUserMicState::mutable_runid() {
  
  if (runid_ == NULL) {
    runid_ = new ::UserInfo_t;
  }
  // @@protoc_insertion_point(field_mutable:CMDUserMicState.runid)
  return runid_;
}
inline ::UserInfo_t* CMDUserMicState::release_runid() {
  // @@protoc_insertion_point(field_release:CMDUserMicState.runid)
  
  ::UserInfo_t* temp = runid_;
  runid_ = NULL;
  return temp;
}
inline void CMDUserMicState::set_allocated_runid(::UserInfo_t* runid) {
  delete runid_;
  runid_ = runid;
  if (runid) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDUserMicState.runid)
}

// optional .UserInfo_t toid = 3;
inline bool CMDUserMicState::has_toid() const {
  return !_is_default_instance_ && toid_ != NULL;
}
inline void CMDUserMicState::clear_toid() {
  if (GetArenaNoVirtual() == NULL && toid_ != NULL) delete toid_;
  toid_ = NULL;
}
inline const ::UserInfo_t& CMDUserMicState::toid() const {
  // @@protoc_insertion_point(field_get:CMDUserMicState.toid)
  return toid_ != NULL ? *toid_ : *default_instance_->toid_;
}
inline ::UserInfo_t* CMDUserMicState::mutable_toid() {
  
  if (toid_ == NULL) {
    toid_ = new ::UserInfo_t;
  }
  // @@protoc_insertion_point(field_mutable:CMDUserMicState.toid)
  return toid_;
}
inline ::UserInfo_t* CMDUserMicState::release_toid() {
  // @@protoc_insertion_point(field_release:CMDUserMicState.toid)
  
  ::UserInfo_t* temp = toid_;
  toid_ = NULL;
  return temp;
}
inline void CMDUserMicState::set_allocated_toid(::UserInfo_t* toid) {
  delete toid_;
  toid_ = toid;
  if (toid) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDUserMicState.toid)
}

// optional int32 giftid = 4;
inline void CMDUserMicState::clear_giftid() {
  giftid_ = 0;
}
inline ::google::protobuf::int32 CMDUserMicState::giftid() const {
  // @@protoc_insertion_point(field_get:CMDUserMicState.giftid)
  return giftid_;
}
inline void CMDUserMicState::set_giftid(::google::protobuf::int32 value) {
  
  giftid_ = value;
  // @@protoc_insertion_point(field_set:CMDUserMicState.giftid)
}

// optional int32 giftnum = 5;
inline void CMDUserMicState::clear_giftnum() {
  giftnum_ = 0;
}
inline ::google::protobuf::int32 CMDUserMicState::giftnum() const {
  // @@protoc_insertion_point(field_get:CMDUserMicState.giftnum)
  return giftnum_;
}
inline void CMDUserMicState::set_giftnum(::google::protobuf::int32 value) {
  
  giftnum_ = value;
  // @@protoc_insertion_point(field_set:CMDUserMicState.giftnum)
}

// optional int32 micstate = 6;
inline void CMDUserMicState::clear_micstate() {
  micstate_ = 0;
}
inline ::google::protobuf::int32 CMDUserMicState::micstate() const {
  // @@protoc_insertion_point(field_get:CMDUserMicState.micstate)
  return micstate_;
}
inline void CMDUserMicState::set_micstate(::google::protobuf::int32 value) {
  
  micstate_ = value;
  // @@protoc_insertion_point(field_set:CMDUserMicState.micstate)
}

// optional int32 micindex = 7;
inline void CMDUserMicState::clear_micindex() {
  micindex_ = 0;
}
inline ::google::protobuf::int32 CMDUserMicState::micindex() const {
  // @@protoc_insertion_point(field_get:CMDUserMicState.micindex)
  return micindex_;
}
inline void CMDUserMicState::set_micindex(::google::protobuf::int32 value) {
  
  micindex_ = value;
  // @@protoc_insertion_point(field_set:CMDUserMicState.micindex)
}

// optional int32 optype = 8;
inline void CMDUserMicState::clear_optype() {
  optype_ = 0;
}
inline ::google::protobuf::int32 CMDUserMicState::optype() const {
  // @@protoc_insertion_point(field_get:CMDUserMicState.optype)
  return optype_;
}
inline void CMDUserMicState::set_optype(::google::protobuf::int32 value) {
  
  optype_ = value;
  // @@protoc_insertion_point(field_set:CMDUserMicState.optype)
}

// optional int32 reserve11 = 9;
inline void CMDUserMicState::clear_reserve11() {
  reserve11_ = 0;
}
inline ::google::protobuf::int32 CMDUserMicState::reserve11() const {
  // @@protoc_insertion_point(field_get:CMDUserMicState.reserve11)
  return reserve11_;
}
inline void CMDUserMicState::set_reserve11(::google::protobuf::int32 value) {
  
  reserve11_ = value;
  // @@protoc_insertion_point(field_set:CMDUserMicState.reserve11)
}

// optional .CMDErrCode errInfo = 10;
inline bool CMDUserMicState::has_errinfo() const {
  return !_is_default_instance_ && errinfo_ != NULL;
}
inline void CMDUserMicState::clear_errinfo() {
  if (GetArenaNoVirtual() == NULL && errinfo_ != NULL) delete errinfo_;
  errinfo_ = NULL;
}
inline const ::CMDErrCode& CMDUserMicState::errinfo() const {
  // @@protoc_insertion_point(field_get:CMDUserMicState.errInfo)
  return errinfo_ != NULL ? *errinfo_ : *default_instance_->errinfo_;
}
inline ::CMDErrCode* CMDUserMicState::mutable_errinfo() {
  
  if (errinfo_ == NULL) {
    errinfo_ = new ::CMDErrCode;
  }
  // @@protoc_insertion_point(field_mutable:CMDUserMicState.errInfo)
  return errinfo_;
}
inline ::CMDErrCode* CMDUserMicState::release_errinfo() {
  // @@protoc_insertion_point(field_release:CMDUserMicState.errInfo)
  
  ::CMDErrCode* temp = errinfo_;
  errinfo_ = NULL;
  return temp;
}
inline void CMDUserMicState::set_allocated_errinfo(::CMDErrCode* errinfo) {
  delete errinfo_;
  errinfo_ = errinfo;
  if (errinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDUserMicState.errInfo)
}

// optional int32 micsecond = 11;
inline void CMDUserMicState::clear_micsecond() {
  micsecond_ = 0;
}
inline ::google::protobuf::int32 CMDUserMicState::micsecond() const {
  // @@protoc_insertion_point(field_get:CMDUserMicState.micsecond)
  return micsecond_;
}
inline void CMDUserMicState::set_micsecond(::google::protobuf::int32 value) {
  
  micsecond_ = value;
  // @@protoc_insertion_point(field_set:CMDUserMicState.micsecond)
}

// -------------------------------------------------------------------

// CMDUpWaitMic

// optional uint32 vcbid = 1;
inline void CMDUpWaitMic::clear_vcbid() {
  vcbid_ = 0u;
}
inline ::google::protobuf::uint32 CMDUpWaitMic::vcbid() const {
  // @@protoc_insertion_point(field_get:CMDUpWaitMic.vcbid)
  return vcbid_;
}
inline void CMDUpWaitMic::set_vcbid(::google::protobuf::uint32 value) {
  
  vcbid_ = value;
  // @@protoc_insertion_point(field_set:CMDUpWaitMic.vcbid)
}

// optional uint32 ruunerid = 2;
inline void CMDUpWaitMic::clear_ruunerid() {
  ruunerid_ = 0u;
}
inline ::google::protobuf::uint32 CMDUpWaitMic::ruunerid() const {
  // @@protoc_insertion_point(field_get:CMDUpWaitMic.ruunerid)
  return ruunerid_;
}
inline void CMDUpWaitMic::set_ruunerid(::google::protobuf::uint32 value) {
  
  ruunerid_ = value;
  // @@protoc_insertion_point(field_set:CMDUpWaitMic.ruunerid)
}

// optional uint32 touser = 3;
inline void CMDUpWaitMic::clear_touser() {
  touser_ = 0u;
}
inline ::google::protobuf::uint32 CMDUpWaitMic::touser() const {
  // @@protoc_insertion_point(field_get:CMDUpWaitMic.touser)
  return touser_;
}
inline void CMDUpWaitMic::set_touser(::google::protobuf::uint32 value) {
  
  touser_ = value;
  // @@protoc_insertion_point(field_set:CMDUpWaitMic.touser)
}

// optional int32 nmicindex = 4;
inline void CMDUpWaitMic::clear_nmicindex() {
  nmicindex_ = 0;
}
inline ::google::protobuf::int32 CMDUpWaitMic::nmicindex() const {
  // @@protoc_insertion_point(field_get:CMDUpWaitMic.nmicindex)
  return nmicindex_;
}
inline void CMDUpWaitMic::set_nmicindex(::google::protobuf::int32 value) {
  
  nmicindex_ = value;
  // @@protoc_insertion_point(field_set:CMDUpWaitMic.nmicindex)
}

// optional .CMDErrCode errInfo = 5;
inline bool CMDUpWaitMic::has_errinfo() const {
  return !_is_default_instance_ && errinfo_ != NULL;
}
inline void CMDUpWaitMic::clear_errinfo() {
  if (GetArenaNoVirtual() == NULL && errinfo_ != NULL) delete errinfo_;
  errinfo_ = NULL;
}
inline const ::CMDErrCode& CMDUpWaitMic::errinfo() const {
  // @@protoc_insertion_point(field_get:CMDUpWaitMic.errInfo)
  return errinfo_ != NULL ? *errinfo_ : *default_instance_->errinfo_;
}
inline ::CMDErrCode* CMDUpWaitMic::mutable_errinfo() {
  
  if (errinfo_ == NULL) {
    errinfo_ = new ::CMDErrCode;
  }
  // @@protoc_insertion_point(field_mutable:CMDUpWaitMic.errInfo)
  return errinfo_;
}
inline ::CMDErrCode* CMDUpWaitMic::release_errinfo() {
  // @@protoc_insertion_point(field_release:CMDUpWaitMic.errInfo)
  
  ::CMDErrCode* temp = errinfo_;
  errinfo_ = NULL;
  return temp;
}
inline void CMDUpWaitMic::set_allocated_errinfo(::CMDErrCode* errinfo) {
  delete errinfo_;
  errinfo_ = errinfo;
  if (errinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDUpWaitMic.errInfo)
}

// -------------------------------------------------------------------

// CMDUpWaitMicList

// optional uint32 size = 1;
inline void CMDUpWaitMicList::clear_size() {
  size_ = 0u;
}
inline ::google::protobuf::uint32 CMDUpWaitMicList::size() const {
  // @@protoc_insertion_point(field_get:CMDUpWaitMicList.size)
  return size_;
}
inline void CMDUpWaitMicList::set_size(::google::protobuf::uint32 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:CMDUpWaitMicList.size)
}

// repeated .UserInfo_t userid = 2;
inline int CMDUpWaitMicList::userid_size() const {
  return userid_.size();
}
inline void CMDUpWaitMicList::clear_userid() {
  userid_.Clear();
}
inline const ::UserInfo_t& CMDUpWaitMicList::userid(int index) const {
  // @@protoc_insertion_point(field_get:CMDUpWaitMicList.userid)
  return userid_.Get(index);
}
inline ::UserInfo_t* CMDUpWaitMicList::mutable_userid(int index) {
  // @@protoc_insertion_point(field_mutable:CMDUpWaitMicList.userid)
  return userid_.Mutable(index);
}
inline ::UserInfo_t* CMDUpWaitMicList::add_userid() {
  // @@protoc_insertion_point(field_add:CMDUpWaitMicList.userid)
  return userid_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::UserInfo_t >*
CMDUpWaitMicList::mutable_userid() {
  // @@protoc_insertion_point(field_mutable_list:CMDUpWaitMicList.userid)
  return &userid_;
}
inline const ::google::protobuf::RepeatedPtrField< ::UserInfo_t >&
CMDUpWaitMicList::userid() const {
  // @@protoc_insertion_point(field_list:CMDUpWaitMicList.userid)
  return userid_;
}

// optional uint32 vcbid = 3;
inline void CMDUpWaitMicList::clear_vcbid() {
  vcbid_ = 0u;
}
inline ::google::protobuf::uint32 CMDUpWaitMicList::vcbid() const {
  // @@protoc_insertion_point(field_get:CMDUpWaitMicList.vcbid)
  return vcbid_;
}
inline void CMDUpWaitMicList::set_vcbid(::google::protobuf::uint32 value) {
  
  vcbid_ = value;
  // @@protoc_insertion_point(field_set:CMDUpWaitMicList.vcbid)
}

// -------------------------------------------------------------------

// CMDMicStateListReq

// optional uint32 vcbid = 1;
inline void CMDMicStateListReq::clear_vcbid() {
  vcbid_ = 0u;
}
inline ::google::protobuf::uint32 CMDMicStateListReq::vcbid() const {
  // @@protoc_insertion_point(field_get:CMDMicStateListReq.vcbid)
  return vcbid_;
}
inline void CMDMicStateListReq::set_vcbid(::google::protobuf::uint32 value) {
  
  vcbid_ = value;
  // @@protoc_insertion_point(field_set:CMDMicStateListReq.vcbid)
}

// -------------------------------------------------------------------

// CMDMicStateListResp_PubMic

// optional .UserInfo_t userinfo = 1;
inline bool CMDMicStateListResp_PubMic::has_userinfo() const {
  return !_is_default_instance_ && userinfo_ != NULL;
}
inline void CMDMicStateListResp_PubMic::clear_userinfo() {
  if (GetArenaNoVirtual() == NULL && userinfo_ != NULL) delete userinfo_;
  userinfo_ = NULL;
}
inline const ::UserInfo_t& CMDMicStateListResp_PubMic::userinfo() const {
  // @@protoc_insertion_point(field_get:CMDMicStateListResp.PubMic.userinfo)
  return userinfo_ != NULL ? *userinfo_ : *default_instance_->userinfo_;
}
inline ::UserInfo_t* CMDMicStateListResp_PubMic::mutable_userinfo() {
  
  if (userinfo_ == NULL) {
    userinfo_ = new ::UserInfo_t;
  }
  // @@protoc_insertion_point(field_mutable:CMDMicStateListResp.PubMic.userinfo)
  return userinfo_;
}
inline ::UserInfo_t* CMDMicStateListResp_PubMic::release_userinfo() {
  // @@protoc_insertion_point(field_release:CMDMicStateListResp.PubMic.userinfo)
  
  ::UserInfo_t* temp = userinfo_;
  userinfo_ = NULL;
  return temp;
}
inline void CMDMicStateListResp_PubMic::set_allocated_userinfo(::UserInfo_t* userinfo) {
  delete userinfo_;
  userinfo_ = userinfo;
  if (userinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDMicStateListResp.PubMic.userinfo)
}

// optional int32 status = 2;
inline void CMDMicStateListResp_PubMic::clear_status() {
  status_ = 0;
}
inline ::google::protobuf::int32 CMDMicStateListResp_PubMic::status() const {
  // @@protoc_insertion_point(field_get:CMDMicStateListResp.PubMic.status)
  return status_;
}
inline void CMDMicStateListResp_PubMic::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:CMDMicStateListResp.PubMic.status)
}

// -------------------------------------------------------------------

// CMDMicStateListResp

// optional uint32 vcbid = 1;
inline void CMDMicStateListResp::clear_vcbid() {
  vcbid_ = 0u;
}
inline ::google::protobuf::uint32 CMDMicStateListResp::vcbid() const {
  // @@protoc_insertion_point(field_get:CMDMicStateListResp.vcbid)
  return vcbid_;
}
inline void CMDMicStateListResp::set_vcbid(::google::protobuf::uint32 value) {
  
  vcbid_ = value;
  // @@protoc_insertion_point(field_set:CMDMicStateListResp.vcbid)
}

// repeated .CMDMicStateListResp.PubMic pubmic = 2;
inline int CMDMicStateListResp::pubmic_size() const {
  return pubmic_.size();
}
inline void CMDMicStateListResp::clear_pubmic() {
  pubmic_.Clear();
}
inline const ::CMDMicStateListResp_PubMic& CMDMicStateListResp::pubmic(int index) const {
  // @@protoc_insertion_point(field_get:CMDMicStateListResp.pubmic)
  return pubmic_.Get(index);
}
inline ::CMDMicStateListResp_PubMic* CMDMicStateListResp::mutable_pubmic(int index) {
  // @@protoc_insertion_point(field_mutable:CMDMicStateListResp.pubmic)
  return pubmic_.Mutable(index);
}
inline ::CMDMicStateListResp_PubMic* CMDMicStateListResp::add_pubmic() {
  // @@protoc_insertion_point(field_add:CMDMicStateListResp.pubmic)
  return pubmic_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMDMicStateListResp_PubMic >*
CMDMicStateListResp::mutable_pubmic() {
  // @@protoc_insertion_point(field_mutable_list:CMDMicStateListResp.pubmic)
  return &pubmic_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMDMicStateListResp_PubMic >&
CMDMicStateListResp::pubmic() const {
  // @@protoc_insertion_point(field_list:CMDMicStateListResp.pubmic)
  return pubmic_;
}

// -------------------------------------------------------------------

// CMDRoomUserInfo

// optional uint32 userid = 1;
inline void CMDRoomUserInfo::clear_userid() {
  userid_ = 0u;
}
inline ::google::protobuf::uint32 CMDRoomUserInfo::userid() const {
  // @@protoc_insertion_point(field_get:CMDRoomUserInfo.userid)
  return userid_;
}
inline void CMDRoomUserInfo::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDRoomUserInfo.userid)
}

// optional uint32 vcbid = 2;
inline void CMDRoomUserInfo::clear_vcbid() {
  vcbid_ = 0u;
}
inline ::google::protobuf::uint32 CMDRoomUserInfo::vcbid() const {
  // @@protoc_insertion_point(field_get:CMDRoomUserInfo.vcbid)
  return vcbid_;
}
inline void CMDRoomUserInfo::set_vcbid(::google::protobuf::uint32 value) {
  
  vcbid_ = value;
  // @@protoc_insertion_point(field_set:CMDRoomUserInfo.vcbid)
}

// optional uint32 userlevel = 3;
inline void CMDRoomUserInfo::clear_userlevel() {
  userlevel_ = 0u;
}
inline ::google::protobuf::uint32 CMDRoomUserInfo::userlevel() const {
  // @@protoc_insertion_point(field_get:CMDRoomUserInfo.userlevel)
  return userlevel_;
}
inline void CMDRoomUserInfo::set_userlevel(::google::protobuf::uint32 value) {
  
  userlevel_ = value;
  // @@protoc_insertion_point(field_set:CMDRoomUserInfo.userlevel)
}

// optional uint32 userviplevel = 4;
inline void CMDRoomUserInfo::clear_userviplevel() {
  userviplevel_ = 0u;
}
inline ::google::protobuf::uint32 CMDRoomUserInfo::userviplevel() const {
  // @@protoc_insertion_point(field_get:CMDRoomUserInfo.userviplevel)
  return userviplevel_;
}
inline void CMDRoomUserInfo::set_userviplevel(::google::protobuf::uint32 value) {
  
  userviplevel_ = value;
  // @@protoc_insertion_point(field_set:CMDRoomUserInfo.userviplevel)
}

// optional uint32 gender = 5;
inline void CMDRoomUserInfo::clear_gender() {
  gender_ = 0u;
}
inline ::google::protobuf::uint32 CMDRoomUserInfo::gender() const {
  // @@protoc_insertion_point(field_get:CMDRoomUserInfo.gender)
  return gender_;
}
inline void CMDRoomUserInfo::set_gender(::google::protobuf::uint32 value) {
  
  gender_ = value;
  // @@protoc_insertion_point(field_set:CMDRoomUserInfo.gender)
}

// optional uint32 devtype = 6;
inline void CMDRoomUserInfo::clear_devtype() {
  devtype_ = 0u;
}
inline ::google::protobuf::uint32 CMDRoomUserInfo::devtype() const {
  // @@protoc_insertion_point(field_get:CMDRoomUserInfo.devtype)
  return devtype_;
}
inline void CMDRoomUserInfo::set_devtype(::google::protobuf::uint32 value) {
  
  devtype_ = value;
  // @@protoc_insertion_point(field_set:CMDRoomUserInfo.devtype)
}

// optional uint32 pubmicindex = 7;
inline void CMDRoomUserInfo::clear_pubmicindex() {
  pubmicindex_ = 0u;
}
inline ::google::protobuf::uint32 CMDRoomUserInfo::pubmicindex() const {
  // @@protoc_insertion_point(field_get:CMDRoomUserInfo.pubmicindex)
  return pubmicindex_;
}
inline void CMDRoomUserInfo::set_pubmicindex(::google::protobuf::uint32 value) {
  
  pubmicindex_ = value;
  // @@protoc_insertion_point(field_set:CMDRoomUserInfo.pubmicindex)
}

// optional uint32 roomlevel = 8;
inline void CMDRoomUserInfo::clear_roomlevel() {
  roomlevel_ = 0u;
}
inline ::google::protobuf::uint32 CMDRoomUserInfo::roomlevel() const {
  // @@protoc_insertion_point(field_get:CMDRoomUserInfo.roomlevel)
  return roomlevel_;
}
inline void CMDRoomUserInfo::set_roomlevel(::google::protobuf::uint32 value) {
  
  roomlevel_ = value;
  // @@protoc_insertion_point(field_set:CMDRoomUserInfo.roomlevel)
}

// optional uint32 usertype = 9;
inline void CMDRoomUserInfo::clear_usertype() {
  usertype_ = 0u;
}
inline ::google::protobuf::uint32 CMDRoomUserInfo::usertype() const {
  // @@protoc_insertion_point(field_get:CMDRoomUserInfo.usertype)
  return usertype_;
}
inline void CMDRoomUserInfo::set_usertype(::google::protobuf::uint32 value) {
  
  usertype_ = value;
  // @@protoc_insertion_point(field_set:CMDRoomUserInfo.usertype)
}

// optional uint32 cometime = 10;
inline void CMDRoomUserInfo::clear_cometime() {
  cometime_ = 0u;
}
inline ::google::protobuf::uint32 CMDRoomUserInfo::cometime() const {
  // @@protoc_insertion_point(field_get:CMDRoomUserInfo.cometime)
  return cometime_;
}
inline void CMDRoomUserInfo::set_cometime(::google::protobuf::uint32 value) {
  
  cometime_ = value;
  // @@protoc_insertion_point(field_set:CMDRoomUserInfo.cometime)
}

// optional string chead = 11;
inline void CMDRoomUserInfo::clear_chead() {
  chead_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMDRoomUserInfo::chead() const {
  // @@protoc_insertion_point(field_get:CMDRoomUserInfo.chead)
  return chead_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDRoomUserInfo::set_chead(const ::std::string& value) {
  
  chead_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDRoomUserInfo.chead)
}
inline void CMDRoomUserInfo::set_chead(const char* value) {
  
  chead_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDRoomUserInfo.chead)
}
inline void CMDRoomUserInfo::set_chead(const char* value, size_t size) {
  
  chead_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDRoomUserInfo.chead)
}
inline ::std::string* CMDRoomUserInfo::mutable_chead() {
  
  // @@protoc_insertion_point(field_mutable:CMDRoomUserInfo.chead)
  return chead_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMDRoomUserInfo::release_chead() {
  // @@protoc_insertion_point(field_release:CMDRoomUserInfo.chead)
  
  return chead_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDRoomUserInfo::set_allocated_chead(::std::string* chead) {
  if (chead != NULL) {
    
  } else {
    
  }
  chead_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chead);
  // @@protoc_insertion_point(field_set_allocated:CMDRoomUserInfo.chead)
}

// optional uint32 userstate = 12;
inline void CMDRoomUserInfo::clear_userstate() {
  userstate_ = 0u;
}
inline ::google::protobuf::uint32 CMDRoomUserInfo::userstate() const {
  // @@protoc_insertion_point(field_get:CMDRoomUserInfo.userstate)
  return userstate_;
}
inline void CMDRoomUserInfo::set_userstate(::google::protobuf::uint32 value) {
  
  userstate_ = value;
  // @@protoc_insertion_point(field_set:CMDRoomUserInfo.userstate)
}

// optional int32 bforbidchat = 13;
inline void CMDRoomUserInfo::clear_bforbidchat() {
  bforbidchat_ = 0;
}
inline ::google::protobuf::int32 CMDRoomUserInfo::bforbidchat() const {
  // @@protoc_insertion_point(field_get:CMDRoomUserInfo.bforbidchat)
  return bforbidchat_;
}
inline void CMDRoomUserInfo::set_bforbidchat(::google::protobuf::int32 value) {
  
  bforbidchat_ = value;
  // @@protoc_insertion_point(field_set:CMDRoomUserInfo.bforbidchat)
}

// optional string useralias = 14;
inline void CMDRoomUserInfo::clear_useralias() {
  useralias_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMDRoomUserInfo::useralias() const {
  // @@protoc_insertion_point(field_get:CMDRoomUserInfo.useralias)
  return useralias_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDRoomUserInfo::set_useralias(const ::std::string& value) {
  
  useralias_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDRoomUserInfo.useralias)
}
inline void CMDRoomUserInfo::set_useralias(const char* value) {
  
  useralias_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDRoomUserInfo.useralias)
}
inline void CMDRoomUserInfo::set_useralias(const char* value, size_t size) {
  
  useralias_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDRoomUserInfo.useralias)
}
inline ::std::string* CMDRoomUserInfo::mutable_useralias() {
  
  // @@protoc_insertion_point(field_mutable:CMDRoomUserInfo.useralias)
  return useralias_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMDRoomUserInfo::release_useralias() {
  // @@protoc_insertion_point(field_release:CMDRoomUserInfo.useralias)
  
  return useralias_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDRoomUserInfo::set_allocated_useralias(::std::string* useralias) {
  if (useralias != NULL) {
    
  } else {
    
  }
  useralias_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), useralias);
  // @@protoc_insertion_point(field_set_allocated:CMDRoomUserInfo.useralias)
}

// optional uint32 authState = 15;
inline void CMDRoomUserInfo::clear_authstate() {
  authstate_ = 0u;
}
inline ::google::protobuf::uint32 CMDRoomUserInfo::authstate() const {
  // @@protoc_insertion_point(field_get:CMDRoomUserInfo.authState)
  return authstate_;
}
inline void CMDRoomUserInfo::set_authstate(::google::protobuf::uint32 value) {
  
  authstate_ = value;
  // @@protoc_insertion_point(field_set:CMDRoomUserInfo.authState)
}

// optional string videoUrl = 16;
inline void CMDRoomUserInfo::clear_videourl() {
  videourl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMDRoomUserInfo::videourl() const {
  // @@protoc_insertion_point(field_get:CMDRoomUserInfo.videoUrl)
  return videourl_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDRoomUserInfo::set_videourl(const ::std::string& value) {
  
  videourl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDRoomUserInfo.videoUrl)
}
inline void CMDRoomUserInfo::set_videourl(const char* value) {
  
  videourl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDRoomUserInfo.videoUrl)
}
inline void CMDRoomUserInfo::set_videourl(const char* value, size_t size) {
  
  videourl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDRoomUserInfo.videoUrl)
}
inline ::std::string* CMDRoomUserInfo::mutable_videourl() {
  
  // @@protoc_insertion_point(field_mutable:CMDRoomUserInfo.videoUrl)
  return videourl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMDRoomUserInfo::release_videourl() {
  // @@protoc_insertion_point(field_release:CMDRoomUserInfo.videoUrl)
  
  return videourl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDRoomUserInfo::set_allocated_videourl(::std::string* videourl) {
  if (videourl != NULL) {
    
  } else {
    
  }
  videourl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), videourl);
  // @@protoc_insertion_point(field_set_allocated:CMDRoomUserInfo.videoUrl)
}

// -------------------------------------------------------------------

// CMDRoomUserInfos

// repeated .CMDRoomUserInfo UserInfo = 1;
inline int CMDRoomUserInfos::userinfo_size() const {
  return userinfo_.size();
}
inline void CMDRoomUserInfos::clear_userinfo() {
  userinfo_.Clear();
}
inline const ::CMDRoomUserInfo& CMDRoomUserInfos::userinfo(int index) const {
  // @@protoc_insertion_point(field_get:CMDRoomUserInfos.UserInfo)
  return userinfo_.Get(index);
}
inline ::CMDRoomUserInfo* CMDRoomUserInfos::mutable_userinfo(int index) {
  // @@protoc_insertion_point(field_mutable:CMDRoomUserInfos.UserInfo)
  return userinfo_.Mutable(index);
}
inline ::CMDRoomUserInfo* CMDRoomUserInfos::add_userinfo() {
  // @@protoc_insertion_point(field_add:CMDRoomUserInfos.UserInfo)
  return userinfo_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMDRoomUserInfo >*
CMDRoomUserInfos::mutable_userinfo() {
  // @@protoc_insertion_point(field_mutable_list:CMDRoomUserInfos.UserInfo)
  return &userinfo_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMDRoomUserInfo >&
CMDRoomUserInfos::userinfo() const {
  // @@protoc_insertion_point(field_list:CMDRoomUserInfos.UserInfo)
  return userinfo_;
}

// -------------------------------------------------------------------

// CMDUserExitRoomInfo

// optional uint32 userid = 1;
inline void CMDUserExitRoomInfo::clear_userid() {
  userid_ = 0u;
}
inline ::google::protobuf::uint32 CMDUserExitRoomInfo::userid() const {
  // @@protoc_insertion_point(field_get:CMDUserExitRoomInfo.userid)
  return userid_;
}
inline void CMDUserExitRoomInfo::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDUserExitRoomInfo.userid)
}

// optional uint32 vcbid = 2;
inline void CMDUserExitRoomInfo::clear_vcbid() {
  vcbid_ = 0u;
}
inline ::google::protobuf::uint32 CMDUserExitRoomInfo::vcbid() const {
  // @@protoc_insertion_point(field_get:CMDUserExitRoomInfo.vcbid)
  return vcbid_;
}
inline void CMDUserExitRoomInfo::set_vcbid(::google::protobuf::uint32 value) {
  
  vcbid_ = value;
  // @@protoc_insertion_point(field_set:CMDUserExitRoomInfo.vcbid)
}

// -------------------------------------------------------------------

// CMDUserExitRoomInfo_ext

// optional uint32 userid = 1;
inline void CMDUserExitRoomInfo_ext::clear_userid() {
  userid_ = 0u;
}
inline ::google::protobuf::uint32 CMDUserExitRoomInfo_ext::userid() const {
  // @@protoc_insertion_point(field_get:CMDUserExitRoomInfo_ext.userid)
  return userid_;
}
inline void CMDUserExitRoomInfo_ext::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDUserExitRoomInfo_ext.userid)
}

// optional uint32 vcbid = 2;
inline void CMDUserExitRoomInfo_ext::clear_vcbid() {
  vcbid_ = 0u;
}
inline ::google::protobuf::uint32 CMDUserExitRoomInfo_ext::vcbid() const {
  // @@protoc_insertion_point(field_get:CMDUserExitRoomInfo_ext.vcbid)
  return vcbid_;
}
inline void CMDUserExitRoomInfo_ext::set_vcbid(::google::protobuf::uint32 value) {
  
  vcbid_ = value;
  // @@protoc_insertion_point(field_set:CMDUserExitRoomInfo_ext.vcbid)
}

// optional uint32 roleType = 3;
inline void CMDUserExitRoomInfo_ext::clear_roletype() {
  roletype_ = 0u;
}
inline ::google::protobuf::uint32 CMDUserExitRoomInfo_ext::roletype() const {
  // @@protoc_insertion_point(field_get:CMDUserExitRoomInfo_ext.roleType)
  return roletype_;
}
inline void CMDUserExitRoomInfo_ext::set_roletype(::google::protobuf::uint32 value) {
  
  roletype_ = value;
  // @@protoc_insertion_point(field_set:CMDUserExitRoomInfo_ext.roleType)
}

// -------------------------------------------------------------------

// CMDUserExceptExitRoomInfo

// optional uint32 userid = 1;
inline void CMDUserExceptExitRoomInfo::clear_userid() {
  userid_ = 0u;
}
inline ::google::protobuf::uint32 CMDUserExceptExitRoomInfo::userid() const {
  // @@protoc_insertion_point(field_get:CMDUserExceptExitRoomInfo.userid)
  return userid_;
}
inline void CMDUserExceptExitRoomInfo::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDUserExceptExitRoomInfo.userid)
}

// optional uint32 vcbid = 2;
inline void CMDUserExceptExitRoomInfo::clear_vcbid() {
  vcbid_ = 0u;
}
inline ::google::protobuf::uint32 CMDUserExceptExitRoomInfo::vcbid() const {
  // @@protoc_insertion_point(field_get:CMDUserExceptExitRoomInfo.vcbid)
  return vcbid_;
}
inline void CMDUserExceptExitRoomInfo::set_vcbid(::google::protobuf::uint32 value) {
  
  vcbid_ = value;
  // @@protoc_insertion_point(field_set:CMDUserExceptExitRoomInfo.vcbid)
}

// -------------------------------------------------------------------

// CMDOperateWaitMic

// optional uint32 vcbid = 1;
inline void CMDOperateWaitMic::clear_vcbid() {
  vcbid_ = 0u;
}
inline ::google::protobuf::uint32 CMDOperateWaitMic::vcbid() const {
  // @@protoc_insertion_point(field_get:CMDOperateWaitMic.vcbid)
  return vcbid_;
}
inline void CMDOperateWaitMic::set_vcbid(::google::protobuf::uint32 value) {
  
  vcbid_ = value;
  // @@protoc_insertion_point(field_set:CMDOperateWaitMic.vcbid)
}

// optional uint32 ruunerid = 2;
inline void CMDOperateWaitMic::clear_ruunerid() {
  ruunerid_ = 0u;
}
inline ::google::protobuf::uint32 CMDOperateWaitMic::ruunerid() const {
  // @@protoc_insertion_point(field_get:CMDOperateWaitMic.ruunerid)
  return ruunerid_;
}
inline void CMDOperateWaitMic::set_ruunerid(::google::protobuf::uint32 value) {
  
  ruunerid_ = value;
  // @@protoc_insertion_point(field_set:CMDOperateWaitMic.ruunerid)
}

// optional uint32 userid = 3;
inline void CMDOperateWaitMic::clear_userid() {
  userid_ = 0u;
}
inline ::google::protobuf::uint32 CMDOperateWaitMic::userid() const {
  // @@protoc_insertion_point(field_get:CMDOperateWaitMic.userid)
  return userid_;
}
inline void CMDOperateWaitMic::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDOperateWaitMic.userid)
}

// optional int32 micid = 4;
inline void CMDOperateWaitMic::clear_micid() {
  micid_ = 0;
}
inline ::google::protobuf::int32 CMDOperateWaitMic::micid() const {
  // @@protoc_insertion_point(field_get:CMDOperateWaitMic.micid)
  return micid_;
}
inline void CMDOperateWaitMic::set_micid(::google::protobuf::int32 value) {
  
  micid_ = value;
  // @@protoc_insertion_point(field_set:CMDOperateWaitMic.micid)
}

// optional int32 optype = 5;
inline void CMDOperateWaitMic::clear_optype() {
  optype_ = 0;
}
inline ::google::protobuf::int32 CMDOperateWaitMic::optype() const {
  // @@protoc_insertion_point(field_get:CMDOperateWaitMic.optype)
  return optype_;
}
inline void CMDOperateWaitMic::set_optype(::google::protobuf::int32 value) {
  
  optype_ = value;
  // @@protoc_insertion_point(field_set:CMDOperateWaitMic.optype)
}

// -------------------------------------------------------------------

// CMDChangeWaitMicIndexResp

// optional uint32 vcbid = 1;
inline void CMDChangeWaitMicIndexResp::clear_vcbid() {
  vcbid_ = 0u;
}
inline ::google::protobuf::uint32 CMDChangeWaitMicIndexResp::vcbid() const {
  // @@protoc_insertion_point(field_get:CMDChangeWaitMicIndexResp.vcbid)
  return vcbid_;
}
inline void CMDChangeWaitMicIndexResp::set_vcbid(::google::protobuf::uint32 value) {
  
  vcbid_ = value;
  // @@protoc_insertion_point(field_set:CMDChangeWaitMicIndexResp.vcbid)
}

// optional .CMDErrCode errInfo = 2;
inline bool CMDChangeWaitMicIndexResp::has_errinfo() const {
  return !_is_default_instance_ && errinfo_ != NULL;
}
inline void CMDChangeWaitMicIndexResp::clear_errinfo() {
  if (GetArenaNoVirtual() == NULL && errinfo_ != NULL) delete errinfo_;
  errinfo_ = NULL;
}
inline const ::CMDErrCode& CMDChangeWaitMicIndexResp::errinfo() const {
  // @@protoc_insertion_point(field_get:CMDChangeWaitMicIndexResp.errInfo)
  return errinfo_ != NULL ? *errinfo_ : *default_instance_->errinfo_;
}
inline ::CMDErrCode* CMDChangeWaitMicIndexResp::mutable_errinfo() {
  
  if (errinfo_ == NULL) {
    errinfo_ = new ::CMDErrCode;
  }
  // @@protoc_insertion_point(field_mutable:CMDChangeWaitMicIndexResp.errInfo)
  return errinfo_;
}
inline ::CMDErrCode* CMDChangeWaitMicIndexResp::release_errinfo() {
  // @@protoc_insertion_point(field_release:CMDChangeWaitMicIndexResp.errInfo)
  
  ::CMDErrCode* temp = errinfo_;
  errinfo_ = NULL;
  return temp;
}
inline void CMDChangeWaitMicIndexResp::set_allocated_errinfo(::CMDErrCode* errinfo) {
  delete errinfo_;
  errinfo_ = errinfo;
  if (errinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDChangeWaitMicIndexResp.errInfo)
}

// -------------------------------------------------------------------

// CMDChangeWaitMicIndexNoty

// optional uint32 vcbid = 1;
inline void CMDChangeWaitMicIndexNoty::clear_vcbid() {
  vcbid_ = 0u;
}
inline ::google::protobuf::uint32 CMDChangeWaitMicIndexNoty::vcbid() const {
  // @@protoc_insertion_point(field_get:CMDChangeWaitMicIndexNoty.vcbid)
  return vcbid_;
}
inline void CMDChangeWaitMicIndexNoty::set_vcbid(::google::protobuf::uint32 value) {
  
  vcbid_ = value;
  // @@protoc_insertion_point(field_set:CMDChangeWaitMicIndexNoty.vcbid)
}

// optional uint32 ruunerid = 2;
inline void CMDChangeWaitMicIndexNoty::clear_ruunerid() {
  ruunerid_ = 0u;
}
inline ::google::protobuf::uint32 CMDChangeWaitMicIndexNoty::ruunerid() const {
  // @@protoc_insertion_point(field_get:CMDChangeWaitMicIndexNoty.ruunerid)
  return ruunerid_;
}
inline void CMDChangeWaitMicIndexNoty::set_ruunerid(::google::protobuf::uint32 value) {
  
  ruunerid_ = value;
  // @@protoc_insertion_point(field_set:CMDChangeWaitMicIndexNoty.ruunerid)
}

// optional uint32 userid = 3;
inline void CMDChangeWaitMicIndexNoty::clear_userid() {
  userid_ = 0u;
}
inline ::google::protobuf::uint32 CMDChangeWaitMicIndexNoty::userid() const {
  // @@protoc_insertion_point(field_get:CMDChangeWaitMicIndexNoty.userid)
  return userid_;
}
inline void CMDChangeWaitMicIndexNoty::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDChangeWaitMicIndexNoty.userid)
}

// optional int32 micid = 4;
inline void CMDChangeWaitMicIndexNoty::clear_micid() {
  micid_ = 0;
}
inline ::google::protobuf::int32 CMDChangeWaitMicIndexNoty::micid() const {
  // @@protoc_insertion_point(field_get:CMDChangeWaitMicIndexNoty.micid)
  return micid_;
}
inline void CMDChangeWaitMicIndexNoty::set_micid(::google::protobuf::int32 value) {
  
  micid_ = value;
  // @@protoc_insertion_point(field_set:CMDChangeWaitMicIndexNoty.micid)
}

// optional int32 optype = 5;
inline void CMDChangeWaitMicIndexNoty::clear_optype() {
  optype_ = 0;
}
inline ::google::protobuf::int32 CMDChangeWaitMicIndexNoty::optype() const {
  // @@protoc_insertion_point(field_get:CMDChangeWaitMicIndexNoty.optype)
  return optype_;
}
inline void CMDChangeWaitMicIndexNoty::set_optype(::google::protobuf::int32 value) {
  
  optype_ = value;
  // @@protoc_insertion_point(field_set:CMDChangeWaitMicIndexNoty.optype)
}

// -------------------------------------------------------------------

// CMDRoomMicModSet

// optional int32 vcbid = 1;
inline void CMDRoomMicModSet::clear_vcbid() {
  vcbid_ = 0;
}
inline ::google::protobuf::int32 CMDRoomMicModSet::vcbid() const {
  // @@protoc_insertion_point(field_get:CMDRoomMicModSet.vcbid)
  return vcbid_;
}
inline void CMDRoomMicModSet::set_vcbid(::google::protobuf::int32 value) {
  
  vcbid_ = value;
  // @@protoc_insertion_point(field_set:CMDRoomMicModSet.vcbid)
}

// optional int32 micstatus = 2;
inline void CMDRoomMicModSet::clear_micstatus() {
  micstatus_ = 0;
}
inline ::google::protobuf::int32 CMDRoomMicModSet::micstatus() const {
  // @@protoc_insertion_point(field_get:CMDRoomMicModSet.micstatus)
  return micstatus_;
}
inline void CMDRoomMicModSet::set_micstatus(::google::protobuf::int32 value) {
  
  micstatus_ = value;
  // @@protoc_insertion_point(field_set:CMDRoomMicModSet.micstatus)
}

// -------------------------------------------------------------------

// CMDUserKickoutRoomInfo

// optional uint32 vcbid = 1;
inline void CMDUserKickoutRoomInfo::clear_vcbid() {
  vcbid_ = 0u;
}
inline ::google::protobuf::uint32 CMDUserKickoutRoomInfo::vcbid() const {
  // @@protoc_insertion_point(field_get:CMDUserKickoutRoomInfo.vcbid)
  return vcbid_;
}
inline void CMDUserKickoutRoomInfo::set_vcbid(::google::protobuf::uint32 value) {
  
  vcbid_ = value;
  // @@protoc_insertion_point(field_set:CMDUserKickoutRoomInfo.vcbid)
}

// optional uint32 srcid = 2;
inline void CMDUserKickoutRoomInfo::clear_srcid() {
  srcid_ = 0u;
}
inline ::google::protobuf::uint32 CMDUserKickoutRoomInfo::srcid() const {
  // @@protoc_insertion_point(field_get:CMDUserKickoutRoomInfo.srcid)
  return srcid_;
}
inline void CMDUserKickoutRoomInfo::set_srcid(::google::protobuf::uint32 value) {
  
  srcid_ = value;
  // @@protoc_insertion_point(field_set:CMDUserKickoutRoomInfo.srcid)
}

// optional uint32 toid = 3;
inline void CMDUserKickoutRoomInfo::clear_toid() {
  toid_ = 0u;
}
inline ::google::protobuf::uint32 CMDUserKickoutRoomInfo::toid() const {
  // @@protoc_insertion_point(field_get:CMDUserKickoutRoomInfo.toid)
  return toid_;
}
inline void CMDUserKickoutRoomInfo::set_toid(::google::protobuf::uint32 value) {
  
  toid_ = value;
  // @@protoc_insertion_point(field_set:CMDUserKickoutRoomInfo.toid)
}

// optional int32 resonid = 4;
inline void CMDUserKickoutRoomInfo::clear_resonid() {
  resonid_ = 0;
}
inline ::google::protobuf::int32 CMDUserKickoutRoomInfo::resonid() const {
  // @@protoc_insertion_point(field_get:CMDUserKickoutRoomInfo.resonid)
  return resonid_;
}
inline void CMDUserKickoutRoomInfo::set_resonid(::google::protobuf::int32 value) {
  
  resonid_ = value;
  // @@protoc_insertion_point(field_set:CMDUserKickoutRoomInfo.resonid)
}

// optional int32 mins = 5;
inline void CMDUserKickoutRoomInfo::clear_mins() {
  mins_ = 0;
}
inline ::google::protobuf::int32 CMDUserKickoutRoomInfo::mins() const {
  // @@protoc_insertion_point(field_get:CMDUserKickoutRoomInfo.mins)
  return mins_;
}
inline void CMDUserKickoutRoomInfo::set_mins(::google::protobuf::int32 value) {
  
  mins_ = value;
  // @@protoc_insertion_point(field_set:CMDUserKickoutRoomInfo.mins)
}

// -------------------------------------------------------------------

// CMDUserKickoutRoomResp

// optional .CMDErrCode errInfo = 1;
inline bool CMDUserKickoutRoomResp::has_errinfo() const {
  return !_is_default_instance_ && errinfo_ != NULL;
}
inline void CMDUserKickoutRoomResp::clear_errinfo() {
  if (GetArenaNoVirtual() == NULL && errinfo_ != NULL) delete errinfo_;
  errinfo_ = NULL;
}
inline const ::CMDErrCode& CMDUserKickoutRoomResp::errinfo() const {
  // @@protoc_insertion_point(field_get:CMDUserKickoutRoomResp.errInfo)
  return errinfo_ != NULL ? *errinfo_ : *default_instance_->errinfo_;
}
inline ::CMDErrCode* CMDUserKickoutRoomResp::mutable_errinfo() {
  
  if (errinfo_ == NULL) {
    errinfo_ = new ::CMDErrCode;
  }
  // @@protoc_insertion_point(field_mutable:CMDUserKickoutRoomResp.errInfo)
  return errinfo_;
}
inline ::CMDErrCode* CMDUserKickoutRoomResp::release_errinfo() {
  // @@protoc_insertion_point(field_release:CMDUserKickoutRoomResp.errInfo)
  
  ::CMDErrCode* temp = errinfo_;
  errinfo_ = NULL;
  return temp;
}
inline void CMDUserKickoutRoomResp::set_allocated_errinfo(::CMDErrCode* errinfo) {
  delete errinfo_;
  errinfo_ = errinfo;
  if (errinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDUserKickoutRoomResp.errInfo)
}

// optional uint32 vcbid = 2;
inline void CMDUserKickoutRoomResp::clear_vcbid() {
  vcbid_ = 0u;
}
inline ::google::protobuf::uint32 CMDUserKickoutRoomResp::vcbid() const {
  // @@protoc_insertion_point(field_get:CMDUserKickoutRoomResp.vcbid)
  return vcbid_;
}
inline void CMDUserKickoutRoomResp::set_vcbid(::google::protobuf::uint32 value) {
  
  vcbid_ = value;
  // @@protoc_insertion_point(field_set:CMDUserKickoutRoomResp.vcbid)
}

// optional uint32 srcid = 3;
inline void CMDUserKickoutRoomResp::clear_srcid() {
  srcid_ = 0u;
}
inline ::google::protobuf::uint32 CMDUserKickoutRoomResp::srcid() const {
  // @@protoc_insertion_point(field_get:CMDUserKickoutRoomResp.srcid)
  return srcid_;
}
inline void CMDUserKickoutRoomResp::set_srcid(::google::protobuf::uint32 value) {
  
  srcid_ = value;
  // @@protoc_insertion_point(field_set:CMDUserKickoutRoomResp.srcid)
}

// optional uint32 toid = 4;
inline void CMDUserKickoutRoomResp::clear_toid() {
  toid_ = 0u;
}
inline ::google::protobuf::uint32 CMDUserKickoutRoomResp::toid() const {
  // @@protoc_insertion_point(field_get:CMDUserKickoutRoomResp.toid)
  return toid_;
}
inline void CMDUserKickoutRoomResp::set_toid(::google::protobuf::uint32 value) {
  
  toid_ = value;
  // @@protoc_insertion_point(field_set:CMDUserKickoutRoomResp.toid)
}

// -------------------------------------------------------------------

// CMDRoomInfoReq

// optional uint32 vcbid = 1;
inline void CMDRoomInfoReq::clear_vcbid() {
  vcbid_ = 0u;
}
inline ::google::protobuf::uint32 CMDRoomInfoReq::vcbid() const {
  // @@protoc_insertion_point(field_get:CMDRoomInfoReq.vcbid)
  return vcbid_;
}
inline void CMDRoomInfoReq::set_vcbid(::google::protobuf::uint32 value) {
  
  vcbid_ = value;
  // @@protoc_insertion_point(field_set:CMDRoomInfoReq.vcbid)
}

// optional uint32 runnerid = 2;
inline void CMDRoomInfoReq::clear_runnerid() {
  runnerid_ = 0u;
}
inline ::google::protobuf::uint32 CMDRoomInfoReq::runnerid() const {
  // @@protoc_insertion_point(field_get:CMDRoomInfoReq.runnerid)
  return runnerid_;
}
inline void CMDRoomInfoReq::set_runnerid(::google::protobuf::uint32 value) {
  
  runnerid_ = value;
  // @@protoc_insertion_point(field_set:CMDRoomInfoReq.runnerid)
}

// optional .CMDString roomname = 3;
inline bool CMDRoomInfoReq::has_roomname() const {
  return !_is_default_instance_ && roomname_ != NULL;
}
inline void CMDRoomInfoReq::clear_roomname() {
  if (GetArenaNoVirtual() == NULL && roomname_ != NULL) delete roomname_;
  roomname_ = NULL;
}
inline const ::CMDString& CMDRoomInfoReq::roomname() const {
  // @@protoc_insertion_point(field_get:CMDRoomInfoReq.roomname)
  return roomname_ != NULL ? *roomname_ : *default_instance_->roomname_;
}
inline ::CMDString* CMDRoomInfoReq::mutable_roomname() {
  
  if (roomname_ == NULL) {
    roomname_ = new ::CMDString;
  }
  // @@protoc_insertion_point(field_mutable:CMDRoomInfoReq.roomname)
  return roomname_;
}
inline ::CMDString* CMDRoomInfoReq::release_roomname() {
  // @@protoc_insertion_point(field_release:CMDRoomInfoReq.roomname)
  
  ::CMDString* temp = roomname_;
  roomname_ = NULL;
  return temp;
}
inline void CMDRoomInfoReq::set_allocated_roomname(::CMDString* roomname) {
  delete roomname_;
  roomname_ = roomname;
  if (roomname) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDRoomInfoReq.roomname)
}

// optional .CMDString roomnotice = 4;
inline bool CMDRoomInfoReq::has_roomnotice() const {
  return !_is_default_instance_ && roomnotice_ != NULL;
}
inline void CMDRoomInfoReq::clear_roomnotice() {
  if (GetArenaNoVirtual() == NULL && roomnotice_ != NULL) delete roomnotice_;
  roomnotice_ = NULL;
}
inline const ::CMDString& CMDRoomInfoReq::roomnotice() const {
  // @@protoc_insertion_point(field_get:CMDRoomInfoReq.roomnotice)
  return roomnotice_ != NULL ? *roomnotice_ : *default_instance_->roomnotice_;
}
inline ::CMDString* CMDRoomInfoReq::mutable_roomnotice() {
  
  if (roomnotice_ == NULL) {
    roomnotice_ = new ::CMDString;
  }
  // @@protoc_insertion_point(field_mutable:CMDRoomInfoReq.roomnotice)
  return roomnotice_;
}
inline ::CMDString* CMDRoomInfoReq::release_roomnotice() {
  // @@protoc_insertion_point(field_release:CMDRoomInfoReq.roomnotice)
  
  ::CMDString* temp = roomnotice_;
  roomnotice_ = NULL;
  return temp;
}
inline void CMDRoomInfoReq::set_allocated_roomnotice(::CMDString* roomnotice) {
  delete roomnotice_;
  roomnotice_ = roomnotice;
  if (roomnotice) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDRoomInfoReq.roomnotice)
}

// optional .CMDString roomremark = 5;
inline bool CMDRoomInfoReq::has_roomremark() const {
  return !_is_default_instance_ && roomremark_ != NULL;
}
inline void CMDRoomInfoReq::clear_roomremark() {
  if (GetArenaNoVirtual() == NULL && roomremark_ != NULL) delete roomremark_;
  roomremark_ = NULL;
}
inline const ::CMDString& CMDRoomInfoReq::roomremark() const {
  // @@protoc_insertion_point(field_get:CMDRoomInfoReq.roomremark)
  return roomremark_ != NULL ? *roomremark_ : *default_instance_->roomremark_;
}
inline ::CMDString* CMDRoomInfoReq::mutable_roomremark() {
  
  if (roomremark_ == NULL) {
    roomremark_ = new ::CMDString;
  }
  // @@protoc_insertion_point(field_mutable:CMDRoomInfoReq.roomremark)
  return roomremark_;
}
inline ::CMDString* CMDRoomInfoReq::release_roomremark() {
  // @@protoc_insertion_point(field_release:CMDRoomInfoReq.roomremark)
  
  ::CMDString* temp = roomremark_;
  roomremark_ = NULL;
  return temp;
}
inline void CMDRoomInfoReq::set_allocated_roomremark(::CMDString* roomremark) {
  delete roomremark_;
  roomremark_ = roomremark;
  if (roomremark) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDRoomInfoReq.roomremark)
}

// -------------------------------------------------------------------

// CMDRoomInfoResp

// optional uint32 vcbid = 1;
inline void CMDRoomInfoResp::clear_vcbid() {
  vcbid_ = 0u;
}
inline ::google::protobuf::uint32 CMDRoomInfoResp::vcbid() const {
  // @@protoc_insertion_point(field_get:CMDRoomInfoResp.vcbid)
  return vcbid_;
}
inline void CMDRoomInfoResp::set_vcbid(::google::protobuf::uint32 value) {
  
  vcbid_ = value;
  // @@protoc_insertion_point(field_set:CMDRoomInfoResp.vcbid)
}

// optional uint32 runnerid = 2;
inline void CMDRoomInfoResp::clear_runnerid() {
  runnerid_ = 0u;
}
inline ::google::protobuf::uint32 CMDRoomInfoResp::runnerid() const {
  // @@protoc_insertion_point(field_get:CMDRoomInfoResp.runnerid)
  return runnerid_;
}
inline void CMDRoomInfoResp::set_runnerid(::google::protobuf::uint32 value) {
  
  runnerid_ = value;
  // @@protoc_insertion_point(field_set:CMDRoomInfoResp.runnerid)
}

// optional .CMDErrCode errInfo = 3;
inline bool CMDRoomInfoResp::has_errinfo() const {
  return !_is_default_instance_ && errinfo_ != NULL;
}
inline void CMDRoomInfoResp::clear_errinfo() {
  if (GetArenaNoVirtual() == NULL && errinfo_ != NULL) delete errinfo_;
  errinfo_ = NULL;
}
inline const ::CMDErrCode& CMDRoomInfoResp::errinfo() const {
  // @@protoc_insertion_point(field_get:CMDRoomInfoResp.errInfo)
  return errinfo_ != NULL ? *errinfo_ : *default_instance_->errinfo_;
}
inline ::CMDErrCode* CMDRoomInfoResp::mutable_errinfo() {
  
  if (errinfo_ == NULL) {
    errinfo_ = new ::CMDErrCode;
  }
  // @@protoc_insertion_point(field_mutable:CMDRoomInfoResp.errInfo)
  return errinfo_;
}
inline ::CMDErrCode* CMDRoomInfoResp::release_errinfo() {
  // @@protoc_insertion_point(field_release:CMDRoomInfoResp.errInfo)
  
  ::CMDErrCode* temp = errinfo_;
  errinfo_ = NULL;
  return temp;
}
inline void CMDRoomInfoResp::set_allocated_errinfo(::CMDErrCode* errinfo) {
  delete errinfo_;
  errinfo_ = errinfo;
  if (errinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDRoomInfoResp.errInfo)
}

// -------------------------------------------------------------------

// CMDNoticeInfo

// optional uint32 noticeUserID = 1;
inline void CMDNoticeInfo::clear_noticeuserid() {
  noticeuserid_ = 0u;
}
inline ::google::protobuf::uint32 CMDNoticeInfo::noticeuserid() const {
  // @@protoc_insertion_point(field_get:CMDNoticeInfo.noticeUserID)
  return noticeuserid_;
}
inline void CMDNoticeInfo::set_noticeuserid(::google::protobuf::uint32 value) {
  
  noticeuserid_ = value;
  // @@protoc_insertion_point(field_set:CMDNoticeInfo.noticeUserID)
}

// optional string roomNotice = 2;
inline void CMDNoticeInfo::clear_roomnotice() {
  roomnotice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMDNoticeInfo::roomnotice() const {
  // @@protoc_insertion_point(field_get:CMDNoticeInfo.roomNotice)
  return roomnotice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDNoticeInfo::set_roomnotice(const ::std::string& value) {
  
  roomnotice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDNoticeInfo.roomNotice)
}
inline void CMDNoticeInfo::set_roomnotice(const char* value) {
  
  roomnotice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDNoticeInfo.roomNotice)
}
inline void CMDNoticeInfo::set_roomnotice(const char* value, size_t size) {
  
  roomnotice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDNoticeInfo.roomNotice)
}
inline ::std::string* CMDNoticeInfo::mutable_roomnotice() {
  
  // @@protoc_insertion_point(field_mutable:CMDNoticeInfo.roomNotice)
  return roomnotice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMDNoticeInfo::release_roomnotice() {
  // @@protoc_insertion_point(field_release:CMDNoticeInfo.roomNotice)
  
  return roomnotice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDNoticeInfo::set_allocated_roomnotice(::std::string* roomnotice) {
  if (roomnotice != NULL) {
    
  } else {
    
  }
  roomnotice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), roomnotice);
  // @@protoc_insertion_point(field_set_allocated:CMDNoticeInfo.roomNotice)
}

// optional uint32 noticeTime = 3;
inline void CMDNoticeInfo::clear_noticetime() {
  noticetime_ = 0u;
}
inline ::google::protobuf::uint32 CMDNoticeInfo::noticetime() const {
  // @@protoc_insertion_point(field_get:CMDNoticeInfo.noticeTime)
  return noticetime_;
}
inline void CMDNoticeInfo::set_noticetime(::google::protobuf::uint32 value) {
  
  noticetime_ = value;
  // @@protoc_insertion_point(field_set:CMDNoticeInfo.noticeTime)
}

// -------------------------------------------------------------------

// CMDRoomBaseInfo

// optional uint32 vcbid = 1;
inline void CMDRoomBaseInfo::clear_vcbid() {
  vcbid_ = 0u;
}
inline ::google::protobuf::uint32 CMDRoomBaseInfo::vcbid() const {
  // @@protoc_insertion_point(field_get:CMDRoomBaseInfo.vcbid)
  return vcbid_;
}
inline void CMDRoomBaseInfo::set_vcbid(::google::protobuf::uint32 value) {
  
  vcbid_ = value;
  // @@protoc_insertion_point(field_set:CMDRoomBaseInfo.vcbid)
}

// optional uint32 seats = 2;
inline void CMDRoomBaseInfo::clear_seats() {
  seats_ = 0u;
}
inline ::google::protobuf::uint32 CMDRoomBaseInfo::seats() const {
  // @@protoc_insertion_point(field_get:CMDRoomBaseInfo.seats)
  return seats_;
}
inline void CMDRoomBaseInfo::set_seats(::google::protobuf::uint32 value) {
  
  seats_ = value;
  // @@protoc_insertion_point(field_set:CMDRoomBaseInfo.seats)
}

// optional uint32 creatorid = 3;
inline void CMDRoomBaseInfo::clear_creatorid() {
  creatorid_ = 0u;
}
inline ::google::protobuf::uint32 CMDRoomBaseInfo::creatorid() const {
  // @@protoc_insertion_point(field_get:CMDRoomBaseInfo.creatorid)
  return creatorid_;
}
inline void CMDRoomBaseInfo::set_creatorid(::google::protobuf::uint32 value) {
  
  creatorid_ = value;
  // @@protoc_insertion_point(field_set:CMDRoomBaseInfo.creatorid)
}

// optional uint32 opstate = 4;
inline void CMDRoomBaseInfo::clear_opstate() {
  opstate_ = 0u;
}
inline ::google::protobuf::uint32 CMDRoomBaseInfo::opstate() const {
  // @@protoc_insertion_point(field_get:CMDRoomBaseInfo.opstate)
  return opstate_;
}
inline void CMDRoomBaseInfo::set_opstate(::google::protobuf::uint32 value) {
  
  opstate_ = value;
  // @@protoc_insertion_point(field_set:CMDRoomBaseInfo.opstate)
}

// optional .CMDString roomname = 5;
inline bool CMDRoomBaseInfo::has_roomname() const {
  return !_is_default_instance_ && roomname_ != NULL;
}
inline void CMDRoomBaseInfo::clear_roomname() {
  if (GetArenaNoVirtual() == NULL && roomname_ != NULL) delete roomname_;
  roomname_ = NULL;
}
inline const ::CMDString& CMDRoomBaseInfo::roomname() const {
  // @@protoc_insertion_point(field_get:CMDRoomBaseInfo.roomname)
  return roomname_ != NULL ? *roomname_ : *default_instance_->roomname_;
}
inline ::CMDString* CMDRoomBaseInfo::mutable_roomname() {
  
  if (roomname_ == NULL) {
    roomname_ = new ::CMDString;
  }
  // @@protoc_insertion_point(field_mutable:CMDRoomBaseInfo.roomname)
  return roomname_;
}
inline ::CMDString* CMDRoomBaseInfo::release_roomname() {
  // @@protoc_insertion_point(field_release:CMDRoomBaseInfo.roomname)
  
  ::CMDString* temp = roomname_;
  roomname_ = NULL;
  return temp;
}
inline void CMDRoomBaseInfo::set_allocated_roomname(::CMDString* roomname) {
  delete roomname_;
  roomname_ = roomname;
  if (roomname) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDRoomBaseInfo.roomname)
}

// optional .CMDString icon = 6;
inline bool CMDRoomBaseInfo::has_icon() const {
  return !_is_default_instance_ && icon_ != NULL;
}
inline void CMDRoomBaseInfo::clear_icon() {
  if (GetArenaNoVirtual() == NULL && icon_ != NULL) delete icon_;
  icon_ = NULL;
}
inline const ::CMDString& CMDRoomBaseInfo::icon() const {
  // @@protoc_insertion_point(field_get:CMDRoomBaseInfo.icon)
  return icon_ != NULL ? *icon_ : *default_instance_->icon_;
}
inline ::CMDString* CMDRoomBaseInfo::mutable_icon() {
  
  if (icon_ == NULL) {
    icon_ = new ::CMDString;
  }
  // @@protoc_insertion_point(field_mutable:CMDRoomBaseInfo.icon)
  return icon_;
}
inline ::CMDString* CMDRoomBaseInfo::release_icon() {
  // @@protoc_insertion_point(field_release:CMDRoomBaseInfo.icon)
  
  ::CMDString* temp = icon_;
  icon_ = NULL;
  return temp;
}
inline void CMDRoomBaseInfo::set_allocated_icon(::CMDString* icon) {
  delete icon_;
  icon_ = icon;
  if (icon) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDRoomBaseInfo.icon)
}

// optional .CMDNoticeInfo noticeInfo = 7;
inline bool CMDRoomBaseInfo::has_noticeinfo() const {
  return !_is_default_instance_ && noticeinfo_ != NULL;
}
inline void CMDRoomBaseInfo::clear_noticeinfo() {
  if (GetArenaNoVirtual() == NULL && noticeinfo_ != NULL) delete noticeinfo_;
  noticeinfo_ = NULL;
}
inline const ::CMDNoticeInfo& CMDRoomBaseInfo::noticeinfo() const {
  // @@protoc_insertion_point(field_get:CMDRoomBaseInfo.noticeInfo)
  return noticeinfo_ != NULL ? *noticeinfo_ : *default_instance_->noticeinfo_;
}
inline ::CMDNoticeInfo* CMDRoomBaseInfo::mutable_noticeinfo() {
  
  if (noticeinfo_ == NULL) {
    noticeinfo_ = new ::CMDNoticeInfo;
  }
  // @@protoc_insertion_point(field_mutable:CMDRoomBaseInfo.noticeInfo)
  return noticeinfo_;
}
inline ::CMDNoticeInfo* CMDRoomBaseInfo::release_noticeinfo() {
  // @@protoc_insertion_point(field_release:CMDRoomBaseInfo.noticeInfo)
  
  ::CMDNoticeInfo* temp = noticeinfo_;
  noticeinfo_ = NULL;
  return temp;
}
inline void CMDRoomBaseInfo::set_allocated_noticeinfo(::CMDNoticeInfo* noticeinfo) {
  delete noticeinfo_;
  noticeinfo_ = noticeinfo;
  if (noticeinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDRoomBaseInfo.noticeInfo)
}

// optional .CMDString roomremark = 8;
inline bool CMDRoomBaseInfo::has_roomremark() const {
  return !_is_default_instance_ && roomremark_ != NULL;
}
inline void CMDRoomBaseInfo::clear_roomremark() {
  if (GetArenaNoVirtual() == NULL && roomremark_ != NULL) delete roomremark_;
  roomremark_ = NULL;
}
inline const ::CMDString& CMDRoomBaseInfo::roomremark() const {
  // @@protoc_insertion_point(field_get:CMDRoomBaseInfo.roomremark)
  return roomremark_ != NULL ? *roomremark_ : *default_instance_->roomremark_;
}
inline ::CMDString* CMDRoomBaseInfo::mutable_roomremark() {
  
  if (roomremark_ == NULL) {
    roomremark_ = new ::CMDString;
  }
  // @@protoc_insertion_point(field_mutable:CMDRoomBaseInfo.roomremark)
  return roomremark_;
}
inline ::CMDString* CMDRoomBaseInfo::release_roomremark() {
  // @@protoc_insertion_point(field_release:CMDRoomBaseInfo.roomremark)
  
  ::CMDString* temp = roomremark_;
  roomremark_ = NULL;
  return temp;
}
inline void CMDRoomBaseInfo::set_allocated_roomremark(::CMDString* roomremark) {
  delete roomremark_;
  roomremark_ = roomremark;
  if (roomremark) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDRoomBaseInfo.roomremark)
}

// -------------------------------------------------------------------

// CMDGroupMemberReq

// optional uint32 userID = 1;
inline void CMDGroupMemberReq::clear_userid() {
  userid_ = 0u;
}
inline ::google::protobuf::uint32 CMDGroupMemberReq::userid() const {
  // @@protoc_insertion_point(field_get:CMDGroupMemberReq.userID)
  return userid_;
}
inline void CMDGroupMemberReq::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDGroupMemberReq.userID)
}

// optional uint32 groupID = 2;
inline void CMDGroupMemberReq::clear_groupid() {
  groupid_ = 0u;
}
inline ::google::protobuf::uint32 CMDGroupMemberReq::groupid() const {
  // @@protoc_insertion_point(field_get:CMDGroupMemberReq.groupID)
  return groupid_;
}
inline void CMDGroupMemberReq::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDGroupMemberReq.groupID)
}

// -------------------------------------------------------------------

// CMDUserGroupInfoReq

// optional uint32 userID = 1;
inline void CMDUserGroupInfoReq::clear_userid() {
  userid_ = 0u;
}
inline ::google::protobuf::uint32 CMDUserGroupInfoReq::userid() const {
  // @@protoc_insertion_point(field_get:CMDUserGroupInfoReq.userID)
  return userid_;
}
inline void CMDUserGroupInfoReq::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDUserGroupInfoReq.userID)
}

// optional uint32 groupID = 2;
inline void CMDUserGroupInfoReq::clear_groupid() {
  groupid_ = 0u;
}
inline ::google::protobuf::uint32 CMDUserGroupInfoReq::groupid() const {
  // @@protoc_insertion_point(field_get:CMDUserGroupInfoReq.groupID)
  return groupid_;
}
inline void CMDUserGroupInfoReq::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDUserGroupInfoReq.groupID)
}

// -------------------------------------------------------------------

// CMDUserGroupInfoResp

// optional .CMDErrCode errInfo = 1;
inline bool CMDUserGroupInfoResp::has_errinfo() const {
  return !_is_default_instance_ && errinfo_ != NULL;
}
inline void CMDUserGroupInfoResp::clear_errinfo() {
  if (GetArenaNoVirtual() == NULL && errinfo_ != NULL) delete errinfo_;
  errinfo_ = NULL;
}
inline const ::CMDErrCode& CMDUserGroupInfoResp::errinfo() const {
  // @@protoc_insertion_point(field_get:CMDUserGroupInfoResp.errInfo)
  return errinfo_ != NULL ? *errinfo_ : *default_instance_->errinfo_;
}
inline ::CMDErrCode* CMDUserGroupInfoResp::mutable_errinfo() {
  
  if (errinfo_ == NULL) {
    errinfo_ = new ::CMDErrCode;
  }
  // @@protoc_insertion_point(field_mutable:CMDUserGroupInfoResp.errInfo)
  return errinfo_;
}
inline ::CMDErrCode* CMDUserGroupInfoResp::release_errinfo() {
  // @@protoc_insertion_point(field_release:CMDUserGroupInfoResp.errInfo)
  
  ::CMDErrCode* temp = errinfo_;
  errinfo_ = NULL;
  return temp;
}
inline void CMDUserGroupInfoResp::set_allocated_errinfo(::CMDErrCode* errinfo) {
  delete errinfo_;
  errinfo_ = errinfo;
  if (errinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDUserGroupInfoResp.errInfo)
}

// optional .CMDRoomUserInfo userInfo = 2;
inline bool CMDUserGroupInfoResp::has_userinfo() const {
  return !_is_default_instance_ && userinfo_ != NULL;
}
inline void CMDUserGroupInfoResp::clear_userinfo() {
  if (GetArenaNoVirtual() == NULL && userinfo_ != NULL) delete userinfo_;
  userinfo_ = NULL;
}
inline const ::CMDRoomUserInfo& CMDUserGroupInfoResp::userinfo() const {
  // @@protoc_insertion_point(field_get:CMDUserGroupInfoResp.userInfo)
  return userinfo_ != NULL ? *userinfo_ : *default_instance_->userinfo_;
}
inline ::CMDRoomUserInfo* CMDUserGroupInfoResp::mutable_userinfo() {
  
  if (userinfo_ == NULL) {
    userinfo_ = new ::CMDRoomUserInfo;
  }
  // @@protoc_insertion_point(field_mutable:CMDUserGroupInfoResp.userInfo)
  return userinfo_;
}
inline ::CMDRoomUserInfo* CMDUserGroupInfoResp::release_userinfo() {
  // @@protoc_insertion_point(field_release:CMDUserGroupInfoResp.userInfo)
  
  ::CMDRoomUserInfo* temp = userinfo_;
  userinfo_ = NULL;
  return temp;
}
inline void CMDUserGroupInfoResp::set_allocated_userinfo(::CMDRoomUserInfo* userinfo) {
  delete userinfo_;
  userinfo_ = userinfo;
  if (userinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDUserGroupInfoResp.userInfo)
}

// -------------------------------------------------------------------

// CMDSetGroupMsgMuteReq

// optional uint32 userID = 1;
inline void CMDSetGroupMsgMuteReq::clear_userid() {
  userid_ = 0u;
}
inline ::google::protobuf::uint32 CMDSetGroupMsgMuteReq::userid() const {
  // @@protoc_insertion_point(field_get:CMDSetGroupMsgMuteReq.userID)
  return userid_;
}
inline void CMDSetGroupMsgMuteReq::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDSetGroupMsgMuteReq.userID)
}

// optional uint32 groupID = 2;
inline void CMDSetGroupMsgMuteReq::clear_groupid() {
  groupid_ = 0u;
}
inline ::google::protobuf::uint32 CMDSetGroupMsgMuteReq::groupid() const {
  // @@protoc_insertion_point(field_get:CMDSetGroupMsgMuteReq.groupID)
  return groupid_;
}
inline void CMDSetGroupMsgMuteReq::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDSetGroupMsgMuteReq.groupID)
}

// optional uint32 muteSet = 3;
inline void CMDSetGroupMsgMuteReq::clear_muteset() {
  muteset_ = 0u;
}
inline ::google::protobuf::uint32 CMDSetGroupMsgMuteReq::muteset() const {
  // @@protoc_insertion_point(field_get:CMDSetGroupMsgMuteReq.muteSet)
  return muteset_;
}
inline void CMDSetGroupMsgMuteReq::set_muteset(::google::protobuf::uint32 value) {
  
  muteset_ = value;
  // @@protoc_insertion_point(field_set:CMDSetGroupMsgMuteReq.muteSet)
}

// -------------------------------------------------------------------

// CMDSetGroupMsgMuteResp

// optional .CMDErrCode errInfo = 1;
inline bool CMDSetGroupMsgMuteResp::has_errinfo() const {
  return !_is_default_instance_ && errinfo_ != NULL;
}
inline void CMDSetGroupMsgMuteResp::clear_errinfo() {
  if (GetArenaNoVirtual() == NULL && errinfo_ != NULL) delete errinfo_;
  errinfo_ = NULL;
}
inline const ::CMDErrCode& CMDSetGroupMsgMuteResp::errinfo() const {
  // @@protoc_insertion_point(field_get:CMDSetGroupMsgMuteResp.errInfo)
  return errinfo_ != NULL ? *errinfo_ : *default_instance_->errinfo_;
}
inline ::CMDErrCode* CMDSetGroupMsgMuteResp::mutable_errinfo() {
  
  if (errinfo_ == NULL) {
    errinfo_ = new ::CMDErrCode;
  }
  // @@protoc_insertion_point(field_mutable:CMDSetGroupMsgMuteResp.errInfo)
  return errinfo_;
}
inline ::CMDErrCode* CMDSetGroupMsgMuteResp::release_errinfo() {
  // @@protoc_insertion_point(field_release:CMDSetGroupMsgMuteResp.errInfo)
  
  ::CMDErrCode* temp = errinfo_;
  errinfo_ = NULL;
  return temp;
}
inline void CMDSetGroupMsgMuteResp::set_allocated_errinfo(::CMDErrCode* errinfo) {
  delete errinfo_;
  errinfo_ = errinfo;
  if (errinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDSetGroupMsgMuteResp.errInfo)
}

// optional uint32 userID = 2;
inline void CMDSetGroupMsgMuteResp::clear_userid() {
  userid_ = 0u;
}
inline ::google::protobuf::uint32 CMDSetGroupMsgMuteResp::userid() const {
  // @@protoc_insertion_point(field_get:CMDSetGroupMsgMuteResp.userID)
  return userid_;
}
inline void CMDSetGroupMsgMuteResp::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDSetGroupMsgMuteResp.userID)
}

// optional uint32 groupID = 3;
inline void CMDSetGroupMsgMuteResp::clear_groupid() {
  groupid_ = 0u;
}
inline ::google::protobuf::uint32 CMDSetGroupMsgMuteResp::groupid() const {
  // @@protoc_insertion_point(field_get:CMDSetGroupMsgMuteResp.groupID)
  return groupid_;
}
inline void CMDSetGroupMsgMuteResp::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDSetGroupMsgMuteResp.groupID)
}

// -------------------------------------------------------------------

// CMDQuitGroupReq

// optional uint32 userID = 1;
inline void CMDQuitGroupReq::clear_userid() {
  userid_ = 0u;
}
inline ::google::protobuf::uint32 CMDQuitGroupReq::userid() const {
  // @@protoc_insertion_point(field_get:CMDQuitGroupReq.userID)
  return userid_;
}
inline void CMDQuitGroupReq::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDQuitGroupReq.userID)
}

// optional uint32 groupID = 2;
inline void CMDQuitGroupReq::clear_groupid() {
  groupid_ = 0u;
}
inline ::google::protobuf::uint32 CMDQuitGroupReq::groupid() const {
  // @@protoc_insertion_point(field_get:CMDQuitGroupReq.groupID)
  return groupid_;
}
inline void CMDQuitGroupReq::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDQuitGroupReq.groupID)
}

// -------------------------------------------------------------------

// CMDQuitGroupResp

// optional .CMDErrCode errInfo = 1;
inline bool CMDQuitGroupResp::has_errinfo() const {
  return !_is_default_instance_ && errinfo_ != NULL;
}
inline void CMDQuitGroupResp::clear_errinfo() {
  if (GetArenaNoVirtual() == NULL && errinfo_ != NULL) delete errinfo_;
  errinfo_ = NULL;
}
inline const ::CMDErrCode& CMDQuitGroupResp::errinfo() const {
  // @@protoc_insertion_point(field_get:CMDQuitGroupResp.errInfo)
  return errinfo_ != NULL ? *errinfo_ : *default_instance_->errinfo_;
}
inline ::CMDErrCode* CMDQuitGroupResp::mutable_errinfo() {
  
  if (errinfo_ == NULL) {
    errinfo_ = new ::CMDErrCode;
  }
  // @@protoc_insertion_point(field_mutable:CMDQuitGroupResp.errInfo)
  return errinfo_;
}
inline ::CMDErrCode* CMDQuitGroupResp::release_errinfo() {
  // @@protoc_insertion_point(field_release:CMDQuitGroupResp.errInfo)
  
  ::CMDErrCode* temp = errinfo_;
  errinfo_ = NULL;
  return temp;
}
inline void CMDQuitGroupResp::set_allocated_errinfo(::CMDErrCode* errinfo) {
  delete errinfo_;
  errinfo_ = errinfo;
  if (errinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDQuitGroupResp.errInfo)
}

// optional uint32 userID = 2;
inline void CMDQuitGroupResp::clear_userid() {
  userid_ = 0u;
}
inline ::google::protobuf::uint32 CMDQuitGroupResp::userid() const {
  // @@protoc_insertion_point(field_get:CMDQuitGroupResp.userID)
  return userid_;
}
inline void CMDQuitGroupResp::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDQuitGroupResp.userID)
}

// optional uint32 groupID = 3;
inline void CMDQuitGroupResp::clear_groupid() {
  groupid_ = 0u;
}
inline ::google::protobuf::uint32 CMDQuitGroupResp::groupid() const {
  // @@protoc_insertion_point(field_get:CMDQuitGroupResp.groupID)
  return groupid_;
}
inline void CMDQuitGroupResp::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDQuitGroupResp.groupID)
}

// -------------------------------------------------------------------

// CMDSetUserPriorityReq

// optional uint32 run_userID = 1;
inline void CMDSetUserPriorityReq::clear_run_userid() {
  run_userid_ = 0u;
}
inline ::google::protobuf::uint32 CMDSetUserPriorityReq::run_userid() const {
  // @@protoc_insertion_point(field_get:CMDSetUserPriorityReq.run_userID)
  return run_userid_;
}
inline void CMDSetUserPriorityReq::set_run_userid(::google::protobuf::uint32 value) {
  
  run_userid_ = value;
  // @@protoc_insertion_point(field_set:CMDSetUserPriorityReq.run_userID)
}

// optional uint32 to_userID = 2;
inline void CMDSetUserPriorityReq::clear_to_userid() {
  to_userid_ = 0u;
}
inline ::google::protobuf::uint32 CMDSetUserPriorityReq::to_userid() const {
  // @@protoc_insertion_point(field_get:CMDSetUserPriorityReq.to_userID)
  return to_userid_;
}
inline void CMDSetUserPriorityReq::set_to_userid(::google::protobuf::uint32 value) {
  
  to_userid_ = value;
  // @@protoc_insertion_point(field_set:CMDSetUserPriorityReq.to_userID)
}

// optional uint32 groupID = 3;
inline void CMDSetUserPriorityReq::clear_groupid() {
  groupid_ = 0u;
}
inline ::google::protobuf::uint32 CMDSetUserPriorityReq::groupid() const {
  // @@protoc_insertion_point(field_get:CMDSetUserPriorityReq.groupID)
  return groupid_;
}
inline void CMDSetUserPriorityReq::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDSetUserPriorityReq.groupID)
}

// optional uint32 roleType = 4;
inline void CMDSetUserPriorityReq::clear_roletype() {
  roletype_ = 0u;
}
inline ::google::protobuf::uint32 CMDSetUserPriorityReq::roletype() const {
  // @@protoc_insertion_point(field_get:CMDSetUserPriorityReq.roleType)
  return roletype_;
}
inline void CMDSetUserPriorityReq::set_roletype(::google::protobuf::uint32 value) {
  
  roletype_ = value;
  // @@protoc_insertion_point(field_set:CMDSetUserPriorityReq.roleType)
}

// -------------------------------------------------------------------

// CMDSetUserPriorityResp

// optional .CMDErrCode errInfo = 1;
inline bool CMDSetUserPriorityResp::has_errinfo() const {
  return !_is_default_instance_ && errinfo_ != NULL;
}
inline void CMDSetUserPriorityResp::clear_errinfo() {
  if (GetArenaNoVirtual() == NULL && errinfo_ != NULL) delete errinfo_;
  errinfo_ = NULL;
}
inline const ::CMDErrCode& CMDSetUserPriorityResp::errinfo() const {
  // @@protoc_insertion_point(field_get:CMDSetUserPriorityResp.errInfo)
  return errinfo_ != NULL ? *errinfo_ : *default_instance_->errinfo_;
}
inline ::CMDErrCode* CMDSetUserPriorityResp::mutable_errinfo() {
  
  if (errinfo_ == NULL) {
    errinfo_ = new ::CMDErrCode;
  }
  // @@protoc_insertion_point(field_mutable:CMDSetUserPriorityResp.errInfo)
  return errinfo_;
}
inline ::CMDErrCode* CMDSetUserPriorityResp::release_errinfo() {
  // @@protoc_insertion_point(field_release:CMDSetUserPriorityResp.errInfo)
  
  ::CMDErrCode* temp = errinfo_;
  errinfo_ = NULL;
  return temp;
}
inline void CMDSetUserPriorityResp::set_allocated_errinfo(::CMDErrCode* errinfo) {
  delete errinfo_;
  errinfo_ = errinfo;
  if (errinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDSetUserPriorityResp.errInfo)
}

// optional uint32 run_userID = 2;
inline void CMDSetUserPriorityResp::clear_run_userid() {
  run_userid_ = 0u;
}
inline ::google::protobuf::uint32 CMDSetUserPriorityResp::run_userid() const {
  // @@protoc_insertion_point(field_get:CMDSetUserPriorityResp.run_userID)
  return run_userid_;
}
inline void CMDSetUserPriorityResp::set_run_userid(::google::protobuf::uint32 value) {
  
  run_userid_ = value;
  // @@protoc_insertion_point(field_set:CMDSetUserPriorityResp.run_userID)
}

// optional uint32 to_userID = 3;
inline void CMDSetUserPriorityResp::clear_to_userid() {
  to_userid_ = 0u;
}
inline ::google::protobuf::uint32 CMDSetUserPriorityResp::to_userid() const {
  // @@protoc_insertion_point(field_get:CMDSetUserPriorityResp.to_userID)
  return to_userid_;
}
inline void CMDSetUserPriorityResp::set_to_userid(::google::protobuf::uint32 value) {
  
  to_userid_ = value;
  // @@protoc_insertion_point(field_set:CMDSetUserPriorityResp.to_userID)
}

// optional uint32 groupID = 4;
inline void CMDSetUserPriorityResp::clear_groupid() {
  groupid_ = 0u;
}
inline ::google::protobuf::uint32 CMDSetUserPriorityResp::groupid() const {
  // @@protoc_insertion_point(field_get:CMDSetUserPriorityResp.groupID)
  return groupid_;
}
inline void CMDSetUserPriorityResp::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDSetUserPriorityResp.groupID)
}

// optional uint32 roleType = 5;
inline void CMDSetUserPriorityResp::clear_roletype() {
  roletype_ = 0u;
}
inline ::google::protobuf::uint32 CMDSetUserPriorityResp::roletype() const {
  // @@protoc_insertion_point(field_get:CMDSetUserPriorityResp.roleType)
  return roletype_;
}
inline void CMDSetUserPriorityResp::set_roletype(::google::protobuf::uint32 value) {
  
  roletype_ = value;
  // @@protoc_insertion_point(field_set:CMDSetUserPriorityResp.roleType)
}

// -------------------------------------------------------------------

// CMDSetUserPriorityNoty

// optional uint32 run_userID = 1;
inline void CMDSetUserPriorityNoty::clear_run_userid() {
  run_userid_ = 0u;
}
inline ::google::protobuf::uint32 CMDSetUserPriorityNoty::run_userid() const {
  // @@protoc_insertion_point(field_get:CMDSetUserPriorityNoty.run_userID)
  return run_userid_;
}
inline void CMDSetUserPriorityNoty::set_run_userid(::google::protobuf::uint32 value) {
  
  run_userid_ = value;
  // @@protoc_insertion_point(field_set:CMDSetUserPriorityNoty.run_userID)
}

// optional uint32 to_userID = 2;
inline void CMDSetUserPriorityNoty::clear_to_userid() {
  to_userid_ = 0u;
}
inline ::google::protobuf::uint32 CMDSetUserPriorityNoty::to_userid() const {
  // @@protoc_insertion_point(field_get:CMDSetUserPriorityNoty.to_userID)
  return to_userid_;
}
inline void CMDSetUserPriorityNoty::set_to_userid(::google::protobuf::uint32 value) {
  
  to_userid_ = value;
  // @@protoc_insertion_point(field_set:CMDSetUserPriorityNoty.to_userID)
}

// optional uint32 groupID = 3;
inline void CMDSetUserPriorityNoty::clear_groupid() {
  groupid_ = 0u;
}
inline ::google::protobuf::uint32 CMDSetUserPriorityNoty::groupid() const {
  // @@protoc_insertion_point(field_get:CMDSetUserPriorityNoty.groupID)
  return groupid_;
}
inline void CMDSetUserPriorityNoty::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDSetUserPriorityNoty.groupID)
}

// optional uint32 roleType = 4;
inline void CMDSetUserPriorityNoty::clear_roletype() {
  roletype_ = 0u;
}
inline ::google::protobuf::uint32 CMDSetUserPriorityNoty::roletype() const {
  // @@protoc_insertion_point(field_get:CMDSetUserPriorityNoty.roleType)
  return roletype_;
}
inline void CMDSetUserPriorityNoty::set_roletype(::google::protobuf::uint32 value) {
  
  roletype_ = value;
  // @@protoc_insertion_point(field_set:CMDSetUserPriorityNoty.roleType)
}

// -------------------------------------------------------------------

// CMDQryGroupVisitCountReq

// optional uint32 groupID = 1;
inline void CMDQryGroupVisitCountReq::clear_groupid() {
  groupid_ = 0u;
}
inline ::google::protobuf::uint32 CMDQryGroupVisitCountReq::groupid() const {
  // @@protoc_insertion_point(field_get:CMDQryGroupVisitCountReq.groupID)
  return groupid_;
}
inline void CMDQryGroupVisitCountReq::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDQryGroupVisitCountReq.groupID)
}

// -------------------------------------------------------------------

// CMDQryGroupVisitCountResp

// optional uint32 groupID = 1;
inline void CMDQryGroupVisitCountResp::clear_groupid() {
  groupid_ = 0u;
}
inline ::google::protobuf::uint32 CMDQryGroupVisitCountResp::groupid() const {
  // @@protoc_insertion_point(field_get:CMDQryGroupVisitCountResp.groupID)
  return groupid_;
}
inline void CMDQryGroupVisitCountResp::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDQryGroupVisitCountResp.groupID)
}

// optional uint32 visitCount = 2;
inline void CMDQryGroupVisitCountResp::clear_visitcount() {
  visitcount_ = 0u;
}
inline ::google::protobuf::uint32 CMDQryGroupVisitCountResp::visitcount() const {
  // @@protoc_insertion_point(field_get:CMDQryGroupVisitCountResp.visitCount)
  return visitcount_;
}
inline void CMDQryGroupVisitCountResp::set_visitcount(::google::protobuf::uint32 value) {
  
  visitcount_ = value;
  // @@protoc_insertion_point(field_set:CMDQryGroupVisitCountResp.visitCount)
}

// -------------------------------------------------------------------

// CMDJoinGroupReq

// optional uint32 userID = 1;
inline void CMDJoinGroupReq::clear_userid() {
  userid_ = 0u;
}
inline ::google::protobuf::uint32 CMDJoinGroupReq::userid() const {
  // @@protoc_insertion_point(field_get:CMDJoinGroupReq.userID)
  return userid_;
}
inline void CMDJoinGroupReq::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDJoinGroupReq.userID)
}

// optional uint32 groupID = 2;
inline void CMDJoinGroupReq::clear_groupid() {
  groupid_ = 0u;
}
inline ::google::protobuf::uint32 CMDJoinGroupReq::groupid() const {
  // @@protoc_insertion_point(field_get:CMDJoinGroupReq.groupID)
  return groupid_;
}
inline void CMDJoinGroupReq::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDJoinGroupReq.groupID)
}

// -------------------------------------------------------------------

// CMDJoinGroupResp

// optional .CMDErrCode errInfo = 1;
inline bool CMDJoinGroupResp::has_errinfo() const {
  return !_is_default_instance_ && errinfo_ != NULL;
}
inline void CMDJoinGroupResp::clear_errinfo() {
  if (GetArenaNoVirtual() == NULL && errinfo_ != NULL) delete errinfo_;
  errinfo_ = NULL;
}
inline const ::CMDErrCode& CMDJoinGroupResp::errinfo() const {
  // @@protoc_insertion_point(field_get:CMDJoinGroupResp.errInfo)
  return errinfo_ != NULL ? *errinfo_ : *default_instance_->errinfo_;
}
inline ::CMDErrCode* CMDJoinGroupResp::mutable_errinfo() {
  
  if (errinfo_ == NULL) {
    errinfo_ = new ::CMDErrCode;
  }
  // @@protoc_insertion_point(field_mutable:CMDJoinGroupResp.errInfo)
  return errinfo_;
}
inline ::CMDErrCode* CMDJoinGroupResp::release_errinfo() {
  // @@protoc_insertion_point(field_release:CMDJoinGroupResp.errInfo)
  
  ::CMDErrCode* temp = errinfo_;
  errinfo_ = NULL;
  return temp;
}
inline void CMDJoinGroupResp::set_allocated_errinfo(::CMDErrCode* errinfo) {
  delete errinfo_;
  errinfo_ = errinfo;
  if (errinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDJoinGroupResp.errInfo)
}

// optional uint32 userID = 2;
inline void CMDJoinGroupResp::clear_userid() {
  userid_ = 0u;
}
inline ::google::protobuf::uint32 CMDJoinGroupResp::userid() const {
  // @@protoc_insertion_point(field_get:CMDJoinGroupResp.userID)
  return userid_;
}
inline void CMDJoinGroupResp::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDJoinGroupResp.userID)
}

// optional uint32 groupID = 3;
inline void CMDJoinGroupResp::clear_groupid() {
  groupid_ = 0u;
}
inline ::google::protobuf::uint32 CMDJoinGroupResp::groupid() const {
  // @@protoc_insertion_point(field_get:CMDJoinGroupResp.groupID)
  return groupid_;
}
inline void CMDJoinGroupResp::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDJoinGroupResp.groupID)
}

// -------------------------------------------------------------------

// CMDForbidJoinGroupKillVisitor

// optional uint32 groupID = 1;
inline void CMDForbidJoinGroupKillVisitor::clear_groupid() {
  groupid_ = 0u;
}
inline ::google::protobuf::uint32 CMDForbidJoinGroupKillVisitor::groupid() const {
  // @@protoc_insertion_point(field_get:CMDForbidJoinGroupKillVisitor.groupID)
  return groupid_;
}
inline void CMDForbidJoinGroupKillVisitor::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDForbidJoinGroupKillVisitor.groupID)
}

// -------------------------------------------------------------------

// CMDSettingStat

// optional .e_SettingType type = 1;
inline void CMDSettingStat::clear_type() {
  type_ = 0;
}
inline ::e_SettingType CMDSettingStat::type() const {
  // @@protoc_insertion_point(field_get:CMDSettingStat.type)
  return static_cast< ::e_SettingType >(type_);
}
inline void CMDSettingStat::set_type(::e_SettingType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:CMDSettingStat.type)
}

// optional int32 stat = 2;
inline void CMDSettingStat::clear_stat() {
  stat_ = 0;
}
inline ::google::protobuf::int32 CMDSettingStat::stat() const {
  // @@protoc_insertion_point(field_get:CMDSettingStat.stat)
  return stat_;
}
inline void CMDSettingStat::set_stat(::google::protobuf::int32 value) {
  
  stat_ = value;
  // @@protoc_insertion_point(field_set:CMDSettingStat.stat)
}

// -------------------------------------------------------------------

// CMDGroupSettingStatNotify

// optional uint32 runID = 1;
inline void CMDGroupSettingStatNotify::clear_runid() {
  runid_ = 0u;
}
inline ::google::protobuf::uint32 CMDGroupSettingStatNotify::runid() const {
  // @@protoc_insertion_point(field_get:CMDGroupSettingStatNotify.runID)
  return runid_;
}
inline void CMDGroupSettingStatNotify::set_runid(::google::protobuf::uint32 value) {
  
  runid_ = value;
  // @@protoc_insertion_point(field_set:CMDGroupSettingStatNotify.runID)
}

// optional uint32 groupID = 2;
inline void CMDGroupSettingStatNotify::clear_groupid() {
  groupid_ = 0u;
}
inline ::google::protobuf::uint32 CMDGroupSettingStatNotify::groupid() const {
  // @@protoc_insertion_point(field_get:CMDGroupSettingStatNotify.groupID)
  return groupid_;
}
inline void CMDGroupSettingStatNotify::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDGroupSettingStatNotify.groupID)
}

// repeated .CMDSettingStat list = 3;
inline int CMDGroupSettingStatNotify::list_size() const {
  return list_.size();
}
inline void CMDGroupSettingStatNotify::clear_list() {
  list_.Clear();
}
inline const ::CMDSettingStat& CMDGroupSettingStatNotify::list(int index) const {
  // @@protoc_insertion_point(field_get:CMDGroupSettingStatNotify.list)
  return list_.Get(index);
}
inline ::CMDSettingStat* CMDGroupSettingStatNotify::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:CMDGroupSettingStatNotify.list)
  return list_.Mutable(index);
}
inline ::CMDSettingStat* CMDGroupSettingStatNotify::add_list() {
  // @@protoc_insertion_point(field_add:CMDGroupSettingStatNotify.list)
  return list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMDSettingStat >*
CMDGroupSettingStatNotify::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:CMDGroupSettingStatNotify.list)
  return &list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMDSettingStat >&
CMDGroupSettingStatNotify::list() const {
  // @@protoc_insertion_point(field_list:CMDGroupSettingStatNotify.list)
  return list_;
}

// -------------------------------------------------------------------

// CMDGroupSettingStatReq

// optional uint32 userID = 1;
inline void CMDGroupSettingStatReq::clear_userid() {
  userid_ = 0u;
}
inline ::google::protobuf::uint32 CMDGroupSettingStatReq::userid() const {
  // @@protoc_insertion_point(field_get:CMDGroupSettingStatReq.userID)
  return userid_;
}
inline void CMDGroupSettingStatReq::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDGroupSettingStatReq.userID)
}

// optional uint32 groupID = 2;
inline void CMDGroupSettingStatReq::clear_groupid() {
  groupid_ = 0u;
}
inline ::google::protobuf::uint32 CMDGroupSettingStatReq::groupid() const {
  // @@protoc_insertion_point(field_get:CMDGroupSettingStatReq.groupID)
  return groupid_;
}
inline void CMDGroupSettingStatReq::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDGroupSettingStatReq.groupID)
}

// optional .e_SettingType type = 3;
inline void CMDGroupSettingStatReq::clear_type() {
  type_ = 0;
}
inline ::e_SettingType CMDGroupSettingStatReq::type() const {
  // @@protoc_insertion_point(field_get:CMDGroupSettingStatReq.type)
  return static_cast< ::e_SettingType >(type_);
}
inline void CMDGroupSettingStatReq::set_type(::e_SettingType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:CMDGroupSettingStatReq.type)
}

// -------------------------------------------------------------------

// CMDQryJoinGroupCondReq

// optional uint32 userID = 1;
inline void CMDQryJoinGroupCondReq::clear_userid() {
  userid_ = 0u;
}
inline ::google::protobuf::uint32 CMDQryJoinGroupCondReq::userid() const {
  // @@protoc_insertion_point(field_get:CMDQryJoinGroupCondReq.userID)
  return userid_;
}
inline void CMDQryJoinGroupCondReq::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDQryJoinGroupCondReq.userID)
}

// optional uint32 groupID = 2;
inline void CMDQryJoinGroupCondReq::clear_groupid() {
  groupid_ = 0u;
}
inline ::google::protobuf::uint32 CMDQryJoinGroupCondReq::groupid() const {
  // @@protoc_insertion_point(field_get:CMDQryJoinGroupCondReq.groupID)
  return groupid_;
}
inline void CMDQryJoinGroupCondReq::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDQryJoinGroupCondReq.groupID)
}

// -------------------------------------------------------------------

// CMDQryJoinGroupCondResp

// optional .CMDErrCode errInfo = 1;
inline bool CMDQryJoinGroupCondResp::has_errinfo() const {
  return !_is_default_instance_ && errinfo_ != NULL;
}
inline void CMDQryJoinGroupCondResp::clear_errinfo() {
  if (GetArenaNoVirtual() == NULL && errinfo_ != NULL) delete errinfo_;
  errinfo_ = NULL;
}
inline const ::CMDErrCode& CMDQryJoinGroupCondResp::errinfo() const {
  // @@protoc_insertion_point(field_get:CMDQryJoinGroupCondResp.errInfo)
  return errinfo_ != NULL ? *errinfo_ : *default_instance_->errinfo_;
}
inline ::CMDErrCode* CMDQryJoinGroupCondResp::mutable_errinfo() {
  
  if (errinfo_ == NULL) {
    errinfo_ = new ::CMDErrCode;
  }
  // @@protoc_insertion_point(field_mutable:CMDQryJoinGroupCondResp.errInfo)
  return errinfo_;
}
inline ::CMDErrCode* CMDQryJoinGroupCondResp::release_errinfo() {
  // @@protoc_insertion_point(field_release:CMDQryJoinGroupCondResp.errInfo)
  
  ::CMDErrCode* temp = errinfo_;
  errinfo_ = NULL;
  return temp;
}
inline void CMDQryJoinGroupCondResp::set_allocated_errinfo(::CMDErrCode* errinfo) {
  delete errinfo_;
  errinfo_ = errinfo;
  if (errinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDQryJoinGroupCondResp.errInfo)
}

// optional uint32 userID = 2;
inline void CMDQryJoinGroupCondResp::clear_userid() {
  userid_ = 0u;
}
inline ::google::protobuf::uint32 CMDQryJoinGroupCondResp::userid() const {
  // @@protoc_insertion_point(field_get:CMDQryJoinGroupCondResp.userID)
  return userid_;
}
inline void CMDQryJoinGroupCondResp::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDQryJoinGroupCondResp.userID)
}

// optional uint32 groupID = 3;
inline void CMDQryJoinGroupCondResp::clear_groupid() {
  groupid_ = 0u;
}
inline ::google::protobuf::uint32 CMDQryJoinGroupCondResp::groupid() const {
  // @@protoc_insertion_point(field_get:CMDQryJoinGroupCondResp.groupID)
  return groupid_;
}
inline void CMDQryJoinGroupCondResp::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDQryJoinGroupCondResp.groupID)
}

// optional string action = 4;
inline void CMDQryJoinGroupCondResp::clear_action() {
  action_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMDQryJoinGroupCondResp::action() const {
  // @@protoc_insertion_point(field_get:CMDQryJoinGroupCondResp.action)
  return action_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDQryJoinGroupCondResp::set_action(const ::std::string& value) {
  
  action_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDQryJoinGroupCondResp.action)
}
inline void CMDQryJoinGroupCondResp::set_action(const char* value) {
  
  action_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDQryJoinGroupCondResp.action)
}
inline void CMDQryJoinGroupCondResp::set_action(const char* value, size_t size) {
  
  action_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDQryJoinGroupCondResp.action)
}
inline ::std::string* CMDQryJoinGroupCondResp::mutable_action() {
  
  // @@protoc_insertion_point(field_mutable:CMDQryJoinGroupCondResp.action)
  return action_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMDQryJoinGroupCondResp::release_action() {
  // @@protoc_insertion_point(field_release:CMDQryJoinGroupCondResp.action)
  
  return action_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDQryJoinGroupCondResp::set_allocated_action(::std::string* action) {
  if (action != NULL) {
    
  } else {
    
  }
  action_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), action);
  // @@protoc_insertion_point(field_set_allocated:CMDQryJoinGroupCondResp.action)
}

// -------------------------------------------------------------------

// CMDApplyJoinGroupAuthReq

// optional uint32 userID = 1;
inline void CMDApplyJoinGroupAuthReq::clear_userid() {
  userid_ = 0u;
}
inline ::google::protobuf::uint32 CMDApplyJoinGroupAuthReq::userid() const {
  // @@protoc_insertion_point(field_get:CMDApplyJoinGroupAuthReq.userID)
  return userid_;
}
inline void CMDApplyJoinGroupAuthReq::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDApplyJoinGroupAuthReq.userID)
}

// optional uint32 groupID = 2;
inline void CMDApplyJoinGroupAuthReq::clear_groupid() {
  groupid_ = 0u;
}
inline ::google::protobuf::uint32 CMDApplyJoinGroupAuthReq::groupid() const {
  // @@protoc_insertion_point(field_get:CMDApplyJoinGroupAuthReq.groupID)
  return groupid_;
}
inline void CMDApplyJoinGroupAuthReq::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDApplyJoinGroupAuthReq.groupID)
}

// optional .e_UserJoinGroupAuthType authType = 3;
inline void CMDApplyJoinGroupAuthReq::clear_authtype() {
  authtype_ = 0;
}
inline ::e_UserJoinGroupAuthType CMDApplyJoinGroupAuthReq::authtype() const {
  // @@protoc_insertion_point(field_get:CMDApplyJoinGroupAuthReq.authType)
  return static_cast< ::e_UserJoinGroupAuthType >(authtype_);
}
inline void CMDApplyJoinGroupAuthReq::set_authtype(::e_UserJoinGroupAuthType value) {
  
  authtype_ = value;
  // @@protoc_insertion_point(field_set:CMDApplyJoinGroupAuthReq.authType)
}

// optional string msg = 4;
inline void CMDApplyJoinGroupAuthReq::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMDApplyJoinGroupAuthReq::msg() const {
  // @@protoc_insertion_point(field_get:CMDApplyJoinGroupAuthReq.msg)
  return msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDApplyJoinGroupAuthReq::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDApplyJoinGroupAuthReq.msg)
}
inline void CMDApplyJoinGroupAuthReq::set_msg(const char* value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDApplyJoinGroupAuthReq.msg)
}
inline void CMDApplyJoinGroupAuthReq::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDApplyJoinGroupAuthReq.msg)
}
inline ::std::string* CMDApplyJoinGroupAuthReq::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:CMDApplyJoinGroupAuthReq.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMDApplyJoinGroupAuthReq::release_msg() {
  // @@protoc_insertion_point(field_release:CMDApplyJoinGroupAuthReq.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDApplyJoinGroupAuthReq::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:CMDApplyJoinGroupAuthReq.msg)
}

// -------------------------------------------------------------------

// CMDApplyJoinGroupAuthResp

// optional uint32 userID = 1;
inline void CMDApplyJoinGroupAuthResp::clear_userid() {
  userid_ = 0u;
}
inline ::google::protobuf::uint32 CMDApplyJoinGroupAuthResp::userid() const {
  // @@protoc_insertion_point(field_get:CMDApplyJoinGroupAuthResp.userID)
  return userid_;
}
inline void CMDApplyJoinGroupAuthResp::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDApplyJoinGroupAuthResp.userID)
}

// optional uint32 groupID = 2;
inline void CMDApplyJoinGroupAuthResp::clear_groupid() {
  groupid_ = 0u;
}
inline ::google::protobuf::uint32 CMDApplyJoinGroupAuthResp::groupid() const {
  // @@protoc_insertion_point(field_get:CMDApplyJoinGroupAuthResp.groupID)
  return groupid_;
}
inline void CMDApplyJoinGroupAuthResp::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDApplyJoinGroupAuthResp.groupID)
}

// optional .CMDErrCode errInfo = 3;
inline bool CMDApplyJoinGroupAuthResp::has_errinfo() const {
  return !_is_default_instance_ && errinfo_ != NULL;
}
inline void CMDApplyJoinGroupAuthResp::clear_errinfo() {
  if (GetArenaNoVirtual() == NULL && errinfo_ != NULL) delete errinfo_;
  errinfo_ = NULL;
}
inline const ::CMDErrCode& CMDApplyJoinGroupAuthResp::errinfo() const {
  // @@protoc_insertion_point(field_get:CMDApplyJoinGroupAuthResp.errInfo)
  return errinfo_ != NULL ? *errinfo_ : *default_instance_->errinfo_;
}
inline ::CMDErrCode* CMDApplyJoinGroupAuthResp::mutable_errinfo() {
  
  if (errinfo_ == NULL) {
    errinfo_ = new ::CMDErrCode;
  }
  // @@protoc_insertion_point(field_mutable:CMDApplyJoinGroupAuthResp.errInfo)
  return errinfo_;
}
inline ::CMDErrCode* CMDApplyJoinGroupAuthResp::release_errinfo() {
  // @@protoc_insertion_point(field_release:CMDApplyJoinGroupAuthResp.errInfo)
  
  ::CMDErrCode* temp = errinfo_;
  errinfo_ = NULL;
  return temp;
}
inline void CMDApplyJoinGroupAuthResp::set_allocated_errinfo(::CMDErrCode* errinfo) {
  delete errinfo_;
  errinfo_ = errinfo;
  if (errinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDApplyJoinGroupAuthResp.errInfo)
}

// -------------------------------------------------------------------

// CMDHandleJoinGroupAuthReq

// optional uint32 run_userID = 1;
inline void CMDHandleJoinGroupAuthReq::clear_run_userid() {
  run_userid_ = 0u;
}
inline ::google::protobuf::uint32 CMDHandleJoinGroupAuthReq::run_userid() const {
  // @@protoc_insertion_point(field_get:CMDHandleJoinGroupAuthReq.run_userID)
  return run_userid_;
}
inline void CMDHandleJoinGroupAuthReq::set_run_userid(::google::protobuf::uint32 value) {
  
  run_userid_ = value;
  // @@protoc_insertion_point(field_set:CMDHandleJoinGroupAuthReq.run_userID)
}

// optional uint32 groupID = 2;
inline void CMDHandleJoinGroupAuthReq::clear_groupid() {
  groupid_ = 0u;
}
inline ::google::protobuf::uint32 CMDHandleJoinGroupAuthReq::groupid() const {
  // @@protoc_insertion_point(field_get:CMDHandleJoinGroupAuthReq.groupID)
  return groupid_;
}
inline void CMDHandleJoinGroupAuthReq::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDHandleJoinGroupAuthReq.groupID)
}

// optional uint32 apply_userID = 3;
inline void CMDHandleJoinGroupAuthReq::clear_apply_userid() {
  apply_userid_ = 0u;
}
inline ::google::protobuf::uint32 CMDHandleJoinGroupAuthReq::apply_userid() const {
  // @@protoc_insertion_point(field_get:CMDHandleJoinGroupAuthReq.apply_userID)
  return apply_userid_;
}
inline void CMDHandleJoinGroupAuthReq::set_apply_userid(::google::protobuf::uint32 value) {
  
  apply_userid_ = value;
  // @@protoc_insertion_point(field_set:CMDHandleJoinGroupAuthReq.apply_userID)
}

// optional uint32 authID = 4;
inline void CMDHandleJoinGroupAuthReq::clear_authid() {
  authid_ = 0u;
}
inline ::google::protobuf::uint32 CMDHandleJoinGroupAuthReq::authid() const {
  // @@protoc_insertion_point(field_get:CMDHandleJoinGroupAuthReq.authID)
  return authid_;
}
inline void CMDHandleJoinGroupAuthReq::set_authid(::google::protobuf::uint32 value) {
  
  authid_ = value;
  // @@protoc_insertion_point(field_set:CMDHandleJoinGroupAuthReq.authID)
}

// optional bool agree = 5;
inline void CMDHandleJoinGroupAuthReq::clear_agree() {
  agree_ = false;
}
inline bool CMDHandleJoinGroupAuthReq::agree() const {
  // @@protoc_insertion_point(field_get:CMDHandleJoinGroupAuthReq.agree)
  return agree_;
}
inline void CMDHandleJoinGroupAuthReq::set_agree(bool value) {
  
  agree_ = value;
  // @@protoc_insertion_point(field_set:CMDHandleJoinGroupAuthReq.agree)
}

// -------------------------------------------------------------------

// CMDHandleJoinGroupAuthResp

// optional uint32 run_userID = 1;
inline void CMDHandleJoinGroupAuthResp::clear_run_userid() {
  run_userid_ = 0u;
}
inline ::google::protobuf::uint32 CMDHandleJoinGroupAuthResp::run_userid() const {
  // @@protoc_insertion_point(field_get:CMDHandleJoinGroupAuthResp.run_userID)
  return run_userid_;
}
inline void CMDHandleJoinGroupAuthResp::set_run_userid(::google::protobuf::uint32 value) {
  
  run_userid_ = value;
  // @@protoc_insertion_point(field_set:CMDHandleJoinGroupAuthResp.run_userID)
}

// optional uint32 groupID = 2;
inline void CMDHandleJoinGroupAuthResp::clear_groupid() {
  groupid_ = 0u;
}
inline ::google::protobuf::uint32 CMDHandleJoinGroupAuthResp::groupid() const {
  // @@protoc_insertion_point(field_get:CMDHandleJoinGroupAuthResp.groupID)
  return groupid_;
}
inline void CMDHandleJoinGroupAuthResp::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDHandleJoinGroupAuthResp.groupID)
}

// optional uint32 apply_userID = 3;
inline void CMDHandleJoinGroupAuthResp::clear_apply_userid() {
  apply_userid_ = 0u;
}
inline ::google::protobuf::uint32 CMDHandleJoinGroupAuthResp::apply_userid() const {
  // @@protoc_insertion_point(field_get:CMDHandleJoinGroupAuthResp.apply_userID)
  return apply_userid_;
}
inline void CMDHandleJoinGroupAuthResp::set_apply_userid(::google::protobuf::uint32 value) {
  
  apply_userid_ = value;
  // @@protoc_insertion_point(field_set:CMDHandleJoinGroupAuthResp.apply_userID)
}

// optional uint32 authID = 4;
inline void CMDHandleJoinGroupAuthResp::clear_authid() {
  authid_ = 0u;
}
inline ::google::protobuf::uint32 CMDHandleJoinGroupAuthResp::authid() const {
  // @@protoc_insertion_point(field_get:CMDHandleJoinGroupAuthResp.authID)
  return authid_;
}
inline void CMDHandleJoinGroupAuthResp::set_authid(::google::protobuf::uint32 value) {
  
  authid_ = value;
  // @@protoc_insertion_point(field_set:CMDHandleJoinGroupAuthResp.authID)
}

// optional bool agree = 5;
inline void CMDHandleJoinGroupAuthResp::clear_agree() {
  agree_ = false;
}
inline bool CMDHandleJoinGroupAuthResp::agree() const {
  // @@protoc_insertion_point(field_get:CMDHandleJoinGroupAuthResp.agree)
  return agree_;
}
inline void CMDHandleJoinGroupAuthResp::set_agree(bool value) {
  
  agree_ = value;
  // @@protoc_insertion_point(field_set:CMDHandleJoinGroupAuthResp.agree)
}

// optional .CMDErrCode errInfo = 6;
inline bool CMDHandleJoinGroupAuthResp::has_errinfo() const {
  return !_is_default_instance_ && errinfo_ != NULL;
}
inline void CMDHandleJoinGroupAuthResp::clear_errinfo() {
  if (GetArenaNoVirtual() == NULL && errinfo_ != NULL) delete errinfo_;
  errinfo_ = NULL;
}
inline const ::CMDErrCode& CMDHandleJoinGroupAuthResp::errinfo() const {
  // @@protoc_insertion_point(field_get:CMDHandleJoinGroupAuthResp.errInfo)
  return errinfo_ != NULL ? *errinfo_ : *default_instance_->errinfo_;
}
inline ::CMDErrCode* CMDHandleJoinGroupAuthResp::mutable_errinfo() {
  
  if (errinfo_ == NULL) {
    errinfo_ = new ::CMDErrCode;
  }
  // @@protoc_insertion_point(field_mutable:CMDHandleJoinGroupAuthResp.errInfo)
  return errinfo_;
}
inline ::CMDErrCode* CMDHandleJoinGroupAuthResp::release_errinfo() {
  // @@protoc_insertion_point(field_release:CMDHandleJoinGroupAuthResp.errInfo)
  
  ::CMDErrCode* temp = errinfo_;
  errinfo_ = NULL;
  return temp;
}
inline void CMDHandleJoinGroupAuthResp::set_allocated_errinfo(::CMDErrCode* errinfo) {
  delete errinfo_;
  errinfo_ = errinfo;
  if (errinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDHandleJoinGroupAuthResp.errInfo)
}

// -------------------------------------------------------------------

// CMDSetMicModeReq

// optional uint32 vcbid = 1;
inline void CMDSetMicModeReq::clear_vcbid() {
  vcbid_ = 0u;
}
inline ::google::protobuf::uint32 CMDSetMicModeReq::vcbid() const {
  // @@protoc_insertion_point(field_get:CMDSetMicModeReq.vcbid)
  return vcbid_;
}
inline void CMDSetMicModeReq::set_vcbid(::google::protobuf::uint32 value) {
  
  vcbid_ = value;
  // @@protoc_insertion_point(field_set:CMDSetMicModeReq.vcbid)
}

// optional uint32 userid = 2;
inline void CMDSetMicModeReq::clear_userid() {
  userid_ = 0u;
}
inline ::google::protobuf::uint32 CMDSetMicModeReq::userid() const {
  // @@protoc_insertion_point(field_get:CMDSetMicModeReq.userid)
  return userid_;
}
inline void CMDSetMicModeReq::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDSetMicModeReq.userid)
}

// optional .e_MicMode micmode = 3;
inline void CMDSetMicModeReq::clear_micmode() {
  micmode_ = 0;
}
inline ::e_MicMode CMDSetMicModeReq::micmode() const {
  // @@protoc_insertion_point(field_get:CMDSetMicModeReq.micmode)
  return static_cast< ::e_MicMode >(micmode_);
}
inline void CMDSetMicModeReq::set_micmode(::e_MicMode value) {
  
  micmode_ = value;
  // @@protoc_insertion_point(field_set:CMDSetMicModeReq.micmode)
}

// -------------------------------------------------------------------

// CMDSetMicModeResp

// optional uint32 vcbid = 1;
inline void CMDSetMicModeResp::clear_vcbid() {
  vcbid_ = 0u;
}
inline ::google::protobuf::uint32 CMDSetMicModeResp::vcbid() const {
  // @@protoc_insertion_point(field_get:CMDSetMicModeResp.vcbid)
  return vcbid_;
}
inline void CMDSetMicModeResp::set_vcbid(::google::protobuf::uint32 value) {
  
  vcbid_ = value;
  // @@protoc_insertion_point(field_set:CMDSetMicModeResp.vcbid)
}

// optional uint32 userid = 2;
inline void CMDSetMicModeResp::clear_userid() {
  userid_ = 0u;
}
inline ::google::protobuf::uint32 CMDSetMicModeResp::userid() const {
  // @@protoc_insertion_point(field_get:CMDSetMicModeResp.userid)
  return userid_;
}
inline void CMDSetMicModeResp::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDSetMicModeResp.userid)
}

// optional .CMDErrCode errInfo = 3;
inline bool CMDSetMicModeResp::has_errinfo() const {
  return !_is_default_instance_ && errinfo_ != NULL;
}
inline void CMDSetMicModeResp::clear_errinfo() {
  if (GetArenaNoVirtual() == NULL && errinfo_ != NULL) delete errinfo_;
  errinfo_ = NULL;
}
inline const ::CMDErrCode& CMDSetMicModeResp::errinfo() const {
  // @@protoc_insertion_point(field_get:CMDSetMicModeResp.errInfo)
  return errinfo_ != NULL ? *errinfo_ : *default_instance_->errinfo_;
}
inline ::CMDErrCode* CMDSetMicModeResp::mutable_errinfo() {
  
  if (errinfo_ == NULL) {
    errinfo_ = new ::CMDErrCode;
  }
  // @@protoc_insertion_point(field_mutable:CMDSetMicModeResp.errInfo)
  return errinfo_;
}
inline ::CMDErrCode* CMDSetMicModeResp::release_errinfo() {
  // @@protoc_insertion_point(field_release:CMDSetMicModeResp.errInfo)
  
  ::CMDErrCode* temp = errinfo_;
  errinfo_ = NULL;
  return temp;
}
inline void CMDSetMicModeResp::set_allocated_errinfo(::CMDErrCode* errinfo) {
  delete errinfo_;
  errinfo_ = errinfo;
  if (errinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDSetMicModeResp.errInfo)
}

// -------------------------------------------------------------------

// CMDSetMicModeNoty

// optional uint32 vcbid = 1;
inline void CMDSetMicModeNoty::clear_vcbid() {
  vcbid_ = 0u;
}
inline ::google::protobuf::uint32 CMDSetMicModeNoty::vcbid() const {
  // @@protoc_insertion_point(field_get:CMDSetMicModeNoty.vcbid)
  return vcbid_;
}
inline void CMDSetMicModeNoty::set_vcbid(::google::protobuf::uint32 value) {
  
  vcbid_ = value;
  // @@protoc_insertion_point(field_set:CMDSetMicModeNoty.vcbid)
}

// optional uint32 userid = 2;
inline void CMDSetMicModeNoty::clear_userid() {
  userid_ = 0u;
}
inline ::google::protobuf::uint32 CMDSetMicModeNoty::userid() const {
  // @@protoc_insertion_point(field_get:CMDSetMicModeNoty.userid)
  return userid_;
}
inline void CMDSetMicModeNoty::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDSetMicModeNoty.userid)
}

// optional .e_MicMode micmode = 3;
inline void CMDSetMicModeNoty::clear_micmode() {
  micmode_ = 0;
}
inline ::e_MicMode CMDSetMicModeNoty::micmode() const {
  // @@protoc_insertion_point(field_get:CMDSetMicModeNoty.micmode)
  return static_cast< ::e_MicMode >(micmode_);
}
inline void CMDSetMicModeNoty::set_micmode(::e_MicMode value) {
  
  micmode_ = value;
  // @@protoc_insertion_point(field_set:CMDSetMicModeNoty.micmode)
}

// -------------------------------------------------------------------

// CMDSetMicPosStatusReq

// optional uint32 vcbid = 1;
inline void CMDSetMicPosStatusReq::clear_vcbid() {
  vcbid_ = 0u;
}
inline ::google::protobuf::uint32 CMDSetMicPosStatusReq::vcbid() const {
  // @@protoc_insertion_point(field_get:CMDSetMicPosStatusReq.vcbid)
  return vcbid_;
}
inline void CMDSetMicPosStatusReq::set_vcbid(::google::protobuf::uint32 value) {
  
  vcbid_ = value;
  // @@protoc_insertion_point(field_set:CMDSetMicPosStatusReq.vcbid)
}

// optional uint32 userid = 2;
inline void CMDSetMicPosStatusReq::clear_userid() {
  userid_ = 0u;
}
inline ::google::protobuf::uint32 CMDSetMicPosStatusReq::userid() const {
  // @@protoc_insertion_point(field_get:CMDSetMicPosStatusReq.userid)
  return userid_;
}
inline void CMDSetMicPosStatusReq::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDSetMicPosStatusReq.userid)
}

// optional uint32 index = 3;
inline void CMDSetMicPosStatusReq::clear_index() {
  index_ = 0u;
}
inline ::google::protobuf::uint32 CMDSetMicPosStatusReq::index() const {
  // @@protoc_insertion_point(field_get:CMDSetMicPosStatusReq.index)
  return index_;
}
inline void CMDSetMicPosStatusReq::set_index(::google::protobuf::uint32 value) {
  
  index_ = value;
  // @@protoc_insertion_point(field_set:CMDSetMicPosStatusReq.index)
}

// optional uint32 status = 4;
inline void CMDSetMicPosStatusReq::clear_status() {
  status_ = 0u;
}
inline ::google::protobuf::uint32 CMDSetMicPosStatusReq::status() const {
  // @@protoc_insertion_point(field_get:CMDSetMicPosStatusReq.status)
  return status_;
}
inline void CMDSetMicPosStatusReq::set_status(::google::protobuf::uint32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:CMDSetMicPosStatusReq.status)
}

// -------------------------------------------------------------------

// CMDSetMicPosStatusResp

// optional uint32 vcbid = 1;
inline void CMDSetMicPosStatusResp::clear_vcbid() {
  vcbid_ = 0u;
}
inline ::google::protobuf::uint32 CMDSetMicPosStatusResp::vcbid() const {
  // @@protoc_insertion_point(field_get:CMDSetMicPosStatusResp.vcbid)
  return vcbid_;
}
inline void CMDSetMicPosStatusResp::set_vcbid(::google::protobuf::uint32 value) {
  
  vcbid_ = value;
  // @@protoc_insertion_point(field_set:CMDSetMicPosStatusResp.vcbid)
}

// optional uint32 userid = 2;
inline void CMDSetMicPosStatusResp::clear_userid() {
  userid_ = 0u;
}
inline ::google::protobuf::uint32 CMDSetMicPosStatusResp::userid() const {
  // @@protoc_insertion_point(field_get:CMDSetMicPosStatusResp.userid)
  return userid_;
}
inline void CMDSetMicPosStatusResp::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDSetMicPosStatusResp.userid)
}

// optional .CMDErrCode errInfo = 3;
inline bool CMDSetMicPosStatusResp::has_errinfo() const {
  return !_is_default_instance_ && errinfo_ != NULL;
}
inline void CMDSetMicPosStatusResp::clear_errinfo() {
  if (GetArenaNoVirtual() == NULL && errinfo_ != NULL) delete errinfo_;
  errinfo_ = NULL;
}
inline const ::CMDErrCode& CMDSetMicPosStatusResp::errinfo() const {
  // @@protoc_insertion_point(field_get:CMDSetMicPosStatusResp.errInfo)
  return errinfo_ != NULL ? *errinfo_ : *default_instance_->errinfo_;
}
inline ::CMDErrCode* CMDSetMicPosStatusResp::mutable_errinfo() {
  
  if (errinfo_ == NULL) {
    errinfo_ = new ::CMDErrCode;
  }
  // @@protoc_insertion_point(field_mutable:CMDSetMicPosStatusResp.errInfo)
  return errinfo_;
}
inline ::CMDErrCode* CMDSetMicPosStatusResp::release_errinfo() {
  // @@protoc_insertion_point(field_release:CMDSetMicPosStatusResp.errInfo)
  
  ::CMDErrCode* temp = errinfo_;
  errinfo_ = NULL;
  return temp;
}
inline void CMDSetMicPosStatusResp::set_allocated_errinfo(::CMDErrCode* errinfo) {
  delete errinfo_;
  errinfo_ = errinfo;
  if (errinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDSetMicPosStatusResp.errInfo)
}

// -------------------------------------------------------------------

// CMDSetMicPosStatusNoty

// optional uint32 vcbid = 1;
inline void CMDSetMicPosStatusNoty::clear_vcbid() {
  vcbid_ = 0u;
}
inline ::google::protobuf::uint32 CMDSetMicPosStatusNoty::vcbid() const {
  // @@protoc_insertion_point(field_get:CMDSetMicPosStatusNoty.vcbid)
  return vcbid_;
}
inline void CMDSetMicPosStatusNoty::set_vcbid(::google::protobuf::uint32 value) {
  
  vcbid_ = value;
  // @@protoc_insertion_point(field_set:CMDSetMicPosStatusNoty.vcbid)
}

// optional uint32 userid = 2;
inline void CMDSetMicPosStatusNoty::clear_userid() {
  userid_ = 0u;
}
inline ::google::protobuf::uint32 CMDSetMicPosStatusNoty::userid() const {
  // @@protoc_insertion_point(field_get:CMDSetMicPosStatusNoty.userid)
  return userid_;
}
inline void CMDSetMicPosStatusNoty::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDSetMicPosStatusNoty.userid)
}

// optional uint32 index = 3;
inline void CMDSetMicPosStatusNoty::clear_index() {
  index_ = 0u;
}
inline ::google::protobuf::uint32 CMDSetMicPosStatusNoty::index() const {
  // @@protoc_insertion_point(field_get:CMDSetMicPosStatusNoty.index)
  return index_;
}
inline void CMDSetMicPosStatusNoty::set_index(::google::protobuf::uint32 value) {
  
  index_ = value;
  // @@protoc_insertion_point(field_set:CMDSetMicPosStatusNoty.index)
}

// optional uint32 status = 4;
inline void CMDSetMicPosStatusNoty::clear_status() {
  status_ = 0u;
}
inline ::google::protobuf::uint32 CMDSetMicPosStatusNoty::status() const {
  // @@protoc_insertion_point(field_get:CMDSetMicPosStatusNoty.status)
  return status_;
}
inline void CMDSetMicPosStatusNoty::set_status(::google::protobuf::uint32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:CMDSetMicPosStatusNoty.status)
}

// -------------------------------------------------------------------

// CMDRoomInfoExtReq

// optional int32 vcbid = 1;
inline void CMDRoomInfoExtReq::clear_vcbid() {
  vcbid_ = 0;
}
inline ::google::protobuf::int32 CMDRoomInfoExtReq::vcbid() const {
  // @@protoc_insertion_point(field_get:CMDRoomInfoExtReq.vcbid)
  return vcbid_;
}
inline void CMDRoomInfoExtReq::set_vcbid(::google::protobuf::int32 value) {
  
  vcbid_ = value;
  // @@protoc_insertion_point(field_set:CMDRoomInfoExtReq.vcbid)
}

// optional int32 userid = 2;
inline void CMDRoomInfoExtReq::clear_userid() {
  userid_ = 0;
}
inline ::google::protobuf::int32 CMDRoomInfoExtReq::userid() const {
  // @@protoc_insertion_point(field_get:CMDRoomInfoExtReq.userid)
  return userid_;
}
inline void CMDRoomInfoExtReq::set_userid(::google::protobuf::int32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDRoomInfoExtReq.userid)
}

// -------------------------------------------------------------------

// CMDRoomInfoExtResp

// optional int32 vcbid = 1;
inline void CMDRoomInfoExtResp::clear_vcbid() {
  vcbid_ = 0;
}
inline ::google::protobuf::int32 CMDRoomInfoExtResp::vcbid() const {
  // @@protoc_insertion_point(field_get:CMDRoomInfoExtResp.vcbid)
  return vcbid_;
}
inline void CMDRoomInfoExtResp::set_vcbid(::google::protobuf::int32 value) {
  
  vcbid_ = value;
  // @@protoc_insertion_point(field_set:CMDRoomInfoExtResp.vcbid)
}

// optional .e_MicMode micmode = 2;
inline void CMDRoomInfoExtResp::clear_micmode() {
  micmode_ = 0;
}
inline ::e_MicMode CMDRoomInfoExtResp::micmode() const {
  // @@protoc_insertion_point(field_get:CMDRoomInfoExtResp.micmode)
  return static_cast< ::e_MicMode >(micmode_);
}
inline void CMDRoomInfoExtResp::set_micmode(::e_MicMode value) {
  
  micmode_ = value;
  // @@protoc_insertion_point(field_set:CMDRoomInfoExtResp.micmode)
}

// optional string name = 3;
inline void CMDRoomInfoExtResp::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMDRoomInfoExtResp::name() const {
  // @@protoc_insertion_point(field_get:CMDRoomInfoExtResp.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDRoomInfoExtResp::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDRoomInfoExtResp.name)
}
inline void CMDRoomInfoExtResp::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDRoomInfoExtResp.name)
}
inline void CMDRoomInfoExtResp::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDRoomInfoExtResp.name)
}
inline ::std::string* CMDRoomInfoExtResp::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:CMDRoomInfoExtResp.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMDRoomInfoExtResp::release_name() {
  // @@protoc_insertion_point(field_release:CMDRoomInfoExtResp.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDRoomInfoExtResp::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:CMDRoomInfoExtResp.name)
}

// optional string icon = 4;
inline void CMDRoomInfoExtResp::clear_icon() {
  icon_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMDRoomInfoExtResp::icon() const {
  // @@protoc_insertion_point(field_get:CMDRoomInfoExtResp.icon)
  return icon_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDRoomInfoExtResp::set_icon(const ::std::string& value) {
  
  icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDRoomInfoExtResp.icon)
}
inline void CMDRoomInfoExtResp::set_icon(const char* value) {
  
  icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDRoomInfoExtResp.icon)
}
inline void CMDRoomInfoExtResp::set_icon(const char* value, size_t size) {
  
  icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDRoomInfoExtResp.icon)
}
inline ::std::string* CMDRoomInfoExtResp::mutable_icon() {
  
  // @@protoc_insertion_point(field_mutable:CMDRoomInfoExtResp.icon)
  return icon_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMDRoomInfoExtResp::release_icon() {
  // @@protoc_insertion_point(field_release:CMDRoomInfoExtResp.icon)
  
  return icon_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDRoomInfoExtResp::set_allocated_icon(::std::string* icon) {
  if (icon != NULL) {
    
  } else {
    
  }
  icon_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), icon);
  // @@protoc_insertion_point(field_set_allocated:CMDRoomInfoExtResp.icon)
}

// optional int32 micsec = 5;
inline void CMDRoomInfoExtResp::clear_micsec() {
  micsec_ = 0;
}
inline ::google::protobuf::int32 CMDRoomInfoExtResp::micsec() const {
  // @@protoc_insertion_point(field_get:CMDRoomInfoExtResp.micsec)
  return micsec_;
}
inline void CMDRoomInfoExtResp::set_micsec(::google::protobuf::int32 value) {
  
  micsec_ = value;
  // @@protoc_insertion_point(field_set:CMDRoomInfoExtResp.micsec)
}

// -------------------------------------------------------------------

// CMDInviteOnMic

// optional int32 runuserid = 1;
inline void CMDInviteOnMic::clear_runuserid() {
  runuserid_ = 0;
}
inline ::google::protobuf::int32 CMDInviteOnMic::runuserid() const {
  // @@protoc_insertion_point(field_get:CMDInviteOnMic.runuserid)
  return runuserid_;
}
inline void CMDInviteOnMic::set_runuserid(::google::protobuf::int32 value) {
  
  runuserid_ = value;
  // @@protoc_insertion_point(field_set:CMDInviteOnMic.runuserid)
}

// optional int32 touserid = 2;
inline void CMDInviteOnMic::clear_touserid() {
  touserid_ = 0;
}
inline ::google::protobuf::int32 CMDInviteOnMic::touserid() const {
  // @@protoc_insertion_point(field_get:CMDInviteOnMic.touserid)
  return touserid_;
}
inline void CMDInviteOnMic::set_touserid(::google::protobuf::int32 value) {
  
  touserid_ = value;
  // @@protoc_insertion_point(field_set:CMDInviteOnMic.touserid)
}

// optional int32 optype = 3;
inline void CMDInviteOnMic::clear_optype() {
  optype_ = 0;
}
inline ::google::protobuf::int32 CMDInviteOnMic::optype() const {
  // @@protoc_insertion_point(field_get:CMDInviteOnMic.optype)
  return optype_;
}
inline void CMDInviteOnMic::set_optype(::google::protobuf::int32 value) {
  
  optype_ = value;
  // @@protoc_insertion_point(field_set:CMDInviteOnMic.optype)
}

// optional int32 vcbid = 4;
inline void CMDInviteOnMic::clear_vcbid() {
  vcbid_ = 0;
}
inline ::google::protobuf::int32 CMDInviteOnMic::vcbid() const {
  // @@protoc_insertion_point(field_get:CMDInviteOnMic.vcbid)
  return vcbid_;
}
inline void CMDInviteOnMic::set_vcbid(::google::protobuf::int32 value) {
  
  vcbid_ = value;
  // @@protoc_insertion_point(field_set:CMDInviteOnMic.vcbid)
}

// optional int32 sessionid = 5;
inline void CMDInviteOnMic::clear_sessionid() {
  sessionid_ = 0;
}
inline ::google::protobuf::int32 CMDInviteOnMic::sessionid() const {
  // @@protoc_insertion_point(field_get:CMDInviteOnMic.sessionid)
  return sessionid_;
}
inline void CMDInviteOnMic::set_sessionid(::google::protobuf::int32 value) {
  
  sessionid_ = value;
  // @@protoc_insertion_point(field_set:CMDInviteOnMic.sessionid)
}

// optional .CMDErrCode errInfo = 6;
inline bool CMDInviteOnMic::has_errinfo() const {
  return !_is_default_instance_ && errinfo_ != NULL;
}
inline void CMDInviteOnMic::clear_errinfo() {
  if (GetArenaNoVirtual() == NULL && errinfo_ != NULL) delete errinfo_;
  errinfo_ = NULL;
}
inline const ::CMDErrCode& CMDInviteOnMic::errinfo() const {
  // @@protoc_insertion_point(field_get:CMDInviteOnMic.errInfo)
  return errinfo_ != NULL ? *errinfo_ : *default_instance_->errinfo_;
}
inline ::CMDErrCode* CMDInviteOnMic::mutable_errinfo() {
  
  if (errinfo_ == NULL) {
    errinfo_ = new ::CMDErrCode;
  }
  // @@protoc_insertion_point(field_mutable:CMDInviteOnMic.errInfo)
  return errinfo_;
}
inline ::CMDErrCode* CMDInviteOnMic::release_errinfo() {
  // @@protoc_insertion_point(field_release:CMDInviteOnMic.errInfo)
  
  ::CMDErrCode* temp = errinfo_;
  errinfo_ = NULL;
  return temp;
}
inline void CMDInviteOnMic::set_allocated_errinfo(::CMDErrCode* errinfo) {
  delete errinfo_;
  errinfo_ = errinfo;
  if (errinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDInviteOnMic.errInfo)
}

// optional int32 intimacy = 7;
inline void CMDInviteOnMic::clear_intimacy() {
  intimacy_ = 0;
}
inline ::google::protobuf::int32 CMDInviteOnMic::intimacy() const {
  // @@protoc_insertion_point(field_get:CMDInviteOnMic.intimacy)
  return intimacy_;
}
inline void CMDInviteOnMic::set_intimacy(::google::protobuf::int32 value) {
  
  intimacy_ = value;
  // @@protoc_insertion_point(field_set:CMDInviteOnMic.intimacy)
}

// optional int32 threshold = 8;
inline void CMDInviteOnMic::clear_threshold() {
  threshold_ = 0;
}
inline ::google::protobuf::int32 CMDInviteOnMic::threshold() const {
  // @@protoc_insertion_point(field_get:CMDInviteOnMic.threshold)
  return threshold_;
}
inline void CMDInviteOnMic::set_threshold(::google::protobuf::int32 value) {
  
  threshold_ = value;
  // @@protoc_insertion_point(field_set:CMDInviteOnMic.threshold)
}

// -------------------------------------------------------------------

// CMDGroupUserSettingReq

// optional uint32 groupid = 1;
inline void CMDGroupUserSettingReq::clear_groupid() {
  groupid_ = 0u;
}
inline ::google::protobuf::uint32 CMDGroupUserSettingReq::groupid() const {
  // @@protoc_insertion_point(field_get:CMDGroupUserSettingReq.groupid)
  return groupid_;
}
inline void CMDGroupUserSettingReq::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDGroupUserSettingReq.groupid)
}

// optional uint32 userid = 2;
inline void CMDGroupUserSettingReq::clear_userid() {
  userid_ = 0u;
}
inline ::google::protobuf::uint32 CMDGroupUserSettingReq::userid() const {
  // @@protoc_insertion_point(field_get:CMDGroupUserSettingReq.userid)
  return userid_;
}
inline void CMDGroupUserSettingReq::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDGroupUserSettingReq.userid)
}

// optional .CMDUInt32 PChatThreshold = 3;
inline bool CMDGroupUserSettingReq::has_pchatthreshold() const {
  return !_is_default_instance_ && pchatthreshold_ != NULL;
}
inline void CMDGroupUserSettingReq::clear_pchatthreshold() {
  if (GetArenaNoVirtual() == NULL && pchatthreshold_ != NULL) delete pchatthreshold_;
  pchatthreshold_ = NULL;
}
inline const ::CMDUInt32& CMDGroupUserSettingReq::pchatthreshold() const {
  // @@protoc_insertion_point(field_get:CMDGroupUserSettingReq.PChatThreshold)
  return pchatthreshold_ != NULL ? *pchatthreshold_ : *default_instance_->pchatthreshold_;
}
inline ::CMDUInt32* CMDGroupUserSettingReq::mutable_pchatthreshold() {
  
  if (pchatthreshold_ == NULL) {
    pchatthreshold_ = new ::CMDUInt32;
  }
  // @@protoc_insertion_point(field_mutable:CMDGroupUserSettingReq.PChatThreshold)
  return pchatthreshold_;
}
inline ::CMDUInt32* CMDGroupUserSettingReq::release_pchatthreshold() {
  // @@protoc_insertion_point(field_release:CMDGroupUserSettingReq.PChatThreshold)
  
  ::CMDUInt32* temp = pchatthreshold_;
  pchatthreshold_ = NULL;
  return temp;
}
inline void CMDGroupUserSettingReq::set_allocated_pchatthreshold(::CMDUInt32* pchatthreshold) {
  delete pchatthreshold_;
  pchatthreshold_ = pchatthreshold;
  if (pchatthreshold) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDGroupUserSettingReq.PChatThreshold)
}

// -------------------------------------------------------------------

// CMDGroupUserSettingResp

// optional .CMDErrCode errInfo = 1;
inline bool CMDGroupUserSettingResp::has_errinfo() const {
  return !_is_default_instance_ && errinfo_ != NULL;
}
inline void CMDGroupUserSettingResp::clear_errinfo() {
  if (GetArenaNoVirtual() == NULL && errinfo_ != NULL) delete errinfo_;
  errinfo_ = NULL;
}
inline const ::CMDErrCode& CMDGroupUserSettingResp::errinfo() const {
  // @@protoc_insertion_point(field_get:CMDGroupUserSettingResp.errInfo)
  return errinfo_ != NULL ? *errinfo_ : *default_instance_->errinfo_;
}
inline ::CMDErrCode* CMDGroupUserSettingResp::mutable_errinfo() {
  
  if (errinfo_ == NULL) {
    errinfo_ = new ::CMDErrCode;
  }
  // @@protoc_insertion_point(field_mutable:CMDGroupUserSettingResp.errInfo)
  return errinfo_;
}
inline ::CMDErrCode* CMDGroupUserSettingResp::release_errinfo() {
  // @@protoc_insertion_point(field_release:CMDGroupUserSettingResp.errInfo)
  
  ::CMDErrCode* temp = errinfo_;
  errinfo_ = NULL;
  return temp;
}
inline void CMDGroupUserSettingResp::set_allocated_errinfo(::CMDErrCode* errinfo) {
  delete errinfo_;
  errinfo_ = errinfo;
  if (errinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDGroupUserSettingResp.errInfo)
}

// optional uint32 groupid = 2;
inline void CMDGroupUserSettingResp::clear_groupid() {
  groupid_ = 0u;
}
inline ::google::protobuf::uint32 CMDGroupUserSettingResp::groupid() const {
  // @@protoc_insertion_point(field_get:CMDGroupUserSettingResp.groupid)
  return groupid_;
}
inline void CMDGroupUserSettingResp::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDGroupUserSettingResp.groupid)
}

// optional uint32 userid = 3;
inline void CMDGroupUserSettingResp::clear_userid() {
  userid_ = 0u;
}
inline ::google::protobuf::uint32 CMDGroupUserSettingResp::userid() const {
  // @@protoc_insertion_point(field_get:CMDGroupUserSettingResp.userid)
  return userid_;
}
inline void CMDGroupUserSettingResp::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDGroupUserSettingResp.userid)
}

// -------------------------------------------------------------------

// CMDAuthStateNoty

// optional uint32 userid = 1;
inline void CMDAuthStateNoty::clear_userid() {
  userid_ = 0u;
}
inline ::google::protobuf::uint32 CMDAuthStateNoty::userid() const {
  // @@protoc_insertion_point(field_get:CMDAuthStateNoty.userid)
  return userid_;
}
inline void CMDAuthStateNoty::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDAuthStateNoty.userid)
}

// optional uint32 groupid = 2;
inline void CMDAuthStateNoty::clear_groupid() {
  groupid_ = 0u;
}
inline ::google::protobuf::uint32 CMDAuthStateNoty::groupid() const {
  // @@protoc_insertion_point(field_get:CMDAuthStateNoty.groupid)
  return groupid_;
}
inline void CMDAuthStateNoty::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDAuthStateNoty.groupid)
}

// optional uint32 authState = 3;
inline void CMDAuthStateNoty::clear_authstate() {
  authstate_ = 0u;
}
inline ::google::protobuf::uint32 CMDAuthStateNoty::authstate() const {
  // @@protoc_insertion_point(field_get:CMDAuthStateNoty.authState)
  return authstate_;
}
inline void CMDAuthStateNoty::set_authstate(::google::protobuf::uint32 value) {
  
  authstate_ = value;
  // @@protoc_insertion_point(field_set:CMDAuthStateNoty.authState)
}

// -------------------------------------------------------------------

// CMDAuthReq

// optional uint32 userid = 1;
inline void CMDAuthReq::clear_userid() {
  userid_ = 0u;
}
inline ::google::protobuf::uint32 CMDAuthReq::userid() const {
  // @@protoc_insertion_point(field_get:CMDAuthReq.userid)
  return userid_;
}
inline void CMDAuthReq::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDAuthReq.userid)
}

// optional uint32 vcbid = 2;
inline void CMDAuthReq::clear_vcbid() {
  vcbid_ = 0u;
}
inline ::google::protobuf::uint32 CMDAuthReq::vcbid() const {
  // @@protoc_insertion_point(field_get:CMDAuthReq.vcbid)
  return vcbid_;
}
inline void CMDAuthReq::set_vcbid(::google::protobuf::uint32 value) {
  
  vcbid_ = value;
  // @@protoc_insertion_point(field_set:CMDAuthReq.vcbid)
}

// -------------------------------------------------------------------

// CMDAuthResp

// optional uint32 userid = 1;
inline void CMDAuthResp::clear_userid() {
  userid_ = 0u;
}
inline ::google::protobuf::uint32 CMDAuthResp::userid() const {
  // @@protoc_insertion_point(field_get:CMDAuthResp.userid)
  return userid_;
}
inline void CMDAuthResp::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDAuthResp.userid)
}

// optional uint32 vcbid = 2;
inline void CMDAuthResp::clear_vcbid() {
  vcbid_ = 0u;
}
inline ::google::protobuf::uint32 CMDAuthResp::vcbid() const {
  // @@protoc_insertion_point(field_get:CMDAuthResp.vcbid)
  return vcbid_;
}
inline void CMDAuthResp::set_vcbid(::google::protobuf::uint32 value) {
  
  vcbid_ = value;
  // @@protoc_insertion_point(field_set:CMDAuthResp.vcbid)
}

// optional string appid = 3;
inline void CMDAuthResp::clear_appid() {
  appid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMDAuthResp::appid() const {
  // @@protoc_insertion_point(field_get:CMDAuthResp.appid)
  return appid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDAuthResp::set_appid(const ::std::string& value) {
  
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDAuthResp.appid)
}
inline void CMDAuthResp::set_appid(const char* value) {
  
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDAuthResp.appid)
}
inline void CMDAuthResp::set_appid(const char* value, size_t size) {
  
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDAuthResp.appid)
}
inline ::std::string* CMDAuthResp::mutable_appid() {
  
  // @@protoc_insertion_point(field_mutable:CMDAuthResp.appid)
  return appid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMDAuthResp::release_appid() {
  // @@protoc_insertion_point(field_release:CMDAuthResp.appid)
  
  return appid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDAuthResp::set_allocated_appid(::std::string* appid) {
  if (appid != NULL) {
    
  } else {
    
  }
  appid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appid);
  // @@protoc_insertion_point(field_set_allocated:CMDAuthResp.appid)
}

// optional string recvkey = 4;
inline void CMDAuthResp::clear_recvkey() {
  recvkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMDAuthResp::recvkey() const {
  // @@protoc_insertion_point(field_get:CMDAuthResp.recvkey)
  return recvkey_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDAuthResp::set_recvkey(const ::std::string& value) {
  
  recvkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDAuthResp.recvkey)
}
inline void CMDAuthResp::set_recvkey(const char* value) {
  
  recvkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDAuthResp.recvkey)
}
inline void CMDAuthResp::set_recvkey(const char* value, size_t size) {
  
  recvkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDAuthResp.recvkey)
}
inline ::std::string* CMDAuthResp::mutable_recvkey() {
  
  // @@protoc_insertion_point(field_mutable:CMDAuthResp.recvkey)
  return recvkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMDAuthResp::release_recvkey() {
  // @@protoc_insertion_point(field_release:CMDAuthResp.recvkey)
  
  return recvkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDAuthResp::set_allocated_recvkey(::std::string* recvkey) {
  if (recvkey != NULL) {
    
  } else {
    
  }
  recvkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), recvkey);
  // @@protoc_insertion_point(field_set_allocated:CMDAuthResp.recvkey)
}

// optional string sendkey = 5;
inline void CMDAuthResp::clear_sendkey() {
  sendkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMDAuthResp::sendkey() const {
  // @@protoc_insertion_point(field_get:CMDAuthResp.sendkey)
  return sendkey_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDAuthResp::set_sendkey(const ::std::string& value) {
  
  sendkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDAuthResp.sendkey)
}
inline void CMDAuthResp::set_sendkey(const char* value) {
  
  sendkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDAuthResp.sendkey)
}
inline void CMDAuthResp::set_sendkey(const char* value, size_t size) {
  
  sendkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDAuthResp.sendkey)
}
inline ::std::string* CMDAuthResp::mutable_sendkey() {
  
  // @@protoc_insertion_point(field_mutable:CMDAuthResp.sendkey)
  return sendkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMDAuthResp::release_sendkey() {
  // @@protoc_insertion_point(field_release:CMDAuthResp.sendkey)
  
  return sendkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDAuthResp::set_allocated_sendkey(::std::string* sendkey) {
  if (sendkey != NULL) {
    
  } else {
    
  }
  sendkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sendkey);
  // @@protoc_insertion_point(field_set_allocated:CMDAuthResp.sendkey)
}

// optional uint32 errcode = 6;
inline void CMDAuthResp::clear_errcode() {
  errcode_ = 0u;
}
inline ::google::protobuf::uint32 CMDAuthResp::errcode() const {
  // @@protoc_insertion_point(field_get:CMDAuthResp.errcode)
  return errcode_;
}
inline void CMDAuthResp::set_errcode(::google::protobuf::uint32 value) {
  
  errcode_ = value;
  // @@protoc_insertion_point(field_set:CMDAuthResp.errcode)
}

// -------------------------------------------------------------------

// CMDGroupOnlineMemberList

// optional uint32 groupid = 1;
inline void CMDGroupOnlineMemberList::clear_groupid() {
  groupid_ = 0u;
}
inline ::google::protobuf::uint32 CMDGroupOnlineMemberList::groupid() const {
  // @@protoc_insertion_point(field_get:CMDGroupOnlineMemberList.groupid)
  return groupid_;
}
inline void CMDGroupOnlineMemberList::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDGroupOnlineMemberList.groupid)
}

// repeated uint32 list = 2;
inline int CMDGroupOnlineMemberList::list_size() const {
  return list_.size();
}
inline void CMDGroupOnlineMemberList::clear_list() {
  list_.Clear();
}
inline ::google::protobuf::uint32 CMDGroupOnlineMemberList::list(int index) const {
  // @@protoc_insertion_point(field_get:CMDGroupOnlineMemberList.list)
  return list_.Get(index);
}
inline void CMDGroupOnlineMemberList::set_list(int index, ::google::protobuf::uint32 value) {
  list_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMDGroupOnlineMemberList.list)
}
inline void CMDGroupOnlineMemberList::add_list(::google::protobuf::uint32 value) {
  list_.Add(value);
  // @@protoc_insertion_point(field_add:CMDGroupOnlineMemberList.list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMDGroupOnlineMemberList::list() const {
  // @@protoc_insertion_point(field_list:CMDGroupOnlineMemberList.list)
  return list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMDGroupOnlineMemberList::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:CMDGroupOnlineMemberList.list)
  return &list_;
}

// -------------------------------------------------------------------

// CMDMemberEnterGroup

// optional uint32 groupid = 1;
inline void CMDMemberEnterGroup::clear_groupid() {
  groupid_ = 0u;
}
inline ::google::protobuf::uint32 CMDMemberEnterGroup::groupid() const {
  // @@protoc_insertion_point(field_get:CMDMemberEnterGroup.groupid)
  return groupid_;
}
inline void CMDMemberEnterGroup::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDMemberEnterGroup.groupid)
}

// optional uint32 userid = 2;
inline void CMDMemberEnterGroup::clear_userid() {
  userid_ = 0u;
}
inline ::google::protobuf::uint32 CMDMemberEnterGroup::userid() const {
  // @@protoc_insertion_point(field_get:CMDMemberEnterGroup.userid)
  return userid_;
}
inline void CMDMemberEnterGroup::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDMemberEnterGroup.userid)
}

// -------------------------------------------------------------------

// CMDMemberExitGroup

// optional uint32 groupid = 1;
inline void CMDMemberExitGroup::clear_groupid() {
  groupid_ = 0u;
}
inline ::google::protobuf::uint32 CMDMemberExitGroup::groupid() const {
  // @@protoc_insertion_point(field_get:CMDMemberExitGroup.groupid)
  return groupid_;
}
inline void CMDMemberExitGroup::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDMemberExitGroup.groupid)
}

// optional uint32 userid = 2;
inline void CMDMemberExitGroup::clear_userid() {
  userid_ = 0u;
}
inline ::google::protobuf::uint32 CMDMemberExitGroup::userid() const {
  // @@protoc_insertion_point(field_get:CMDMemberExitGroup.userid)
  return userid_;
}
inline void CMDMemberExitGroup::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDMemberExitGroup.userid)
}

// -------------------------------------------------------------------

// CMDForbidUserChat

// optional uint32 groupid = 1;
inline void CMDForbidUserChat::clear_groupid() {
  groupid_ = 0u;
}
inline ::google::protobuf::uint32 CMDForbidUserChat::groupid() const {
  // @@protoc_insertion_point(field_get:CMDForbidUserChat.groupid)
  return groupid_;
}
inline void CMDForbidUserChat::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDForbidUserChat.groupid)
}

// optional uint32 userid = 2;
inline void CMDForbidUserChat::clear_userid() {
  userid_ = 0u;
}
inline ::google::protobuf::uint32 CMDForbidUserChat::userid() const {
  // @@protoc_insertion_point(field_get:CMDForbidUserChat.userid)
  return userid_;
}
inline void CMDForbidUserChat::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDForbidUserChat.userid)
}

// optional uint32 toid = 3;
inline void CMDForbidUserChat::clear_toid() {
  toid_ = 0u;
}
inline ::google::protobuf::uint32 CMDForbidUserChat::toid() const {
  // @@protoc_insertion_point(field_get:CMDForbidUserChat.toid)
  return toid_;
}
inline void CMDForbidUserChat::set_toid(::google::protobuf::uint32 value) {
  
  toid_ = value;
  // @@protoc_insertion_point(field_set:CMDForbidUserChat.toid)
}

// optional uint32 status = 4;
inline void CMDForbidUserChat::clear_status() {
  status_ = 0u;
}
inline ::google::protobuf::uint32 CMDForbidUserChat::status() const {
  // @@protoc_insertion_point(field_get:CMDForbidUserChat.status)
  return status_;
}
inline void CMDForbidUserChat::set_status(::google::protobuf::uint32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:CMDForbidUserChat.status)
}

// optional uint32 errid = 5;
inline void CMDForbidUserChat::clear_errid() {
  errid_ = 0u;
}
inline ::google::protobuf::uint32 CMDForbidUserChat::errid() const {
  // @@protoc_insertion_point(field_get:CMDForbidUserChat.errid)
  return errid_;
}
inline void CMDForbidUserChat::set_errid(::google::protobuf::uint32 value) {
  
  errid_ = value;
  // @@protoc_insertion_point(field_set:CMDForbidUserChat.errid)
}

// -------------------------------------------------------------------

// CMDCourseFinish

// optional uint32 groupid = 1;
inline void CMDCourseFinish::clear_groupid() {
  groupid_ = 0u;
}
inline ::google::protobuf::uint32 CMDCourseFinish::groupid() const {
  // @@protoc_insertion_point(field_get:CMDCourseFinish.groupid)
  return groupid_;
}
inline void CMDCourseFinish::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDCourseFinish.groupid)
}

// optional uint32 userid = 2;
inline void CMDCourseFinish::clear_userid() {
  userid_ = 0u;
}
inline ::google::protobuf::uint32 CMDCourseFinish::userid() const {
  // @@protoc_insertion_point(field_get:CMDCourseFinish.userid)
  return userid_;
}
inline void CMDCourseFinish::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDCourseFinish.userid)
}

// -------------------------------------------------------------------

// CMDSilenceNoty_tipUser

// optional string srcname = 1;
inline void CMDSilenceNoty_tipUser::clear_srcname() {
  srcname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMDSilenceNoty_tipUser::srcname() const {
  // @@protoc_insertion_point(field_get:CMDSilenceNoty.tipUser.srcname)
  return srcname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDSilenceNoty_tipUser::set_srcname(const ::std::string& value) {
  
  srcname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDSilenceNoty.tipUser.srcname)
}
inline void CMDSilenceNoty_tipUser::set_srcname(const char* value) {
  
  srcname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDSilenceNoty.tipUser.srcname)
}
inline void CMDSilenceNoty_tipUser::set_srcname(const char* value, size_t size) {
  
  srcname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDSilenceNoty.tipUser.srcname)
}
inline ::std::string* CMDSilenceNoty_tipUser::mutable_srcname() {
  
  // @@protoc_insertion_point(field_mutable:CMDSilenceNoty.tipUser.srcname)
  return srcname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMDSilenceNoty_tipUser::release_srcname() {
  // @@protoc_insertion_point(field_release:CMDSilenceNoty.tipUser.srcname)
  
  return srcname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDSilenceNoty_tipUser::set_allocated_srcname(::std::string* srcname) {
  if (srcname != NULL) {
    
  } else {
    
  }
  srcname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), srcname);
  // @@protoc_insertion_point(field_set_allocated:CMDSilenceNoty.tipUser.srcname)
}

// optional string srchead = 2;
inline void CMDSilenceNoty_tipUser::clear_srchead() {
  srchead_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMDSilenceNoty_tipUser::srchead() const {
  // @@protoc_insertion_point(field_get:CMDSilenceNoty.tipUser.srchead)
  return srchead_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDSilenceNoty_tipUser::set_srchead(const ::std::string& value) {
  
  srchead_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDSilenceNoty.tipUser.srchead)
}
inline void CMDSilenceNoty_tipUser::set_srchead(const char* value) {
  
  srchead_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDSilenceNoty.tipUser.srchead)
}
inline void CMDSilenceNoty_tipUser::set_srchead(const char* value, size_t size) {
  
  srchead_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDSilenceNoty.tipUser.srchead)
}
inline ::std::string* CMDSilenceNoty_tipUser::mutable_srchead() {
  
  // @@protoc_insertion_point(field_mutable:CMDSilenceNoty.tipUser.srchead)
  return srchead_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMDSilenceNoty_tipUser::release_srchead() {
  // @@protoc_insertion_point(field_release:CMDSilenceNoty.tipUser.srchead)
  
  return srchead_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDSilenceNoty_tipUser::set_allocated_srchead(::std::string* srchead) {
  if (srchead != NULL) {
    
  } else {
    
  }
  srchead_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), srchead);
  // @@protoc_insertion_point(field_set_allocated:CMDSilenceNoty.tipUser.srchead)
}

// optional string gifname = 3;
inline void CMDSilenceNoty_tipUser::clear_gifname() {
  gifname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMDSilenceNoty_tipUser::gifname() const {
  // @@protoc_insertion_point(field_get:CMDSilenceNoty.tipUser.gifname)
  return gifname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDSilenceNoty_tipUser::set_gifname(const ::std::string& value) {
  
  gifname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDSilenceNoty.tipUser.gifname)
}
inline void CMDSilenceNoty_tipUser::set_gifname(const char* value) {
  
  gifname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDSilenceNoty.tipUser.gifname)
}
inline void CMDSilenceNoty_tipUser::set_gifname(const char* value, size_t size) {
  
  gifname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDSilenceNoty.tipUser.gifname)
}
inline ::std::string* CMDSilenceNoty_tipUser::mutable_gifname() {
  
  // @@protoc_insertion_point(field_mutable:CMDSilenceNoty.tipUser.gifname)
  return gifname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMDSilenceNoty_tipUser::release_gifname() {
  // @@protoc_insertion_point(field_release:CMDSilenceNoty.tipUser.gifname)
  
  return gifname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDSilenceNoty_tipUser::set_allocated_gifname(::std::string* gifname) {
  if (gifname != NULL) {
    
  } else {
    
  }
  gifname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gifname);
  // @@protoc_insertion_point(field_set_allocated:CMDSilenceNoty.tipUser.gifname)
}

// optional string gifpicture = 4;
inline void CMDSilenceNoty_tipUser::clear_gifpicture() {
  gifpicture_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMDSilenceNoty_tipUser::gifpicture() const {
  // @@protoc_insertion_point(field_get:CMDSilenceNoty.tipUser.gifpicture)
  return gifpicture_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDSilenceNoty_tipUser::set_gifpicture(const ::std::string& value) {
  
  gifpicture_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDSilenceNoty.tipUser.gifpicture)
}
inline void CMDSilenceNoty_tipUser::set_gifpicture(const char* value) {
  
  gifpicture_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDSilenceNoty.tipUser.gifpicture)
}
inline void CMDSilenceNoty_tipUser::set_gifpicture(const char* value, size_t size) {
  
  gifpicture_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDSilenceNoty.tipUser.gifpicture)
}
inline ::std::string* CMDSilenceNoty_tipUser::mutable_gifpicture() {
  
  // @@protoc_insertion_point(field_mutable:CMDSilenceNoty.tipUser.gifpicture)
  return gifpicture_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMDSilenceNoty_tipUser::release_gifpicture() {
  // @@protoc_insertion_point(field_release:CMDSilenceNoty.tipUser.gifpicture)
  
  return gifpicture_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDSilenceNoty_tipUser::set_allocated_gifpicture(::std::string* gifpicture) {
  if (gifpicture != NULL) {
    
  } else {
    
  }
  gifpicture_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gifpicture);
  // @@protoc_insertion_point(field_set_allocated:CMDSilenceNoty.tipUser.gifpicture)
}

// -------------------------------------------------------------------

// CMDSilenceNoty

// optional uint32 groupid = 1;
inline void CMDSilenceNoty::clear_groupid() {
  groupid_ = 0u;
}
inline ::google::protobuf::uint32 CMDSilenceNoty::groupid() const {
  // @@protoc_insertion_point(field_get:CMDSilenceNoty.groupid)
  return groupid_;
}
inline void CMDSilenceNoty::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDSilenceNoty.groupid)
}

// repeated .CMDSilenceNoty.tipUser user = 2;
inline int CMDSilenceNoty::user_size() const {
  return user_.size();
}
inline void CMDSilenceNoty::clear_user() {
  user_.Clear();
}
inline const ::CMDSilenceNoty_tipUser& CMDSilenceNoty::user(int index) const {
  // @@protoc_insertion_point(field_get:CMDSilenceNoty.user)
  return user_.Get(index);
}
inline ::CMDSilenceNoty_tipUser* CMDSilenceNoty::mutable_user(int index) {
  // @@protoc_insertion_point(field_mutable:CMDSilenceNoty.user)
  return user_.Mutable(index);
}
inline ::CMDSilenceNoty_tipUser* CMDSilenceNoty::add_user() {
  // @@protoc_insertion_point(field_add:CMDSilenceNoty.user)
  return user_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMDSilenceNoty_tipUser >*
CMDSilenceNoty::mutable_user() {
  // @@protoc_insertion_point(field_mutable_list:CMDSilenceNoty.user)
  return &user_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMDSilenceNoty_tipUser >&
CMDSilenceNoty::user() const {
  // @@protoc_insertion_point(field_list:CMDSilenceNoty.user)
  return user_;
}

// -------------------------------------------------------------------

// CMDNoticeNoty

// optional string notice = 1;
inline void CMDNoticeNoty::clear_notice() {
  notice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMDNoticeNoty::notice() const {
  // @@protoc_insertion_point(field_get:CMDNoticeNoty.notice)
  return notice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDNoticeNoty::set_notice(const ::std::string& value) {
  
  notice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDNoticeNoty.notice)
}
inline void CMDNoticeNoty::set_notice(const char* value) {
  
  notice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDNoticeNoty.notice)
}
inline void CMDNoticeNoty::set_notice(const char* value, size_t size) {
  
  notice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDNoticeNoty.notice)
}
inline ::std::string* CMDNoticeNoty::mutable_notice() {
  
  // @@protoc_insertion_point(field_mutable:CMDNoticeNoty.notice)
  return notice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMDNoticeNoty::release_notice() {
  // @@protoc_insertion_point(field_release:CMDNoticeNoty.notice)
  
  return notice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDNoticeNoty::set_allocated_notice(::std::string* notice) {
  if (notice != NULL) {
    
  } else {
    
  }
  notice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), notice);
  // @@protoc_insertion_point(field_set_allocated:CMDNoticeNoty.notice)
}

// -------------------------------------------------------------------

// CMDCloseLiveAndCourseeNoty

// optional uint32 groupid = 1;
inline void CMDCloseLiveAndCourseeNoty::clear_groupid() {
  groupid_ = 0u;
}
inline ::google::protobuf::uint32 CMDCloseLiveAndCourseeNoty::groupid() const {
  // @@protoc_insertion_point(field_get:CMDCloseLiveAndCourseeNoty.groupid)
  return groupid_;
}
inline void CMDCloseLiveAndCourseeNoty::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDCloseLiveAndCourseeNoty.groupid)
}

// optional uint32 runuserid = 2;
inline void CMDCloseLiveAndCourseeNoty::clear_runuserid() {
  runuserid_ = 0u;
}
inline ::google::protobuf::uint32 CMDCloseLiveAndCourseeNoty::runuserid() const {
  // @@protoc_insertion_point(field_get:CMDCloseLiveAndCourseeNoty.runuserid)
  return runuserid_;
}
inline void CMDCloseLiveAndCourseeNoty::set_runuserid(::google::protobuf::uint32 value) {
  
  runuserid_ = value;
  // @@protoc_insertion_point(field_set:CMDCloseLiveAndCourseeNoty.runuserid)
}

// optional uint32 toid = 3;
inline void CMDCloseLiveAndCourseeNoty::clear_toid() {
  toid_ = 0u;
}
inline ::google::protobuf::uint32 CMDCloseLiveAndCourseeNoty::toid() const {
  // @@protoc_insertion_point(field_get:CMDCloseLiveAndCourseeNoty.toid)
  return toid_;
}
inline void CMDCloseLiveAndCourseeNoty::set_toid(::google::protobuf::uint32 value) {
  
  toid_ = value;
  // @@protoc_insertion_point(field_set:CMDCloseLiveAndCourseeNoty.toid)
}

// optional uint32 status = 4;
inline void CMDCloseLiveAndCourseeNoty::clear_status() {
  status_ = 0u;
}
inline ::google::protobuf::uint32 CMDCloseLiveAndCourseeNoty::status() const {
  // @@protoc_insertion_point(field_get:CMDCloseLiveAndCourseeNoty.status)
  return status_;
}
inline void CMDCloseLiveAndCourseeNoty::set_status(::google::protobuf::uint32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:CMDCloseLiveAndCourseeNoty.status)
}

// optional uint32 type = 5;
inline void CMDCloseLiveAndCourseeNoty::clear_type() {
  type_ = 0u;
}
inline ::google::protobuf::uint32 CMDCloseLiveAndCourseeNoty::type() const {
  // @@protoc_insertion_point(field_get:CMDCloseLiveAndCourseeNoty.type)
  return type_;
}
inline void CMDCloseLiveAndCourseeNoty::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:CMDCloseLiveAndCourseeNoty.type)
}

// optional uint32 errid = 6;
inline void CMDCloseLiveAndCourseeNoty::clear_errid() {
  errid_ = 0u;
}
inline ::google::protobuf::uint32 CMDCloseLiveAndCourseeNoty::errid() const {
  // @@protoc_insertion_point(field_get:CMDCloseLiveAndCourseeNoty.errid)
  return errid_;
}
inline void CMDCloseLiveAndCourseeNoty::set_errid(::google::protobuf::uint32 value) {
  
  errid_ = value;
  // @@protoc_insertion_point(field_set:CMDCloseLiveAndCourseeNoty.errid)
}

// -------------------------------------------------------------------

// CMDLiveStartNoty

// optional uint32 groupid = 1;
inline void CMDLiveStartNoty::clear_groupid() {
  groupid_ = 0u;
}
inline ::google::protobuf::uint32 CMDLiveStartNoty::groupid() const {
  // @@protoc_insertion_point(field_get:CMDLiveStartNoty.groupid)
  return groupid_;
}
inline void CMDLiveStartNoty::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDLiveStartNoty.groupid)
}

// optional uint32 uid = 2;
inline void CMDLiveStartNoty::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 CMDLiveStartNoty::uid() const {
  // @@protoc_insertion_point(field_get:CMDLiveStartNoty.uid)
  return uid_;
}
inline void CMDLiveStartNoty::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:CMDLiveStartNoty.uid)
}

// optional string liveUrl = 3;
inline void CMDLiveStartNoty::clear_liveurl() {
  liveurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMDLiveStartNoty::liveurl() const {
  // @@protoc_insertion_point(field_get:CMDLiveStartNoty.liveUrl)
  return liveurl_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDLiveStartNoty::set_liveurl(const ::std::string& value) {
  
  liveurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDLiveStartNoty.liveUrl)
}
inline void CMDLiveStartNoty::set_liveurl(const char* value) {
  
  liveurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDLiveStartNoty.liveUrl)
}
inline void CMDLiveStartNoty::set_liveurl(const char* value, size_t size) {
  
  liveurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDLiveStartNoty.liveUrl)
}
inline ::std::string* CMDLiveStartNoty::mutable_liveurl() {
  
  // @@protoc_insertion_point(field_mutable:CMDLiveStartNoty.liveUrl)
  return liveurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMDLiveStartNoty::release_liveurl() {
  // @@protoc_insertion_point(field_release:CMDLiveStartNoty.liveUrl)
  
  return liveurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDLiveStartNoty::set_allocated_liveurl(::std::string* liveurl) {
  if (liveurl != NULL) {
    
  } else {
    
  }
  liveurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), liveurl);
  // @@protoc_insertion_point(field_set_allocated:CMDLiveStartNoty.liveUrl)
}

// -------------------------------------------------------------------

// CMDLiveStopNoty

// optional uint32 groupid = 1;
inline void CMDLiveStopNoty::clear_groupid() {
  groupid_ = 0u;
}
inline ::google::protobuf::uint32 CMDLiveStopNoty::groupid() const {
  // @@protoc_insertion_point(field_get:CMDLiveStopNoty.groupid)
  return groupid_;
}
inline void CMDLiveStopNoty::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDLiveStopNoty.groupid)
}

// optional uint32 uid = 2;
inline void CMDLiveStopNoty::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 CMDLiveStopNoty::uid() const {
  // @@protoc_insertion_point(field_get:CMDLiveStopNoty.uid)
  return uid_;
}
inline void CMDLiveStopNoty::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:CMDLiveStopNoty.uid)
}

// optional string liveUrl = 3;
inline void CMDLiveStopNoty::clear_liveurl() {
  liveurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMDLiveStopNoty::liveurl() const {
  // @@protoc_insertion_point(field_get:CMDLiveStopNoty.liveUrl)
  return liveurl_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDLiveStopNoty::set_liveurl(const ::std::string& value) {
  
  liveurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDLiveStopNoty.liveUrl)
}
inline void CMDLiveStopNoty::set_liveurl(const char* value) {
  
  liveurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDLiveStopNoty.liveUrl)
}
inline void CMDLiveStopNoty::set_liveurl(const char* value, size_t size) {
  
  liveurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDLiveStopNoty.liveUrl)
}
inline ::std::string* CMDLiveStopNoty::mutable_liveurl() {
  
  // @@protoc_insertion_point(field_mutable:CMDLiveStopNoty.liveUrl)
  return liveurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMDLiveStopNoty::release_liveurl() {
  // @@protoc_insertion_point(field_release:CMDLiveStopNoty.liveUrl)
  
  return liveurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDLiveStopNoty::set_allocated_liveurl(::std::string* liveurl) {
  if (liveurl != NULL) {
    
  } else {
    
  }
  liveurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), liveurl);
  // @@protoc_insertion_point(field_set_allocated:CMDLiveStopNoty.liveUrl)
}

// -------------------------------------------------------------------

// CMDCourseStartNoty

// optional uint32 groupid = 1;
inline void CMDCourseStartNoty::clear_groupid() {
  groupid_ = 0u;
}
inline ::google::protobuf::uint32 CMDCourseStartNoty::groupid() const {
  // @@protoc_insertion_point(field_get:CMDCourseStartNoty.groupid)
  return groupid_;
}
inline void CMDCourseStartNoty::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDCourseStartNoty.groupid)
}

// optional uint32 userid = 2;
inline void CMDCourseStartNoty::clear_userid() {
  userid_ = 0u;
}
inline ::google::protobuf::uint32 CMDCourseStartNoty::userid() const {
  // @@protoc_insertion_point(field_get:CMDCourseStartNoty.userid)
  return userid_;
}
inline void CMDCourseStartNoty::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDCourseStartNoty.userid)
}

// optional string title = 3;
inline void CMDCourseStartNoty::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMDCourseStartNoty::title() const {
  // @@protoc_insertion_point(field_get:CMDCourseStartNoty.title)
  return title_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDCourseStartNoty::set_title(const ::std::string& value) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDCourseStartNoty.title)
}
inline void CMDCourseStartNoty::set_title(const char* value) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDCourseStartNoty.title)
}
inline void CMDCourseStartNoty::set_title(const char* value, size_t size) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDCourseStartNoty.title)
}
inline ::std::string* CMDCourseStartNoty::mutable_title() {
  
  // @@protoc_insertion_point(field_mutable:CMDCourseStartNoty.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMDCourseStartNoty::release_title() {
  // @@protoc_insertion_point(field_release:CMDCourseStartNoty.title)
  
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDCourseStartNoty::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    
  } else {
    
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:CMDCourseStartNoty.title)
}

// optional string content = 4;
inline void CMDCourseStartNoty::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMDCourseStartNoty::content() const {
  // @@protoc_insertion_point(field_get:CMDCourseStartNoty.content)
  return content_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDCourseStartNoty::set_content(const ::std::string& value) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDCourseStartNoty.content)
}
inline void CMDCourseStartNoty::set_content(const char* value) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDCourseStartNoty.content)
}
inline void CMDCourseStartNoty::set_content(const char* value, size_t size) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDCourseStartNoty.content)
}
inline ::std::string* CMDCourseStartNoty::mutable_content() {
  
  // @@protoc_insertion_point(field_mutable:CMDCourseStartNoty.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMDCourseStartNoty::release_content() {
  // @@protoc_insertion_point(field_release:CMDCourseStartNoty.content)
  
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDCourseStartNoty::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    
  } else {
    
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:CMDCourseStartNoty.content)
}

// -------------------------------------------------------------------

// CMDNewSubCourseNoty

// optional uint32 courseId = 1;
inline void CMDNewSubCourseNoty::clear_courseid() {
  courseid_ = 0u;
}
inline ::google::protobuf::uint32 CMDNewSubCourseNoty::courseid() const {
  // @@protoc_insertion_point(field_get:CMDNewSubCourseNoty.courseId)
  return courseid_;
}
inline void CMDNewSubCourseNoty::set_courseid(::google::protobuf::uint32 value) {
  
  courseid_ = value;
  // @@protoc_insertion_point(field_set:CMDNewSubCourseNoty.courseId)
}

// optional uint32 subCourseId = 2;
inline void CMDNewSubCourseNoty::clear_subcourseid() {
  subcourseid_ = 0u;
}
inline ::google::protobuf::uint32 CMDNewSubCourseNoty::subcourseid() const {
  // @@protoc_insertion_point(field_get:CMDNewSubCourseNoty.subCourseId)
  return subcourseid_;
}
inline void CMDNewSubCourseNoty::set_subcourseid(::google::protobuf::uint32 value) {
  
  subcourseid_ = value;
  // @@protoc_insertion_point(field_set:CMDNewSubCourseNoty.subCourseId)
}

// optional uint32 userId = 3;
inline void CMDNewSubCourseNoty::clear_userid() {
  userid_ = 0u;
}
inline ::google::protobuf::uint32 CMDNewSubCourseNoty::userid() const {
  // @@protoc_insertion_point(field_get:CMDNewSubCourseNoty.userId)
  return userid_;
}
inline void CMDNewSubCourseNoty::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDNewSubCourseNoty.userId)
}

// optional string courseName = 4;
inline void CMDNewSubCourseNoty::clear_coursename() {
  coursename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMDNewSubCourseNoty::coursename() const {
  // @@protoc_insertion_point(field_get:CMDNewSubCourseNoty.courseName)
  return coursename_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDNewSubCourseNoty::set_coursename(const ::std::string& value) {
  
  coursename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDNewSubCourseNoty.courseName)
}
inline void CMDNewSubCourseNoty::set_coursename(const char* value) {
  
  coursename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDNewSubCourseNoty.courseName)
}
inline void CMDNewSubCourseNoty::set_coursename(const char* value, size_t size) {
  
  coursename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDNewSubCourseNoty.courseName)
}
inline ::std::string* CMDNewSubCourseNoty::mutable_coursename() {
  
  // @@protoc_insertion_point(field_mutable:CMDNewSubCourseNoty.courseName)
  return coursename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMDNewSubCourseNoty::release_coursename() {
  // @@protoc_insertion_point(field_release:CMDNewSubCourseNoty.courseName)
  
  return coursename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDNewSubCourseNoty::set_allocated_coursename(::std::string* coursename) {
  if (coursename != NULL) {
    
  } else {
    
  }
  coursename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), coursename);
  // @@protoc_insertion_point(field_set_allocated:CMDNewSubCourseNoty.courseName)
}

// optional string subCourseName = 5;
inline void CMDNewSubCourseNoty::clear_subcoursename() {
  subcoursename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMDNewSubCourseNoty::subcoursename() const {
  // @@protoc_insertion_point(field_get:CMDNewSubCourseNoty.subCourseName)
  return subcoursename_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDNewSubCourseNoty::set_subcoursename(const ::std::string& value) {
  
  subcoursename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDNewSubCourseNoty.subCourseName)
}
inline void CMDNewSubCourseNoty::set_subcoursename(const char* value) {
  
  subcoursename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDNewSubCourseNoty.subCourseName)
}
inline void CMDNewSubCourseNoty::set_subcoursename(const char* value, size_t size) {
  
  subcoursename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDNewSubCourseNoty.subCourseName)
}
inline ::std::string* CMDNewSubCourseNoty::mutable_subcoursename() {
  
  // @@protoc_insertion_point(field_mutable:CMDNewSubCourseNoty.subCourseName)
  return subcoursename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMDNewSubCourseNoty::release_subcoursename() {
  // @@protoc_insertion_point(field_release:CMDNewSubCourseNoty.subCourseName)
  
  return subcoursename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDNewSubCourseNoty::set_allocated_subcoursename(::std::string* subcoursename) {
  if (subcoursename != NULL) {
    
  } else {
    
  }
  subcoursename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), subcoursename);
  // @@protoc_insertion_point(field_set_allocated:CMDNewSubCourseNoty.subCourseName)
}

// optional string beginTime = 6;
inline void CMDNewSubCourseNoty::clear_begintime() {
  begintime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMDNewSubCourseNoty::begintime() const {
  // @@protoc_insertion_point(field_get:CMDNewSubCourseNoty.beginTime)
  return begintime_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDNewSubCourseNoty::set_begintime(const ::std::string& value) {
  
  begintime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDNewSubCourseNoty.beginTime)
}
inline void CMDNewSubCourseNoty::set_begintime(const char* value) {
  
  begintime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDNewSubCourseNoty.beginTime)
}
inline void CMDNewSubCourseNoty::set_begintime(const char* value, size_t size) {
  
  begintime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDNewSubCourseNoty.beginTime)
}
inline ::std::string* CMDNewSubCourseNoty::mutable_begintime() {
  
  // @@protoc_insertion_point(field_mutable:CMDNewSubCourseNoty.beginTime)
  return begintime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMDNewSubCourseNoty::release_begintime() {
  // @@protoc_insertion_point(field_release:CMDNewSubCourseNoty.beginTime)
  
  return begintime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDNewSubCourseNoty::set_allocated_begintime(::std::string* begintime) {
  if (begintime != NULL) {
    
  } else {
    
  }
  begintime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), begintime);
  // @@protoc_insertion_point(field_set_allocated:CMDNewSubCourseNoty.beginTime)
}

// -------------------------------------------------------------------

// CMDNewCourseNoty

// optional uint32 liveId = 1;
inline void CMDNewCourseNoty::clear_liveid() {
  liveid_ = 0u;
}
inline ::google::protobuf::uint32 CMDNewCourseNoty::liveid() const {
  // @@protoc_insertion_point(field_get:CMDNewCourseNoty.liveId)
  return liveid_;
}
inline void CMDNewCourseNoty::set_liveid(::google::protobuf::uint32 value) {
  
  liveid_ = value;
  // @@protoc_insertion_point(field_set:CMDNewCourseNoty.liveId)
}

// optional uint32 userId = 2;
inline void CMDNewCourseNoty::clear_userid() {
  userid_ = 0u;
}
inline ::google::protobuf::uint32 CMDNewCourseNoty::userid() const {
  // @@protoc_insertion_point(field_get:CMDNewCourseNoty.userId)
  return userid_;
}
inline void CMDNewCourseNoty::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDNewCourseNoty.userId)
}

// optional uint32 courseId = 3;
inline void CMDNewCourseNoty::clear_courseid() {
  courseid_ = 0u;
}
inline ::google::protobuf::uint32 CMDNewCourseNoty::courseid() const {
  // @@protoc_insertion_point(field_get:CMDNewCourseNoty.courseId)
  return courseid_;
}
inline void CMDNewCourseNoty::set_courseid(::google::protobuf::uint32 value) {
  
  courseid_ = value;
  // @@protoc_insertion_point(field_set:CMDNewCourseNoty.courseId)
}

// optional string roomName = 4;
inline void CMDNewCourseNoty::clear_roomname() {
  roomname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMDNewCourseNoty::roomname() const {
  // @@protoc_insertion_point(field_get:CMDNewCourseNoty.roomName)
  return roomname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDNewCourseNoty::set_roomname(const ::std::string& value) {
  
  roomname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDNewCourseNoty.roomName)
}
inline void CMDNewCourseNoty::set_roomname(const char* value) {
  
  roomname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDNewCourseNoty.roomName)
}
inline void CMDNewCourseNoty::set_roomname(const char* value, size_t size) {
  
  roomname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDNewCourseNoty.roomName)
}
inline ::std::string* CMDNewCourseNoty::mutable_roomname() {
  
  // @@protoc_insertion_point(field_mutable:CMDNewCourseNoty.roomName)
  return roomname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMDNewCourseNoty::release_roomname() {
  // @@protoc_insertion_point(field_release:CMDNewCourseNoty.roomName)
  
  return roomname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDNewCourseNoty::set_allocated_roomname(::std::string* roomname) {
  if (roomname != NULL) {
    
  } else {
    
  }
  roomname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), roomname);
  // @@protoc_insertion_point(field_set_allocated:CMDNewCourseNoty.roomName)
}

// optional string userAlias = 5;
inline void CMDNewCourseNoty::clear_useralias() {
  useralias_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMDNewCourseNoty::useralias() const {
  // @@protoc_insertion_point(field_get:CMDNewCourseNoty.userAlias)
  return useralias_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDNewCourseNoty::set_useralias(const ::std::string& value) {
  
  useralias_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDNewCourseNoty.userAlias)
}
inline void CMDNewCourseNoty::set_useralias(const char* value) {
  
  useralias_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDNewCourseNoty.userAlias)
}
inline void CMDNewCourseNoty::set_useralias(const char* value, size_t size) {
  
  useralias_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDNewCourseNoty.userAlias)
}
inline ::std::string* CMDNewCourseNoty::mutable_useralias() {
  
  // @@protoc_insertion_point(field_mutable:CMDNewCourseNoty.userAlias)
  return useralias_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMDNewCourseNoty::release_useralias() {
  // @@protoc_insertion_point(field_release:CMDNewCourseNoty.userAlias)
  
  return useralias_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDNewCourseNoty::set_allocated_useralias(::std::string* useralias) {
  if (useralias != NULL) {
    
  } else {
    
  }
  useralias_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), useralias);
  // @@protoc_insertion_point(field_set_allocated:CMDNewCourseNoty.userAlias)
}

// optional string courseName = 6;
inline void CMDNewCourseNoty::clear_coursename() {
  coursename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMDNewCourseNoty::coursename() const {
  // @@protoc_insertion_point(field_get:CMDNewCourseNoty.courseName)
  return coursename_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDNewCourseNoty::set_coursename(const ::std::string& value) {
  
  coursename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDNewCourseNoty.courseName)
}
inline void CMDNewCourseNoty::set_coursename(const char* value) {
  
  coursename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDNewCourseNoty.courseName)
}
inline void CMDNewCourseNoty::set_coursename(const char* value, size_t size) {
  
  coursename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDNewCourseNoty.courseName)
}
inline ::std::string* CMDNewCourseNoty::mutable_coursename() {
  
  // @@protoc_insertion_point(field_mutable:CMDNewCourseNoty.courseName)
  return coursename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMDNewCourseNoty::release_coursename() {
  // @@protoc_insertion_point(field_release:CMDNewCourseNoty.courseName)
  
  return coursename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDNewCourseNoty::set_allocated_coursename(::std::string* coursename) {
  if (coursename != NULL) {
    
  } else {
    
  }
  coursename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), coursename);
  // @@protoc_insertion_point(field_set_allocated:CMDNewCourseNoty.courseName)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::e_SettingType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::e_SettingType>() {
  return ::e_SettingType_descriptor();
}
template <> struct is_proto_enum< ::e_UserJoinGroupAuthType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::e_UserJoinGroupAuthType>() {
  return ::e_UserJoinGroupAuthType_descriptor();
}
template <> struct is_proto_enum< ::e_MicMode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::e_MicMode>() {
  return ::e_MicMode_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_RoomSvr_2eproto__INCLUDED
