// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ConsumeSvr.proto

#ifndef PROTOBUF_ConsumeSvr_2eproto__INCLUDED
#define PROTOBUF_ConsumeSvr_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "Common.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_ConsumeSvr_2eproto();
void protobuf_AssignDesc_ConsumeSvr_2eproto();
void protobuf_ShutdownFile_ConsumeSvr_2eproto();

class CMDBuyCodeRange;
class CMDBuyTreasure;
class CMDBuyTreasureResp;
class CMDCatchRedPacketReq;
class CMDCatchRedPacketResp;
class CMDMyTreasureDetail;
class CMDQryMyTreasureDetail;
class CMDQryRedPacketInfoReq;
class CMDQryRedPacketReq;
class CMDQryRedPacketRsp;
class CMDQryStampReq;
class CMDQryStampRsp;
class CMDQryTreasureInfo;
class CMDQryTreasureInfoResp;
class CMDQryTreasureList;
class CMDQryWeekListReq;
class CMDRedPacket;
class CMDRedPacketInfo;
class CMDRedPacketTakenRes;
class CMDSendPressStampReq;
class CMDSendPressStampResp;
class CMDSendRedPacketReq;
class CMDSendRedPacketResp;
class CMDSponsorTreasureReq;
class CMDSponsorTreasureResp;
class CMDStampInfo;
class CMDTakeRedPacketReq;
class CMDTakeRedPacketResp;
class CMDTreasureExtraInfo;
class CMDTreasureInfo;
class CMDTreasureInfoNotify;
class CMDTreasureList;
class CMDUesrTreasureBuyInfo;
class CMDWeekListNotify;
class CMDWeekListRes;

enum ePacketType {
  eLuckType = 0,
  eUniType = 1,
  eDirectType = 2,
  eLigntType = 3,
  eJoinGroupType = 4,
  eCommandImmediatelyType = 5,
  eCommandUniImmediatelyType = 6,
  eFixTimeType = 7,
  eLocationType = 8,
  eCommandFixTimeType = 9,
  eCommandUniFixTimeType = 10,
  ePacketType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ePacketType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ePacketType_IsValid(int value);
const ePacketType ePacketType_MIN = eLuckType;
const ePacketType ePacketType_MAX = eCommandUniFixTimeType;
const int ePacketType_ARRAYSIZE = ePacketType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ePacketType_descriptor();
inline const ::std::string& ePacketType_Name(ePacketType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ePacketType_descriptor(), value);
}
inline bool ePacketType_Parse(
    const ::std::string& name, ePacketType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ePacketType>(
    ePacketType_descriptor(), name, value);
}
enum ePacketFixType {
  eStartType = 0,
  eUnStartType = 1,
  eFinishType = 2,
  eExpType = 3,
  ePacketFixType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ePacketFixType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ePacketFixType_IsValid(int value);
const ePacketFixType ePacketFixType_MIN = eStartType;
const ePacketFixType ePacketFixType_MAX = eExpType;
const int ePacketFixType_ARRAYSIZE = ePacketFixType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ePacketFixType_descriptor();
inline const ::std::string& ePacketFixType_Name(ePacketFixType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ePacketFixType_descriptor(), value);
}
inline bool ePacketFixType_Parse(
    const ::std::string& name, ePacketFixType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ePacketFixType>(
    ePacketFixType_descriptor(), name, value);
}
enum eRangeType {
  eVisitorType = 0,
  eMemberType = 1,
  eAllType = 2,
  eRangeType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  eRangeType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool eRangeType_IsValid(int value);
const eRangeType eRangeType_MIN = eVisitorType;
const eRangeType eRangeType_MAX = eAllType;
const int eRangeType_ARRAYSIZE = eRangeType_MAX + 1;

const ::google::protobuf::EnumDescriptor* eRangeType_descriptor();
inline const ::std::string& eRangeType_Name(eRangeType value) {
  return ::google::protobuf::internal::NameOfEnum(
    eRangeType_descriptor(), value);
}
inline bool eRangeType_Parse(
    const ::std::string& name, eRangeType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<eRangeType>(
    eRangeType_descriptor(), name, value);
}
enum eRangeGender {
  eGenderAll = 0,
  eGenderMale = 1,
  eGenderFemale = 2,
  eRangeGender_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  eRangeGender_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool eRangeGender_IsValid(int value);
const eRangeGender eRangeGender_MIN = eGenderAll;
const eRangeGender eRangeGender_MAX = eGenderFemale;
const int eRangeGender_ARRAYSIZE = eRangeGender_MAX + 1;

const ::google::protobuf::EnumDescriptor* eRangeGender_descriptor();
inline const ::std::string& eRangeGender_Name(eRangeGender value) {
  return ::google::protobuf::internal::NameOfEnum(
    eRangeGender_descriptor(), value);
}
inline bool eRangeGender_Parse(
    const ::std::string& name, eRangeGender* value) {
  return ::google::protobuf::internal::ParseNamedEnum<eRangeGender>(
    eRangeGender_descriptor(), name, value);
}
enum e_TreasureType {
  e_TreasureType_Quota = 0,
  e_TreasureType_Timer = 1,
  e_TreasureType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  e_TreasureType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool e_TreasureType_IsValid(int value);
const e_TreasureType e_TreasureType_MIN = e_TreasureType_Quota;
const e_TreasureType e_TreasureType_MAX = e_TreasureType_Timer;
const int e_TreasureType_ARRAYSIZE = e_TreasureType_MAX + 1;

const ::google::protobuf::EnumDescriptor* e_TreasureType_descriptor();
inline const ::std::string& e_TreasureType_Name(e_TreasureType value) {
  return ::google::protobuf::internal::NameOfEnum(
    e_TreasureType_descriptor(), value);
}
inline bool e_TreasureType_Parse(
    const ::std::string& name, e_TreasureType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<e_TreasureType>(
    e_TreasureType_descriptor(), name, value);
}
enum e_LotteryType {
  e_LotteryType_AVERAGE = 0,
  e_LotteryType_RANDOM = 1,
  e_LotteryType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  e_LotteryType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool e_LotteryType_IsValid(int value);
const e_LotteryType e_LotteryType_MIN = e_LotteryType_AVERAGE;
const e_LotteryType e_LotteryType_MAX = e_LotteryType_RANDOM;
const int e_LotteryType_ARRAYSIZE = e_LotteryType_MAX + 1;

const ::google::protobuf::EnumDescriptor* e_LotteryType_descriptor();
inline const ::std::string& e_LotteryType_Name(e_LotteryType value) {
  return ::google::protobuf::internal::NameOfEnum(
    e_LotteryType_descriptor(), value);
}
inline bool e_LotteryType_Parse(
    const ::std::string& name, e_LotteryType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<e_LotteryType>(
    e_LotteryType_descriptor(), name, value);
}
enum e_TreasureStatus {
  e_TreasureStatus_Runing = 0,
  e_TreasureStatus_Opened = 1,
  e_TreasureStatus_Timeout = 2,
  e_TreasureStatus_None = 99,
  e_TreasureStatus_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  e_TreasureStatus_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool e_TreasureStatus_IsValid(int value);
const e_TreasureStatus e_TreasureStatus_MIN = e_TreasureStatus_Runing;
const e_TreasureStatus e_TreasureStatus_MAX = e_TreasureStatus_None;
const int e_TreasureStatus_ARRAYSIZE = e_TreasureStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* e_TreasureStatus_descriptor();
inline const ::std::string& e_TreasureStatus_Name(e_TreasureStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    e_TreasureStatus_descriptor(), value);
}
inline bool e_TreasureStatus_Parse(
    const ::std::string& name, e_TreasureStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<e_TreasureStatus>(
    e_TreasureStatus_descriptor(), name, value);
}
enum e_UserRange {
  e_UserRange_All = 0,
  e_UserRange_Member = 1,
  e_UserRange_Visitor = 2,
  e_UserRange_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  e_UserRange_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool e_UserRange_IsValid(int value);
const e_UserRange e_UserRange_MIN = e_UserRange_All;
const e_UserRange e_UserRange_MAX = e_UserRange_Visitor;
const int e_UserRange_ARRAYSIZE = e_UserRange_MAX + 1;

const ::google::protobuf::EnumDescriptor* e_UserRange_descriptor();
inline const ::std::string& e_UserRange_Name(e_UserRange value) {
  return ::google::protobuf::internal::NameOfEnum(
    e_UserRange_descriptor(), value);
}
inline bool e_UserRange_Parse(
    const ::std::string& name, e_UserRange* value) {
  return ::google::protobuf::internal::ParseNamedEnum<e_UserRange>(
    e_UserRange_descriptor(), name, value);
}
// ===================================================================

class CMDSendRedPacketReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDSendRedPacketReq) */ {
 public:
  CMDSendRedPacketReq();
  virtual ~CMDSendRedPacketReq();

  CMDSendRedPacketReq(const CMDSendRedPacketReq& from);

  inline CMDSendRedPacketReq& operator=(const CMDSendRedPacketReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDSendRedPacketReq& default_instance();

  void Swap(CMDSendRedPacketReq* other);

  // implements Message ----------------------------------------------

  inline CMDSendRedPacketReq* New() const { return New(NULL); }

  CMDSendRedPacketReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDSendRedPacketReq& from);
  void MergeFrom(const CMDSendRedPacketReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDSendRedPacketReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 userID = 1;
  void clear_userid();
  static const int kUserIDFieldNumber = 1;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // optional uint32 groupID = 2;
  void clear_groupid();
  static const int kGroupIDFieldNumber = 2;
  ::google::protobuf::uint32 groupid() const;
  void set_groupid(::google::protobuf::uint32 value);

  // optional .ePacketType packetType = 3;
  void clear_packettype();
  static const int kPacketTypeFieldNumber = 3;
  ::ePacketType packettype() const;
  void set_packettype(::ePacketType value);

  // optional .eRangeType rangeType = 4;
  void clear_rangetype();
  static const int kRangeTypeFieldNumber = 4;
  ::eRangeType rangetype() const;
  void set_rangetype(::eRangeType value);

  // optional uint32 dstUserID = 5;
  void clear_dstuserid();
  static const int kDstUserIDFieldNumber = 5;
  ::google::protobuf::uint32 dstuserid() const;
  void set_dstuserid(::google::protobuf::uint32 value);

  // optional uint32 packetNum = 6;
  void clear_packetnum();
  static const int kPacketNumFieldNumber = 6;
  ::google::protobuf::uint32 packetnum() const;
  void set_packetnum(::google::protobuf::uint32 value);

  // optional uint32 packetMoney = 7;
  void clear_packetmoney();
  static const int kPacketMoneyFieldNumber = 7;
  ::google::protobuf::uint32 packetmoney() const;
  void set_packetmoney(::google::protobuf::uint32 value);

  // optional uint32 perPacketMoney = 8;
  void clear_perpacketmoney();
  static const int kPerPacketMoneyFieldNumber = 8;
  ::google::protobuf::uint32 perpacketmoney() const;
  void set_perpacketmoney(::google::protobuf::uint32 value);

  // optional string message = 9;
  void clear_message();
  static const int kMessageFieldNumber = 9;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // optional bool privateType = 10;
  void clear_privatetype();
  static const int kPrivateTypeFieldNumber = 10;
  bool privatetype() const;
  void set_privatetype(bool value);

  // optional .eRangeGender rangeGender = 11;
  void clear_rangegender();
  static const int kRangeGenderFieldNumber = 11;
  ::eRangeGender rangegender() const;
  void set_rangegender(::eRangeGender value);

  // optional uint32 fixtime = 12;
  void clear_fixtime();
  static const int kFixtimeFieldNumber = 12;
  ::google::protobuf::uint32 fixtime() const;
  void set_fixtime(::google::protobuf::uint32 value);

  // optional uint32 invalidTime = 13;
  void clear_invalidtime();
  static const int kInvalidTimeFieldNumber = 13;
  ::google::protobuf::uint32 invalidtime() const;
  void set_invalidtime(::google::protobuf::uint32 value);

  // optional double longitude = 14;
  void clear_longitude();
  static const int kLongitudeFieldNumber = 14;
  double longitude() const;
  void set_longitude(double value);

  // optional double latitude = 15;
  void clear_latitude();
  static const int kLatitudeFieldNumber = 15;
  double latitude() const;
  void set_latitude(double value);

  // optional string location = 16;
  void clear_location();
  static const int kLocationFieldNumber = 16;
  const ::std::string& location() const;
  void set_location(const ::std::string& value);
  void set_location(const char* value);
  void set_location(const char* value, size_t size);
  ::std::string* mutable_location();
  ::std::string* release_location();
  void set_allocated_location(::std::string* location);

  // @@protoc_insertion_point(class_scope:CMDSendRedPacketReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 groupid_;
  int packettype_;
  int rangetype_;
  ::google::protobuf::uint32 dstuserid_;
  ::google::protobuf::uint32 packetnum_;
  ::google::protobuf::uint32 packetmoney_;
  ::google::protobuf::uint32 perpacketmoney_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  bool privatetype_;
  int rangegender_;
  ::google::protobuf::uint32 fixtime_;
  ::google::protobuf::uint32 invalidtime_;
  double longitude_;
  double latitude_;
  ::google::protobuf::internal::ArenaStringPtr location_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ConsumeSvr_2eproto();
  friend void protobuf_AssignDesc_ConsumeSvr_2eproto();
  friend void protobuf_ShutdownFile_ConsumeSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDSendRedPacketReq* default_instance_;
};
// -------------------------------------------------------------------

class CMDSendRedPacketResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDSendRedPacketResp) */ {
 public:
  CMDSendRedPacketResp();
  virtual ~CMDSendRedPacketResp();

  CMDSendRedPacketResp(const CMDSendRedPacketResp& from);

  inline CMDSendRedPacketResp& operator=(const CMDSendRedPacketResp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDSendRedPacketResp& default_instance();

  void Swap(CMDSendRedPacketResp* other);

  // implements Message ----------------------------------------------

  inline CMDSendRedPacketResp* New() const { return New(NULL); }

  CMDSendRedPacketResp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDSendRedPacketResp& from);
  void MergeFrom(const CMDSendRedPacketResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDSendRedPacketResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CMDErrCode errInfo = 1;
  bool has_errinfo() const;
  void clear_errinfo();
  static const int kErrInfoFieldNumber = 1;
  const ::CMDErrCode& errinfo() const;
  ::CMDErrCode* mutable_errinfo();
  ::CMDErrCode* release_errinfo();
  void set_allocated_errinfo(::CMDErrCode* errinfo);

  // optional uint32 userID = 2;
  void clear_userid();
  static const int kUserIDFieldNumber = 2;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // optional uint32 groupID = 3;
  void clear_groupid();
  static const int kGroupIDFieldNumber = 3;
  ::google::protobuf::uint32 groupid() const;
  void set_groupid(::google::protobuf::uint32 value);

  // optional uint32 packetID = 4;
  void clear_packetid();
  static const int kPacketIDFieldNumber = 4;
  ::google::protobuf::uint32 packetid() const;
  void set_packetid(::google::protobuf::uint32 value);

  // optional uint32 comboNum = 5;
  void clear_combonum();
  static const int kComboNumFieldNumber = 5;
  ::google::protobuf::uint32 combonum() const;
  void set_combonum(::google::protobuf::uint32 value);

  // optional bool privateType = 6;
  void clear_privatetype();
  static const int kPrivateTypeFieldNumber = 6;
  bool privatetype() const;
  void set_privatetype(bool value);

  // optional uint32 comboTime = 7;
  void clear_combotime();
  static const int kComboTimeFieldNumber = 7;
  ::google::protobuf::uint32 combotime() const;
  void set_combotime(::google::protobuf::uint32 value);

  // optional .ePacketType packetType = 8;
  void clear_packettype();
  static const int kPacketTypeFieldNumber = 8;
  ::ePacketType packettype() const;
  void set_packettype(::ePacketType value);

  // optional double longitude = 9;
  void clear_longitude();
  static const int kLongitudeFieldNumber = 9;
  double longitude() const;
  void set_longitude(double value);

  // optional double latitude = 10;
  void clear_latitude();
  static const int kLatitudeFieldNumber = 10;
  double latitude() const;
  void set_latitude(double value);

  // @@protoc_insertion_point(class_scope:CMDSendRedPacketResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::CMDErrCode* errinfo_;
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 groupid_;
  ::google::protobuf::uint32 packetid_;
  ::google::protobuf::uint32 combonum_;
  bool privatetype_;
  ::google::protobuf::uint32 combotime_;
  double longitude_;
  double latitude_;
  int packettype_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ConsumeSvr_2eproto();
  friend void protobuf_AssignDesc_ConsumeSvr_2eproto();
  friend void protobuf_ShutdownFile_ConsumeSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDSendRedPacketResp* default_instance_;
};
// -------------------------------------------------------------------

class CMDCatchRedPacketReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDCatchRedPacketReq) */ {
 public:
  CMDCatchRedPacketReq();
  virtual ~CMDCatchRedPacketReq();

  CMDCatchRedPacketReq(const CMDCatchRedPacketReq& from);

  inline CMDCatchRedPacketReq& operator=(const CMDCatchRedPacketReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDCatchRedPacketReq& default_instance();

  void Swap(CMDCatchRedPacketReq* other);

  // implements Message ----------------------------------------------

  inline CMDCatchRedPacketReq* New() const { return New(NULL); }

  CMDCatchRedPacketReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDCatchRedPacketReq& from);
  void MergeFrom(const CMDCatchRedPacketReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDCatchRedPacketReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 userID = 1;
  void clear_userid();
  static const int kUserIDFieldNumber = 1;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // optional uint32 groupID = 2;
  void clear_groupid();
  static const int kGroupIDFieldNumber = 2;
  ::google::protobuf::uint32 groupid() const;
  void set_groupid(::google::protobuf::uint32 value);

  // optional uint32 packetID = 3;
  void clear_packetid();
  static const int kPacketIDFieldNumber = 3;
  ::google::protobuf::uint32 packetid() const;
  void set_packetid(::google::protobuf::uint32 value);

  // optional double longitude = 4;
  void clear_longitude();
  static const int kLongitudeFieldNumber = 4;
  double longitude() const;
  void set_longitude(double value);

  // optional double latitude = 5;
  void clear_latitude();
  static const int kLatitudeFieldNumber = 5;
  double latitude() const;
  void set_latitude(double value);

  // @@protoc_insertion_point(class_scope:CMDCatchRedPacketReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 groupid_;
  double longitude_;
  double latitude_;
  ::google::protobuf::uint32 packetid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ConsumeSvr_2eproto();
  friend void protobuf_AssignDesc_ConsumeSvr_2eproto();
  friend void protobuf_ShutdownFile_ConsumeSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDCatchRedPacketReq* default_instance_;
};
// -------------------------------------------------------------------

class CMDCatchRedPacketResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDCatchRedPacketResp) */ {
 public:
  CMDCatchRedPacketResp();
  virtual ~CMDCatchRedPacketResp();

  CMDCatchRedPacketResp(const CMDCatchRedPacketResp& from);

  inline CMDCatchRedPacketResp& operator=(const CMDCatchRedPacketResp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDCatchRedPacketResp& default_instance();

  void Swap(CMDCatchRedPacketResp* other);

  // implements Message ----------------------------------------------

  inline CMDCatchRedPacketResp* New() const { return New(NULL); }

  CMDCatchRedPacketResp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDCatchRedPacketResp& from);
  void MergeFrom(const CMDCatchRedPacketResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDCatchRedPacketResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CMDErrCode errInfo = 1;
  bool has_errinfo() const;
  void clear_errinfo();
  static const int kErrInfoFieldNumber = 1;
  const ::CMDErrCode& errinfo() const;
  ::CMDErrCode* mutable_errinfo();
  ::CMDErrCode* release_errinfo();
  void set_allocated_errinfo(::CMDErrCode* errinfo);

  // optional uint32 userID = 2;
  void clear_userid();
  static const int kUserIDFieldNumber = 2;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // optional uint32 groupID = 3;
  void clear_groupid();
  static const int kGroupIDFieldNumber = 3;
  ::google::protobuf::uint32 groupid() const;
  void set_groupid(::google::protobuf::uint32 value);

  // optional uint32 packetID = 4;
  void clear_packetid();
  static const int kPacketIDFieldNumber = 4;
  ::google::protobuf::uint32 packetid() const;
  void set_packetid(::google::protobuf::uint32 value);

  // optional .UserInfo_t srcUser = 5;
  bool has_srcuser() const;
  void clear_srcuser();
  static const int kSrcUserFieldNumber = 5;
  const ::UserInfo_t& srcuser() const;
  ::UserInfo_t* mutable_srcuser();
  ::UserInfo_t* release_srcuser();
  void set_allocated_srcuser(::UserInfo_t* srcuser);

  // optional .UserInfo_t dstUser = 6;
  bool has_dstuser() const;
  void clear_dstuser();
  static const int kDstUserFieldNumber = 6;
  const ::UserInfo_t& dstuser() const;
  ::UserInfo_t* mutable_dstuser();
  ::UserInfo_t* release_dstuser();
  void set_allocated_dstuser(::UserInfo_t* dstuser);

  // optional .ePacketType packetType = 7;
  void clear_packettype();
  static const int kPacketTypeFieldNumber = 7;
  ::ePacketType packettype() const;
  void set_packettype(::ePacketType value);

  // optional .eRangeType rangeType = 8;
  void clear_rangetype();
  static const int kRangeTypeFieldNumber = 8;
  ::eRangeType rangetype() const;
  void set_rangetype(::eRangeType value);

  // optional uint32 packetNum = 9;
  void clear_packetnum();
  static const int kPacketNumFieldNumber = 9;
  ::google::protobuf::uint32 packetnum() const;
  void set_packetnum(::google::protobuf::uint32 value);

  // optional uint32 packetMoney = 10;
  void clear_packetmoney();
  static const int kPacketMoneyFieldNumber = 10;
  ::google::protobuf::uint32 packetmoney() const;
  void set_packetmoney(::google::protobuf::uint32 value);

  // optional string message = 11;
  void clear_message();
  static const int kMessageFieldNumber = 11;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // optional bool privateType = 12;
  void clear_privatetype();
  static const int kPrivateTypeFieldNumber = 12;
  bool privatetype() const;
  void set_privatetype(bool value);

  // optional uint32 fixTime = 13;
  void clear_fixtime();
  static const int kFixTimeFieldNumber = 13;
  ::google::protobuf::uint32 fixtime() const;
  void set_fixtime(::google::protobuf::uint32 value);

  // optional uint32 diffTime = 14;
  void clear_difftime();
  static const int kDiffTimeFieldNumber = 14;
  ::google::protobuf::uint32 difftime() const;
  void set_difftime(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMDCatchRedPacketResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::CMDErrCode* errinfo_;
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 groupid_;
  ::UserInfo_t* srcuser_;
  ::google::protobuf::uint32 packetid_;
  int packettype_;
  ::UserInfo_t* dstuser_;
  int rangetype_;
  ::google::protobuf::uint32 packetnum_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::google::protobuf::uint32 packetmoney_;
  bool privatetype_;
  ::google::protobuf::uint32 fixtime_;
  ::google::protobuf::uint32 difftime_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ConsumeSvr_2eproto();
  friend void protobuf_AssignDesc_ConsumeSvr_2eproto();
  friend void protobuf_ShutdownFile_ConsumeSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDCatchRedPacketResp* default_instance_;
};
// -------------------------------------------------------------------

class CMDTakeRedPacketReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDTakeRedPacketReq) */ {
 public:
  CMDTakeRedPacketReq();
  virtual ~CMDTakeRedPacketReq();

  CMDTakeRedPacketReq(const CMDTakeRedPacketReq& from);

  inline CMDTakeRedPacketReq& operator=(const CMDTakeRedPacketReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDTakeRedPacketReq& default_instance();

  void Swap(CMDTakeRedPacketReq* other);

  // implements Message ----------------------------------------------

  inline CMDTakeRedPacketReq* New() const { return New(NULL); }

  CMDTakeRedPacketReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDTakeRedPacketReq& from);
  void MergeFrom(const CMDTakeRedPacketReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDTakeRedPacketReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 userID = 1;
  void clear_userid();
  static const int kUserIDFieldNumber = 1;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // optional uint32 groupID = 2;
  void clear_groupid();
  static const int kGroupIDFieldNumber = 2;
  ::google::protobuf::uint32 groupid() const;
  void set_groupid(::google::protobuf::uint32 value);

  // optional uint32 packetID = 3;
  void clear_packetid();
  static const int kPacketIDFieldNumber = 3;
  ::google::protobuf::uint32 packetid() const;
  void set_packetid(::google::protobuf::uint32 value);

  // optional string photoPath = 4;
  void clear_photopath();
  static const int kPhotoPathFieldNumber = 4;
  const ::std::string& photopath() const;
  void set_photopath(const ::std::string& value);
  void set_photopath(const char* value);
  void set_photopath(const char* value, size_t size);
  ::std::string* mutable_photopath();
  ::std::string* release_photopath();
  void set_allocated_photopath(::std::string* photopath);

  // optional double longitude = 5;
  void clear_longitude();
  static const int kLongitudeFieldNumber = 5;
  double longitude() const;
  void set_longitude(double value);

  // optional double latitude = 6;
  void clear_latitude();
  static const int kLatitudeFieldNumber = 6;
  double latitude() const;
  void set_latitude(double value);

  // optional string message = 7;
  void clear_message();
  static const int kMessageFieldNumber = 7;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // @@protoc_insertion_point(class_scope:CMDTakeRedPacketReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 groupid_;
  ::google::protobuf::internal::ArenaStringPtr photopath_;
  double longitude_;
  double latitude_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::google::protobuf::uint32 packetid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ConsumeSvr_2eproto();
  friend void protobuf_AssignDesc_ConsumeSvr_2eproto();
  friend void protobuf_ShutdownFile_ConsumeSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDTakeRedPacketReq* default_instance_;
};
// -------------------------------------------------------------------

class CMDTakeRedPacketResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDTakeRedPacketResp) */ {
 public:
  CMDTakeRedPacketResp();
  virtual ~CMDTakeRedPacketResp();

  CMDTakeRedPacketResp(const CMDTakeRedPacketResp& from);

  inline CMDTakeRedPacketResp& operator=(const CMDTakeRedPacketResp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDTakeRedPacketResp& default_instance();

  void Swap(CMDTakeRedPacketResp* other);

  // implements Message ----------------------------------------------

  inline CMDTakeRedPacketResp* New() const { return New(NULL); }

  CMDTakeRedPacketResp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDTakeRedPacketResp& from);
  void MergeFrom(const CMDTakeRedPacketResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDTakeRedPacketResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CMDErrCode errInfo = 1;
  bool has_errinfo() const;
  void clear_errinfo();
  static const int kErrInfoFieldNumber = 1;
  const ::CMDErrCode& errinfo() const;
  ::CMDErrCode* mutable_errinfo();
  ::CMDErrCode* release_errinfo();
  void set_allocated_errinfo(::CMDErrCode* errinfo);

  // optional uint32 userID = 2;
  void clear_userid();
  static const int kUserIDFieldNumber = 2;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // optional uint32 packetID = 3;
  void clear_packetid();
  static const int kPacketIDFieldNumber = 3;
  ::google::protobuf::uint32 packetid() const;
  void set_packetid(::google::protobuf::uint32 value);

  // optional uint32 money = 4;
  void clear_money();
  static const int kMoneyFieldNumber = 4;
  ::google::protobuf::uint32 money() const;
  void set_money(::google::protobuf::uint32 value);

  // optional bool privateType = 5;
  void clear_privatetype();
  static const int kPrivateTypeFieldNumber = 5;
  bool privatetype() const;
  void set_privatetype(bool value);

  // optional .ePacketType packetType = 8;
  void clear_packettype();
  static const int kPacketTypeFieldNumber = 8;
  ::ePacketType packettype() const;
  void set_packettype(::ePacketType value);

  // optional .eRangeType rangeType = 9;
  void clear_rangetype();
  static const int kRangeTypeFieldNumber = 9;
  ::eRangeType rangetype() const;
  void set_rangetype(::eRangeType value);

  // optional uint32 packetNum = 10;
  void clear_packetnum();
  static const int kPacketNumFieldNumber = 10;
  ::google::protobuf::uint32 packetnum() const;
  void set_packetnum(::google::protobuf::uint32 value);

  // optional uint32 packetMoney = 11;
  void clear_packetmoney();
  static const int kPacketMoneyFieldNumber = 11;
  ::google::protobuf::uint32 packetmoney() const;
  void set_packetmoney(::google::protobuf::uint32 value);

  // optional string message = 12;
  void clear_message();
  static const int kMessageFieldNumber = 12;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // optional uint32 fixTime = 13;
  void clear_fixtime();
  static const int kFixTimeFieldNumber = 13;
  ::google::protobuf::uint32 fixtime() const;
  void set_fixtime(::google::protobuf::uint32 value);

  // optional uint32 diffTime = 14;
  void clear_difftime();
  static const int kDiffTimeFieldNumber = 14;
  ::google::protobuf::uint32 difftime() const;
  void set_difftime(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMDTakeRedPacketResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::CMDErrCode* errinfo_;
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 packetid_;
  ::google::protobuf::uint32 money_;
  bool privatetype_;
  int packettype_;
  int rangetype_;
  ::google::protobuf::uint32 packetnum_;
  ::google::protobuf::uint32 packetmoney_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::google::protobuf::uint32 fixtime_;
  ::google::protobuf::uint32 difftime_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ConsumeSvr_2eproto();
  friend void protobuf_AssignDesc_ConsumeSvr_2eproto();
  friend void protobuf_ShutdownFile_ConsumeSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDTakeRedPacketResp* default_instance_;
};
// -------------------------------------------------------------------

class CMDQryRedPacketInfoReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDQryRedPacketInfoReq) */ {
 public:
  CMDQryRedPacketInfoReq();
  virtual ~CMDQryRedPacketInfoReq();

  CMDQryRedPacketInfoReq(const CMDQryRedPacketInfoReq& from);

  inline CMDQryRedPacketInfoReq& operator=(const CMDQryRedPacketInfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDQryRedPacketInfoReq& default_instance();

  void Swap(CMDQryRedPacketInfoReq* other);

  // implements Message ----------------------------------------------

  inline CMDQryRedPacketInfoReq* New() const { return New(NULL); }

  CMDQryRedPacketInfoReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDQryRedPacketInfoReq& from);
  void MergeFrom(const CMDQryRedPacketInfoReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDQryRedPacketInfoReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 userID = 1;
  void clear_userid();
  static const int kUserIDFieldNumber = 1;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // optional uint32 groupID = 2;
  void clear_groupid();
  static const int kGroupIDFieldNumber = 2;
  ::google::protobuf::uint32 groupid() const;
  void set_groupid(::google::protobuf::uint32 value);

  // optional uint32 packetID = 3;
  void clear_packetid();
  static const int kPacketIDFieldNumber = 3;
  ::google::protobuf::uint32 packetid() const;
  void set_packetid(::google::protobuf::uint32 value);

  // optional uint32 offset = 4;
  void clear_offset();
  static const int kOffsetFieldNumber = 4;
  ::google::protobuf::uint32 offset() const;
  void set_offset(::google::protobuf::uint32 value);

  // optional uint32 count = 5;
  void clear_count();
  static const int kCountFieldNumber = 5;
  ::google::protobuf::uint32 count() const;
  void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMDQryRedPacketInfoReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 groupid_;
  ::google::protobuf::uint32 packetid_;
  ::google::protobuf::uint32 offset_;
  ::google::protobuf::uint32 count_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ConsumeSvr_2eproto();
  friend void protobuf_AssignDesc_ConsumeSvr_2eproto();
  friend void protobuf_ShutdownFile_ConsumeSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDQryRedPacketInfoReq* default_instance_;
};
// -------------------------------------------------------------------

class CMDRedPacketTakenRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDRedPacketTakenRes) */ {
 public:
  CMDRedPacketTakenRes();
  virtual ~CMDRedPacketTakenRes();

  CMDRedPacketTakenRes(const CMDRedPacketTakenRes& from);

  inline CMDRedPacketTakenRes& operator=(const CMDRedPacketTakenRes& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDRedPacketTakenRes& default_instance();

  void Swap(CMDRedPacketTakenRes* other);

  // implements Message ----------------------------------------------

  inline CMDRedPacketTakenRes* New() const { return New(NULL); }

  CMDRedPacketTakenRes* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDRedPacketTakenRes& from);
  void MergeFrom(const CMDRedPacketTakenRes& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDRedPacketTakenRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 userID = 1;
  void clear_userid();
  static const int kUserIDFieldNumber = 1;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // optional string alias = 2;
  void clear_alias();
  static const int kAliasFieldNumber = 2;
  const ::std::string& alias() const;
  void set_alias(const ::std::string& value);
  void set_alias(const char* value);
  void set_alias(const char* value, size_t size);
  ::std::string* mutable_alias();
  ::std::string* release_alias();
  void set_allocated_alias(::std::string* alias);

  // optional string head = 3;
  void clear_head();
  static const int kHeadFieldNumber = 3;
  const ::std::string& head() const;
  void set_head(const ::std::string& value);
  void set_head(const char* value);
  void set_head(const char* value, size_t size);
  ::std::string* mutable_head();
  ::std::string* release_head();
  void set_allocated_head(::std::string* head);

  // optional uint32 money = 4;
  void clear_money();
  static const int kMoneyFieldNumber = 4;
  ::google::protobuf::uint32 money() const;
  void set_money(::google::protobuf::uint32 value);

  // optional uint32 takeTime = 5;
  void clear_taketime();
  static const int kTakeTimeFieldNumber = 5;
  ::google::protobuf::uint32 taketime() const;
  void set_taketime(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMDRedPacketTakenRes)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr alias_;
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 money_;
  ::google::protobuf::internal::ArenaStringPtr head_;
  ::google::protobuf::uint32 taketime_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ConsumeSvr_2eproto();
  friend void protobuf_AssignDesc_ConsumeSvr_2eproto();
  friend void protobuf_ShutdownFile_ConsumeSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDRedPacketTakenRes* default_instance_;
};
// -------------------------------------------------------------------

class CMDRedPacketInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDRedPacketInfo) */ {
 public:
  CMDRedPacketInfo();
  virtual ~CMDRedPacketInfo();

  CMDRedPacketInfo(const CMDRedPacketInfo& from);

  inline CMDRedPacketInfo& operator=(const CMDRedPacketInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDRedPacketInfo& default_instance();

  void Swap(CMDRedPacketInfo* other);

  // implements Message ----------------------------------------------

  inline CMDRedPacketInfo* New() const { return New(NULL); }

  CMDRedPacketInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDRedPacketInfo& from);
  void MergeFrom(const CMDRedPacketInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDRedPacketInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 packetID = 1;
  void clear_packetid();
  static const int kPacketIDFieldNumber = 1;
  ::google::protobuf::uint32 packetid() const;
  void set_packetid(::google::protobuf::uint32 value);

  // optional .ePacketType packetType = 2;
  void clear_packettype();
  static const int kPacketTypeFieldNumber = 2;
  ::ePacketType packettype() const;
  void set_packettype(::ePacketType value);

  // optional .eRangeType rangeType = 3;
  void clear_rangetype();
  static const int kRangeTypeFieldNumber = 3;
  ::eRangeType rangetype() const;
  void set_rangetype(::eRangeType value);

  // optional .UserInfo_t srcUser = 4;
  bool has_srcuser() const;
  void clear_srcuser();
  static const int kSrcUserFieldNumber = 4;
  const ::UserInfo_t& srcuser() const;
  ::UserInfo_t* mutable_srcuser();
  ::UserInfo_t* release_srcuser();
  void set_allocated_srcuser(::UserInfo_t* srcuser);

  // optional .UserInfo_t dstUser = 5;
  bool has_dstuser() const;
  void clear_dstuser();
  static const int kDstUserFieldNumber = 5;
  const ::UserInfo_t& dstuser() const;
  ::UserInfo_t* mutable_dstuser();
  ::UserInfo_t* release_dstuser();
  void set_allocated_dstuser(::UserInfo_t* dstuser);

  // optional uint32 packetNum = 6;
  void clear_packetnum();
  static const int kPacketNumFieldNumber = 6;
  ::google::protobuf::uint32 packetnum() const;
  void set_packetnum(::google::protobuf::uint32 value);

  // optional uint32 takenNum = 7;
  void clear_takennum();
  static const int kTakenNumFieldNumber = 7;
  ::google::protobuf::uint32 takennum() const;
  void set_takennum(::google::protobuf::uint32 value);

  // optional uint32 packetMoney = 8;
  void clear_packetmoney();
  static const int kPacketMoneyFieldNumber = 8;
  ::google::protobuf::uint32 packetmoney() const;
  void set_packetmoney(::google::protobuf::uint32 value);

  // optional uint32 takenMoney = 9;
  void clear_takenmoney();
  static const int kTakenMoneyFieldNumber = 9;
  ::google::protobuf::uint32 takenmoney() const;
  void set_takenmoney(::google::protobuf::uint32 value);

  // optional uint32 myTakeMoney = 10;
  void clear_mytakemoney();
  static const int kMyTakeMoneyFieldNumber = 10;
  ::google::protobuf::uint32 mytakemoney() const;
  void set_mytakemoney(::google::protobuf::uint32 value);

  // optional string message = 11;
  void clear_message();
  static const int kMessageFieldNumber = 11;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // optional uint32 createTime = 12;
  void clear_createtime();
  static const int kCreateTimeFieldNumber = 12;
  ::google::protobuf::uint32 createtime() const;
  void set_createtime(::google::protobuf::uint32 value);

  // optional uint32 offset = 13;
  void clear_offset();
  static const int kOffsetFieldNumber = 13;
  ::google::protobuf::uint32 offset() const;
  void set_offset(::google::protobuf::uint32 value);

  // repeated .CMDRedPacketTakenRes res = 14;
  int res_size() const;
  void clear_res();
  static const int kResFieldNumber = 14;
  const ::CMDRedPacketTakenRes& res(int index) const;
  ::CMDRedPacketTakenRes* mutable_res(int index);
  ::CMDRedPacketTakenRes* add_res();
  ::google::protobuf::RepeatedPtrField< ::CMDRedPacketTakenRes >*
      mutable_res();
  const ::google::protobuf::RepeatedPtrField< ::CMDRedPacketTakenRes >&
      res() const;

  // optional uint32 finishCostTime = 15;
  void clear_finishcosttime();
  static const int kFinishCostTimeFieldNumber = 15;
  ::google::protobuf::uint32 finishcosttime() const;
  void set_finishcosttime(::google::protobuf::uint32 value);

  // optional uint32 topUserID = 16;
  void clear_topuserid();
  static const int kTopUserIDFieldNumber = 16;
  ::google::protobuf::uint32 topuserid() const;
  void set_topuserid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMDRedPacketInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 packetid_;
  int packettype_;
  ::UserInfo_t* srcuser_;
  int rangetype_;
  ::google::protobuf::uint32 packetnum_;
  ::UserInfo_t* dstuser_;
  ::google::protobuf::uint32 takennum_;
  ::google::protobuf::uint32 packetmoney_;
  ::google::protobuf::uint32 takenmoney_;
  ::google::protobuf::uint32 mytakemoney_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::google::protobuf::uint32 createtime_;
  ::google::protobuf::uint32 offset_;
  ::google::protobuf::RepeatedPtrField< ::CMDRedPacketTakenRes > res_;
  ::google::protobuf::uint32 finishcosttime_;
  ::google::protobuf::uint32 topuserid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ConsumeSvr_2eproto();
  friend void protobuf_AssignDesc_ConsumeSvr_2eproto();
  friend void protobuf_ShutdownFile_ConsumeSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDRedPacketInfo* default_instance_;
};
// -------------------------------------------------------------------

class CMDWeekListRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDWeekListRes) */ {
 public:
  CMDWeekListRes();
  virtual ~CMDWeekListRes();

  CMDWeekListRes(const CMDWeekListRes& from);

  inline CMDWeekListRes& operator=(const CMDWeekListRes& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDWeekListRes& default_instance();

  void Swap(CMDWeekListRes* other);

  // implements Message ----------------------------------------------

  inline CMDWeekListRes* New() const { return New(NULL); }

  CMDWeekListRes* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDWeekListRes& from);
  void MergeFrom(const CMDWeekListRes& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDWeekListRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 userID = 1;
  void clear_userid();
  static const int kUserIDFieldNumber = 1;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // optional string alias = 2;
  void clear_alias();
  static const int kAliasFieldNumber = 2;
  const ::std::string& alias() const;
  void set_alias(const ::std::string& value);
  void set_alias(const char* value);
  void set_alias(const char* value, size_t size);
  ::std::string* mutable_alias();
  ::std::string* release_alias();
  void set_allocated_alias(::std::string* alias);

  // optional string head = 3;
  void clear_head();
  static const int kHeadFieldNumber = 3;
  const ::std::string& head() const;
  void set_head(const ::std::string& value);
  void set_head(const char* value);
  void set_head(const char* value, size_t size);
  ::std::string* mutable_head();
  ::std::string* release_head();
  void set_allocated_head(::std::string* head);

  // optional uint32 contributeValue = 4;
  void clear_contributevalue();
  static const int kContributeValueFieldNumber = 4;
  ::google::protobuf::uint32 contributevalue() const;
  void set_contributevalue(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMDWeekListRes)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr alias_;
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 contributevalue_;
  ::google::protobuf::internal::ArenaStringPtr head_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ConsumeSvr_2eproto();
  friend void protobuf_AssignDesc_ConsumeSvr_2eproto();
  friend void protobuf_ShutdownFile_ConsumeSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDWeekListRes* default_instance_;
};
// -------------------------------------------------------------------

class CMDWeekListNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDWeekListNotify) */ {
 public:
  CMDWeekListNotify();
  virtual ~CMDWeekListNotify();

  CMDWeekListNotify(const CMDWeekListNotify& from);

  inline CMDWeekListNotify& operator=(const CMDWeekListNotify& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDWeekListNotify& default_instance();

  void Swap(CMDWeekListNotify* other);

  // implements Message ----------------------------------------------

  inline CMDWeekListNotify* New() const { return New(NULL); }

  CMDWeekListNotify* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDWeekListNotify& from);
  void MergeFrom(const CMDWeekListNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDWeekListNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 groupID = 1;
  void clear_groupid();
  static const int kGroupIDFieldNumber = 1;
  ::google::protobuf::uint32 groupid() const;
  void set_groupid(::google::protobuf::uint32 value);

  // repeated .CMDWeekListRes res = 2;
  int res_size() const;
  void clear_res();
  static const int kResFieldNumber = 2;
  const ::CMDWeekListRes& res(int index) const;
  ::CMDWeekListRes* mutable_res(int index);
  ::CMDWeekListRes* add_res();
  ::google::protobuf::RepeatedPtrField< ::CMDWeekListRes >*
      mutable_res();
  const ::google::protobuf::RepeatedPtrField< ::CMDWeekListRes >&
      res() const;

  // @@protoc_insertion_point(class_scope:CMDWeekListNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::CMDWeekListRes > res_;
  ::google::protobuf::uint32 groupid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ConsumeSvr_2eproto();
  friend void protobuf_AssignDesc_ConsumeSvr_2eproto();
  friend void protobuf_ShutdownFile_ConsumeSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDWeekListNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMDQryWeekListReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDQryWeekListReq) */ {
 public:
  CMDQryWeekListReq();
  virtual ~CMDQryWeekListReq();

  CMDQryWeekListReq(const CMDQryWeekListReq& from);

  inline CMDQryWeekListReq& operator=(const CMDQryWeekListReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDQryWeekListReq& default_instance();

  void Swap(CMDQryWeekListReq* other);

  // implements Message ----------------------------------------------

  inline CMDQryWeekListReq* New() const { return New(NULL); }

  CMDQryWeekListReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDQryWeekListReq& from);
  void MergeFrom(const CMDQryWeekListReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDQryWeekListReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 groupID = 1;
  void clear_groupid();
  static const int kGroupIDFieldNumber = 1;
  ::google::protobuf::uint32 groupid() const;
  void set_groupid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMDQryWeekListReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 groupid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ConsumeSvr_2eproto();
  friend void protobuf_AssignDesc_ConsumeSvr_2eproto();
  friend void protobuf_ShutdownFile_ConsumeSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDQryWeekListReq* default_instance_;
};
// -------------------------------------------------------------------

class CMDQryRedPacketReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDQryRedPacketReq) */ {
 public:
  CMDQryRedPacketReq();
  virtual ~CMDQryRedPacketReq();

  CMDQryRedPacketReq(const CMDQryRedPacketReq& from);

  inline CMDQryRedPacketReq& operator=(const CMDQryRedPacketReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDQryRedPacketReq& default_instance();

  void Swap(CMDQryRedPacketReq* other);

  // implements Message ----------------------------------------------

  inline CMDQryRedPacketReq* New() const { return New(NULL); }

  CMDQryRedPacketReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDQryRedPacketReq& from);
  void MergeFrom(const CMDQryRedPacketReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDQryRedPacketReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 groupID = 1;
  void clear_groupid();
  static const int kGroupIDFieldNumber = 1;
  ::google::protobuf::uint32 groupid() const;
  void set_groupid(::google::protobuf::uint32 value);

  // optional .ePacketType packetType = 2;
  void clear_packettype();
  static const int kPacketTypeFieldNumber = 2;
  ::ePacketType packettype() const;
  void set_packettype(::ePacketType value);

  // optional uint32 count = 3;
  void clear_count();
  static const int kCountFieldNumber = 3;
  ::google::protobuf::uint32 count() const;
  void set_count(::google::protobuf::uint32 value);

  // optional uint32 offset = 4;
  void clear_offset();
  static const int kOffsetFieldNumber = 4;
  ::google::protobuf::uint32 offset() const;
  void set_offset(::google::protobuf::uint32 value);

  // optional .ePacketFixType fixType = 5;
  void clear_fixtype();
  static const int kFixTypeFieldNumber = 5;
  ::ePacketFixType fixtype() const;
  void set_fixtype(::ePacketFixType value);

  // optional uint32 userID = 6;
  void clear_userid();
  static const int kUserIDFieldNumber = 6;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // optional uint64 clienttimestamp = 7;
  void clear_clienttimestamp();
  static const int kClienttimestampFieldNumber = 7;
  ::google::protobuf::uint64 clienttimestamp() const;
  void set_clienttimestamp(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMDQryRedPacketReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 groupid_;
  int packettype_;
  ::google::protobuf::uint32 count_;
  ::google::protobuf::uint32 offset_;
  int fixtype_;
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint64 clienttimestamp_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ConsumeSvr_2eproto();
  friend void protobuf_AssignDesc_ConsumeSvr_2eproto();
  friend void protobuf_ShutdownFile_ConsumeSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDQryRedPacketReq* default_instance_;
};
// -------------------------------------------------------------------

class CMDRedPacket : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDRedPacket) */ {
 public:
  CMDRedPacket();
  virtual ~CMDRedPacket();

  CMDRedPacket(const CMDRedPacket& from);

  inline CMDRedPacket& operator=(const CMDRedPacket& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDRedPacket& default_instance();

  void Swap(CMDRedPacket* other);

  // implements Message ----------------------------------------------

  inline CMDRedPacket* New() const { return New(NULL); }

  CMDRedPacket* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDRedPacket& from);
  void MergeFrom(const CMDRedPacket& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDRedPacket* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 userID = 1;
  void clear_userid();
  static const int kUserIDFieldNumber = 1;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // optional uint32 packetID = 2;
  void clear_packetid();
  static const int kPacketIDFieldNumber = 2;
  ::google::protobuf::uint32 packetid() const;
  void set_packetid(::google::protobuf::uint32 value);

  // optional .ePacketType packetType = 3;
  void clear_packettype();
  static const int kPacketTypeFieldNumber = 3;
  ::ePacketType packettype() const;
  void set_packettype(::ePacketType value);

  // optional uint32 fixTime = 4;
  void clear_fixtime();
  static const int kFixTimeFieldNumber = 4;
  ::google::protobuf::uint32 fixtime() const;
  void set_fixtime(::google::protobuf::uint32 value);

  // optional uint32 diffTime = 5;
  void clear_difftime();
  static const int kDiffTimeFieldNumber = 5;
  ::google::protobuf::uint32 difftime() const;
  void set_difftime(::google::protobuf::uint32 value);

  // optional uint32 packetMoney = 6;
  void clear_packetmoney();
  static const int kPacketMoneyFieldNumber = 6;
  ::google::protobuf::uint32 packetmoney() const;
  void set_packetmoney(::google::protobuf::uint32 value);

  // optional .eRangeType rangeType = 7;
  void clear_rangetype();
  static const int kRangeTypeFieldNumber = 7;
  ::eRangeType rangetype() const;
  void set_rangetype(::eRangeType value);

  // optional uint32 packetNum = 8;
  void clear_packetnum();
  static const int kPacketNumFieldNumber = 8;
  ::google::protobuf::uint32 packetnum() const;
  void set_packetnum(::google::protobuf::uint32 value);

  // optional .eRangeGender rangeGender = 9;
  void clear_rangegender();
  static const int kRangeGenderFieldNumber = 9;
  ::eRangeGender rangegender() const;
  void set_rangegender(::eRangeGender value);

  // optional string message = 10;
  void clear_message();
  static const int kMessageFieldNumber = 10;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // optional .ePacketFixType fixType = 11;
  void clear_fixtype();
  static const int kFixTypeFieldNumber = 11;
  ::ePacketFixType fixtype() const;
  void set_fixtype(::ePacketFixType value);

  // optional double longitude = 12;
  void clear_longitude();
  static const int kLongitudeFieldNumber = 12;
  double longitude() const;
  void set_longitude(double value);

  // optional double latitude = 13;
  void clear_latitude();
  static const int kLatitudeFieldNumber = 13;
  double latitude() const;
  void set_latitude(double value);

  // @@protoc_insertion_point(class_scope:CMDRedPacket)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 packetid_;
  int packettype_;
  ::google::protobuf::uint32 fixtime_;
  ::google::protobuf::uint32 difftime_;
  ::google::protobuf::uint32 packetmoney_;
  int rangetype_;
  ::google::protobuf::uint32 packetnum_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  int rangegender_;
  int fixtype_;
  double longitude_;
  double latitude_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ConsumeSvr_2eproto();
  friend void protobuf_AssignDesc_ConsumeSvr_2eproto();
  friend void protobuf_ShutdownFile_ConsumeSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDRedPacket* default_instance_;
};
// -------------------------------------------------------------------

class CMDQryRedPacketRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDQryRedPacketRsp) */ {
 public:
  CMDQryRedPacketRsp();
  virtual ~CMDQryRedPacketRsp();

  CMDQryRedPacketRsp(const CMDQryRedPacketRsp& from);

  inline CMDQryRedPacketRsp& operator=(const CMDQryRedPacketRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDQryRedPacketRsp& default_instance();

  void Swap(CMDQryRedPacketRsp* other);

  // implements Message ----------------------------------------------

  inline CMDQryRedPacketRsp* New() const { return New(NULL); }

  CMDQryRedPacketRsp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDQryRedPacketRsp& from);
  void MergeFrom(const CMDQryRedPacketRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDQryRedPacketRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 groupID = 1;
  void clear_groupid();
  static const int kGroupIDFieldNumber = 1;
  ::google::protobuf::uint32 groupid() const;
  void set_groupid(::google::protobuf::uint32 value);

  // optional uint32 offset = 2;
  void clear_offset();
  static const int kOffsetFieldNumber = 2;
  ::google::protobuf::uint32 offset() const;
  void set_offset(::google::protobuf::uint32 value);

  // repeated .CMDRedPacket rsp = 3;
  int rsp_size() const;
  void clear_rsp();
  static const int kRspFieldNumber = 3;
  const ::CMDRedPacket& rsp(int index) const;
  ::CMDRedPacket* mutable_rsp(int index);
  ::CMDRedPacket* add_rsp();
  ::google::protobuf::RepeatedPtrField< ::CMDRedPacket >*
      mutable_rsp();
  const ::google::protobuf::RepeatedPtrField< ::CMDRedPacket >&
      rsp() const;

  // optional uint64 clienttimestamp = 4;
  void clear_clienttimestamp();
  static const int kClienttimestampFieldNumber = 4;
  ::google::protobuf::uint64 clienttimestamp() const;
  void set_clienttimestamp(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMDQryRedPacketRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 groupid_;
  ::google::protobuf::uint32 offset_;
  ::google::protobuf::RepeatedPtrField< ::CMDRedPacket > rsp_;
  ::google::protobuf::uint64 clienttimestamp_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ConsumeSvr_2eproto();
  friend void protobuf_AssignDesc_ConsumeSvr_2eproto();
  friend void protobuf_ShutdownFile_ConsumeSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDQryRedPacketRsp* default_instance_;
};
// -------------------------------------------------------------------

class CMDUesrTreasureBuyInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDUesrTreasureBuyInfo) */ {
 public:
  CMDUesrTreasureBuyInfo();
  virtual ~CMDUesrTreasureBuyInfo();

  CMDUesrTreasureBuyInfo(const CMDUesrTreasureBuyInfo& from);

  inline CMDUesrTreasureBuyInfo& operator=(const CMDUesrTreasureBuyInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDUesrTreasureBuyInfo& default_instance();

  void Swap(CMDUesrTreasureBuyInfo* other);

  // implements Message ----------------------------------------------

  inline CMDUesrTreasureBuyInfo* New() const { return New(NULL); }

  CMDUesrTreasureBuyInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDUesrTreasureBuyInfo& from);
  void MergeFrom(const CMDUesrTreasureBuyInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDUesrTreasureBuyInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .UserInfo_t buy_user = 1;
  bool has_buy_user() const;
  void clear_buy_user();
  static const int kBuyUserFieldNumber = 1;
  const ::UserInfo_t& buy_user() const;
  ::UserInfo_t* mutable_buy_user();
  ::UserInfo_t* release_buy_user();
  void set_allocated_buy_user(::UserInfo_t* buy_user);

  // optional uint32 buy_num = 2;
  void clear_buy_num();
  static const int kBuyNumFieldNumber = 2;
  ::google::protobuf::uint32 buy_num() const;
  void set_buy_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMDUesrTreasureBuyInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::UserInfo_t* buy_user_;
  ::google::protobuf::uint32 buy_num_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ConsumeSvr_2eproto();
  friend void protobuf_AssignDesc_ConsumeSvr_2eproto();
  friend void protobuf_ShutdownFile_ConsumeSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDUesrTreasureBuyInfo* default_instance_;
};
// -------------------------------------------------------------------

class CMDTreasureInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDTreasureInfo) */ {
 public:
  CMDTreasureInfo();
  virtual ~CMDTreasureInfo();

  CMDTreasureInfo(const CMDTreasureInfo& from);

  inline CMDTreasureInfo& operator=(const CMDTreasureInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDTreasureInfo& default_instance();

  void Swap(CMDTreasureInfo* other);

  // implements Message ----------------------------------------------

  inline CMDTreasureInfo* New() const { return New(NULL); }

  CMDTreasureInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDTreasureInfo& from);
  void MergeFrom(const CMDTreasureInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDTreasureInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 treasure_id = 1;
  void clear_treasure_id();
  static const int kTreasureIdFieldNumber = 1;
  ::google::protobuf::uint32 treasure_id() const;
  void set_treasure_id(::google::protobuf::uint32 value);

  // optional uint32 groupid = 2;
  void clear_groupid();
  static const int kGroupidFieldNumber = 2;
  ::google::protobuf::uint32 groupid() const;
  void set_groupid(::google::protobuf::uint32 value);

  // optional .UserInfo_t user = 3;
  bool has_user() const;
  void clear_user();
  static const int kUserFieldNumber = 3;
  const ::UserInfo_t& user() const;
  ::UserInfo_t* mutable_user();
  ::UserInfo_t* release_user();
  void set_allocated_user(::UserInfo_t* user);

  // optional .e_UserRange join_range = 4;
  void clear_join_range();
  static const int kJoinRangeFieldNumber = 4;
  ::e_UserRange join_range() const;
  void set_join_range(::e_UserRange value);

  // optional .e_TreasureType treasure_type = 5;
  void clear_treasure_type();
  static const int kTreasureTypeFieldNumber = 5;
  ::e_TreasureType treasure_type() const;
  void set_treasure_type(::e_TreasureType value);

  // optional uint32 treasure_amount = 6;
  void clear_treasure_amount();
  static const int kTreasureAmountFieldNumber = 6;
  ::google::protobuf::uint32 treasure_amount() const;
  void set_treasure_amount(::google::protobuf::uint32 value);

  // optional uint32 treasure_time = 7;
  void clear_treasure_time();
  static const int kTreasureTimeFieldNumber = 7;
  ::google::protobuf::uint32 treasure_time() const;
  void set_treasure_time(::google::protobuf::uint32 value);

  // optional .e_LotteryType lottery_type = 8;
  void clear_lottery_type();
  static const int kLotteryTypeFieldNumber = 8;
  ::e_LotteryType lottery_type() const;
  void set_lottery_type(::e_LotteryType value);

  // optional uint32 winner_num = 9;
  void clear_winner_num();
  static const int kWinnerNumFieldNumber = 9;
  ::google::protobuf::uint32 winner_num() const;
  void set_winner_num(::google::protobuf::uint32 value);

  // optional string message = 10;
  void clear_message();
  static const int kMessageFieldNumber = 10;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // optional uint32 create_time = 11;
  void clear_create_time();
  static const int kCreateTimeFieldNumber = 11;
  ::google::protobuf::uint32 create_time() const;
  void set_create_time(::google::protobuf::uint32 value);

  // optional .CMDTreasureExtraInfo ext = 12;
  bool has_ext() const;
  void clear_ext();
  static const int kExtFieldNumber = 12;
  const ::CMDTreasureExtraInfo& ext() const;
  ::CMDTreasureExtraInfo* mutable_ext();
  ::CMDTreasureExtraInfo* release_ext();
  void set_allocated_ext(::CMDTreasureExtraInfo* ext);

  // @@protoc_insertion_point(class_scope:CMDTreasureInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 treasure_id_;
  ::google::protobuf::uint32 groupid_;
  ::UserInfo_t* user_;
  int join_range_;
  int treasure_type_;
  ::google::protobuf::uint32 treasure_amount_;
  ::google::protobuf::uint32 treasure_time_;
  int lottery_type_;
  ::google::protobuf::uint32 winner_num_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::CMDTreasureExtraInfo* ext_;
  ::google::protobuf::uint32 create_time_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ConsumeSvr_2eproto();
  friend void protobuf_AssignDesc_ConsumeSvr_2eproto();
  friend void protobuf_ShutdownFile_ConsumeSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDTreasureInfo* default_instance_;
};
// -------------------------------------------------------------------

class CMDTreasureExtraInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDTreasureExtraInfo) */ {
 public:
  CMDTreasureExtraInfo();
  virtual ~CMDTreasureExtraInfo();

  CMDTreasureExtraInfo(const CMDTreasureExtraInfo& from);

  inline CMDTreasureExtraInfo& operator=(const CMDTreasureExtraInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDTreasureExtraInfo& default_instance();

  void Swap(CMDTreasureExtraInfo* other);

  // implements Message ----------------------------------------------

  inline CMDTreasureExtraInfo* New() const { return New(NULL); }

  CMDTreasureExtraInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDTreasureExtraInfo& from);
  void MergeFrom(const CMDTreasureExtraInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDTreasureExtraInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 buy_people = 1;
  void clear_buy_people();
  static const int kBuyPeopleFieldNumber = 1;
  ::google::protobuf::uint32 buy_people() const;
  void set_buy_people(::google::protobuf::uint32 value);

  // optional uint32 buy_amount = 2;
  void clear_buy_amount();
  static const int kBuyAmountFieldNumber = 2;
  ::google::protobuf::uint32 buy_amount() const;
  void set_buy_amount(::google::protobuf::uint32 value);

  // optional .e_TreasureStatus status = 3;
  void clear_status();
  static const int kStatusFieldNumber = 3;
  ::e_TreasureStatus status() const;
  void set_status(::e_TreasureStatus value);

  // optional uint32 finished_time = 4;
  void clear_finished_time();
  static const int kFinishedTimeFieldNumber = 4;
  ::google::protobuf::uint32 finished_time() const;
  void set_finished_time(::google::protobuf::uint32 value);

  // optional .CMDUesrTreasureBuyInfo my_buy = 5;
  bool has_my_buy() const;
  void clear_my_buy();
  static const int kMyBuyFieldNumber = 5;
  const ::CMDUesrTreasureBuyInfo& my_buy() const;
  ::CMDUesrTreasureBuyInfo* mutable_my_buy();
  ::CMDUesrTreasureBuyInfo* release_my_buy();
  void set_allocated_my_buy(::CMDUesrTreasureBuyInfo* my_buy);

  // repeated .CMDUesrTreasureBuyInfo buyers = 6;
  int buyers_size() const;
  void clear_buyers();
  static const int kBuyersFieldNumber = 6;
  const ::CMDUesrTreasureBuyInfo& buyers(int index) const;
  ::CMDUesrTreasureBuyInfo* mutable_buyers(int index);
  ::CMDUesrTreasureBuyInfo* add_buyers();
  ::google::protobuf::RepeatedPtrField< ::CMDUesrTreasureBuyInfo >*
      mutable_buyers();
  const ::google::protobuf::RepeatedPtrField< ::CMDUesrTreasureBuyInfo >&
      buyers() const;

  // repeated .CMDUesrTreasureBuyInfo winners = 7;
  int winners_size() const;
  void clear_winners();
  static const int kWinnersFieldNumber = 7;
  const ::CMDUesrTreasureBuyInfo& winners(int index) const;
  ::CMDUesrTreasureBuyInfo* mutable_winners(int index);
  ::CMDUesrTreasureBuyInfo* add_winners();
  ::google::protobuf::RepeatedPtrField< ::CMDUesrTreasureBuyInfo >*
      mutable_winners();
  const ::google::protobuf::RepeatedPtrField< ::CMDUesrTreasureBuyInfo >&
      winners() const;

  // @@protoc_insertion_point(class_scope:CMDTreasureExtraInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 buy_people_;
  ::google::protobuf::uint32 buy_amount_;
  int status_;
  ::google::protobuf::uint32 finished_time_;
  ::CMDUesrTreasureBuyInfo* my_buy_;
  ::google::protobuf::RepeatedPtrField< ::CMDUesrTreasureBuyInfo > buyers_;
  ::google::protobuf::RepeatedPtrField< ::CMDUesrTreasureBuyInfo > winners_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ConsumeSvr_2eproto();
  friend void protobuf_AssignDesc_ConsumeSvr_2eproto();
  friend void protobuf_ShutdownFile_ConsumeSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDTreasureExtraInfo* default_instance_;
};
// -------------------------------------------------------------------

class CMDBuyCodeRange : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDBuyCodeRange) */ {
 public:
  CMDBuyCodeRange();
  virtual ~CMDBuyCodeRange();

  CMDBuyCodeRange(const CMDBuyCodeRange& from);

  inline CMDBuyCodeRange& operator=(const CMDBuyCodeRange& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDBuyCodeRange& default_instance();

  void Swap(CMDBuyCodeRange* other);

  // implements Message ----------------------------------------------

  inline CMDBuyCodeRange* New() const { return New(NULL); }

  CMDBuyCodeRange* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDBuyCodeRange& from);
  void MergeFrom(const CMDBuyCodeRange& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDBuyCodeRange* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 buy_time = 1;
  void clear_buy_time();
  static const int kBuyTimeFieldNumber = 1;
  ::google::protobuf::uint32 buy_time() const;
  void set_buy_time(::google::protobuf::uint32 value);

  // optional uint32 begin = 2;
  void clear_begin();
  static const int kBeginFieldNumber = 2;
  ::google::protobuf::uint32 begin() const;
  void set_begin(::google::protobuf::uint32 value);

  // optional uint32 end = 3;
  void clear_end();
  static const int kEndFieldNumber = 3;
  ::google::protobuf::uint32 end() const;
  void set_end(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMDBuyCodeRange)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 buy_time_;
  ::google::protobuf::uint32 begin_;
  ::google::protobuf::uint32 end_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ConsumeSvr_2eproto();
  friend void protobuf_AssignDesc_ConsumeSvr_2eproto();
  friend void protobuf_ShutdownFile_ConsumeSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDBuyCodeRange* default_instance_;
};
// -------------------------------------------------------------------

class CMDSponsorTreasureReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDSponsorTreasureReq) */ {
 public:
  CMDSponsorTreasureReq();
  virtual ~CMDSponsorTreasureReq();

  CMDSponsorTreasureReq(const CMDSponsorTreasureReq& from);

  inline CMDSponsorTreasureReq& operator=(const CMDSponsorTreasureReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDSponsorTreasureReq& default_instance();

  void Swap(CMDSponsorTreasureReq* other);

  // implements Message ----------------------------------------------

  inline CMDSponsorTreasureReq* New() const { return New(NULL); }

  CMDSponsorTreasureReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDSponsorTreasureReq& from);
  void MergeFrom(const CMDSponsorTreasureReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDSponsorTreasureReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CMDTreasureInfo info = 1;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 1;
  const ::CMDTreasureInfo& info() const;
  ::CMDTreasureInfo* mutable_info();
  ::CMDTreasureInfo* release_info();
  void set_allocated_info(::CMDTreasureInfo* info);

  // @@protoc_insertion_point(class_scope:CMDSponsorTreasureReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::CMDTreasureInfo* info_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ConsumeSvr_2eproto();
  friend void protobuf_AssignDesc_ConsumeSvr_2eproto();
  friend void protobuf_ShutdownFile_ConsumeSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDSponsorTreasureReq* default_instance_;
};
// -------------------------------------------------------------------

class CMDSponsorTreasureResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDSponsorTreasureResp) */ {
 public:
  CMDSponsorTreasureResp();
  virtual ~CMDSponsorTreasureResp();

  CMDSponsorTreasureResp(const CMDSponsorTreasureResp& from);

  inline CMDSponsorTreasureResp& operator=(const CMDSponsorTreasureResp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDSponsorTreasureResp& default_instance();

  void Swap(CMDSponsorTreasureResp* other);

  // implements Message ----------------------------------------------

  inline CMDSponsorTreasureResp* New() const { return New(NULL); }

  CMDSponsorTreasureResp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDSponsorTreasureResp& from);
  void MergeFrom(const CMDSponsorTreasureResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDSponsorTreasureResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CMDErrCode errinfo = 1;
  bool has_errinfo() const;
  void clear_errinfo();
  static const int kErrinfoFieldNumber = 1;
  const ::CMDErrCode& errinfo() const;
  ::CMDErrCode* mutable_errinfo();
  ::CMDErrCode* release_errinfo();
  void set_allocated_errinfo(::CMDErrCode* errinfo);

  // optional .CMDTreasureInfo info = 2;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 2;
  const ::CMDTreasureInfo& info() const;
  ::CMDTreasureInfo* mutable_info();
  ::CMDTreasureInfo* release_info();
  void set_allocated_info(::CMDTreasureInfo* info);

  // @@protoc_insertion_point(class_scope:CMDSponsorTreasureResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::CMDErrCode* errinfo_;
  ::CMDTreasureInfo* info_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ConsumeSvr_2eproto();
  friend void protobuf_AssignDesc_ConsumeSvr_2eproto();
  friend void protobuf_ShutdownFile_ConsumeSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDSponsorTreasureResp* default_instance_;
};
// -------------------------------------------------------------------

class CMDBuyTreasure : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDBuyTreasure) */ {
 public:
  CMDBuyTreasure();
  virtual ~CMDBuyTreasure();

  CMDBuyTreasure(const CMDBuyTreasure& from);

  inline CMDBuyTreasure& operator=(const CMDBuyTreasure& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDBuyTreasure& default_instance();

  void Swap(CMDBuyTreasure* other);

  // implements Message ----------------------------------------------

  inline CMDBuyTreasure* New() const { return New(NULL); }

  CMDBuyTreasure* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDBuyTreasure& from);
  void MergeFrom(const CMDBuyTreasure& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDBuyTreasure* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 groupid = 1;
  void clear_groupid();
  static const int kGroupidFieldNumber = 1;
  ::google::protobuf::uint32 groupid() const;
  void set_groupid(::google::protobuf::uint32 value);

  // optional uint32 userid = 2;
  void clear_userid();
  static const int kUseridFieldNumber = 2;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // optional uint32 treasure_id = 3;
  void clear_treasure_id();
  static const int kTreasureIdFieldNumber = 3;
  ::google::protobuf::uint32 treasure_id() const;
  void set_treasure_id(::google::protobuf::uint32 value);

  // optional uint32 buy_amount = 4;
  void clear_buy_amount();
  static const int kBuyAmountFieldNumber = 4;
  ::google::protobuf::uint32 buy_amount() const;
  void set_buy_amount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMDBuyTreasure)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 groupid_;
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 treasure_id_;
  ::google::protobuf::uint32 buy_amount_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ConsumeSvr_2eproto();
  friend void protobuf_AssignDesc_ConsumeSvr_2eproto();
  friend void protobuf_ShutdownFile_ConsumeSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDBuyTreasure* default_instance_;
};
// -------------------------------------------------------------------

class CMDBuyTreasureResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDBuyTreasureResp) */ {
 public:
  CMDBuyTreasureResp();
  virtual ~CMDBuyTreasureResp();

  CMDBuyTreasureResp(const CMDBuyTreasureResp& from);

  inline CMDBuyTreasureResp& operator=(const CMDBuyTreasureResp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDBuyTreasureResp& default_instance();

  void Swap(CMDBuyTreasureResp* other);

  // implements Message ----------------------------------------------

  inline CMDBuyTreasureResp* New() const { return New(NULL); }

  CMDBuyTreasureResp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDBuyTreasureResp& from);
  void MergeFrom(const CMDBuyTreasureResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDBuyTreasureResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CMDErrCode errinfo = 1;
  bool has_errinfo() const;
  void clear_errinfo();
  static const int kErrinfoFieldNumber = 1;
  const ::CMDErrCode& errinfo() const;
  ::CMDErrCode* mutable_errinfo();
  ::CMDErrCode* release_errinfo();
  void set_allocated_errinfo(::CMDErrCode* errinfo);

  // optional .CMDBuyTreasure buy_info = 2;
  bool has_buy_info() const;
  void clear_buy_info();
  static const int kBuyInfoFieldNumber = 2;
  const ::CMDBuyTreasure& buy_info() const;
  ::CMDBuyTreasure* mutable_buy_info();
  ::CMDBuyTreasure* release_buy_info();
  void set_allocated_buy_info(::CMDBuyTreasure* buy_info);

  // optional .CMDBuyCodeRange buy_code = 3;
  bool has_buy_code() const;
  void clear_buy_code();
  static const int kBuyCodeFieldNumber = 3;
  const ::CMDBuyCodeRange& buy_code() const;
  ::CMDBuyCodeRange* mutable_buy_code();
  ::CMDBuyCodeRange* release_buy_code();
  void set_allocated_buy_code(::CMDBuyCodeRange* buy_code);

  // @@protoc_insertion_point(class_scope:CMDBuyTreasureResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::CMDErrCode* errinfo_;
  ::CMDBuyTreasure* buy_info_;
  ::CMDBuyCodeRange* buy_code_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ConsumeSvr_2eproto();
  friend void protobuf_AssignDesc_ConsumeSvr_2eproto();
  friend void protobuf_ShutdownFile_ConsumeSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDBuyTreasureResp* default_instance_;
};
// -------------------------------------------------------------------

class CMDQryMyTreasureDetail : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDQryMyTreasureDetail) */ {
 public:
  CMDQryMyTreasureDetail();
  virtual ~CMDQryMyTreasureDetail();

  CMDQryMyTreasureDetail(const CMDQryMyTreasureDetail& from);

  inline CMDQryMyTreasureDetail& operator=(const CMDQryMyTreasureDetail& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDQryMyTreasureDetail& default_instance();

  void Swap(CMDQryMyTreasureDetail* other);

  // implements Message ----------------------------------------------

  inline CMDQryMyTreasureDetail* New() const { return New(NULL); }

  CMDQryMyTreasureDetail* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDQryMyTreasureDetail& from);
  void MergeFrom(const CMDQryMyTreasureDetail& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDQryMyTreasureDetail* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 userid = 1;
  void clear_userid();
  static const int kUseridFieldNumber = 1;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // optional uint32 groupid = 2;
  void clear_groupid();
  static const int kGroupidFieldNumber = 2;
  ::google::protobuf::uint32 groupid() const;
  void set_groupid(::google::protobuf::uint32 value);

  // optional uint32 treasure_id = 3;
  void clear_treasure_id();
  static const int kTreasureIdFieldNumber = 3;
  ::google::protobuf::uint32 treasure_id() const;
  void set_treasure_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMDQryMyTreasureDetail)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 groupid_;
  ::google::protobuf::uint32 treasure_id_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ConsumeSvr_2eproto();
  friend void protobuf_AssignDesc_ConsumeSvr_2eproto();
  friend void protobuf_ShutdownFile_ConsumeSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDQryMyTreasureDetail* default_instance_;
};
// -------------------------------------------------------------------

class CMDMyTreasureDetail : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDMyTreasureDetail) */ {
 public:
  CMDMyTreasureDetail();
  virtual ~CMDMyTreasureDetail();

  CMDMyTreasureDetail(const CMDMyTreasureDetail& from);

  inline CMDMyTreasureDetail& operator=(const CMDMyTreasureDetail& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDMyTreasureDetail& default_instance();

  void Swap(CMDMyTreasureDetail* other);

  // implements Message ----------------------------------------------

  inline CMDMyTreasureDetail* New() const { return New(NULL); }

  CMDMyTreasureDetail* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDMyTreasureDetail& from);
  void MergeFrom(const CMDMyTreasureDetail& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDMyTreasureDetail* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 userid = 1;
  void clear_userid();
  static const int kUseridFieldNumber = 1;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // optional uint32 groupid = 2;
  void clear_groupid();
  static const int kGroupidFieldNumber = 2;
  ::google::protobuf::uint32 groupid() const;
  void set_groupid(::google::protobuf::uint32 value);

  // optional uint32 treasure_id = 3;
  void clear_treasure_id();
  static const int kTreasureIdFieldNumber = 3;
  ::google::protobuf::uint32 treasure_id() const;
  void set_treasure_id(::google::protobuf::uint32 value);

  // optional uint32 buy_total = 4;
  void clear_buy_total();
  static const int kBuyTotalFieldNumber = 4;
  ::google::protobuf::uint32 buy_total() const;
  void set_buy_total(::google::protobuf::uint32 value);

  // repeated .CMDBuyCodeRange buy_list = 5;
  int buy_list_size() const;
  void clear_buy_list();
  static const int kBuyListFieldNumber = 5;
  const ::CMDBuyCodeRange& buy_list(int index) const;
  ::CMDBuyCodeRange* mutable_buy_list(int index);
  ::CMDBuyCodeRange* add_buy_list();
  ::google::protobuf::RepeatedPtrField< ::CMDBuyCodeRange >*
      mutable_buy_list();
  const ::google::protobuf::RepeatedPtrField< ::CMDBuyCodeRange >&
      buy_list() const;

  // @@protoc_insertion_point(class_scope:CMDMyTreasureDetail)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 groupid_;
  ::google::protobuf::uint32 treasure_id_;
  ::google::protobuf::uint32 buy_total_;
  ::google::protobuf::RepeatedPtrField< ::CMDBuyCodeRange > buy_list_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ConsumeSvr_2eproto();
  friend void protobuf_AssignDesc_ConsumeSvr_2eproto();
  friend void protobuf_ShutdownFile_ConsumeSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDMyTreasureDetail* default_instance_;
};
// -------------------------------------------------------------------

class CMDQryTreasureList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDQryTreasureList) */ {
 public:
  CMDQryTreasureList();
  virtual ~CMDQryTreasureList();

  CMDQryTreasureList(const CMDQryTreasureList& from);

  inline CMDQryTreasureList& operator=(const CMDQryTreasureList& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDQryTreasureList& default_instance();

  void Swap(CMDQryTreasureList* other);

  // implements Message ----------------------------------------------

  inline CMDQryTreasureList* New() const { return New(NULL); }

  CMDQryTreasureList* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDQryTreasureList& from);
  void MergeFrom(const CMDQryTreasureList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDQryTreasureList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 groupid = 1;
  void clear_groupid();
  static const int kGroupidFieldNumber = 1;
  ::google::protobuf::uint32 groupid() const;
  void set_groupid(::google::protobuf::uint32 value);

  // optional uint32 userid = 2;
  void clear_userid();
  static const int kUseridFieldNumber = 2;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // optional uint32 count = 3;
  void clear_count();
  static const int kCountFieldNumber = 3;
  ::google::protobuf::uint32 count() const;
  void set_count(::google::protobuf::uint32 value);

  // optional uint32 last_create_time = 4;
  void clear_last_create_time();
  static const int kLastCreateTimeFieldNumber = 4;
  ::google::protobuf::uint32 last_create_time() const;
  void set_last_create_time(::google::protobuf::uint32 value);

  // optional uint32 last_end_time = 5;
  void clear_last_end_time();
  static const int kLastEndTimeFieldNumber = 5;
  ::google::protobuf::uint32 last_end_time() const;
  void set_last_end_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMDQryTreasureList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 groupid_;
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 count_;
  ::google::protobuf::uint32 last_create_time_;
  ::google::protobuf::uint32 last_end_time_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ConsumeSvr_2eproto();
  friend void protobuf_AssignDesc_ConsumeSvr_2eproto();
  friend void protobuf_ShutdownFile_ConsumeSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDQryTreasureList* default_instance_;
};
// -------------------------------------------------------------------

class CMDTreasureList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDTreasureList) */ {
 public:
  CMDTreasureList();
  virtual ~CMDTreasureList();

  CMDTreasureList(const CMDTreasureList& from);

  inline CMDTreasureList& operator=(const CMDTreasureList& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDTreasureList& default_instance();

  void Swap(CMDTreasureList* other);

  // implements Message ----------------------------------------------

  inline CMDTreasureList* New() const { return New(NULL); }

  CMDTreasureList* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDTreasureList& from);
  void MergeFrom(const CMDTreasureList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDTreasureList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 groupid = 1;
  void clear_groupid();
  static const int kGroupidFieldNumber = 1;
  ::google::protobuf::uint32 groupid() const;
  void set_groupid(::google::protobuf::uint32 value);

  // optional uint32 userid = 2;
  void clear_userid();
  static const int kUseridFieldNumber = 2;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // repeated .CMDTreasureInfo list = 3;
  int list_size() const;
  void clear_list();
  static const int kListFieldNumber = 3;
  const ::CMDTreasureInfo& list(int index) const;
  ::CMDTreasureInfo* mutable_list(int index);
  ::CMDTreasureInfo* add_list();
  ::google::protobuf::RepeatedPtrField< ::CMDTreasureInfo >*
      mutable_list();
  const ::google::protobuf::RepeatedPtrField< ::CMDTreasureInfo >&
      list() const;

  // @@protoc_insertion_point(class_scope:CMDTreasureList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 groupid_;
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::RepeatedPtrField< ::CMDTreasureInfo > list_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ConsumeSvr_2eproto();
  friend void protobuf_AssignDesc_ConsumeSvr_2eproto();
  friend void protobuf_ShutdownFile_ConsumeSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDTreasureList* default_instance_;
};
// -------------------------------------------------------------------

class CMDTreasureInfoNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDTreasureInfoNotify) */ {
 public:
  CMDTreasureInfoNotify();
  virtual ~CMDTreasureInfoNotify();

  CMDTreasureInfoNotify(const CMDTreasureInfoNotify& from);

  inline CMDTreasureInfoNotify& operator=(const CMDTreasureInfoNotify& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDTreasureInfoNotify& default_instance();

  void Swap(CMDTreasureInfoNotify* other);

  // implements Message ----------------------------------------------

  inline CMDTreasureInfoNotify* New() const { return New(NULL); }

  CMDTreasureInfoNotify* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDTreasureInfoNotify& from);
  void MergeFrom(const CMDTreasureInfoNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDTreasureInfoNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .e_TreasureStatus old_status = 1;
  void clear_old_status();
  static const int kOldStatusFieldNumber = 1;
  ::e_TreasureStatus old_status() const;
  void set_old_status(::e_TreasureStatus value);

  // optional .e_TreasureStatus new_status = 2;
  void clear_new_status();
  static const int kNewStatusFieldNumber = 2;
  ::e_TreasureStatus new_status() const;
  void set_new_status(::e_TreasureStatus value);

  // optional .CMDTreasureInfo info = 3;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 3;
  const ::CMDTreasureInfo& info() const;
  ::CMDTreasureInfo* mutable_info();
  ::CMDTreasureInfo* release_info();
  void set_allocated_info(::CMDTreasureInfo* info);

  // @@protoc_insertion_point(class_scope:CMDTreasureInfoNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  int old_status_;
  int new_status_;
  ::CMDTreasureInfo* info_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ConsumeSvr_2eproto();
  friend void protobuf_AssignDesc_ConsumeSvr_2eproto();
  friend void protobuf_ShutdownFile_ConsumeSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDTreasureInfoNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMDQryTreasureInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDQryTreasureInfo) */ {
 public:
  CMDQryTreasureInfo();
  virtual ~CMDQryTreasureInfo();

  CMDQryTreasureInfo(const CMDQryTreasureInfo& from);

  inline CMDQryTreasureInfo& operator=(const CMDQryTreasureInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDQryTreasureInfo& default_instance();

  void Swap(CMDQryTreasureInfo* other);

  // implements Message ----------------------------------------------

  inline CMDQryTreasureInfo* New() const { return New(NULL); }

  CMDQryTreasureInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDQryTreasureInfo& from);
  void MergeFrom(const CMDQryTreasureInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDQryTreasureInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 groupid = 1;
  void clear_groupid();
  static const int kGroupidFieldNumber = 1;
  ::google::protobuf::uint32 groupid() const;
  void set_groupid(::google::protobuf::uint32 value);

  // optional uint32 userid = 2;
  void clear_userid();
  static const int kUseridFieldNumber = 2;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // optional uint32 treasure_id = 3;
  void clear_treasure_id();
  static const int kTreasureIdFieldNumber = 3;
  ::google::protobuf::uint32 treasure_id() const;
  void set_treasure_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMDQryTreasureInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 groupid_;
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 treasure_id_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ConsumeSvr_2eproto();
  friend void protobuf_AssignDesc_ConsumeSvr_2eproto();
  friend void protobuf_ShutdownFile_ConsumeSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDQryTreasureInfo* default_instance_;
};
// -------------------------------------------------------------------

class CMDQryTreasureInfoResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDQryTreasureInfoResp) */ {
 public:
  CMDQryTreasureInfoResp();
  virtual ~CMDQryTreasureInfoResp();

  CMDQryTreasureInfoResp(const CMDQryTreasureInfoResp& from);

  inline CMDQryTreasureInfoResp& operator=(const CMDQryTreasureInfoResp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDQryTreasureInfoResp& default_instance();

  void Swap(CMDQryTreasureInfoResp* other);

  // implements Message ----------------------------------------------

  inline CMDQryTreasureInfoResp* New() const { return New(NULL); }

  CMDQryTreasureInfoResp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDQryTreasureInfoResp& from);
  void MergeFrom(const CMDQryTreasureInfoResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDQryTreasureInfoResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CMDErrCode errinfo = 1;
  bool has_errinfo() const;
  void clear_errinfo();
  static const int kErrinfoFieldNumber = 1;
  const ::CMDErrCode& errinfo() const;
  ::CMDErrCode* mutable_errinfo();
  ::CMDErrCode* release_errinfo();
  void set_allocated_errinfo(::CMDErrCode* errinfo);

  // optional .CMDQryTreasureInfo req = 2;
  bool has_req() const;
  void clear_req();
  static const int kReqFieldNumber = 2;
  const ::CMDQryTreasureInfo& req() const;
  ::CMDQryTreasureInfo* mutable_req();
  ::CMDQryTreasureInfo* release_req();
  void set_allocated_req(::CMDQryTreasureInfo* req);

  // optional .CMDTreasureInfo info = 3;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 3;
  const ::CMDTreasureInfo& info() const;
  ::CMDTreasureInfo* mutable_info();
  ::CMDTreasureInfo* release_info();
  void set_allocated_info(::CMDTreasureInfo* info);

  // @@protoc_insertion_point(class_scope:CMDQryTreasureInfoResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::CMDErrCode* errinfo_;
  ::CMDQryTreasureInfo* req_;
  ::CMDTreasureInfo* info_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ConsumeSvr_2eproto();
  friend void protobuf_AssignDesc_ConsumeSvr_2eproto();
  friend void protobuf_ShutdownFile_ConsumeSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDQryTreasureInfoResp* default_instance_;
};
// -------------------------------------------------------------------

class CMDSendPressStampReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDSendPressStampReq) */ {
 public:
  CMDSendPressStampReq();
  virtual ~CMDSendPressStampReq();

  CMDSendPressStampReq(const CMDSendPressStampReq& from);

  inline CMDSendPressStampReq& operator=(const CMDSendPressStampReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDSendPressStampReq& default_instance();

  void Swap(CMDSendPressStampReq* other);

  // implements Message ----------------------------------------------

  inline CMDSendPressStampReq* New() const { return New(NULL); }

  CMDSendPressStampReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDSendPressStampReq& from);
  void MergeFrom(const CMDSendPressStampReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDSendPressStampReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 userID = 1;
  void clear_userid();
  static const int kUserIDFieldNumber = 1;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // optional uint32 groupID = 2;
  void clear_groupid();
  static const int kGroupIDFieldNumber = 2;
  ::google::protobuf::uint32 groupid() const;
  void set_groupid(::google::protobuf::uint32 value);

  // optional uint32 dstUserID = 3;
  void clear_dstuserid();
  static const int kDstUserIDFieldNumber = 3;
  ::google::protobuf::uint32 dstuserid() const;
  void set_dstuserid(::google::protobuf::uint32 value);

  // optional uint32 Money = 4;
  void clear_money();
  static const int kMoneyFieldNumber = 4;
  ::google::protobuf::uint32 money() const;
  void set_money(::google::protobuf::uint32 value);

  // optional string message = 5;
  void clear_message();
  static const int kMessageFieldNumber = 5;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // @@protoc_insertion_point(class_scope:CMDSendPressStampReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 groupid_;
  ::google::protobuf::uint32 dstuserid_;
  ::google::protobuf::uint32 money_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ConsumeSvr_2eproto();
  friend void protobuf_AssignDesc_ConsumeSvr_2eproto();
  friend void protobuf_ShutdownFile_ConsumeSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDSendPressStampReq* default_instance_;
};
// -------------------------------------------------------------------

class CMDSendPressStampResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDSendPressStampResp) */ {
 public:
  CMDSendPressStampResp();
  virtual ~CMDSendPressStampResp();

  CMDSendPressStampResp(const CMDSendPressStampResp& from);

  inline CMDSendPressStampResp& operator=(const CMDSendPressStampResp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDSendPressStampResp& default_instance();

  void Swap(CMDSendPressStampResp* other);

  // implements Message ----------------------------------------------

  inline CMDSendPressStampResp* New() const { return New(NULL); }

  CMDSendPressStampResp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDSendPressStampResp& from);
  void MergeFrom(const CMDSendPressStampResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDSendPressStampResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CMDErrCode errInfo = 1;
  bool has_errinfo() const;
  void clear_errinfo();
  static const int kErrInfoFieldNumber = 1;
  const ::CMDErrCode& errinfo() const;
  ::CMDErrCode* mutable_errinfo();
  ::CMDErrCode* release_errinfo();
  void set_allocated_errinfo(::CMDErrCode* errinfo);

  // optional uint32 userID = 2;
  void clear_userid();
  static const int kUserIDFieldNumber = 2;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // optional uint32 groupID = 3;
  void clear_groupid();
  static const int kGroupIDFieldNumber = 3;
  ::google::protobuf::uint32 groupid() const;
  void set_groupid(::google::protobuf::uint32 value);

  // optional uint32 stampID = 4;
  void clear_stampid();
  static const int kStampIDFieldNumber = 4;
  ::google::protobuf::uint32 stampid() const;
  void set_stampid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMDSendPressStampResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::CMDErrCode* errinfo_;
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 groupid_;
  ::google::protobuf::uint32 stampid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ConsumeSvr_2eproto();
  friend void protobuf_AssignDesc_ConsumeSvr_2eproto();
  friend void protobuf_ShutdownFile_ConsumeSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDSendPressStampResp* default_instance_;
};
// -------------------------------------------------------------------

class CMDQryStampReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDQryStampReq) */ {
 public:
  CMDQryStampReq();
  virtual ~CMDQryStampReq();

  CMDQryStampReq(const CMDQryStampReq& from);

  inline CMDQryStampReq& operator=(const CMDQryStampReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDQryStampReq& default_instance();

  void Swap(CMDQryStampReq* other);

  // implements Message ----------------------------------------------

  inline CMDQryStampReq* New() const { return New(NULL); }

  CMDQryStampReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDQryStampReq& from);
  void MergeFrom(const CMDQryStampReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDQryStampReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 groupID = 1;
  void clear_groupid();
  static const int kGroupIDFieldNumber = 1;
  ::google::protobuf::uint32 groupid() const;
  void set_groupid(::google::protobuf::uint32 value);

  // optional uint32 userID = 2;
  void clear_userid();
  static const int kUserIDFieldNumber = 2;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // optional uint32 dstUserID = 3;
  void clear_dstuserid();
  static const int kDstUserIDFieldNumber = 3;
  ::google::protobuf::uint32 dstuserid() const;
  void set_dstuserid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMDQryStampReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 groupid_;
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 dstuserid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ConsumeSvr_2eproto();
  friend void protobuf_AssignDesc_ConsumeSvr_2eproto();
  friend void protobuf_ShutdownFile_ConsumeSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDQryStampReq* default_instance_;
};
// -------------------------------------------------------------------

class CMDStampInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDStampInfo) */ {
 public:
  CMDStampInfo();
  virtual ~CMDStampInfo();

  CMDStampInfo(const CMDStampInfo& from);

  inline CMDStampInfo& operator=(const CMDStampInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDStampInfo& default_instance();

  void Swap(CMDStampInfo* other);

  // implements Message ----------------------------------------------

  inline CMDStampInfo* New() const { return New(NULL); }

  CMDStampInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDStampInfo& from);
  void MergeFrom(const CMDStampInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDStampInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 stampID = 1;
  void clear_stampid();
  static const int kStampIDFieldNumber = 1;
  ::google::protobuf::uint32 stampid() const;
  void set_stampid(::google::protobuf::uint32 value);

  // optional uint32 userID = 2;
  void clear_userid();
  static const int kUserIDFieldNumber = 2;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // optional uint32 dstUserID = 3;
  void clear_dstuserid();
  static const int kDstUserIDFieldNumber = 3;
  ::google::protobuf::uint32 dstuserid() const;
  void set_dstuserid(::google::protobuf::uint32 value);

  // optional uint32 pressNum = 4;
  void clear_pressnum();
  static const int kPressNumFieldNumber = 4;
  ::google::protobuf::uint32 pressnum() const;
  void set_pressnum(::google::protobuf::uint32 value);

  // optional uint32 Money = 5;
  void clear_money();
  static const int kMoneyFieldNumber = 5;
  ::google::protobuf::uint32 money() const;
  void set_money(::google::protobuf::uint32 value);

  // optional string message = 6;
  void clear_message();
  static const int kMessageFieldNumber = 6;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // @@protoc_insertion_point(class_scope:CMDStampInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 stampid_;
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 dstuserid_;
  ::google::protobuf::uint32 pressnum_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::google::protobuf::uint32 money_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ConsumeSvr_2eproto();
  friend void protobuf_AssignDesc_ConsumeSvr_2eproto();
  friend void protobuf_ShutdownFile_ConsumeSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDStampInfo* default_instance_;
};
// -------------------------------------------------------------------

class CMDQryStampRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDQryStampRsp) */ {
 public:
  CMDQryStampRsp();
  virtual ~CMDQryStampRsp();

  CMDQryStampRsp(const CMDQryStampRsp& from);

  inline CMDQryStampRsp& operator=(const CMDQryStampRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDQryStampRsp& default_instance();

  void Swap(CMDQryStampRsp* other);

  // implements Message ----------------------------------------------

  inline CMDQryStampRsp* New() const { return New(NULL); }

  CMDQryStampRsp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDQryStampRsp& from);
  void MergeFrom(const CMDQryStampRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDQryStampRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 groupID = 1;
  void clear_groupid();
  static const int kGroupIDFieldNumber = 1;
  ::google::protobuf::uint32 groupid() const;
  void set_groupid(::google::protobuf::uint32 value);

  // optional uint32 startMoney = 2;
  void clear_startmoney();
  static const int kStartMoneyFieldNumber = 2;
  ::google::protobuf::uint32 startmoney() const;
  void set_startmoney(::google::protobuf::uint32 value);

  // optional uint32 IncreaseMoney = 3;
  void clear_increasemoney();
  static const int kIncreaseMoneyFieldNumber = 3;
  ::google::protobuf::uint32 increasemoney() const;
  void set_increasemoney(::google::protobuf::uint32 value);

  // repeated .CMDStampInfo stamp = 4;
  int stamp_size() const;
  void clear_stamp();
  static const int kStampFieldNumber = 4;
  const ::CMDStampInfo& stamp(int index) const;
  ::CMDStampInfo* mutable_stamp(int index);
  ::CMDStampInfo* add_stamp();
  ::google::protobuf::RepeatedPtrField< ::CMDStampInfo >*
      mutable_stamp();
  const ::google::protobuf::RepeatedPtrField< ::CMDStampInfo >&
      stamp() const;

  // @@protoc_insertion_point(class_scope:CMDQryStampRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 groupid_;
  ::google::protobuf::uint32 startmoney_;
  ::google::protobuf::RepeatedPtrField< ::CMDStampInfo > stamp_;
  ::google::protobuf::uint32 increasemoney_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ConsumeSvr_2eproto();
  friend void protobuf_AssignDesc_ConsumeSvr_2eproto();
  friend void protobuf_ShutdownFile_ConsumeSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDQryStampRsp* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDSendRedPacketReq

// optional uint32 userID = 1;
inline void CMDSendRedPacketReq::clear_userid() {
  userid_ = 0u;
}
inline ::google::protobuf::uint32 CMDSendRedPacketReq::userid() const {
  // @@protoc_insertion_point(field_get:CMDSendRedPacketReq.userID)
  return userid_;
}
inline void CMDSendRedPacketReq::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDSendRedPacketReq.userID)
}

// optional uint32 groupID = 2;
inline void CMDSendRedPacketReq::clear_groupid() {
  groupid_ = 0u;
}
inline ::google::protobuf::uint32 CMDSendRedPacketReq::groupid() const {
  // @@protoc_insertion_point(field_get:CMDSendRedPacketReq.groupID)
  return groupid_;
}
inline void CMDSendRedPacketReq::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDSendRedPacketReq.groupID)
}

// optional .ePacketType packetType = 3;
inline void CMDSendRedPacketReq::clear_packettype() {
  packettype_ = 0;
}
inline ::ePacketType CMDSendRedPacketReq::packettype() const {
  // @@protoc_insertion_point(field_get:CMDSendRedPacketReq.packetType)
  return static_cast< ::ePacketType >(packettype_);
}
inline void CMDSendRedPacketReq::set_packettype(::ePacketType value) {
  
  packettype_ = value;
  // @@protoc_insertion_point(field_set:CMDSendRedPacketReq.packetType)
}

// optional .eRangeType rangeType = 4;
inline void CMDSendRedPacketReq::clear_rangetype() {
  rangetype_ = 0;
}
inline ::eRangeType CMDSendRedPacketReq::rangetype() const {
  // @@protoc_insertion_point(field_get:CMDSendRedPacketReq.rangeType)
  return static_cast< ::eRangeType >(rangetype_);
}
inline void CMDSendRedPacketReq::set_rangetype(::eRangeType value) {
  
  rangetype_ = value;
  // @@protoc_insertion_point(field_set:CMDSendRedPacketReq.rangeType)
}

// optional uint32 dstUserID = 5;
inline void CMDSendRedPacketReq::clear_dstuserid() {
  dstuserid_ = 0u;
}
inline ::google::protobuf::uint32 CMDSendRedPacketReq::dstuserid() const {
  // @@protoc_insertion_point(field_get:CMDSendRedPacketReq.dstUserID)
  return dstuserid_;
}
inline void CMDSendRedPacketReq::set_dstuserid(::google::protobuf::uint32 value) {
  
  dstuserid_ = value;
  // @@protoc_insertion_point(field_set:CMDSendRedPacketReq.dstUserID)
}

// optional uint32 packetNum = 6;
inline void CMDSendRedPacketReq::clear_packetnum() {
  packetnum_ = 0u;
}
inline ::google::protobuf::uint32 CMDSendRedPacketReq::packetnum() const {
  // @@protoc_insertion_point(field_get:CMDSendRedPacketReq.packetNum)
  return packetnum_;
}
inline void CMDSendRedPacketReq::set_packetnum(::google::protobuf::uint32 value) {
  
  packetnum_ = value;
  // @@protoc_insertion_point(field_set:CMDSendRedPacketReq.packetNum)
}

// optional uint32 packetMoney = 7;
inline void CMDSendRedPacketReq::clear_packetmoney() {
  packetmoney_ = 0u;
}
inline ::google::protobuf::uint32 CMDSendRedPacketReq::packetmoney() const {
  // @@protoc_insertion_point(field_get:CMDSendRedPacketReq.packetMoney)
  return packetmoney_;
}
inline void CMDSendRedPacketReq::set_packetmoney(::google::protobuf::uint32 value) {
  
  packetmoney_ = value;
  // @@protoc_insertion_point(field_set:CMDSendRedPacketReq.packetMoney)
}

// optional uint32 perPacketMoney = 8;
inline void CMDSendRedPacketReq::clear_perpacketmoney() {
  perpacketmoney_ = 0u;
}
inline ::google::protobuf::uint32 CMDSendRedPacketReq::perpacketmoney() const {
  // @@protoc_insertion_point(field_get:CMDSendRedPacketReq.perPacketMoney)
  return perpacketmoney_;
}
inline void CMDSendRedPacketReq::set_perpacketmoney(::google::protobuf::uint32 value) {
  
  perpacketmoney_ = value;
  // @@protoc_insertion_point(field_set:CMDSendRedPacketReq.perPacketMoney)
}

// optional string message = 9;
inline void CMDSendRedPacketReq::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMDSendRedPacketReq::message() const {
  // @@protoc_insertion_point(field_get:CMDSendRedPacketReq.message)
  return message_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDSendRedPacketReq::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDSendRedPacketReq.message)
}
inline void CMDSendRedPacketReq::set_message(const char* value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDSendRedPacketReq.message)
}
inline void CMDSendRedPacketReq::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDSendRedPacketReq.message)
}
inline ::std::string* CMDSendRedPacketReq::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:CMDSendRedPacketReq.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMDSendRedPacketReq::release_message() {
  // @@protoc_insertion_point(field_release:CMDSendRedPacketReq.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDSendRedPacketReq::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:CMDSendRedPacketReq.message)
}

// optional bool privateType = 10;
inline void CMDSendRedPacketReq::clear_privatetype() {
  privatetype_ = false;
}
inline bool CMDSendRedPacketReq::privatetype() const {
  // @@protoc_insertion_point(field_get:CMDSendRedPacketReq.privateType)
  return privatetype_;
}
inline void CMDSendRedPacketReq::set_privatetype(bool value) {
  
  privatetype_ = value;
  // @@protoc_insertion_point(field_set:CMDSendRedPacketReq.privateType)
}

// optional .eRangeGender rangeGender = 11;
inline void CMDSendRedPacketReq::clear_rangegender() {
  rangegender_ = 0;
}
inline ::eRangeGender CMDSendRedPacketReq::rangegender() const {
  // @@protoc_insertion_point(field_get:CMDSendRedPacketReq.rangeGender)
  return static_cast< ::eRangeGender >(rangegender_);
}
inline void CMDSendRedPacketReq::set_rangegender(::eRangeGender value) {
  
  rangegender_ = value;
  // @@protoc_insertion_point(field_set:CMDSendRedPacketReq.rangeGender)
}

// optional uint32 fixtime = 12;
inline void CMDSendRedPacketReq::clear_fixtime() {
  fixtime_ = 0u;
}
inline ::google::protobuf::uint32 CMDSendRedPacketReq::fixtime() const {
  // @@protoc_insertion_point(field_get:CMDSendRedPacketReq.fixtime)
  return fixtime_;
}
inline void CMDSendRedPacketReq::set_fixtime(::google::protobuf::uint32 value) {
  
  fixtime_ = value;
  // @@protoc_insertion_point(field_set:CMDSendRedPacketReq.fixtime)
}

// optional uint32 invalidTime = 13;
inline void CMDSendRedPacketReq::clear_invalidtime() {
  invalidtime_ = 0u;
}
inline ::google::protobuf::uint32 CMDSendRedPacketReq::invalidtime() const {
  // @@protoc_insertion_point(field_get:CMDSendRedPacketReq.invalidTime)
  return invalidtime_;
}
inline void CMDSendRedPacketReq::set_invalidtime(::google::protobuf::uint32 value) {
  
  invalidtime_ = value;
  // @@protoc_insertion_point(field_set:CMDSendRedPacketReq.invalidTime)
}

// optional double longitude = 14;
inline void CMDSendRedPacketReq::clear_longitude() {
  longitude_ = 0;
}
inline double CMDSendRedPacketReq::longitude() const {
  // @@protoc_insertion_point(field_get:CMDSendRedPacketReq.longitude)
  return longitude_;
}
inline void CMDSendRedPacketReq::set_longitude(double value) {
  
  longitude_ = value;
  // @@protoc_insertion_point(field_set:CMDSendRedPacketReq.longitude)
}

// optional double latitude = 15;
inline void CMDSendRedPacketReq::clear_latitude() {
  latitude_ = 0;
}
inline double CMDSendRedPacketReq::latitude() const {
  // @@protoc_insertion_point(field_get:CMDSendRedPacketReq.latitude)
  return latitude_;
}
inline void CMDSendRedPacketReq::set_latitude(double value) {
  
  latitude_ = value;
  // @@protoc_insertion_point(field_set:CMDSendRedPacketReq.latitude)
}

// optional string location = 16;
inline void CMDSendRedPacketReq::clear_location() {
  location_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMDSendRedPacketReq::location() const {
  // @@protoc_insertion_point(field_get:CMDSendRedPacketReq.location)
  return location_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDSendRedPacketReq::set_location(const ::std::string& value) {
  
  location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDSendRedPacketReq.location)
}
inline void CMDSendRedPacketReq::set_location(const char* value) {
  
  location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDSendRedPacketReq.location)
}
inline void CMDSendRedPacketReq::set_location(const char* value, size_t size) {
  
  location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDSendRedPacketReq.location)
}
inline ::std::string* CMDSendRedPacketReq::mutable_location() {
  
  // @@protoc_insertion_point(field_mutable:CMDSendRedPacketReq.location)
  return location_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMDSendRedPacketReq::release_location() {
  // @@protoc_insertion_point(field_release:CMDSendRedPacketReq.location)
  
  return location_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDSendRedPacketReq::set_allocated_location(::std::string* location) {
  if (location != NULL) {
    
  } else {
    
  }
  location_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), location);
  // @@protoc_insertion_point(field_set_allocated:CMDSendRedPacketReq.location)
}

// -------------------------------------------------------------------

// CMDSendRedPacketResp

// optional .CMDErrCode errInfo = 1;
inline bool CMDSendRedPacketResp::has_errinfo() const {
  return !_is_default_instance_ && errinfo_ != NULL;
}
inline void CMDSendRedPacketResp::clear_errinfo() {
  if (GetArenaNoVirtual() == NULL && errinfo_ != NULL) delete errinfo_;
  errinfo_ = NULL;
}
inline const ::CMDErrCode& CMDSendRedPacketResp::errinfo() const {
  // @@protoc_insertion_point(field_get:CMDSendRedPacketResp.errInfo)
  return errinfo_ != NULL ? *errinfo_ : *default_instance_->errinfo_;
}
inline ::CMDErrCode* CMDSendRedPacketResp::mutable_errinfo() {
  
  if (errinfo_ == NULL) {
    errinfo_ = new ::CMDErrCode;
  }
  // @@protoc_insertion_point(field_mutable:CMDSendRedPacketResp.errInfo)
  return errinfo_;
}
inline ::CMDErrCode* CMDSendRedPacketResp::release_errinfo() {
  // @@protoc_insertion_point(field_release:CMDSendRedPacketResp.errInfo)
  
  ::CMDErrCode* temp = errinfo_;
  errinfo_ = NULL;
  return temp;
}
inline void CMDSendRedPacketResp::set_allocated_errinfo(::CMDErrCode* errinfo) {
  delete errinfo_;
  errinfo_ = errinfo;
  if (errinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDSendRedPacketResp.errInfo)
}

// optional uint32 userID = 2;
inline void CMDSendRedPacketResp::clear_userid() {
  userid_ = 0u;
}
inline ::google::protobuf::uint32 CMDSendRedPacketResp::userid() const {
  // @@protoc_insertion_point(field_get:CMDSendRedPacketResp.userID)
  return userid_;
}
inline void CMDSendRedPacketResp::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDSendRedPacketResp.userID)
}

// optional uint32 groupID = 3;
inline void CMDSendRedPacketResp::clear_groupid() {
  groupid_ = 0u;
}
inline ::google::protobuf::uint32 CMDSendRedPacketResp::groupid() const {
  // @@protoc_insertion_point(field_get:CMDSendRedPacketResp.groupID)
  return groupid_;
}
inline void CMDSendRedPacketResp::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDSendRedPacketResp.groupID)
}

// optional uint32 packetID = 4;
inline void CMDSendRedPacketResp::clear_packetid() {
  packetid_ = 0u;
}
inline ::google::protobuf::uint32 CMDSendRedPacketResp::packetid() const {
  // @@protoc_insertion_point(field_get:CMDSendRedPacketResp.packetID)
  return packetid_;
}
inline void CMDSendRedPacketResp::set_packetid(::google::protobuf::uint32 value) {
  
  packetid_ = value;
  // @@protoc_insertion_point(field_set:CMDSendRedPacketResp.packetID)
}

// optional uint32 comboNum = 5;
inline void CMDSendRedPacketResp::clear_combonum() {
  combonum_ = 0u;
}
inline ::google::protobuf::uint32 CMDSendRedPacketResp::combonum() const {
  // @@protoc_insertion_point(field_get:CMDSendRedPacketResp.comboNum)
  return combonum_;
}
inline void CMDSendRedPacketResp::set_combonum(::google::protobuf::uint32 value) {
  
  combonum_ = value;
  // @@protoc_insertion_point(field_set:CMDSendRedPacketResp.comboNum)
}

// optional bool privateType = 6;
inline void CMDSendRedPacketResp::clear_privatetype() {
  privatetype_ = false;
}
inline bool CMDSendRedPacketResp::privatetype() const {
  // @@protoc_insertion_point(field_get:CMDSendRedPacketResp.privateType)
  return privatetype_;
}
inline void CMDSendRedPacketResp::set_privatetype(bool value) {
  
  privatetype_ = value;
  // @@protoc_insertion_point(field_set:CMDSendRedPacketResp.privateType)
}

// optional uint32 comboTime = 7;
inline void CMDSendRedPacketResp::clear_combotime() {
  combotime_ = 0u;
}
inline ::google::protobuf::uint32 CMDSendRedPacketResp::combotime() const {
  // @@protoc_insertion_point(field_get:CMDSendRedPacketResp.comboTime)
  return combotime_;
}
inline void CMDSendRedPacketResp::set_combotime(::google::protobuf::uint32 value) {
  
  combotime_ = value;
  // @@protoc_insertion_point(field_set:CMDSendRedPacketResp.comboTime)
}

// optional .ePacketType packetType = 8;
inline void CMDSendRedPacketResp::clear_packettype() {
  packettype_ = 0;
}
inline ::ePacketType CMDSendRedPacketResp::packettype() const {
  // @@protoc_insertion_point(field_get:CMDSendRedPacketResp.packetType)
  return static_cast< ::ePacketType >(packettype_);
}
inline void CMDSendRedPacketResp::set_packettype(::ePacketType value) {
  
  packettype_ = value;
  // @@protoc_insertion_point(field_set:CMDSendRedPacketResp.packetType)
}

// optional double longitude = 9;
inline void CMDSendRedPacketResp::clear_longitude() {
  longitude_ = 0;
}
inline double CMDSendRedPacketResp::longitude() const {
  // @@protoc_insertion_point(field_get:CMDSendRedPacketResp.longitude)
  return longitude_;
}
inline void CMDSendRedPacketResp::set_longitude(double value) {
  
  longitude_ = value;
  // @@protoc_insertion_point(field_set:CMDSendRedPacketResp.longitude)
}

// optional double latitude = 10;
inline void CMDSendRedPacketResp::clear_latitude() {
  latitude_ = 0;
}
inline double CMDSendRedPacketResp::latitude() const {
  // @@protoc_insertion_point(field_get:CMDSendRedPacketResp.latitude)
  return latitude_;
}
inline void CMDSendRedPacketResp::set_latitude(double value) {
  
  latitude_ = value;
  // @@protoc_insertion_point(field_set:CMDSendRedPacketResp.latitude)
}

// -------------------------------------------------------------------

// CMDCatchRedPacketReq

// optional uint32 userID = 1;
inline void CMDCatchRedPacketReq::clear_userid() {
  userid_ = 0u;
}
inline ::google::protobuf::uint32 CMDCatchRedPacketReq::userid() const {
  // @@protoc_insertion_point(field_get:CMDCatchRedPacketReq.userID)
  return userid_;
}
inline void CMDCatchRedPacketReq::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDCatchRedPacketReq.userID)
}

// optional uint32 groupID = 2;
inline void CMDCatchRedPacketReq::clear_groupid() {
  groupid_ = 0u;
}
inline ::google::protobuf::uint32 CMDCatchRedPacketReq::groupid() const {
  // @@protoc_insertion_point(field_get:CMDCatchRedPacketReq.groupID)
  return groupid_;
}
inline void CMDCatchRedPacketReq::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDCatchRedPacketReq.groupID)
}

// optional uint32 packetID = 3;
inline void CMDCatchRedPacketReq::clear_packetid() {
  packetid_ = 0u;
}
inline ::google::protobuf::uint32 CMDCatchRedPacketReq::packetid() const {
  // @@protoc_insertion_point(field_get:CMDCatchRedPacketReq.packetID)
  return packetid_;
}
inline void CMDCatchRedPacketReq::set_packetid(::google::protobuf::uint32 value) {
  
  packetid_ = value;
  // @@protoc_insertion_point(field_set:CMDCatchRedPacketReq.packetID)
}

// optional double longitude = 4;
inline void CMDCatchRedPacketReq::clear_longitude() {
  longitude_ = 0;
}
inline double CMDCatchRedPacketReq::longitude() const {
  // @@protoc_insertion_point(field_get:CMDCatchRedPacketReq.longitude)
  return longitude_;
}
inline void CMDCatchRedPacketReq::set_longitude(double value) {
  
  longitude_ = value;
  // @@protoc_insertion_point(field_set:CMDCatchRedPacketReq.longitude)
}

// optional double latitude = 5;
inline void CMDCatchRedPacketReq::clear_latitude() {
  latitude_ = 0;
}
inline double CMDCatchRedPacketReq::latitude() const {
  // @@protoc_insertion_point(field_get:CMDCatchRedPacketReq.latitude)
  return latitude_;
}
inline void CMDCatchRedPacketReq::set_latitude(double value) {
  
  latitude_ = value;
  // @@protoc_insertion_point(field_set:CMDCatchRedPacketReq.latitude)
}

// -------------------------------------------------------------------

// CMDCatchRedPacketResp

// optional .CMDErrCode errInfo = 1;
inline bool CMDCatchRedPacketResp::has_errinfo() const {
  return !_is_default_instance_ && errinfo_ != NULL;
}
inline void CMDCatchRedPacketResp::clear_errinfo() {
  if (GetArenaNoVirtual() == NULL && errinfo_ != NULL) delete errinfo_;
  errinfo_ = NULL;
}
inline const ::CMDErrCode& CMDCatchRedPacketResp::errinfo() const {
  // @@protoc_insertion_point(field_get:CMDCatchRedPacketResp.errInfo)
  return errinfo_ != NULL ? *errinfo_ : *default_instance_->errinfo_;
}
inline ::CMDErrCode* CMDCatchRedPacketResp::mutable_errinfo() {
  
  if (errinfo_ == NULL) {
    errinfo_ = new ::CMDErrCode;
  }
  // @@protoc_insertion_point(field_mutable:CMDCatchRedPacketResp.errInfo)
  return errinfo_;
}
inline ::CMDErrCode* CMDCatchRedPacketResp::release_errinfo() {
  // @@protoc_insertion_point(field_release:CMDCatchRedPacketResp.errInfo)
  
  ::CMDErrCode* temp = errinfo_;
  errinfo_ = NULL;
  return temp;
}
inline void CMDCatchRedPacketResp::set_allocated_errinfo(::CMDErrCode* errinfo) {
  delete errinfo_;
  errinfo_ = errinfo;
  if (errinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDCatchRedPacketResp.errInfo)
}

// optional uint32 userID = 2;
inline void CMDCatchRedPacketResp::clear_userid() {
  userid_ = 0u;
}
inline ::google::protobuf::uint32 CMDCatchRedPacketResp::userid() const {
  // @@protoc_insertion_point(field_get:CMDCatchRedPacketResp.userID)
  return userid_;
}
inline void CMDCatchRedPacketResp::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDCatchRedPacketResp.userID)
}

// optional uint32 groupID = 3;
inline void CMDCatchRedPacketResp::clear_groupid() {
  groupid_ = 0u;
}
inline ::google::protobuf::uint32 CMDCatchRedPacketResp::groupid() const {
  // @@protoc_insertion_point(field_get:CMDCatchRedPacketResp.groupID)
  return groupid_;
}
inline void CMDCatchRedPacketResp::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDCatchRedPacketResp.groupID)
}

// optional uint32 packetID = 4;
inline void CMDCatchRedPacketResp::clear_packetid() {
  packetid_ = 0u;
}
inline ::google::protobuf::uint32 CMDCatchRedPacketResp::packetid() const {
  // @@protoc_insertion_point(field_get:CMDCatchRedPacketResp.packetID)
  return packetid_;
}
inline void CMDCatchRedPacketResp::set_packetid(::google::protobuf::uint32 value) {
  
  packetid_ = value;
  // @@protoc_insertion_point(field_set:CMDCatchRedPacketResp.packetID)
}

// optional .UserInfo_t srcUser = 5;
inline bool CMDCatchRedPacketResp::has_srcuser() const {
  return !_is_default_instance_ && srcuser_ != NULL;
}
inline void CMDCatchRedPacketResp::clear_srcuser() {
  if (GetArenaNoVirtual() == NULL && srcuser_ != NULL) delete srcuser_;
  srcuser_ = NULL;
}
inline const ::UserInfo_t& CMDCatchRedPacketResp::srcuser() const {
  // @@protoc_insertion_point(field_get:CMDCatchRedPacketResp.srcUser)
  return srcuser_ != NULL ? *srcuser_ : *default_instance_->srcuser_;
}
inline ::UserInfo_t* CMDCatchRedPacketResp::mutable_srcuser() {
  
  if (srcuser_ == NULL) {
    srcuser_ = new ::UserInfo_t;
  }
  // @@protoc_insertion_point(field_mutable:CMDCatchRedPacketResp.srcUser)
  return srcuser_;
}
inline ::UserInfo_t* CMDCatchRedPacketResp::release_srcuser() {
  // @@protoc_insertion_point(field_release:CMDCatchRedPacketResp.srcUser)
  
  ::UserInfo_t* temp = srcuser_;
  srcuser_ = NULL;
  return temp;
}
inline void CMDCatchRedPacketResp::set_allocated_srcuser(::UserInfo_t* srcuser) {
  delete srcuser_;
  srcuser_ = srcuser;
  if (srcuser) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDCatchRedPacketResp.srcUser)
}

// optional .UserInfo_t dstUser = 6;
inline bool CMDCatchRedPacketResp::has_dstuser() const {
  return !_is_default_instance_ && dstuser_ != NULL;
}
inline void CMDCatchRedPacketResp::clear_dstuser() {
  if (GetArenaNoVirtual() == NULL && dstuser_ != NULL) delete dstuser_;
  dstuser_ = NULL;
}
inline const ::UserInfo_t& CMDCatchRedPacketResp::dstuser() const {
  // @@protoc_insertion_point(field_get:CMDCatchRedPacketResp.dstUser)
  return dstuser_ != NULL ? *dstuser_ : *default_instance_->dstuser_;
}
inline ::UserInfo_t* CMDCatchRedPacketResp::mutable_dstuser() {
  
  if (dstuser_ == NULL) {
    dstuser_ = new ::UserInfo_t;
  }
  // @@protoc_insertion_point(field_mutable:CMDCatchRedPacketResp.dstUser)
  return dstuser_;
}
inline ::UserInfo_t* CMDCatchRedPacketResp::release_dstuser() {
  // @@protoc_insertion_point(field_release:CMDCatchRedPacketResp.dstUser)
  
  ::UserInfo_t* temp = dstuser_;
  dstuser_ = NULL;
  return temp;
}
inline void CMDCatchRedPacketResp::set_allocated_dstuser(::UserInfo_t* dstuser) {
  delete dstuser_;
  dstuser_ = dstuser;
  if (dstuser) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDCatchRedPacketResp.dstUser)
}

// optional .ePacketType packetType = 7;
inline void CMDCatchRedPacketResp::clear_packettype() {
  packettype_ = 0;
}
inline ::ePacketType CMDCatchRedPacketResp::packettype() const {
  // @@protoc_insertion_point(field_get:CMDCatchRedPacketResp.packetType)
  return static_cast< ::ePacketType >(packettype_);
}
inline void CMDCatchRedPacketResp::set_packettype(::ePacketType value) {
  
  packettype_ = value;
  // @@protoc_insertion_point(field_set:CMDCatchRedPacketResp.packetType)
}

// optional .eRangeType rangeType = 8;
inline void CMDCatchRedPacketResp::clear_rangetype() {
  rangetype_ = 0;
}
inline ::eRangeType CMDCatchRedPacketResp::rangetype() const {
  // @@protoc_insertion_point(field_get:CMDCatchRedPacketResp.rangeType)
  return static_cast< ::eRangeType >(rangetype_);
}
inline void CMDCatchRedPacketResp::set_rangetype(::eRangeType value) {
  
  rangetype_ = value;
  // @@protoc_insertion_point(field_set:CMDCatchRedPacketResp.rangeType)
}

// optional uint32 packetNum = 9;
inline void CMDCatchRedPacketResp::clear_packetnum() {
  packetnum_ = 0u;
}
inline ::google::protobuf::uint32 CMDCatchRedPacketResp::packetnum() const {
  // @@protoc_insertion_point(field_get:CMDCatchRedPacketResp.packetNum)
  return packetnum_;
}
inline void CMDCatchRedPacketResp::set_packetnum(::google::protobuf::uint32 value) {
  
  packetnum_ = value;
  // @@protoc_insertion_point(field_set:CMDCatchRedPacketResp.packetNum)
}

// optional uint32 packetMoney = 10;
inline void CMDCatchRedPacketResp::clear_packetmoney() {
  packetmoney_ = 0u;
}
inline ::google::protobuf::uint32 CMDCatchRedPacketResp::packetmoney() const {
  // @@protoc_insertion_point(field_get:CMDCatchRedPacketResp.packetMoney)
  return packetmoney_;
}
inline void CMDCatchRedPacketResp::set_packetmoney(::google::protobuf::uint32 value) {
  
  packetmoney_ = value;
  // @@protoc_insertion_point(field_set:CMDCatchRedPacketResp.packetMoney)
}

// optional string message = 11;
inline void CMDCatchRedPacketResp::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMDCatchRedPacketResp::message() const {
  // @@protoc_insertion_point(field_get:CMDCatchRedPacketResp.message)
  return message_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDCatchRedPacketResp::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDCatchRedPacketResp.message)
}
inline void CMDCatchRedPacketResp::set_message(const char* value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDCatchRedPacketResp.message)
}
inline void CMDCatchRedPacketResp::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDCatchRedPacketResp.message)
}
inline ::std::string* CMDCatchRedPacketResp::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:CMDCatchRedPacketResp.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMDCatchRedPacketResp::release_message() {
  // @@protoc_insertion_point(field_release:CMDCatchRedPacketResp.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDCatchRedPacketResp::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:CMDCatchRedPacketResp.message)
}

// optional bool privateType = 12;
inline void CMDCatchRedPacketResp::clear_privatetype() {
  privatetype_ = false;
}
inline bool CMDCatchRedPacketResp::privatetype() const {
  // @@protoc_insertion_point(field_get:CMDCatchRedPacketResp.privateType)
  return privatetype_;
}
inline void CMDCatchRedPacketResp::set_privatetype(bool value) {
  
  privatetype_ = value;
  // @@protoc_insertion_point(field_set:CMDCatchRedPacketResp.privateType)
}

// optional uint32 fixTime = 13;
inline void CMDCatchRedPacketResp::clear_fixtime() {
  fixtime_ = 0u;
}
inline ::google::protobuf::uint32 CMDCatchRedPacketResp::fixtime() const {
  // @@protoc_insertion_point(field_get:CMDCatchRedPacketResp.fixTime)
  return fixtime_;
}
inline void CMDCatchRedPacketResp::set_fixtime(::google::protobuf::uint32 value) {
  
  fixtime_ = value;
  // @@protoc_insertion_point(field_set:CMDCatchRedPacketResp.fixTime)
}

// optional uint32 diffTime = 14;
inline void CMDCatchRedPacketResp::clear_difftime() {
  difftime_ = 0u;
}
inline ::google::protobuf::uint32 CMDCatchRedPacketResp::difftime() const {
  // @@protoc_insertion_point(field_get:CMDCatchRedPacketResp.diffTime)
  return difftime_;
}
inline void CMDCatchRedPacketResp::set_difftime(::google::protobuf::uint32 value) {
  
  difftime_ = value;
  // @@protoc_insertion_point(field_set:CMDCatchRedPacketResp.diffTime)
}

// -------------------------------------------------------------------

// CMDTakeRedPacketReq

// optional uint32 userID = 1;
inline void CMDTakeRedPacketReq::clear_userid() {
  userid_ = 0u;
}
inline ::google::protobuf::uint32 CMDTakeRedPacketReq::userid() const {
  // @@protoc_insertion_point(field_get:CMDTakeRedPacketReq.userID)
  return userid_;
}
inline void CMDTakeRedPacketReq::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDTakeRedPacketReq.userID)
}

// optional uint32 groupID = 2;
inline void CMDTakeRedPacketReq::clear_groupid() {
  groupid_ = 0u;
}
inline ::google::protobuf::uint32 CMDTakeRedPacketReq::groupid() const {
  // @@protoc_insertion_point(field_get:CMDTakeRedPacketReq.groupID)
  return groupid_;
}
inline void CMDTakeRedPacketReq::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDTakeRedPacketReq.groupID)
}

// optional uint32 packetID = 3;
inline void CMDTakeRedPacketReq::clear_packetid() {
  packetid_ = 0u;
}
inline ::google::protobuf::uint32 CMDTakeRedPacketReq::packetid() const {
  // @@protoc_insertion_point(field_get:CMDTakeRedPacketReq.packetID)
  return packetid_;
}
inline void CMDTakeRedPacketReq::set_packetid(::google::protobuf::uint32 value) {
  
  packetid_ = value;
  // @@protoc_insertion_point(field_set:CMDTakeRedPacketReq.packetID)
}

// optional string photoPath = 4;
inline void CMDTakeRedPacketReq::clear_photopath() {
  photopath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMDTakeRedPacketReq::photopath() const {
  // @@protoc_insertion_point(field_get:CMDTakeRedPacketReq.photoPath)
  return photopath_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDTakeRedPacketReq::set_photopath(const ::std::string& value) {
  
  photopath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDTakeRedPacketReq.photoPath)
}
inline void CMDTakeRedPacketReq::set_photopath(const char* value) {
  
  photopath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDTakeRedPacketReq.photoPath)
}
inline void CMDTakeRedPacketReq::set_photopath(const char* value, size_t size) {
  
  photopath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDTakeRedPacketReq.photoPath)
}
inline ::std::string* CMDTakeRedPacketReq::mutable_photopath() {
  
  // @@protoc_insertion_point(field_mutable:CMDTakeRedPacketReq.photoPath)
  return photopath_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMDTakeRedPacketReq::release_photopath() {
  // @@protoc_insertion_point(field_release:CMDTakeRedPacketReq.photoPath)
  
  return photopath_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDTakeRedPacketReq::set_allocated_photopath(::std::string* photopath) {
  if (photopath != NULL) {
    
  } else {
    
  }
  photopath_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), photopath);
  // @@protoc_insertion_point(field_set_allocated:CMDTakeRedPacketReq.photoPath)
}

// optional double longitude = 5;
inline void CMDTakeRedPacketReq::clear_longitude() {
  longitude_ = 0;
}
inline double CMDTakeRedPacketReq::longitude() const {
  // @@protoc_insertion_point(field_get:CMDTakeRedPacketReq.longitude)
  return longitude_;
}
inline void CMDTakeRedPacketReq::set_longitude(double value) {
  
  longitude_ = value;
  // @@protoc_insertion_point(field_set:CMDTakeRedPacketReq.longitude)
}

// optional double latitude = 6;
inline void CMDTakeRedPacketReq::clear_latitude() {
  latitude_ = 0;
}
inline double CMDTakeRedPacketReq::latitude() const {
  // @@protoc_insertion_point(field_get:CMDTakeRedPacketReq.latitude)
  return latitude_;
}
inline void CMDTakeRedPacketReq::set_latitude(double value) {
  
  latitude_ = value;
  // @@protoc_insertion_point(field_set:CMDTakeRedPacketReq.latitude)
}

// optional string message = 7;
inline void CMDTakeRedPacketReq::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMDTakeRedPacketReq::message() const {
  // @@protoc_insertion_point(field_get:CMDTakeRedPacketReq.message)
  return message_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDTakeRedPacketReq::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDTakeRedPacketReq.message)
}
inline void CMDTakeRedPacketReq::set_message(const char* value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDTakeRedPacketReq.message)
}
inline void CMDTakeRedPacketReq::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDTakeRedPacketReq.message)
}
inline ::std::string* CMDTakeRedPacketReq::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:CMDTakeRedPacketReq.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMDTakeRedPacketReq::release_message() {
  // @@protoc_insertion_point(field_release:CMDTakeRedPacketReq.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDTakeRedPacketReq::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:CMDTakeRedPacketReq.message)
}

// -------------------------------------------------------------------

// CMDTakeRedPacketResp

// optional .CMDErrCode errInfo = 1;
inline bool CMDTakeRedPacketResp::has_errinfo() const {
  return !_is_default_instance_ && errinfo_ != NULL;
}
inline void CMDTakeRedPacketResp::clear_errinfo() {
  if (GetArenaNoVirtual() == NULL && errinfo_ != NULL) delete errinfo_;
  errinfo_ = NULL;
}
inline const ::CMDErrCode& CMDTakeRedPacketResp::errinfo() const {
  // @@protoc_insertion_point(field_get:CMDTakeRedPacketResp.errInfo)
  return errinfo_ != NULL ? *errinfo_ : *default_instance_->errinfo_;
}
inline ::CMDErrCode* CMDTakeRedPacketResp::mutable_errinfo() {
  
  if (errinfo_ == NULL) {
    errinfo_ = new ::CMDErrCode;
  }
  // @@protoc_insertion_point(field_mutable:CMDTakeRedPacketResp.errInfo)
  return errinfo_;
}
inline ::CMDErrCode* CMDTakeRedPacketResp::release_errinfo() {
  // @@protoc_insertion_point(field_release:CMDTakeRedPacketResp.errInfo)
  
  ::CMDErrCode* temp = errinfo_;
  errinfo_ = NULL;
  return temp;
}
inline void CMDTakeRedPacketResp::set_allocated_errinfo(::CMDErrCode* errinfo) {
  delete errinfo_;
  errinfo_ = errinfo;
  if (errinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDTakeRedPacketResp.errInfo)
}

// optional uint32 userID = 2;
inline void CMDTakeRedPacketResp::clear_userid() {
  userid_ = 0u;
}
inline ::google::protobuf::uint32 CMDTakeRedPacketResp::userid() const {
  // @@protoc_insertion_point(field_get:CMDTakeRedPacketResp.userID)
  return userid_;
}
inline void CMDTakeRedPacketResp::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDTakeRedPacketResp.userID)
}

// optional uint32 packetID = 3;
inline void CMDTakeRedPacketResp::clear_packetid() {
  packetid_ = 0u;
}
inline ::google::protobuf::uint32 CMDTakeRedPacketResp::packetid() const {
  // @@protoc_insertion_point(field_get:CMDTakeRedPacketResp.packetID)
  return packetid_;
}
inline void CMDTakeRedPacketResp::set_packetid(::google::protobuf::uint32 value) {
  
  packetid_ = value;
  // @@protoc_insertion_point(field_set:CMDTakeRedPacketResp.packetID)
}

// optional uint32 money = 4;
inline void CMDTakeRedPacketResp::clear_money() {
  money_ = 0u;
}
inline ::google::protobuf::uint32 CMDTakeRedPacketResp::money() const {
  // @@protoc_insertion_point(field_get:CMDTakeRedPacketResp.money)
  return money_;
}
inline void CMDTakeRedPacketResp::set_money(::google::protobuf::uint32 value) {
  
  money_ = value;
  // @@protoc_insertion_point(field_set:CMDTakeRedPacketResp.money)
}

// optional bool privateType = 5;
inline void CMDTakeRedPacketResp::clear_privatetype() {
  privatetype_ = false;
}
inline bool CMDTakeRedPacketResp::privatetype() const {
  // @@protoc_insertion_point(field_get:CMDTakeRedPacketResp.privateType)
  return privatetype_;
}
inline void CMDTakeRedPacketResp::set_privatetype(bool value) {
  
  privatetype_ = value;
  // @@protoc_insertion_point(field_set:CMDTakeRedPacketResp.privateType)
}

// optional .ePacketType packetType = 8;
inline void CMDTakeRedPacketResp::clear_packettype() {
  packettype_ = 0;
}
inline ::ePacketType CMDTakeRedPacketResp::packettype() const {
  // @@protoc_insertion_point(field_get:CMDTakeRedPacketResp.packetType)
  return static_cast< ::ePacketType >(packettype_);
}
inline void CMDTakeRedPacketResp::set_packettype(::ePacketType value) {
  
  packettype_ = value;
  // @@protoc_insertion_point(field_set:CMDTakeRedPacketResp.packetType)
}

// optional .eRangeType rangeType = 9;
inline void CMDTakeRedPacketResp::clear_rangetype() {
  rangetype_ = 0;
}
inline ::eRangeType CMDTakeRedPacketResp::rangetype() const {
  // @@protoc_insertion_point(field_get:CMDTakeRedPacketResp.rangeType)
  return static_cast< ::eRangeType >(rangetype_);
}
inline void CMDTakeRedPacketResp::set_rangetype(::eRangeType value) {
  
  rangetype_ = value;
  // @@protoc_insertion_point(field_set:CMDTakeRedPacketResp.rangeType)
}

// optional uint32 packetNum = 10;
inline void CMDTakeRedPacketResp::clear_packetnum() {
  packetnum_ = 0u;
}
inline ::google::protobuf::uint32 CMDTakeRedPacketResp::packetnum() const {
  // @@protoc_insertion_point(field_get:CMDTakeRedPacketResp.packetNum)
  return packetnum_;
}
inline void CMDTakeRedPacketResp::set_packetnum(::google::protobuf::uint32 value) {
  
  packetnum_ = value;
  // @@protoc_insertion_point(field_set:CMDTakeRedPacketResp.packetNum)
}

// optional uint32 packetMoney = 11;
inline void CMDTakeRedPacketResp::clear_packetmoney() {
  packetmoney_ = 0u;
}
inline ::google::protobuf::uint32 CMDTakeRedPacketResp::packetmoney() const {
  // @@protoc_insertion_point(field_get:CMDTakeRedPacketResp.packetMoney)
  return packetmoney_;
}
inline void CMDTakeRedPacketResp::set_packetmoney(::google::protobuf::uint32 value) {
  
  packetmoney_ = value;
  // @@protoc_insertion_point(field_set:CMDTakeRedPacketResp.packetMoney)
}

// optional string message = 12;
inline void CMDTakeRedPacketResp::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMDTakeRedPacketResp::message() const {
  // @@protoc_insertion_point(field_get:CMDTakeRedPacketResp.message)
  return message_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDTakeRedPacketResp::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDTakeRedPacketResp.message)
}
inline void CMDTakeRedPacketResp::set_message(const char* value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDTakeRedPacketResp.message)
}
inline void CMDTakeRedPacketResp::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDTakeRedPacketResp.message)
}
inline ::std::string* CMDTakeRedPacketResp::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:CMDTakeRedPacketResp.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMDTakeRedPacketResp::release_message() {
  // @@protoc_insertion_point(field_release:CMDTakeRedPacketResp.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDTakeRedPacketResp::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:CMDTakeRedPacketResp.message)
}

// optional uint32 fixTime = 13;
inline void CMDTakeRedPacketResp::clear_fixtime() {
  fixtime_ = 0u;
}
inline ::google::protobuf::uint32 CMDTakeRedPacketResp::fixtime() const {
  // @@protoc_insertion_point(field_get:CMDTakeRedPacketResp.fixTime)
  return fixtime_;
}
inline void CMDTakeRedPacketResp::set_fixtime(::google::protobuf::uint32 value) {
  
  fixtime_ = value;
  // @@protoc_insertion_point(field_set:CMDTakeRedPacketResp.fixTime)
}

// optional uint32 diffTime = 14;
inline void CMDTakeRedPacketResp::clear_difftime() {
  difftime_ = 0u;
}
inline ::google::protobuf::uint32 CMDTakeRedPacketResp::difftime() const {
  // @@protoc_insertion_point(field_get:CMDTakeRedPacketResp.diffTime)
  return difftime_;
}
inline void CMDTakeRedPacketResp::set_difftime(::google::protobuf::uint32 value) {
  
  difftime_ = value;
  // @@protoc_insertion_point(field_set:CMDTakeRedPacketResp.diffTime)
}

// -------------------------------------------------------------------

// CMDQryRedPacketInfoReq

// optional uint32 userID = 1;
inline void CMDQryRedPacketInfoReq::clear_userid() {
  userid_ = 0u;
}
inline ::google::protobuf::uint32 CMDQryRedPacketInfoReq::userid() const {
  // @@protoc_insertion_point(field_get:CMDQryRedPacketInfoReq.userID)
  return userid_;
}
inline void CMDQryRedPacketInfoReq::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDQryRedPacketInfoReq.userID)
}

// optional uint32 groupID = 2;
inline void CMDQryRedPacketInfoReq::clear_groupid() {
  groupid_ = 0u;
}
inline ::google::protobuf::uint32 CMDQryRedPacketInfoReq::groupid() const {
  // @@protoc_insertion_point(field_get:CMDQryRedPacketInfoReq.groupID)
  return groupid_;
}
inline void CMDQryRedPacketInfoReq::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDQryRedPacketInfoReq.groupID)
}

// optional uint32 packetID = 3;
inline void CMDQryRedPacketInfoReq::clear_packetid() {
  packetid_ = 0u;
}
inline ::google::protobuf::uint32 CMDQryRedPacketInfoReq::packetid() const {
  // @@protoc_insertion_point(field_get:CMDQryRedPacketInfoReq.packetID)
  return packetid_;
}
inline void CMDQryRedPacketInfoReq::set_packetid(::google::protobuf::uint32 value) {
  
  packetid_ = value;
  // @@protoc_insertion_point(field_set:CMDQryRedPacketInfoReq.packetID)
}

// optional uint32 offset = 4;
inline void CMDQryRedPacketInfoReq::clear_offset() {
  offset_ = 0u;
}
inline ::google::protobuf::uint32 CMDQryRedPacketInfoReq::offset() const {
  // @@protoc_insertion_point(field_get:CMDQryRedPacketInfoReq.offset)
  return offset_;
}
inline void CMDQryRedPacketInfoReq::set_offset(::google::protobuf::uint32 value) {
  
  offset_ = value;
  // @@protoc_insertion_point(field_set:CMDQryRedPacketInfoReq.offset)
}

// optional uint32 count = 5;
inline void CMDQryRedPacketInfoReq::clear_count() {
  count_ = 0u;
}
inline ::google::protobuf::uint32 CMDQryRedPacketInfoReq::count() const {
  // @@protoc_insertion_point(field_get:CMDQryRedPacketInfoReq.count)
  return count_;
}
inline void CMDQryRedPacketInfoReq::set_count(::google::protobuf::uint32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:CMDQryRedPacketInfoReq.count)
}

// -------------------------------------------------------------------

// CMDRedPacketTakenRes

// optional uint32 userID = 1;
inline void CMDRedPacketTakenRes::clear_userid() {
  userid_ = 0u;
}
inline ::google::protobuf::uint32 CMDRedPacketTakenRes::userid() const {
  // @@protoc_insertion_point(field_get:CMDRedPacketTakenRes.userID)
  return userid_;
}
inline void CMDRedPacketTakenRes::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDRedPacketTakenRes.userID)
}

// optional string alias = 2;
inline void CMDRedPacketTakenRes::clear_alias() {
  alias_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMDRedPacketTakenRes::alias() const {
  // @@protoc_insertion_point(field_get:CMDRedPacketTakenRes.alias)
  return alias_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDRedPacketTakenRes::set_alias(const ::std::string& value) {
  
  alias_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDRedPacketTakenRes.alias)
}
inline void CMDRedPacketTakenRes::set_alias(const char* value) {
  
  alias_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDRedPacketTakenRes.alias)
}
inline void CMDRedPacketTakenRes::set_alias(const char* value, size_t size) {
  
  alias_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDRedPacketTakenRes.alias)
}
inline ::std::string* CMDRedPacketTakenRes::mutable_alias() {
  
  // @@protoc_insertion_point(field_mutable:CMDRedPacketTakenRes.alias)
  return alias_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMDRedPacketTakenRes::release_alias() {
  // @@protoc_insertion_point(field_release:CMDRedPacketTakenRes.alias)
  
  return alias_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDRedPacketTakenRes::set_allocated_alias(::std::string* alias) {
  if (alias != NULL) {
    
  } else {
    
  }
  alias_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alias);
  // @@protoc_insertion_point(field_set_allocated:CMDRedPacketTakenRes.alias)
}

// optional string head = 3;
inline void CMDRedPacketTakenRes::clear_head() {
  head_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMDRedPacketTakenRes::head() const {
  // @@protoc_insertion_point(field_get:CMDRedPacketTakenRes.head)
  return head_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDRedPacketTakenRes::set_head(const ::std::string& value) {
  
  head_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDRedPacketTakenRes.head)
}
inline void CMDRedPacketTakenRes::set_head(const char* value) {
  
  head_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDRedPacketTakenRes.head)
}
inline void CMDRedPacketTakenRes::set_head(const char* value, size_t size) {
  
  head_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDRedPacketTakenRes.head)
}
inline ::std::string* CMDRedPacketTakenRes::mutable_head() {
  
  // @@protoc_insertion_point(field_mutable:CMDRedPacketTakenRes.head)
  return head_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMDRedPacketTakenRes::release_head() {
  // @@protoc_insertion_point(field_release:CMDRedPacketTakenRes.head)
  
  return head_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDRedPacketTakenRes::set_allocated_head(::std::string* head) {
  if (head != NULL) {
    
  } else {
    
  }
  head_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), head);
  // @@protoc_insertion_point(field_set_allocated:CMDRedPacketTakenRes.head)
}

// optional uint32 money = 4;
inline void CMDRedPacketTakenRes::clear_money() {
  money_ = 0u;
}
inline ::google::protobuf::uint32 CMDRedPacketTakenRes::money() const {
  // @@protoc_insertion_point(field_get:CMDRedPacketTakenRes.money)
  return money_;
}
inline void CMDRedPacketTakenRes::set_money(::google::protobuf::uint32 value) {
  
  money_ = value;
  // @@protoc_insertion_point(field_set:CMDRedPacketTakenRes.money)
}

// optional uint32 takeTime = 5;
inline void CMDRedPacketTakenRes::clear_taketime() {
  taketime_ = 0u;
}
inline ::google::protobuf::uint32 CMDRedPacketTakenRes::taketime() const {
  // @@protoc_insertion_point(field_get:CMDRedPacketTakenRes.takeTime)
  return taketime_;
}
inline void CMDRedPacketTakenRes::set_taketime(::google::protobuf::uint32 value) {
  
  taketime_ = value;
  // @@protoc_insertion_point(field_set:CMDRedPacketTakenRes.takeTime)
}

// -------------------------------------------------------------------

// CMDRedPacketInfo

// optional uint32 packetID = 1;
inline void CMDRedPacketInfo::clear_packetid() {
  packetid_ = 0u;
}
inline ::google::protobuf::uint32 CMDRedPacketInfo::packetid() const {
  // @@protoc_insertion_point(field_get:CMDRedPacketInfo.packetID)
  return packetid_;
}
inline void CMDRedPacketInfo::set_packetid(::google::protobuf::uint32 value) {
  
  packetid_ = value;
  // @@protoc_insertion_point(field_set:CMDRedPacketInfo.packetID)
}

// optional .ePacketType packetType = 2;
inline void CMDRedPacketInfo::clear_packettype() {
  packettype_ = 0;
}
inline ::ePacketType CMDRedPacketInfo::packettype() const {
  // @@protoc_insertion_point(field_get:CMDRedPacketInfo.packetType)
  return static_cast< ::ePacketType >(packettype_);
}
inline void CMDRedPacketInfo::set_packettype(::ePacketType value) {
  
  packettype_ = value;
  // @@protoc_insertion_point(field_set:CMDRedPacketInfo.packetType)
}

// optional .eRangeType rangeType = 3;
inline void CMDRedPacketInfo::clear_rangetype() {
  rangetype_ = 0;
}
inline ::eRangeType CMDRedPacketInfo::rangetype() const {
  // @@protoc_insertion_point(field_get:CMDRedPacketInfo.rangeType)
  return static_cast< ::eRangeType >(rangetype_);
}
inline void CMDRedPacketInfo::set_rangetype(::eRangeType value) {
  
  rangetype_ = value;
  // @@protoc_insertion_point(field_set:CMDRedPacketInfo.rangeType)
}

// optional .UserInfo_t srcUser = 4;
inline bool CMDRedPacketInfo::has_srcuser() const {
  return !_is_default_instance_ && srcuser_ != NULL;
}
inline void CMDRedPacketInfo::clear_srcuser() {
  if (GetArenaNoVirtual() == NULL && srcuser_ != NULL) delete srcuser_;
  srcuser_ = NULL;
}
inline const ::UserInfo_t& CMDRedPacketInfo::srcuser() const {
  // @@protoc_insertion_point(field_get:CMDRedPacketInfo.srcUser)
  return srcuser_ != NULL ? *srcuser_ : *default_instance_->srcuser_;
}
inline ::UserInfo_t* CMDRedPacketInfo::mutable_srcuser() {
  
  if (srcuser_ == NULL) {
    srcuser_ = new ::UserInfo_t;
  }
  // @@protoc_insertion_point(field_mutable:CMDRedPacketInfo.srcUser)
  return srcuser_;
}
inline ::UserInfo_t* CMDRedPacketInfo::release_srcuser() {
  // @@protoc_insertion_point(field_release:CMDRedPacketInfo.srcUser)
  
  ::UserInfo_t* temp = srcuser_;
  srcuser_ = NULL;
  return temp;
}
inline void CMDRedPacketInfo::set_allocated_srcuser(::UserInfo_t* srcuser) {
  delete srcuser_;
  srcuser_ = srcuser;
  if (srcuser) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDRedPacketInfo.srcUser)
}

// optional .UserInfo_t dstUser = 5;
inline bool CMDRedPacketInfo::has_dstuser() const {
  return !_is_default_instance_ && dstuser_ != NULL;
}
inline void CMDRedPacketInfo::clear_dstuser() {
  if (GetArenaNoVirtual() == NULL && dstuser_ != NULL) delete dstuser_;
  dstuser_ = NULL;
}
inline const ::UserInfo_t& CMDRedPacketInfo::dstuser() const {
  // @@protoc_insertion_point(field_get:CMDRedPacketInfo.dstUser)
  return dstuser_ != NULL ? *dstuser_ : *default_instance_->dstuser_;
}
inline ::UserInfo_t* CMDRedPacketInfo::mutable_dstuser() {
  
  if (dstuser_ == NULL) {
    dstuser_ = new ::UserInfo_t;
  }
  // @@protoc_insertion_point(field_mutable:CMDRedPacketInfo.dstUser)
  return dstuser_;
}
inline ::UserInfo_t* CMDRedPacketInfo::release_dstuser() {
  // @@protoc_insertion_point(field_release:CMDRedPacketInfo.dstUser)
  
  ::UserInfo_t* temp = dstuser_;
  dstuser_ = NULL;
  return temp;
}
inline void CMDRedPacketInfo::set_allocated_dstuser(::UserInfo_t* dstuser) {
  delete dstuser_;
  dstuser_ = dstuser;
  if (dstuser) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDRedPacketInfo.dstUser)
}

// optional uint32 packetNum = 6;
inline void CMDRedPacketInfo::clear_packetnum() {
  packetnum_ = 0u;
}
inline ::google::protobuf::uint32 CMDRedPacketInfo::packetnum() const {
  // @@protoc_insertion_point(field_get:CMDRedPacketInfo.packetNum)
  return packetnum_;
}
inline void CMDRedPacketInfo::set_packetnum(::google::protobuf::uint32 value) {
  
  packetnum_ = value;
  // @@protoc_insertion_point(field_set:CMDRedPacketInfo.packetNum)
}

// optional uint32 takenNum = 7;
inline void CMDRedPacketInfo::clear_takennum() {
  takennum_ = 0u;
}
inline ::google::protobuf::uint32 CMDRedPacketInfo::takennum() const {
  // @@protoc_insertion_point(field_get:CMDRedPacketInfo.takenNum)
  return takennum_;
}
inline void CMDRedPacketInfo::set_takennum(::google::protobuf::uint32 value) {
  
  takennum_ = value;
  // @@protoc_insertion_point(field_set:CMDRedPacketInfo.takenNum)
}

// optional uint32 packetMoney = 8;
inline void CMDRedPacketInfo::clear_packetmoney() {
  packetmoney_ = 0u;
}
inline ::google::protobuf::uint32 CMDRedPacketInfo::packetmoney() const {
  // @@protoc_insertion_point(field_get:CMDRedPacketInfo.packetMoney)
  return packetmoney_;
}
inline void CMDRedPacketInfo::set_packetmoney(::google::protobuf::uint32 value) {
  
  packetmoney_ = value;
  // @@protoc_insertion_point(field_set:CMDRedPacketInfo.packetMoney)
}

// optional uint32 takenMoney = 9;
inline void CMDRedPacketInfo::clear_takenmoney() {
  takenmoney_ = 0u;
}
inline ::google::protobuf::uint32 CMDRedPacketInfo::takenmoney() const {
  // @@protoc_insertion_point(field_get:CMDRedPacketInfo.takenMoney)
  return takenmoney_;
}
inline void CMDRedPacketInfo::set_takenmoney(::google::protobuf::uint32 value) {
  
  takenmoney_ = value;
  // @@protoc_insertion_point(field_set:CMDRedPacketInfo.takenMoney)
}

// optional uint32 myTakeMoney = 10;
inline void CMDRedPacketInfo::clear_mytakemoney() {
  mytakemoney_ = 0u;
}
inline ::google::protobuf::uint32 CMDRedPacketInfo::mytakemoney() const {
  // @@protoc_insertion_point(field_get:CMDRedPacketInfo.myTakeMoney)
  return mytakemoney_;
}
inline void CMDRedPacketInfo::set_mytakemoney(::google::protobuf::uint32 value) {
  
  mytakemoney_ = value;
  // @@protoc_insertion_point(field_set:CMDRedPacketInfo.myTakeMoney)
}

// optional string message = 11;
inline void CMDRedPacketInfo::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMDRedPacketInfo::message() const {
  // @@protoc_insertion_point(field_get:CMDRedPacketInfo.message)
  return message_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDRedPacketInfo::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDRedPacketInfo.message)
}
inline void CMDRedPacketInfo::set_message(const char* value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDRedPacketInfo.message)
}
inline void CMDRedPacketInfo::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDRedPacketInfo.message)
}
inline ::std::string* CMDRedPacketInfo::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:CMDRedPacketInfo.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMDRedPacketInfo::release_message() {
  // @@protoc_insertion_point(field_release:CMDRedPacketInfo.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDRedPacketInfo::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:CMDRedPacketInfo.message)
}

// optional uint32 createTime = 12;
inline void CMDRedPacketInfo::clear_createtime() {
  createtime_ = 0u;
}
inline ::google::protobuf::uint32 CMDRedPacketInfo::createtime() const {
  // @@protoc_insertion_point(field_get:CMDRedPacketInfo.createTime)
  return createtime_;
}
inline void CMDRedPacketInfo::set_createtime(::google::protobuf::uint32 value) {
  
  createtime_ = value;
  // @@protoc_insertion_point(field_set:CMDRedPacketInfo.createTime)
}

// optional uint32 offset = 13;
inline void CMDRedPacketInfo::clear_offset() {
  offset_ = 0u;
}
inline ::google::protobuf::uint32 CMDRedPacketInfo::offset() const {
  // @@protoc_insertion_point(field_get:CMDRedPacketInfo.offset)
  return offset_;
}
inline void CMDRedPacketInfo::set_offset(::google::protobuf::uint32 value) {
  
  offset_ = value;
  // @@protoc_insertion_point(field_set:CMDRedPacketInfo.offset)
}

// repeated .CMDRedPacketTakenRes res = 14;
inline int CMDRedPacketInfo::res_size() const {
  return res_.size();
}
inline void CMDRedPacketInfo::clear_res() {
  res_.Clear();
}
inline const ::CMDRedPacketTakenRes& CMDRedPacketInfo::res(int index) const {
  // @@protoc_insertion_point(field_get:CMDRedPacketInfo.res)
  return res_.Get(index);
}
inline ::CMDRedPacketTakenRes* CMDRedPacketInfo::mutable_res(int index) {
  // @@protoc_insertion_point(field_mutable:CMDRedPacketInfo.res)
  return res_.Mutable(index);
}
inline ::CMDRedPacketTakenRes* CMDRedPacketInfo::add_res() {
  // @@protoc_insertion_point(field_add:CMDRedPacketInfo.res)
  return res_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMDRedPacketTakenRes >*
CMDRedPacketInfo::mutable_res() {
  // @@protoc_insertion_point(field_mutable_list:CMDRedPacketInfo.res)
  return &res_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMDRedPacketTakenRes >&
CMDRedPacketInfo::res() const {
  // @@protoc_insertion_point(field_list:CMDRedPacketInfo.res)
  return res_;
}

// optional uint32 finishCostTime = 15;
inline void CMDRedPacketInfo::clear_finishcosttime() {
  finishcosttime_ = 0u;
}
inline ::google::protobuf::uint32 CMDRedPacketInfo::finishcosttime() const {
  // @@protoc_insertion_point(field_get:CMDRedPacketInfo.finishCostTime)
  return finishcosttime_;
}
inline void CMDRedPacketInfo::set_finishcosttime(::google::protobuf::uint32 value) {
  
  finishcosttime_ = value;
  // @@protoc_insertion_point(field_set:CMDRedPacketInfo.finishCostTime)
}

// optional uint32 topUserID = 16;
inline void CMDRedPacketInfo::clear_topuserid() {
  topuserid_ = 0u;
}
inline ::google::protobuf::uint32 CMDRedPacketInfo::topuserid() const {
  // @@protoc_insertion_point(field_get:CMDRedPacketInfo.topUserID)
  return topuserid_;
}
inline void CMDRedPacketInfo::set_topuserid(::google::protobuf::uint32 value) {
  
  topuserid_ = value;
  // @@protoc_insertion_point(field_set:CMDRedPacketInfo.topUserID)
}

// -------------------------------------------------------------------

// CMDWeekListRes

// optional uint32 userID = 1;
inline void CMDWeekListRes::clear_userid() {
  userid_ = 0u;
}
inline ::google::protobuf::uint32 CMDWeekListRes::userid() const {
  // @@protoc_insertion_point(field_get:CMDWeekListRes.userID)
  return userid_;
}
inline void CMDWeekListRes::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDWeekListRes.userID)
}

// optional string alias = 2;
inline void CMDWeekListRes::clear_alias() {
  alias_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMDWeekListRes::alias() const {
  // @@protoc_insertion_point(field_get:CMDWeekListRes.alias)
  return alias_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDWeekListRes::set_alias(const ::std::string& value) {
  
  alias_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDWeekListRes.alias)
}
inline void CMDWeekListRes::set_alias(const char* value) {
  
  alias_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDWeekListRes.alias)
}
inline void CMDWeekListRes::set_alias(const char* value, size_t size) {
  
  alias_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDWeekListRes.alias)
}
inline ::std::string* CMDWeekListRes::mutable_alias() {
  
  // @@protoc_insertion_point(field_mutable:CMDWeekListRes.alias)
  return alias_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMDWeekListRes::release_alias() {
  // @@protoc_insertion_point(field_release:CMDWeekListRes.alias)
  
  return alias_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDWeekListRes::set_allocated_alias(::std::string* alias) {
  if (alias != NULL) {
    
  } else {
    
  }
  alias_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alias);
  // @@protoc_insertion_point(field_set_allocated:CMDWeekListRes.alias)
}

// optional string head = 3;
inline void CMDWeekListRes::clear_head() {
  head_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMDWeekListRes::head() const {
  // @@protoc_insertion_point(field_get:CMDWeekListRes.head)
  return head_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDWeekListRes::set_head(const ::std::string& value) {
  
  head_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDWeekListRes.head)
}
inline void CMDWeekListRes::set_head(const char* value) {
  
  head_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDWeekListRes.head)
}
inline void CMDWeekListRes::set_head(const char* value, size_t size) {
  
  head_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDWeekListRes.head)
}
inline ::std::string* CMDWeekListRes::mutable_head() {
  
  // @@protoc_insertion_point(field_mutable:CMDWeekListRes.head)
  return head_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMDWeekListRes::release_head() {
  // @@protoc_insertion_point(field_release:CMDWeekListRes.head)
  
  return head_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDWeekListRes::set_allocated_head(::std::string* head) {
  if (head != NULL) {
    
  } else {
    
  }
  head_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), head);
  // @@protoc_insertion_point(field_set_allocated:CMDWeekListRes.head)
}

// optional uint32 contributeValue = 4;
inline void CMDWeekListRes::clear_contributevalue() {
  contributevalue_ = 0u;
}
inline ::google::protobuf::uint32 CMDWeekListRes::contributevalue() const {
  // @@protoc_insertion_point(field_get:CMDWeekListRes.contributeValue)
  return contributevalue_;
}
inline void CMDWeekListRes::set_contributevalue(::google::protobuf::uint32 value) {
  
  contributevalue_ = value;
  // @@protoc_insertion_point(field_set:CMDWeekListRes.contributeValue)
}

// -------------------------------------------------------------------

// CMDWeekListNotify

// optional uint32 groupID = 1;
inline void CMDWeekListNotify::clear_groupid() {
  groupid_ = 0u;
}
inline ::google::protobuf::uint32 CMDWeekListNotify::groupid() const {
  // @@protoc_insertion_point(field_get:CMDWeekListNotify.groupID)
  return groupid_;
}
inline void CMDWeekListNotify::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDWeekListNotify.groupID)
}

// repeated .CMDWeekListRes res = 2;
inline int CMDWeekListNotify::res_size() const {
  return res_.size();
}
inline void CMDWeekListNotify::clear_res() {
  res_.Clear();
}
inline const ::CMDWeekListRes& CMDWeekListNotify::res(int index) const {
  // @@protoc_insertion_point(field_get:CMDWeekListNotify.res)
  return res_.Get(index);
}
inline ::CMDWeekListRes* CMDWeekListNotify::mutable_res(int index) {
  // @@protoc_insertion_point(field_mutable:CMDWeekListNotify.res)
  return res_.Mutable(index);
}
inline ::CMDWeekListRes* CMDWeekListNotify::add_res() {
  // @@protoc_insertion_point(field_add:CMDWeekListNotify.res)
  return res_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMDWeekListRes >*
CMDWeekListNotify::mutable_res() {
  // @@protoc_insertion_point(field_mutable_list:CMDWeekListNotify.res)
  return &res_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMDWeekListRes >&
CMDWeekListNotify::res() const {
  // @@protoc_insertion_point(field_list:CMDWeekListNotify.res)
  return res_;
}

// -------------------------------------------------------------------

// CMDQryWeekListReq

// optional uint32 groupID = 1;
inline void CMDQryWeekListReq::clear_groupid() {
  groupid_ = 0u;
}
inline ::google::protobuf::uint32 CMDQryWeekListReq::groupid() const {
  // @@protoc_insertion_point(field_get:CMDQryWeekListReq.groupID)
  return groupid_;
}
inline void CMDQryWeekListReq::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDQryWeekListReq.groupID)
}

// -------------------------------------------------------------------

// CMDQryRedPacketReq

// optional uint32 groupID = 1;
inline void CMDQryRedPacketReq::clear_groupid() {
  groupid_ = 0u;
}
inline ::google::protobuf::uint32 CMDQryRedPacketReq::groupid() const {
  // @@protoc_insertion_point(field_get:CMDQryRedPacketReq.groupID)
  return groupid_;
}
inline void CMDQryRedPacketReq::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDQryRedPacketReq.groupID)
}

// optional .ePacketType packetType = 2;
inline void CMDQryRedPacketReq::clear_packettype() {
  packettype_ = 0;
}
inline ::ePacketType CMDQryRedPacketReq::packettype() const {
  // @@protoc_insertion_point(field_get:CMDQryRedPacketReq.packetType)
  return static_cast< ::ePacketType >(packettype_);
}
inline void CMDQryRedPacketReq::set_packettype(::ePacketType value) {
  
  packettype_ = value;
  // @@protoc_insertion_point(field_set:CMDQryRedPacketReq.packetType)
}

// optional uint32 count = 3;
inline void CMDQryRedPacketReq::clear_count() {
  count_ = 0u;
}
inline ::google::protobuf::uint32 CMDQryRedPacketReq::count() const {
  // @@protoc_insertion_point(field_get:CMDQryRedPacketReq.count)
  return count_;
}
inline void CMDQryRedPacketReq::set_count(::google::protobuf::uint32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:CMDQryRedPacketReq.count)
}

// optional uint32 offset = 4;
inline void CMDQryRedPacketReq::clear_offset() {
  offset_ = 0u;
}
inline ::google::protobuf::uint32 CMDQryRedPacketReq::offset() const {
  // @@protoc_insertion_point(field_get:CMDQryRedPacketReq.offset)
  return offset_;
}
inline void CMDQryRedPacketReq::set_offset(::google::protobuf::uint32 value) {
  
  offset_ = value;
  // @@protoc_insertion_point(field_set:CMDQryRedPacketReq.offset)
}

// optional .ePacketFixType fixType = 5;
inline void CMDQryRedPacketReq::clear_fixtype() {
  fixtype_ = 0;
}
inline ::ePacketFixType CMDQryRedPacketReq::fixtype() const {
  // @@protoc_insertion_point(field_get:CMDQryRedPacketReq.fixType)
  return static_cast< ::ePacketFixType >(fixtype_);
}
inline void CMDQryRedPacketReq::set_fixtype(::ePacketFixType value) {
  
  fixtype_ = value;
  // @@protoc_insertion_point(field_set:CMDQryRedPacketReq.fixType)
}

// optional uint32 userID = 6;
inline void CMDQryRedPacketReq::clear_userid() {
  userid_ = 0u;
}
inline ::google::protobuf::uint32 CMDQryRedPacketReq::userid() const {
  // @@protoc_insertion_point(field_get:CMDQryRedPacketReq.userID)
  return userid_;
}
inline void CMDQryRedPacketReq::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDQryRedPacketReq.userID)
}

// optional uint64 clienttimestamp = 7;
inline void CMDQryRedPacketReq::clear_clienttimestamp() {
  clienttimestamp_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CMDQryRedPacketReq::clienttimestamp() const {
  // @@protoc_insertion_point(field_get:CMDQryRedPacketReq.clienttimestamp)
  return clienttimestamp_;
}
inline void CMDQryRedPacketReq::set_clienttimestamp(::google::protobuf::uint64 value) {
  
  clienttimestamp_ = value;
  // @@protoc_insertion_point(field_set:CMDQryRedPacketReq.clienttimestamp)
}

// -------------------------------------------------------------------

// CMDRedPacket

// optional uint32 userID = 1;
inline void CMDRedPacket::clear_userid() {
  userid_ = 0u;
}
inline ::google::protobuf::uint32 CMDRedPacket::userid() const {
  // @@protoc_insertion_point(field_get:CMDRedPacket.userID)
  return userid_;
}
inline void CMDRedPacket::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDRedPacket.userID)
}

// optional uint32 packetID = 2;
inline void CMDRedPacket::clear_packetid() {
  packetid_ = 0u;
}
inline ::google::protobuf::uint32 CMDRedPacket::packetid() const {
  // @@protoc_insertion_point(field_get:CMDRedPacket.packetID)
  return packetid_;
}
inline void CMDRedPacket::set_packetid(::google::protobuf::uint32 value) {
  
  packetid_ = value;
  // @@protoc_insertion_point(field_set:CMDRedPacket.packetID)
}

// optional .ePacketType packetType = 3;
inline void CMDRedPacket::clear_packettype() {
  packettype_ = 0;
}
inline ::ePacketType CMDRedPacket::packettype() const {
  // @@protoc_insertion_point(field_get:CMDRedPacket.packetType)
  return static_cast< ::ePacketType >(packettype_);
}
inline void CMDRedPacket::set_packettype(::ePacketType value) {
  
  packettype_ = value;
  // @@protoc_insertion_point(field_set:CMDRedPacket.packetType)
}

// optional uint32 fixTime = 4;
inline void CMDRedPacket::clear_fixtime() {
  fixtime_ = 0u;
}
inline ::google::protobuf::uint32 CMDRedPacket::fixtime() const {
  // @@protoc_insertion_point(field_get:CMDRedPacket.fixTime)
  return fixtime_;
}
inline void CMDRedPacket::set_fixtime(::google::protobuf::uint32 value) {
  
  fixtime_ = value;
  // @@protoc_insertion_point(field_set:CMDRedPacket.fixTime)
}

// optional uint32 diffTime = 5;
inline void CMDRedPacket::clear_difftime() {
  difftime_ = 0u;
}
inline ::google::protobuf::uint32 CMDRedPacket::difftime() const {
  // @@protoc_insertion_point(field_get:CMDRedPacket.diffTime)
  return difftime_;
}
inline void CMDRedPacket::set_difftime(::google::protobuf::uint32 value) {
  
  difftime_ = value;
  // @@protoc_insertion_point(field_set:CMDRedPacket.diffTime)
}

// optional uint32 packetMoney = 6;
inline void CMDRedPacket::clear_packetmoney() {
  packetmoney_ = 0u;
}
inline ::google::protobuf::uint32 CMDRedPacket::packetmoney() const {
  // @@protoc_insertion_point(field_get:CMDRedPacket.packetMoney)
  return packetmoney_;
}
inline void CMDRedPacket::set_packetmoney(::google::protobuf::uint32 value) {
  
  packetmoney_ = value;
  // @@protoc_insertion_point(field_set:CMDRedPacket.packetMoney)
}

// optional .eRangeType rangeType = 7;
inline void CMDRedPacket::clear_rangetype() {
  rangetype_ = 0;
}
inline ::eRangeType CMDRedPacket::rangetype() const {
  // @@protoc_insertion_point(field_get:CMDRedPacket.rangeType)
  return static_cast< ::eRangeType >(rangetype_);
}
inline void CMDRedPacket::set_rangetype(::eRangeType value) {
  
  rangetype_ = value;
  // @@protoc_insertion_point(field_set:CMDRedPacket.rangeType)
}

// optional uint32 packetNum = 8;
inline void CMDRedPacket::clear_packetnum() {
  packetnum_ = 0u;
}
inline ::google::protobuf::uint32 CMDRedPacket::packetnum() const {
  // @@protoc_insertion_point(field_get:CMDRedPacket.packetNum)
  return packetnum_;
}
inline void CMDRedPacket::set_packetnum(::google::protobuf::uint32 value) {
  
  packetnum_ = value;
  // @@protoc_insertion_point(field_set:CMDRedPacket.packetNum)
}

// optional .eRangeGender rangeGender = 9;
inline void CMDRedPacket::clear_rangegender() {
  rangegender_ = 0;
}
inline ::eRangeGender CMDRedPacket::rangegender() const {
  // @@protoc_insertion_point(field_get:CMDRedPacket.rangeGender)
  return static_cast< ::eRangeGender >(rangegender_);
}
inline void CMDRedPacket::set_rangegender(::eRangeGender value) {
  
  rangegender_ = value;
  // @@protoc_insertion_point(field_set:CMDRedPacket.rangeGender)
}

// optional string message = 10;
inline void CMDRedPacket::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMDRedPacket::message() const {
  // @@protoc_insertion_point(field_get:CMDRedPacket.message)
  return message_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDRedPacket::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDRedPacket.message)
}
inline void CMDRedPacket::set_message(const char* value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDRedPacket.message)
}
inline void CMDRedPacket::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDRedPacket.message)
}
inline ::std::string* CMDRedPacket::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:CMDRedPacket.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMDRedPacket::release_message() {
  // @@protoc_insertion_point(field_release:CMDRedPacket.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDRedPacket::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:CMDRedPacket.message)
}

// optional .ePacketFixType fixType = 11;
inline void CMDRedPacket::clear_fixtype() {
  fixtype_ = 0;
}
inline ::ePacketFixType CMDRedPacket::fixtype() const {
  // @@protoc_insertion_point(field_get:CMDRedPacket.fixType)
  return static_cast< ::ePacketFixType >(fixtype_);
}
inline void CMDRedPacket::set_fixtype(::ePacketFixType value) {
  
  fixtype_ = value;
  // @@protoc_insertion_point(field_set:CMDRedPacket.fixType)
}

// optional double longitude = 12;
inline void CMDRedPacket::clear_longitude() {
  longitude_ = 0;
}
inline double CMDRedPacket::longitude() const {
  // @@protoc_insertion_point(field_get:CMDRedPacket.longitude)
  return longitude_;
}
inline void CMDRedPacket::set_longitude(double value) {
  
  longitude_ = value;
  // @@protoc_insertion_point(field_set:CMDRedPacket.longitude)
}

// optional double latitude = 13;
inline void CMDRedPacket::clear_latitude() {
  latitude_ = 0;
}
inline double CMDRedPacket::latitude() const {
  // @@protoc_insertion_point(field_get:CMDRedPacket.latitude)
  return latitude_;
}
inline void CMDRedPacket::set_latitude(double value) {
  
  latitude_ = value;
  // @@protoc_insertion_point(field_set:CMDRedPacket.latitude)
}

// -------------------------------------------------------------------

// CMDQryRedPacketRsp

// optional uint32 groupID = 1;
inline void CMDQryRedPacketRsp::clear_groupid() {
  groupid_ = 0u;
}
inline ::google::protobuf::uint32 CMDQryRedPacketRsp::groupid() const {
  // @@protoc_insertion_point(field_get:CMDQryRedPacketRsp.groupID)
  return groupid_;
}
inline void CMDQryRedPacketRsp::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDQryRedPacketRsp.groupID)
}

// optional uint32 offset = 2;
inline void CMDQryRedPacketRsp::clear_offset() {
  offset_ = 0u;
}
inline ::google::protobuf::uint32 CMDQryRedPacketRsp::offset() const {
  // @@protoc_insertion_point(field_get:CMDQryRedPacketRsp.offset)
  return offset_;
}
inline void CMDQryRedPacketRsp::set_offset(::google::protobuf::uint32 value) {
  
  offset_ = value;
  // @@protoc_insertion_point(field_set:CMDQryRedPacketRsp.offset)
}

// repeated .CMDRedPacket rsp = 3;
inline int CMDQryRedPacketRsp::rsp_size() const {
  return rsp_.size();
}
inline void CMDQryRedPacketRsp::clear_rsp() {
  rsp_.Clear();
}
inline const ::CMDRedPacket& CMDQryRedPacketRsp::rsp(int index) const {
  // @@protoc_insertion_point(field_get:CMDQryRedPacketRsp.rsp)
  return rsp_.Get(index);
}
inline ::CMDRedPacket* CMDQryRedPacketRsp::mutable_rsp(int index) {
  // @@protoc_insertion_point(field_mutable:CMDQryRedPacketRsp.rsp)
  return rsp_.Mutable(index);
}
inline ::CMDRedPacket* CMDQryRedPacketRsp::add_rsp() {
  // @@protoc_insertion_point(field_add:CMDQryRedPacketRsp.rsp)
  return rsp_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMDRedPacket >*
CMDQryRedPacketRsp::mutable_rsp() {
  // @@protoc_insertion_point(field_mutable_list:CMDQryRedPacketRsp.rsp)
  return &rsp_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMDRedPacket >&
CMDQryRedPacketRsp::rsp() const {
  // @@protoc_insertion_point(field_list:CMDQryRedPacketRsp.rsp)
  return rsp_;
}

// optional uint64 clienttimestamp = 4;
inline void CMDQryRedPacketRsp::clear_clienttimestamp() {
  clienttimestamp_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CMDQryRedPacketRsp::clienttimestamp() const {
  // @@protoc_insertion_point(field_get:CMDQryRedPacketRsp.clienttimestamp)
  return clienttimestamp_;
}
inline void CMDQryRedPacketRsp::set_clienttimestamp(::google::protobuf::uint64 value) {
  
  clienttimestamp_ = value;
  // @@protoc_insertion_point(field_set:CMDQryRedPacketRsp.clienttimestamp)
}

// -------------------------------------------------------------------

// CMDUesrTreasureBuyInfo

// optional .UserInfo_t buy_user = 1;
inline bool CMDUesrTreasureBuyInfo::has_buy_user() const {
  return !_is_default_instance_ && buy_user_ != NULL;
}
inline void CMDUesrTreasureBuyInfo::clear_buy_user() {
  if (GetArenaNoVirtual() == NULL && buy_user_ != NULL) delete buy_user_;
  buy_user_ = NULL;
}
inline const ::UserInfo_t& CMDUesrTreasureBuyInfo::buy_user() const {
  // @@protoc_insertion_point(field_get:CMDUesrTreasureBuyInfo.buy_user)
  return buy_user_ != NULL ? *buy_user_ : *default_instance_->buy_user_;
}
inline ::UserInfo_t* CMDUesrTreasureBuyInfo::mutable_buy_user() {
  
  if (buy_user_ == NULL) {
    buy_user_ = new ::UserInfo_t;
  }
  // @@protoc_insertion_point(field_mutable:CMDUesrTreasureBuyInfo.buy_user)
  return buy_user_;
}
inline ::UserInfo_t* CMDUesrTreasureBuyInfo::release_buy_user() {
  // @@protoc_insertion_point(field_release:CMDUesrTreasureBuyInfo.buy_user)
  
  ::UserInfo_t* temp = buy_user_;
  buy_user_ = NULL;
  return temp;
}
inline void CMDUesrTreasureBuyInfo::set_allocated_buy_user(::UserInfo_t* buy_user) {
  delete buy_user_;
  buy_user_ = buy_user;
  if (buy_user) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDUesrTreasureBuyInfo.buy_user)
}

// optional uint32 buy_num = 2;
inline void CMDUesrTreasureBuyInfo::clear_buy_num() {
  buy_num_ = 0u;
}
inline ::google::protobuf::uint32 CMDUesrTreasureBuyInfo::buy_num() const {
  // @@protoc_insertion_point(field_get:CMDUesrTreasureBuyInfo.buy_num)
  return buy_num_;
}
inline void CMDUesrTreasureBuyInfo::set_buy_num(::google::protobuf::uint32 value) {
  
  buy_num_ = value;
  // @@protoc_insertion_point(field_set:CMDUesrTreasureBuyInfo.buy_num)
}

// -------------------------------------------------------------------

// CMDTreasureInfo

// optional uint32 treasure_id = 1;
inline void CMDTreasureInfo::clear_treasure_id() {
  treasure_id_ = 0u;
}
inline ::google::protobuf::uint32 CMDTreasureInfo::treasure_id() const {
  // @@protoc_insertion_point(field_get:CMDTreasureInfo.treasure_id)
  return treasure_id_;
}
inline void CMDTreasureInfo::set_treasure_id(::google::protobuf::uint32 value) {
  
  treasure_id_ = value;
  // @@protoc_insertion_point(field_set:CMDTreasureInfo.treasure_id)
}

// optional uint32 groupid = 2;
inline void CMDTreasureInfo::clear_groupid() {
  groupid_ = 0u;
}
inline ::google::protobuf::uint32 CMDTreasureInfo::groupid() const {
  // @@protoc_insertion_point(field_get:CMDTreasureInfo.groupid)
  return groupid_;
}
inline void CMDTreasureInfo::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDTreasureInfo.groupid)
}

// optional .UserInfo_t user = 3;
inline bool CMDTreasureInfo::has_user() const {
  return !_is_default_instance_ && user_ != NULL;
}
inline void CMDTreasureInfo::clear_user() {
  if (GetArenaNoVirtual() == NULL && user_ != NULL) delete user_;
  user_ = NULL;
}
inline const ::UserInfo_t& CMDTreasureInfo::user() const {
  // @@protoc_insertion_point(field_get:CMDTreasureInfo.user)
  return user_ != NULL ? *user_ : *default_instance_->user_;
}
inline ::UserInfo_t* CMDTreasureInfo::mutable_user() {
  
  if (user_ == NULL) {
    user_ = new ::UserInfo_t;
  }
  // @@protoc_insertion_point(field_mutable:CMDTreasureInfo.user)
  return user_;
}
inline ::UserInfo_t* CMDTreasureInfo::release_user() {
  // @@protoc_insertion_point(field_release:CMDTreasureInfo.user)
  
  ::UserInfo_t* temp = user_;
  user_ = NULL;
  return temp;
}
inline void CMDTreasureInfo::set_allocated_user(::UserInfo_t* user) {
  delete user_;
  user_ = user;
  if (user) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDTreasureInfo.user)
}

// optional .e_UserRange join_range = 4;
inline void CMDTreasureInfo::clear_join_range() {
  join_range_ = 0;
}
inline ::e_UserRange CMDTreasureInfo::join_range() const {
  // @@protoc_insertion_point(field_get:CMDTreasureInfo.join_range)
  return static_cast< ::e_UserRange >(join_range_);
}
inline void CMDTreasureInfo::set_join_range(::e_UserRange value) {
  
  join_range_ = value;
  // @@protoc_insertion_point(field_set:CMDTreasureInfo.join_range)
}

// optional .e_TreasureType treasure_type = 5;
inline void CMDTreasureInfo::clear_treasure_type() {
  treasure_type_ = 0;
}
inline ::e_TreasureType CMDTreasureInfo::treasure_type() const {
  // @@protoc_insertion_point(field_get:CMDTreasureInfo.treasure_type)
  return static_cast< ::e_TreasureType >(treasure_type_);
}
inline void CMDTreasureInfo::set_treasure_type(::e_TreasureType value) {
  
  treasure_type_ = value;
  // @@protoc_insertion_point(field_set:CMDTreasureInfo.treasure_type)
}

// optional uint32 treasure_amount = 6;
inline void CMDTreasureInfo::clear_treasure_amount() {
  treasure_amount_ = 0u;
}
inline ::google::protobuf::uint32 CMDTreasureInfo::treasure_amount() const {
  // @@protoc_insertion_point(field_get:CMDTreasureInfo.treasure_amount)
  return treasure_amount_;
}
inline void CMDTreasureInfo::set_treasure_amount(::google::protobuf::uint32 value) {
  
  treasure_amount_ = value;
  // @@protoc_insertion_point(field_set:CMDTreasureInfo.treasure_amount)
}

// optional uint32 treasure_time = 7;
inline void CMDTreasureInfo::clear_treasure_time() {
  treasure_time_ = 0u;
}
inline ::google::protobuf::uint32 CMDTreasureInfo::treasure_time() const {
  // @@protoc_insertion_point(field_get:CMDTreasureInfo.treasure_time)
  return treasure_time_;
}
inline void CMDTreasureInfo::set_treasure_time(::google::protobuf::uint32 value) {
  
  treasure_time_ = value;
  // @@protoc_insertion_point(field_set:CMDTreasureInfo.treasure_time)
}

// optional .e_LotteryType lottery_type = 8;
inline void CMDTreasureInfo::clear_lottery_type() {
  lottery_type_ = 0;
}
inline ::e_LotteryType CMDTreasureInfo::lottery_type() const {
  // @@protoc_insertion_point(field_get:CMDTreasureInfo.lottery_type)
  return static_cast< ::e_LotteryType >(lottery_type_);
}
inline void CMDTreasureInfo::set_lottery_type(::e_LotteryType value) {
  
  lottery_type_ = value;
  // @@protoc_insertion_point(field_set:CMDTreasureInfo.lottery_type)
}

// optional uint32 winner_num = 9;
inline void CMDTreasureInfo::clear_winner_num() {
  winner_num_ = 0u;
}
inline ::google::protobuf::uint32 CMDTreasureInfo::winner_num() const {
  // @@protoc_insertion_point(field_get:CMDTreasureInfo.winner_num)
  return winner_num_;
}
inline void CMDTreasureInfo::set_winner_num(::google::protobuf::uint32 value) {
  
  winner_num_ = value;
  // @@protoc_insertion_point(field_set:CMDTreasureInfo.winner_num)
}

// optional string message = 10;
inline void CMDTreasureInfo::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMDTreasureInfo::message() const {
  // @@protoc_insertion_point(field_get:CMDTreasureInfo.message)
  return message_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDTreasureInfo::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDTreasureInfo.message)
}
inline void CMDTreasureInfo::set_message(const char* value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDTreasureInfo.message)
}
inline void CMDTreasureInfo::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDTreasureInfo.message)
}
inline ::std::string* CMDTreasureInfo::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:CMDTreasureInfo.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMDTreasureInfo::release_message() {
  // @@protoc_insertion_point(field_release:CMDTreasureInfo.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDTreasureInfo::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:CMDTreasureInfo.message)
}

// optional uint32 create_time = 11;
inline void CMDTreasureInfo::clear_create_time() {
  create_time_ = 0u;
}
inline ::google::protobuf::uint32 CMDTreasureInfo::create_time() const {
  // @@protoc_insertion_point(field_get:CMDTreasureInfo.create_time)
  return create_time_;
}
inline void CMDTreasureInfo::set_create_time(::google::protobuf::uint32 value) {
  
  create_time_ = value;
  // @@protoc_insertion_point(field_set:CMDTreasureInfo.create_time)
}

// optional .CMDTreasureExtraInfo ext = 12;
inline bool CMDTreasureInfo::has_ext() const {
  return !_is_default_instance_ && ext_ != NULL;
}
inline void CMDTreasureInfo::clear_ext() {
  if (GetArenaNoVirtual() == NULL && ext_ != NULL) delete ext_;
  ext_ = NULL;
}
inline const ::CMDTreasureExtraInfo& CMDTreasureInfo::ext() const {
  // @@protoc_insertion_point(field_get:CMDTreasureInfo.ext)
  return ext_ != NULL ? *ext_ : *default_instance_->ext_;
}
inline ::CMDTreasureExtraInfo* CMDTreasureInfo::mutable_ext() {
  
  if (ext_ == NULL) {
    ext_ = new ::CMDTreasureExtraInfo;
  }
  // @@protoc_insertion_point(field_mutable:CMDTreasureInfo.ext)
  return ext_;
}
inline ::CMDTreasureExtraInfo* CMDTreasureInfo::release_ext() {
  // @@protoc_insertion_point(field_release:CMDTreasureInfo.ext)
  
  ::CMDTreasureExtraInfo* temp = ext_;
  ext_ = NULL;
  return temp;
}
inline void CMDTreasureInfo::set_allocated_ext(::CMDTreasureExtraInfo* ext) {
  delete ext_;
  ext_ = ext;
  if (ext) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDTreasureInfo.ext)
}

// -------------------------------------------------------------------

// CMDTreasureExtraInfo

// optional uint32 buy_people = 1;
inline void CMDTreasureExtraInfo::clear_buy_people() {
  buy_people_ = 0u;
}
inline ::google::protobuf::uint32 CMDTreasureExtraInfo::buy_people() const {
  // @@protoc_insertion_point(field_get:CMDTreasureExtraInfo.buy_people)
  return buy_people_;
}
inline void CMDTreasureExtraInfo::set_buy_people(::google::protobuf::uint32 value) {
  
  buy_people_ = value;
  // @@protoc_insertion_point(field_set:CMDTreasureExtraInfo.buy_people)
}

// optional uint32 buy_amount = 2;
inline void CMDTreasureExtraInfo::clear_buy_amount() {
  buy_amount_ = 0u;
}
inline ::google::protobuf::uint32 CMDTreasureExtraInfo::buy_amount() const {
  // @@protoc_insertion_point(field_get:CMDTreasureExtraInfo.buy_amount)
  return buy_amount_;
}
inline void CMDTreasureExtraInfo::set_buy_amount(::google::protobuf::uint32 value) {
  
  buy_amount_ = value;
  // @@protoc_insertion_point(field_set:CMDTreasureExtraInfo.buy_amount)
}

// optional .e_TreasureStatus status = 3;
inline void CMDTreasureExtraInfo::clear_status() {
  status_ = 0;
}
inline ::e_TreasureStatus CMDTreasureExtraInfo::status() const {
  // @@protoc_insertion_point(field_get:CMDTreasureExtraInfo.status)
  return static_cast< ::e_TreasureStatus >(status_);
}
inline void CMDTreasureExtraInfo::set_status(::e_TreasureStatus value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:CMDTreasureExtraInfo.status)
}

// optional uint32 finished_time = 4;
inline void CMDTreasureExtraInfo::clear_finished_time() {
  finished_time_ = 0u;
}
inline ::google::protobuf::uint32 CMDTreasureExtraInfo::finished_time() const {
  // @@protoc_insertion_point(field_get:CMDTreasureExtraInfo.finished_time)
  return finished_time_;
}
inline void CMDTreasureExtraInfo::set_finished_time(::google::protobuf::uint32 value) {
  
  finished_time_ = value;
  // @@protoc_insertion_point(field_set:CMDTreasureExtraInfo.finished_time)
}

// optional .CMDUesrTreasureBuyInfo my_buy = 5;
inline bool CMDTreasureExtraInfo::has_my_buy() const {
  return !_is_default_instance_ && my_buy_ != NULL;
}
inline void CMDTreasureExtraInfo::clear_my_buy() {
  if (GetArenaNoVirtual() == NULL && my_buy_ != NULL) delete my_buy_;
  my_buy_ = NULL;
}
inline const ::CMDUesrTreasureBuyInfo& CMDTreasureExtraInfo::my_buy() const {
  // @@protoc_insertion_point(field_get:CMDTreasureExtraInfo.my_buy)
  return my_buy_ != NULL ? *my_buy_ : *default_instance_->my_buy_;
}
inline ::CMDUesrTreasureBuyInfo* CMDTreasureExtraInfo::mutable_my_buy() {
  
  if (my_buy_ == NULL) {
    my_buy_ = new ::CMDUesrTreasureBuyInfo;
  }
  // @@protoc_insertion_point(field_mutable:CMDTreasureExtraInfo.my_buy)
  return my_buy_;
}
inline ::CMDUesrTreasureBuyInfo* CMDTreasureExtraInfo::release_my_buy() {
  // @@protoc_insertion_point(field_release:CMDTreasureExtraInfo.my_buy)
  
  ::CMDUesrTreasureBuyInfo* temp = my_buy_;
  my_buy_ = NULL;
  return temp;
}
inline void CMDTreasureExtraInfo::set_allocated_my_buy(::CMDUesrTreasureBuyInfo* my_buy) {
  delete my_buy_;
  my_buy_ = my_buy;
  if (my_buy) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDTreasureExtraInfo.my_buy)
}

// repeated .CMDUesrTreasureBuyInfo buyers = 6;
inline int CMDTreasureExtraInfo::buyers_size() const {
  return buyers_.size();
}
inline void CMDTreasureExtraInfo::clear_buyers() {
  buyers_.Clear();
}
inline const ::CMDUesrTreasureBuyInfo& CMDTreasureExtraInfo::buyers(int index) const {
  // @@protoc_insertion_point(field_get:CMDTreasureExtraInfo.buyers)
  return buyers_.Get(index);
}
inline ::CMDUesrTreasureBuyInfo* CMDTreasureExtraInfo::mutable_buyers(int index) {
  // @@protoc_insertion_point(field_mutable:CMDTreasureExtraInfo.buyers)
  return buyers_.Mutable(index);
}
inline ::CMDUesrTreasureBuyInfo* CMDTreasureExtraInfo::add_buyers() {
  // @@protoc_insertion_point(field_add:CMDTreasureExtraInfo.buyers)
  return buyers_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMDUesrTreasureBuyInfo >*
CMDTreasureExtraInfo::mutable_buyers() {
  // @@protoc_insertion_point(field_mutable_list:CMDTreasureExtraInfo.buyers)
  return &buyers_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMDUesrTreasureBuyInfo >&
CMDTreasureExtraInfo::buyers() const {
  // @@protoc_insertion_point(field_list:CMDTreasureExtraInfo.buyers)
  return buyers_;
}

// repeated .CMDUesrTreasureBuyInfo winners = 7;
inline int CMDTreasureExtraInfo::winners_size() const {
  return winners_.size();
}
inline void CMDTreasureExtraInfo::clear_winners() {
  winners_.Clear();
}
inline const ::CMDUesrTreasureBuyInfo& CMDTreasureExtraInfo::winners(int index) const {
  // @@protoc_insertion_point(field_get:CMDTreasureExtraInfo.winners)
  return winners_.Get(index);
}
inline ::CMDUesrTreasureBuyInfo* CMDTreasureExtraInfo::mutable_winners(int index) {
  // @@protoc_insertion_point(field_mutable:CMDTreasureExtraInfo.winners)
  return winners_.Mutable(index);
}
inline ::CMDUesrTreasureBuyInfo* CMDTreasureExtraInfo::add_winners() {
  // @@protoc_insertion_point(field_add:CMDTreasureExtraInfo.winners)
  return winners_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMDUesrTreasureBuyInfo >*
CMDTreasureExtraInfo::mutable_winners() {
  // @@protoc_insertion_point(field_mutable_list:CMDTreasureExtraInfo.winners)
  return &winners_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMDUesrTreasureBuyInfo >&
CMDTreasureExtraInfo::winners() const {
  // @@protoc_insertion_point(field_list:CMDTreasureExtraInfo.winners)
  return winners_;
}

// -------------------------------------------------------------------

// CMDBuyCodeRange

// optional uint32 buy_time = 1;
inline void CMDBuyCodeRange::clear_buy_time() {
  buy_time_ = 0u;
}
inline ::google::protobuf::uint32 CMDBuyCodeRange::buy_time() const {
  // @@protoc_insertion_point(field_get:CMDBuyCodeRange.buy_time)
  return buy_time_;
}
inline void CMDBuyCodeRange::set_buy_time(::google::protobuf::uint32 value) {
  
  buy_time_ = value;
  // @@protoc_insertion_point(field_set:CMDBuyCodeRange.buy_time)
}

// optional uint32 begin = 2;
inline void CMDBuyCodeRange::clear_begin() {
  begin_ = 0u;
}
inline ::google::protobuf::uint32 CMDBuyCodeRange::begin() const {
  // @@protoc_insertion_point(field_get:CMDBuyCodeRange.begin)
  return begin_;
}
inline void CMDBuyCodeRange::set_begin(::google::protobuf::uint32 value) {
  
  begin_ = value;
  // @@protoc_insertion_point(field_set:CMDBuyCodeRange.begin)
}

// optional uint32 end = 3;
inline void CMDBuyCodeRange::clear_end() {
  end_ = 0u;
}
inline ::google::protobuf::uint32 CMDBuyCodeRange::end() const {
  // @@protoc_insertion_point(field_get:CMDBuyCodeRange.end)
  return end_;
}
inline void CMDBuyCodeRange::set_end(::google::protobuf::uint32 value) {
  
  end_ = value;
  // @@protoc_insertion_point(field_set:CMDBuyCodeRange.end)
}

// -------------------------------------------------------------------

// CMDSponsorTreasureReq

// optional .CMDTreasureInfo info = 1;
inline bool CMDSponsorTreasureReq::has_info() const {
  return !_is_default_instance_ && info_ != NULL;
}
inline void CMDSponsorTreasureReq::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
inline const ::CMDTreasureInfo& CMDSponsorTreasureReq::info() const {
  // @@protoc_insertion_point(field_get:CMDSponsorTreasureReq.info)
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::CMDTreasureInfo* CMDSponsorTreasureReq::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::CMDTreasureInfo;
  }
  // @@protoc_insertion_point(field_mutable:CMDSponsorTreasureReq.info)
  return info_;
}
inline ::CMDTreasureInfo* CMDSponsorTreasureReq::release_info() {
  // @@protoc_insertion_point(field_release:CMDSponsorTreasureReq.info)
  
  ::CMDTreasureInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline void CMDSponsorTreasureReq::set_allocated_info(::CMDTreasureInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDSponsorTreasureReq.info)
}

// -------------------------------------------------------------------

// CMDSponsorTreasureResp

// optional .CMDErrCode errinfo = 1;
inline bool CMDSponsorTreasureResp::has_errinfo() const {
  return !_is_default_instance_ && errinfo_ != NULL;
}
inline void CMDSponsorTreasureResp::clear_errinfo() {
  if (GetArenaNoVirtual() == NULL && errinfo_ != NULL) delete errinfo_;
  errinfo_ = NULL;
}
inline const ::CMDErrCode& CMDSponsorTreasureResp::errinfo() const {
  // @@protoc_insertion_point(field_get:CMDSponsorTreasureResp.errinfo)
  return errinfo_ != NULL ? *errinfo_ : *default_instance_->errinfo_;
}
inline ::CMDErrCode* CMDSponsorTreasureResp::mutable_errinfo() {
  
  if (errinfo_ == NULL) {
    errinfo_ = new ::CMDErrCode;
  }
  // @@protoc_insertion_point(field_mutable:CMDSponsorTreasureResp.errinfo)
  return errinfo_;
}
inline ::CMDErrCode* CMDSponsorTreasureResp::release_errinfo() {
  // @@protoc_insertion_point(field_release:CMDSponsorTreasureResp.errinfo)
  
  ::CMDErrCode* temp = errinfo_;
  errinfo_ = NULL;
  return temp;
}
inline void CMDSponsorTreasureResp::set_allocated_errinfo(::CMDErrCode* errinfo) {
  delete errinfo_;
  errinfo_ = errinfo;
  if (errinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDSponsorTreasureResp.errinfo)
}

// optional .CMDTreasureInfo info = 2;
inline bool CMDSponsorTreasureResp::has_info() const {
  return !_is_default_instance_ && info_ != NULL;
}
inline void CMDSponsorTreasureResp::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
inline const ::CMDTreasureInfo& CMDSponsorTreasureResp::info() const {
  // @@protoc_insertion_point(field_get:CMDSponsorTreasureResp.info)
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::CMDTreasureInfo* CMDSponsorTreasureResp::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::CMDTreasureInfo;
  }
  // @@protoc_insertion_point(field_mutable:CMDSponsorTreasureResp.info)
  return info_;
}
inline ::CMDTreasureInfo* CMDSponsorTreasureResp::release_info() {
  // @@protoc_insertion_point(field_release:CMDSponsorTreasureResp.info)
  
  ::CMDTreasureInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline void CMDSponsorTreasureResp::set_allocated_info(::CMDTreasureInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDSponsorTreasureResp.info)
}

// -------------------------------------------------------------------

// CMDBuyTreasure

// optional uint32 groupid = 1;
inline void CMDBuyTreasure::clear_groupid() {
  groupid_ = 0u;
}
inline ::google::protobuf::uint32 CMDBuyTreasure::groupid() const {
  // @@protoc_insertion_point(field_get:CMDBuyTreasure.groupid)
  return groupid_;
}
inline void CMDBuyTreasure::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDBuyTreasure.groupid)
}

// optional uint32 userid = 2;
inline void CMDBuyTreasure::clear_userid() {
  userid_ = 0u;
}
inline ::google::protobuf::uint32 CMDBuyTreasure::userid() const {
  // @@protoc_insertion_point(field_get:CMDBuyTreasure.userid)
  return userid_;
}
inline void CMDBuyTreasure::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDBuyTreasure.userid)
}

// optional uint32 treasure_id = 3;
inline void CMDBuyTreasure::clear_treasure_id() {
  treasure_id_ = 0u;
}
inline ::google::protobuf::uint32 CMDBuyTreasure::treasure_id() const {
  // @@protoc_insertion_point(field_get:CMDBuyTreasure.treasure_id)
  return treasure_id_;
}
inline void CMDBuyTreasure::set_treasure_id(::google::protobuf::uint32 value) {
  
  treasure_id_ = value;
  // @@protoc_insertion_point(field_set:CMDBuyTreasure.treasure_id)
}

// optional uint32 buy_amount = 4;
inline void CMDBuyTreasure::clear_buy_amount() {
  buy_amount_ = 0u;
}
inline ::google::protobuf::uint32 CMDBuyTreasure::buy_amount() const {
  // @@protoc_insertion_point(field_get:CMDBuyTreasure.buy_amount)
  return buy_amount_;
}
inline void CMDBuyTreasure::set_buy_amount(::google::protobuf::uint32 value) {
  
  buy_amount_ = value;
  // @@protoc_insertion_point(field_set:CMDBuyTreasure.buy_amount)
}

// -------------------------------------------------------------------

// CMDBuyTreasureResp

// optional .CMDErrCode errinfo = 1;
inline bool CMDBuyTreasureResp::has_errinfo() const {
  return !_is_default_instance_ && errinfo_ != NULL;
}
inline void CMDBuyTreasureResp::clear_errinfo() {
  if (GetArenaNoVirtual() == NULL && errinfo_ != NULL) delete errinfo_;
  errinfo_ = NULL;
}
inline const ::CMDErrCode& CMDBuyTreasureResp::errinfo() const {
  // @@protoc_insertion_point(field_get:CMDBuyTreasureResp.errinfo)
  return errinfo_ != NULL ? *errinfo_ : *default_instance_->errinfo_;
}
inline ::CMDErrCode* CMDBuyTreasureResp::mutable_errinfo() {
  
  if (errinfo_ == NULL) {
    errinfo_ = new ::CMDErrCode;
  }
  // @@protoc_insertion_point(field_mutable:CMDBuyTreasureResp.errinfo)
  return errinfo_;
}
inline ::CMDErrCode* CMDBuyTreasureResp::release_errinfo() {
  // @@protoc_insertion_point(field_release:CMDBuyTreasureResp.errinfo)
  
  ::CMDErrCode* temp = errinfo_;
  errinfo_ = NULL;
  return temp;
}
inline void CMDBuyTreasureResp::set_allocated_errinfo(::CMDErrCode* errinfo) {
  delete errinfo_;
  errinfo_ = errinfo;
  if (errinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDBuyTreasureResp.errinfo)
}

// optional .CMDBuyTreasure buy_info = 2;
inline bool CMDBuyTreasureResp::has_buy_info() const {
  return !_is_default_instance_ && buy_info_ != NULL;
}
inline void CMDBuyTreasureResp::clear_buy_info() {
  if (GetArenaNoVirtual() == NULL && buy_info_ != NULL) delete buy_info_;
  buy_info_ = NULL;
}
inline const ::CMDBuyTreasure& CMDBuyTreasureResp::buy_info() const {
  // @@protoc_insertion_point(field_get:CMDBuyTreasureResp.buy_info)
  return buy_info_ != NULL ? *buy_info_ : *default_instance_->buy_info_;
}
inline ::CMDBuyTreasure* CMDBuyTreasureResp::mutable_buy_info() {
  
  if (buy_info_ == NULL) {
    buy_info_ = new ::CMDBuyTreasure;
  }
  // @@protoc_insertion_point(field_mutable:CMDBuyTreasureResp.buy_info)
  return buy_info_;
}
inline ::CMDBuyTreasure* CMDBuyTreasureResp::release_buy_info() {
  // @@protoc_insertion_point(field_release:CMDBuyTreasureResp.buy_info)
  
  ::CMDBuyTreasure* temp = buy_info_;
  buy_info_ = NULL;
  return temp;
}
inline void CMDBuyTreasureResp::set_allocated_buy_info(::CMDBuyTreasure* buy_info) {
  delete buy_info_;
  buy_info_ = buy_info;
  if (buy_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDBuyTreasureResp.buy_info)
}

// optional .CMDBuyCodeRange buy_code = 3;
inline bool CMDBuyTreasureResp::has_buy_code() const {
  return !_is_default_instance_ && buy_code_ != NULL;
}
inline void CMDBuyTreasureResp::clear_buy_code() {
  if (GetArenaNoVirtual() == NULL && buy_code_ != NULL) delete buy_code_;
  buy_code_ = NULL;
}
inline const ::CMDBuyCodeRange& CMDBuyTreasureResp::buy_code() const {
  // @@protoc_insertion_point(field_get:CMDBuyTreasureResp.buy_code)
  return buy_code_ != NULL ? *buy_code_ : *default_instance_->buy_code_;
}
inline ::CMDBuyCodeRange* CMDBuyTreasureResp::mutable_buy_code() {
  
  if (buy_code_ == NULL) {
    buy_code_ = new ::CMDBuyCodeRange;
  }
  // @@protoc_insertion_point(field_mutable:CMDBuyTreasureResp.buy_code)
  return buy_code_;
}
inline ::CMDBuyCodeRange* CMDBuyTreasureResp::release_buy_code() {
  // @@protoc_insertion_point(field_release:CMDBuyTreasureResp.buy_code)
  
  ::CMDBuyCodeRange* temp = buy_code_;
  buy_code_ = NULL;
  return temp;
}
inline void CMDBuyTreasureResp::set_allocated_buy_code(::CMDBuyCodeRange* buy_code) {
  delete buy_code_;
  buy_code_ = buy_code;
  if (buy_code) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDBuyTreasureResp.buy_code)
}

// -------------------------------------------------------------------

// CMDQryMyTreasureDetail

// optional uint32 userid = 1;
inline void CMDQryMyTreasureDetail::clear_userid() {
  userid_ = 0u;
}
inline ::google::protobuf::uint32 CMDQryMyTreasureDetail::userid() const {
  // @@protoc_insertion_point(field_get:CMDQryMyTreasureDetail.userid)
  return userid_;
}
inline void CMDQryMyTreasureDetail::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDQryMyTreasureDetail.userid)
}

// optional uint32 groupid = 2;
inline void CMDQryMyTreasureDetail::clear_groupid() {
  groupid_ = 0u;
}
inline ::google::protobuf::uint32 CMDQryMyTreasureDetail::groupid() const {
  // @@protoc_insertion_point(field_get:CMDQryMyTreasureDetail.groupid)
  return groupid_;
}
inline void CMDQryMyTreasureDetail::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDQryMyTreasureDetail.groupid)
}

// optional uint32 treasure_id = 3;
inline void CMDQryMyTreasureDetail::clear_treasure_id() {
  treasure_id_ = 0u;
}
inline ::google::protobuf::uint32 CMDQryMyTreasureDetail::treasure_id() const {
  // @@protoc_insertion_point(field_get:CMDQryMyTreasureDetail.treasure_id)
  return treasure_id_;
}
inline void CMDQryMyTreasureDetail::set_treasure_id(::google::protobuf::uint32 value) {
  
  treasure_id_ = value;
  // @@protoc_insertion_point(field_set:CMDQryMyTreasureDetail.treasure_id)
}

// -------------------------------------------------------------------

// CMDMyTreasureDetail

// optional uint32 userid = 1;
inline void CMDMyTreasureDetail::clear_userid() {
  userid_ = 0u;
}
inline ::google::protobuf::uint32 CMDMyTreasureDetail::userid() const {
  // @@protoc_insertion_point(field_get:CMDMyTreasureDetail.userid)
  return userid_;
}
inline void CMDMyTreasureDetail::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDMyTreasureDetail.userid)
}

// optional uint32 groupid = 2;
inline void CMDMyTreasureDetail::clear_groupid() {
  groupid_ = 0u;
}
inline ::google::protobuf::uint32 CMDMyTreasureDetail::groupid() const {
  // @@protoc_insertion_point(field_get:CMDMyTreasureDetail.groupid)
  return groupid_;
}
inline void CMDMyTreasureDetail::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDMyTreasureDetail.groupid)
}

// optional uint32 treasure_id = 3;
inline void CMDMyTreasureDetail::clear_treasure_id() {
  treasure_id_ = 0u;
}
inline ::google::protobuf::uint32 CMDMyTreasureDetail::treasure_id() const {
  // @@protoc_insertion_point(field_get:CMDMyTreasureDetail.treasure_id)
  return treasure_id_;
}
inline void CMDMyTreasureDetail::set_treasure_id(::google::protobuf::uint32 value) {
  
  treasure_id_ = value;
  // @@protoc_insertion_point(field_set:CMDMyTreasureDetail.treasure_id)
}

// optional uint32 buy_total = 4;
inline void CMDMyTreasureDetail::clear_buy_total() {
  buy_total_ = 0u;
}
inline ::google::protobuf::uint32 CMDMyTreasureDetail::buy_total() const {
  // @@protoc_insertion_point(field_get:CMDMyTreasureDetail.buy_total)
  return buy_total_;
}
inline void CMDMyTreasureDetail::set_buy_total(::google::protobuf::uint32 value) {
  
  buy_total_ = value;
  // @@protoc_insertion_point(field_set:CMDMyTreasureDetail.buy_total)
}

// repeated .CMDBuyCodeRange buy_list = 5;
inline int CMDMyTreasureDetail::buy_list_size() const {
  return buy_list_.size();
}
inline void CMDMyTreasureDetail::clear_buy_list() {
  buy_list_.Clear();
}
inline const ::CMDBuyCodeRange& CMDMyTreasureDetail::buy_list(int index) const {
  // @@protoc_insertion_point(field_get:CMDMyTreasureDetail.buy_list)
  return buy_list_.Get(index);
}
inline ::CMDBuyCodeRange* CMDMyTreasureDetail::mutable_buy_list(int index) {
  // @@protoc_insertion_point(field_mutable:CMDMyTreasureDetail.buy_list)
  return buy_list_.Mutable(index);
}
inline ::CMDBuyCodeRange* CMDMyTreasureDetail::add_buy_list() {
  // @@protoc_insertion_point(field_add:CMDMyTreasureDetail.buy_list)
  return buy_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMDBuyCodeRange >*
CMDMyTreasureDetail::mutable_buy_list() {
  // @@protoc_insertion_point(field_mutable_list:CMDMyTreasureDetail.buy_list)
  return &buy_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMDBuyCodeRange >&
CMDMyTreasureDetail::buy_list() const {
  // @@protoc_insertion_point(field_list:CMDMyTreasureDetail.buy_list)
  return buy_list_;
}

// -------------------------------------------------------------------

// CMDQryTreasureList

// optional uint32 groupid = 1;
inline void CMDQryTreasureList::clear_groupid() {
  groupid_ = 0u;
}
inline ::google::protobuf::uint32 CMDQryTreasureList::groupid() const {
  // @@protoc_insertion_point(field_get:CMDQryTreasureList.groupid)
  return groupid_;
}
inline void CMDQryTreasureList::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDQryTreasureList.groupid)
}

// optional uint32 userid = 2;
inline void CMDQryTreasureList::clear_userid() {
  userid_ = 0u;
}
inline ::google::protobuf::uint32 CMDQryTreasureList::userid() const {
  // @@protoc_insertion_point(field_get:CMDQryTreasureList.userid)
  return userid_;
}
inline void CMDQryTreasureList::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDQryTreasureList.userid)
}

// optional uint32 count = 3;
inline void CMDQryTreasureList::clear_count() {
  count_ = 0u;
}
inline ::google::protobuf::uint32 CMDQryTreasureList::count() const {
  // @@protoc_insertion_point(field_get:CMDQryTreasureList.count)
  return count_;
}
inline void CMDQryTreasureList::set_count(::google::protobuf::uint32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:CMDQryTreasureList.count)
}

// optional uint32 last_create_time = 4;
inline void CMDQryTreasureList::clear_last_create_time() {
  last_create_time_ = 0u;
}
inline ::google::protobuf::uint32 CMDQryTreasureList::last_create_time() const {
  // @@protoc_insertion_point(field_get:CMDQryTreasureList.last_create_time)
  return last_create_time_;
}
inline void CMDQryTreasureList::set_last_create_time(::google::protobuf::uint32 value) {
  
  last_create_time_ = value;
  // @@protoc_insertion_point(field_set:CMDQryTreasureList.last_create_time)
}

// optional uint32 last_end_time = 5;
inline void CMDQryTreasureList::clear_last_end_time() {
  last_end_time_ = 0u;
}
inline ::google::protobuf::uint32 CMDQryTreasureList::last_end_time() const {
  // @@protoc_insertion_point(field_get:CMDQryTreasureList.last_end_time)
  return last_end_time_;
}
inline void CMDQryTreasureList::set_last_end_time(::google::protobuf::uint32 value) {
  
  last_end_time_ = value;
  // @@protoc_insertion_point(field_set:CMDQryTreasureList.last_end_time)
}

// -------------------------------------------------------------------

// CMDTreasureList

// optional uint32 groupid = 1;
inline void CMDTreasureList::clear_groupid() {
  groupid_ = 0u;
}
inline ::google::protobuf::uint32 CMDTreasureList::groupid() const {
  // @@protoc_insertion_point(field_get:CMDTreasureList.groupid)
  return groupid_;
}
inline void CMDTreasureList::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDTreasureList.groupid)
}

// optional uint32 userid = 2;
inline void CMDTreasureList::clear_userid() {
  userid_ = 0u;
}
inline ::google::protobuf::uint32 CMDTreasureList::userid() const {
  // @@protoc_insertion_point(field_get:CMDTreasureList.userid)
  return userid_;
}
inline void CMDTreasureList::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDTreasureList.userid)
}

// repeated .CMDTreasureInfo list = 3;
inline int CMDTreasureList::list_size() const {
  return list_.size();
}
inline void CMDTreasureList::clear_list() {
  list_.Clear();
}
inline const ::CMDTreasureInfo& CMDTreasureList::list(int index) const {
  // @@protoc_insertion_point(field_get:CMDTreasureList.list)
  return list_.Get(index);
}
inline ::CMDTreasureInfo* CMDTreasureList::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:CMDTreasureList.list)
  return list_.Mutable(index);
}
inline ::CMDTreasureInfo* CMDTreasureList::add_list() {
  // @@protoc_insertion_point(field_add:CMDTreasureList.list)
  return list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMDTreasureInfo >*
CMDTreasureList::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:CMDTreasureList.list)
  return &list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMDTreasureInfo >&
CMDTreasureList::list() const {
  // @@protoc_insertion_point(field_list:CMDTreasureList.list)
  return list_;
}

// -------------------------------------------------------------------

// CMDTreasureInfoNotify

// optional .e_TreasureStatus old_status = 1;
inline void CMDTreasureInfoNotify::clear_old_status() {
  old_status_ = 0;
}
inline ::e_TreasureStatus CMDTreasureInfoNotify::old_status() const {
  // @@protoc_insertion_point(field_get:CMDTreasureInfoNotify.old_status)
  return static_cast< ::e_TreasureStatus >(old_status_);
}
inline void CMDTreasureInfoNotify::set_old_status(::e_TreasureStatus value) {
  
  old_status_ = value;
  // @@protoc_insertion_point(field_set:CMDTreasureInfoNotify.old_status)
}

// optional .e_TreasureStatus new_status = 2;
inline void CMDTreasureInfoNotify::clear_new_status() {
  new_status_ = 0;
}
inline ::e_TreasureStatus CMDTreasureInfoNotify::new_status() const {
  // @@protoc_insertion_point(field_get:CMDTreasureInfoNotify.new_status)
  return static_cast< ::e_TreasureStatus >(new_status_);
}
inline void CMDTreasureInfoNotify::set_new_status(::e_TreasureStatus value) {
  
  new_status_ = value;
  // @@protoc_insertion_point(field_set:CMDTreasureInfoNotify.new_status)
}

// optional .CMDTreasureInfo info = 3;
inline bool CMDTreasureInfoNotify::has_info() const {
  return !_is_default_instance_ && info_ != NULL;
}
inline void CMDTreasureInfoNotify::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
inline const ::CMDTreasureInfo& CMDTreasureInfoNotify::info() const {
  // @@protoc_insertion_point(field_get:CMDTreasureInfoNotify.info)
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::CMDTreasureInfo* CMDTreasureInfoNotify::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::CMDTreasureInfo;
  }
  // @@protoc_insertion_point(field_mutable:CMDTreasureInfoNotify.info)
  return info_;
}
inline ::CMDTreasureInfo* CMDTreasureInfoNotify::release_info() {
  // @@protoc_insertion_point(field_release:CMDTreasureInfoNotify.info)
  
  ::CMDTreasureInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline void CMDTreasureInfoNotify::set_allocated_info(::CMDTreasureInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDTreasureInfoNotify.info)
}

// -------------------------------------------------------------------

// CMDQryTreasureInfo

// optional uint32 groupid = 1;
inline void CMDQryTreasureInfo::clear_groupid() {
  groupid_ = 0u;
}
inline ::google::protobuf::uint32 CMDQryTreasureInfo::groupid() const {
  // @@protoc_insertion_point(field_get:CMDQryTreasureInfo.groupid)
  return groupid_;
}
inline void CMDQryTreasureInfo::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDQryTreasureInfo.groupid)
}

// optional uint32 userid = 2;
inline void CMDQryTreasureInfo::clear_userid() {
  userid_ = 0u;
}
inline ::google::protobuf::uint32 CMDQryTreasureInfo::userid() const {
  // @@protoc_insertion_point(field_get:CMDQryTreasureInfo.userid)
  return userid_;
}
inline void CMDQryTreasureInfo::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDQryTreasureInfo.userid)
}

// optional uint32 treasure_id = 3;
inline void CMDQryTreasureInfo::clear_treasure_id() {
  treasure_id_ = 0u;
}
inline ::google::protobuf::uint32 CMDQryTreasureInfo::treasure_id() const {
  // @@protoc_insertion_point(field_get:CMDQryTreasureInfo.treasure_id)
  return treasure_id_;
}
inline void CMDQryTreasureInfo::set_treasure_id(::google::protobuf::uint32 value) {
  
  treasure_id_ = value;
  // @@protoc_insertion_point(field_set:CMDQryTreasureInfo.treasure_id)
}

// -------------------------------------------------------------------

// CMDQryTreasureInfoResp

// optional .CMDErrCode errinfo = 1;
inline bool CMDQryTreasureInfoResp::has_errinfo() const {
  return !_is_default_instance_ && errinfo_ != NULL;
}
inline void CMDQryTreasureInfoResp::clear_errinfo() {
  if (GetArenaNoVirtual() == NULL && errinfo_ != NULL) delete errinfo_;
  errinfo_ = NULL;
}
inline const ::CMDErrCode& CMDQryTreasureInfoResp::errinfo() const {
  // @@protoc_insertion_point(field_get:CMDQryTreasureInfoResp.errinfo)
  return errinfo_ != NULL ? *errinfo_ : *default_instance_->errinfo_;
}
inline ::CMDErrCode* CMDQryTreasureInfoResp::mutable_errinfo() {
  
  if (errinfo_ == NULL) {
    errinfo_ = new ::CMDErrCode;
  }
  // @@protoc_insertion_point(field_mutable:CMDQryTreasureInfoResp.errinfo)
  return errinfo_;
}
inline ::CMDErrCode* CMDQryTreasureInfoResp::release_errinfo() {
  // @@protoc_insertion_point(field_release:CMDQryTreasureInfoResp.errinfo)
  
  ::CMDErrCode* temp = errinfo_;
  errinfo_ = NULL;
  return temp;
}
inline void CMDQryTreasureInfoResp::set_allocated_errinfo(::CMDErrCode* errinfo) {
  delete errinfo_;
  errinfo_ = errinfo;
  if (errinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDQryTreasureInfoResp.errinfo)
}

// optional .CMDQryTreasureInfo req = 2;
inline bool CMDQryTreasureInfoResp::has_req() const {
  return !_is_default_instance_ && req_ != NULL;
}
inline void CMDQryTreasureInfoResp::clear_req() {
  if (GetArenaNoVirtual() == NULL && req_ != NULL) delete req_;
  req_ = NULL;
}
inline const ::CMDQryTreasureInfo& CMDQryTreasureInfoResp::req() const {
  // @@protoc_insertion_point(field_get:CMDQryTreasureInfoResp.req)
  return req_ != NULL ? *req_ : *default_instance_->req_;
}
inline ::CMDQryTreasureInfo* CMDQryTreasureInfoResp::mutable_req() {
  
  if (req_ == NULL) {
    req_ = new ::CMDQryTreasureInfo;
  }
  // @@protoc_insertion_point(field_mutable:CMDQryTreasureInfoResp.req)
  return req_;
}
inline ::CMDQryTreasureInfo* CMDQryTreasureInfoResp::release_req() {
  // @@protoc_insertion_point(field_release:CMDQryTreasureInfoResp.req)
  
  ::CMDQryTreasureInfo* temp = req_;
  req_ = NULL;
  return temp;
}
inline void CMDQryTreasureInfoResp::set_allocated_req(::CMDQryTreasureInfo* req) {
  delete req_;
  req_ = req;
  if (req) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDQryTreasureInfoResp.req)
}

// optional .CMDTreasureInfo info = 3;
inline bool CMDQryTreasureInfoResp::has_info() const {
  return !_is_default_instance_ && info_ != NULL;
}
inline void CMDQryTreasureInfoResp::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
inline const ::CMDTreasureInfo& CMDQryTreasureInfoResp::info() const {
  // @@protoc_insertion_point(field_get:CMDQryTreasureInfoResp.info)
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::CMDTreasureInfo* CMDQryTreasureInfoResp::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::CMDTreasureInfo;
  }
  // @@protoc_insertion_point(field_mutable:CMDQryTreasureInfoResp.info)
  return info_;
}
inline ::CMDTreasureInfo* CMDQryTreasureInfoResp::release_info() {
  // @@protoc_insertion_point(field_release:CMDQryTreasureInfoResp.info)
  
  ::CMDTreasureInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline void CMDQryTreasureInfoResp::set_allocated_info(::CMDTreasureInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDQryTreasureInfoResp.info)
}

// -------------------------------------------------------------------

// CMDSendPressStampReq

// optional uint32 userID = 1;
inline void CMDSendPressStampReq::clear_userid() {
  userid_ = 0u;
}
inline ::google::protobuf::uint32 CMDSendPressStampReq::userid() const {
  // @@protoc_insertion_point(field_get:CMDSendPressStampReq.userID)
  return userid_;
}
inline void CMDSendPressStampReq::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDSendPressStampReq.userID)
}

// optional uint32 groupID = 2;
inline void CMDSendPressStampReq::clear_groupid() {
  groupid_ = 0u;
}
inline ::google::protobuf::uint32 CMDSendPressStampReq::groupid() const {
  // @@protoc_insertion_point(field_get:CMDSendPressStampReq.groupID)
  return groupid_;
}
inline void CMDSendPressStampReq::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDSendPressStampReq.groupID)
}

// optional uint32 dstUserID = 3;
inline void CMDSendPressStampReq::clear_dstuserid() {
  dstuserid_ = 0u;
}
inline ::google::protobuf::uint32 CMDSendPressStampReq::dstuserid() const {
  // @@protoc_insertion_point(field_get:CMDSendPressStampReq.dstUserID)
  return dstuserid_;
}
inline void CMDSendPressStampReq::set_dstuserid(::google::protobuf::uint32 value) {
  
  dstuserid_ = value;
  // @@protoc_insertion_point(field_set:CMDSendPressStampReq.dstUserID)
}

// optional uint32 Money = 4;
inline void CMDSendPressStampReq::clear_money() {
  money_ = 0u;
}
inline ::google::protobuf::uint32 CMDSendPressStampReq::money() const {
  // @@protoc_insertion_point(field_get:CMDSendPressStampReq.Money)
  return money_;
}
inline void CMDSendPressStampReq::set_money(::google::protobuf::uint32 value) {
  
  money_ = value;
  // @@protoc_insertion_point(field_set:CMDSendPressStampReq.Money)
}

// optional string message = 5;
inline void CMDSendPressStampReq::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMDSendPressStampReq::message() const {
  // @@protoc_insertion_point(field_get:CMDSendPressStampReq.message)
  return message_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDSendPressStampReq::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDSendPressStampReq.message)
}
inline void CMDSendPressStampReq::set_message(const char* value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDSendPressStampReq.message)
}
inline void CMDSendPressStampReq::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDSendPressStampReq.message)
}
inline ::std::string* CMDSendPressStampReq::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:CMDSendPressStampReq.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMDSendPressStampReq::release_message() {
  // @@protoc_insertion_point(field_release:CMDSendPressStampReq.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDSendPressStampReq::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:CMDSendPressStampReq.message)
}

// -------------------------------------------------------------------

// CMDSendPressStampResp

// optional .CMDErrCode errInfo = 1;
inline bool CMDSendPressStampResp::has_errinfo() const {
  return !_is_default_instance_ && errinfo_ != NULL;
}
inline void CMDSendPressStampResp::clear_errinfo() {
  if (GetArenaNoVirtual() == NULL && errinfo_ != NULL) delete errinfo_;
  errinfo_ = NULL;
}
inline const ::CMDErrCode& CMDSendPressStampResp::errinfo() const {
  // @@protoc_insertion_point(field_get:CMDSendPressStampResp.errInfo)
  return errinfo_ != NULL ? *errinfo_ : *default_instance_->errinfo_;
}
inline ::CMDErrCode* CMDSendPressStampResp::mutable_errinfo() {
  
  if (errinfo_ == NULL) {
    errinfo_ = new ::CMDErrCode;
  }
  // @@protoc_insertion_point(field_mutable:CMDSendPressStampResp.errInfo)
  return errinfo_;
}
inline ::CMDErrCode* CMDSendPressStampResp::release_errinfo() {
  // @@protoc_insertion_point(field_release:CMDSendPressStampResp.errInfo)
  
  ::CMDErrCode* temp = errinfo_;
  errinfo_ = NULL;
  return temp;
}
inline void CMDSendPressStampResp::set_allocated_errinfo(::CMDErrCode* errinfo) {
  delete errinfo_;
  errinfo_ = errinfo;
  if (errinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDSendPressStampResp.errInfo)
}

// optional uint32 userID = 2;
inline void CMDSendPressStampResp::clear_userid() {
  userid_ = 0u;
}
inline ::google::protobuf::uint32 CMDSendPressStampResp::userid() const {
  // @@protoc_insertion_point(field_get:CMDSendPressStampResp.userID)
  return userid_;
}
inline void CMDSendPressStampResp::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDSendPressStampResp.userID)
}

// optional uint32 groupID = 3;
inline void CMDSendPressStampResp::clear_groupid() {
  groupid_ = 0u;
}
inline ::google::protobuf::uint32 CMDSendPressStampResp::groupid() const {
  // @@protoc_insertion_point(field_get:CMDSendPressStampResp.groupID)
  return groupid_;
}
inline void CMDSendPressStampResp::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDSendPressStampResp.groupID)
}

// optional uint32 stampID = 4;
inline void CMDSendPressStampResp::clear_stampid() {
  stampid_ = 0u;
}
inline ::google::protobuf::uint32 CMDSendPressStampResp::stampid() const {
  // @@protoc_insertion_point(field_get:CMDSendPressStampResp.stampID)
  return stampid_;
}
inline void CMDSendPressStampResp::set_stampid(::google::protobuf::uint32 value) {
  
  stampid_ = value;
  // @@protoc_insertion_point(field_set:CMDSendPressStampResp.stampID)
}

// -------------------------------------------------------------------

// CMDQryStampReq

// optional uint32 groupID = 1;
inline void CMDQryStampReq::clear_groupid() {
  groupid_ = 0u;
}
inline ::google::protobuf::uint32 CMDQryStampReq::groupid() const {
  // @@protoc_insertion_point(field_get:CMDQryStampReq.groupID)
  return groupid_;
}
inline void CMDQryStampReq::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDQryStampReq.groupID)
}

// optional uint32 userID = 2;
inline void CMDQryStampReq::clear_userid() {
  userid_ = 0u;
}
inline ::google::protobuf::uint32 CMDQryStampReq::userid() const {
  // @@protoc_insertion_point(field_get:CMDQryStampReq.userID)
  return userid_;
}
inline void CMDQryStampReq::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDQryStampReq.userID)
}

// optional uint32 dstUserID = 3;
inline void CMDQryStampReq::clear_dstuserid() {
  dstuserid_ = 0u;
}
inline ::google::protobuf::uint32 CMDQryStampReq::dstuserid() const {
  // @@protoc_insertion_point(field_get:CMDQryStampReq.dstUserID)
  return dstuserid_;
}
inline void CMDQryStampReq::set_dstuserid(::google::protobuf::uint32 value) {
  
  dstuserid_ = value;
  // @@protoc_insertion_point(field_set:CMDQryStampReq.dstUserID)
}

// -------------------------------------------------------------------

// CMDStampInfo

// optional uint32 stampID = 1;
inline void CMDStampInfo::clear_stampid() {
  stampid_ = 0u;
}
inline ::google::protobuf::uint32 CMDStampInfo::stampid() const {
  // @@protoc_insertion_point(field_get:CMDStampInfo.stampID)
  return stampid_;
}
inline void CMDStampInfo::set_stampid(::google::protobuf::uint32 value) {
  
  stampid_ = value;
  // @@protoc_insertion_point(field_set:CMDStampInfo.stampID)
}

// optional uint32 userID = 2;
inline void CMDStampInfo::clear_userid() {
  userid_ = 0u;
}
inline ::google::protobuf::uint32 CMDStampInfo::userid() const {
  // @@protoc_insertion_point(field_get:CMDStampInfo.userID)
  return userid_;
}
inline void CMDStampInfo::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDStampInfo.userID)
}

// optional uint32 dstUserID = 3;
inline void CMDStampInfo::clear_dstuserid() {
  dstuserid_ = 0u;
}
inline ::google::protobuf::uint32 CMDStampInfo::dstuserid() const {
  // @@protoc_insertion_point(field_get:CMDStampInfo.dstUserID)
  return dstuserid_;
}
inline void CMDStampInfo::set_dstuserid(::google::protobuf::uint32 value) {
  
  dstuserid_ = value;
  // @@protoc_insertion_point(field_set:CMDStampInfo.dstUserID)
}

// optional uint32 pressNum = 4;
inline void CMDStampInfo::clear_pressnum() {
  pressnum_ = 0u;
}
inline ::google::protobuf::uint32 CMDStampInfo::pressnum() const {
  // @@protoc_insertion_point(field_get:CMDStampInfo.pressNum)
  return pressnum_;
}
inline void CMDStampInfo::set_pressnum(::google::protobuf::uint32 value) {
  
  pressnum_ = value;
  // @@protoc_insertion_point(field_set:CMDStampInfo.pressNum)
}

// optional uint32 Money = 5;
inline void CMDStampInfo::clear_money() {
  money_ = 0u;
}
inline ::google::protobuf::uint32 CMDStampInfo::money() const {
  // @@protoc_insertion_point(field_get:CMDStampInfo.Money)
  return money_;
}
inline void CMDStampInfo::set_money(::google::protobuf::uint32 value) {
  
  money_ = value;
  // @@protoc_insertion_point(field_set:CMDStampInfo.Money)
}

// optional string message = 6;
inline void CMDStampInfo::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMDStampInfo::message() const {
  // @@protoc_insertion_point(field_get:CMDStampInfo.message)
  return message_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDStampInfo::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDStampInfo.message)
}
inline void CMDStampInfo::set_message(const char* value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDStampInfo.message)
}
inline void CMDStampInfo::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDStampInfo.message)
}
inline ::std::string* CMDStampInfo::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:CMDStampInfo.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMDStampInfo::release_message() {
  // @@protoc_insertion_point(field_release:CMDStampInfo.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDStampInfo::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:CMDStampInfo.message)
}

// -------------------------------------------------------------------

// CMDQryStampRsp

// optional uint32 groupID = 1;
inline void CMDQryStampRsp::clear_groupid() {
  groupid_ = 0u;
}
inline ::google::protobuf::uint32 CMDQryStampRsp::groupid() const {
  // @@protoc_insertion_point(field_get:CMDQryStampRsp.groupID)
  return groupid_;
}
inline void CMDQryStampRsp::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDQryStampRsp.groupID)
}

// optional uint32 startMoney = 2;
inline void CMDQryStampRsp::clear_startmoney() {
  startmoney_ = 0u;
}
inline ::google::protobuf::uint32 CMDQryStampRsp::startmoney() const {
  // @@protoc_insertion_point(field_get:CMDQryStampRsp.startMoney)
  return startmoney_;
}
inline void CMDQryStampRsp::set_startmoney(::google::protobuf::uint32 value) {
  
  startmoney_ = value;
  // @@protoc_insertion_point(field_set:CMDQryStampRsp.startMoney)
}

// optional uint32 IncreaseMoney = 3;
inline void CMDQryStampRsp::clear_increasemoney() {
  increasemoney_ = 0u;
}
inline ::google::protobuf::uint32 CMDQryStampRsp::increasemoney() const {
  // @@protoc_insertion_point(field_get:CMDQryStampRsp.IncreaseMoney)
  return increasemoney_;
}
inline void CMDQryStampRsp::set_increasemoney(::google::protobuf::uint32 value) {
  
  increasemoney_ = value;
  // @@protoc_insertion_point(field_set:CMDQryStampRsp.IncreaseMoney)
}

// repeated .CMDStampInfo stamp = 4;
inline int CMDQryStampRsp::stamp_size() const {
  return stamp_.size();
}
inline void CMDQryStampRsp::clear_stamp() {
  stamp_.Clear();
}
inline const ::CMDStampInfo& CMDQryStampRsp::stamp(int index) const {
  // @@protoc_insertion_point(field_get:CMDQryStampRsp.stamp)
  return stamp_.Get(index);
}
inline ::CMDStampInfo* CMDQryStampRsp::mutable_stamp(int index) {
  // @@protoc_insertion_point(field_mutable:CMDQryStampRsp.stamp)
  return stamp_.Mutable(index);
}
inline ::CMDStampInfo* CMDQryStampRsp::add_stamp() {
  // @@protoc_insertion_point(field_add:CMDQryStampRsp.stamp)
  return stamp_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMDStampInfo >*
CMDQryStampRsp::mutable_stamp() {
  // @@protoc_insertion_point(field_mutable_list:CMDQryStampRsp.stamp)
  return &stamp_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMDStampInfo >&
CMDQryStampRsp::stamp() const {
  // @@protoc_insertion_point(field_list:CMDQryStampRsp.stamp)
  return stamp_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::ePacketType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ePacketType>() {
  return ::ePacketType_descriptor();
}
template <> struct is_proto_enum< ::ePacketFixType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ePacketFixType>() {
  return ::ePacketFixType_descriptor();
}
template <> struct is_proto_enum< ::eRangeType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::eRangeType>() {
  return ::eRangeType_descriptor();
}
template <> struct is_proto_enum< ::eRangeGender> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::eRangeGender>() {
  return ::eRangeGender_descriptor();
}
template <> struct is_proto_enum< ::e_TreasureType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::e_TreasureType>() {
  return ::e_TreasureType_descriptor();
}
template <> struct is_proto_enum< ::e_LotteryType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::e_LotteryType>() {
  return ::e_LotteryType_descriptor();
}
template <> struct is_proto_enum< ::e_TreasureStatus> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::e_TreasureStatus>() {
  return ::e_TreasureStatus_descriptor();
}
template <> struct is_proto_enum< ::e_UserRange> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::e_UserRange>() {
  return ::e_UserRange_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ConsumeSvr_2eproto__INCLUDED
