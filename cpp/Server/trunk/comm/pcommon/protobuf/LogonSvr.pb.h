// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: LogonSvr.proto

#ifndef PROTOBUF_LogonSvr_2eproto__INCLUDED
#define PROTOBUF_LogonSvr_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "Common.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_LogonSvr_2eproto();
void protobuf_AssignDesc_LogonSvr_2eproto();
void protobuf_ShutdownFile_LogonSvr_2eproto();

class CMDSessionTokenReq;
class CMDSessionTokenResp;
class CMDUserExistReq;
class CMDUserLogonErrResp;
class CMDUserLogonReq;
class CMDUserLogonSuccessResp;

// ===================================================================

class CMDUserLogonReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDUserLogonReq) */ {
 public:
  CMDUserLogonReq();
  virtual ~CMDUserLogonReq();

  CMDUserLogonReq(const CMDUserLogonReq& from);

  inline CMDUserLogonReq& operator=(const CMDUserLogonReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDUserLogonReq& default_instance();

  void Swap(CMDUserLogonReq* other);

  // implements Message ----------------------------------------------

  inline CMDUserLogonReq* New() const { return New(NULL); }

  CMDUserLogonReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDUserLogonReq& from);
  void MergeFrom(const CMDUserLogonReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDUserLogonReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 loginid = 1;
  void clear_loginid();
  static const int kLoginidFieldNumber = 1;
  ::google::protobuf::uint32 loginid() const;
  void set_loginid(::google::protobuf::uint32 value);

  // optional string token = 2;
  void clear_token();
  static const int kTokenFieldNumber = 2;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // optional string patternLock = 3;
  void clear_patternlock();
  static const int kPatternLockFieldNumber = 3;
  const ::std::string& patternlock() const;
  void set_patternlock(const ::std::string& value);
  void set_patternlock(const char* value);
  void set_patternlock(const char* value, size_t size);
  ::std::string* mutable_patternlock();
  ::std::string* release_patternlock();
  void set_allocated_patternlock(::std::string* patternlock);

  // optional uint32 platformType = 4;
  void clear_platformtype();
  static const int kPlatformTypeFieldNumber = 4;
  ::google::protobuf::uint32 platformtype() const;
  void set_platformtype(::google::protobuf::uint32 value);

  // optional uint32 version = 5;
  void clear_version();
  static const int kVersionFieldNumber = 5;
  ::google::protobuf::uint32 version() const;
  void set_version(::google::protobuf::uint32 value);

  // optional string serial = 6;
  void clear_serial();
  static const int kSerialFieldNumber = 6;
  const ::std::string& serial() const;
  void set_serial(const ::std::string& value);
  void set_serial(const char* value);
  void set_serial(const char* value, size_t size);
  ::std::string* mutable_serial();
  ::std::string* release_serial();
  void set_allocated_serial(::std::string* serial);

  // optional string mac = 7;
  void clear_mac();
  static const int kMacFieldNumber = 7;
  const ::std::string& mac() const;
  void set_mac(const ::std::string& value);
  void set_mac(const char* value);
  void set_mac(const char* value, size_t size);
  ::std::string* mutable_mac();
  ::std::string* release_mac();
  void set_allocated_mac(::std::string* mac);

  // optional uint32 mobile = 8;
  void clear_mobile();
  static const int kMobileFieldNumber = 8;
  ::google::protobuf::uint32 mobile() const;
  void set_mobile(::google::protobuf::uint32 value);

  // optional string devicemodel = 9;
  void clear_devicemodel();
  static const int kDevicemodelFieldNumber = 9;
  const ::std::string& devicemodel() const;
  void set_devicemodel(const ::std::string& value);
  void set_devicemodel(const char* value);
  void set_devicemodel(const char* value, size_t size);
  ::std::string* mutable_devicemodel();
  ::std::string* release_devicemodel();
  void set_allocated_devicemodel(::std::string* devicemodel);

  // optional string deviceos = 10;
  void clear_deviceos();
  static const int kDeviceosFieldNumber = 10;
  const ::std::string& deviceos() const;
  void set_deviceos(const ::std::string& value);
  void set_deviceos(const char* value);
  void set_deviceos(const char* value, size_t size);
  ::std::string* mutable_deviceos();
  ::std::string* release_deviceos();
  void set_allocated_deviceos(::std::string* deviceos);

  // optional string hostdb = 11;
  void clear_hostdb();
  static const int kHostdbFieldNumber = 11;
  const ::std::string& hostdb() const;
  void set_hostdb(const ::std::string& value);
  void set_hostdb(const char* value);
  void set_hostdb(const char* value, size_t size);
  ::std::string* mutable_hostdb();
  ::std::string* release_hostdb();
  void set_allocated_hostdb(::std::string* hostdb);

  // @@protoc_insertion_point(class_scope:CMDUserLogonReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::uint32 loginid_;
  ::google::protobuf::uint32 platformtype_;
  ::google::protobuf::internal::ArenaStringPtr patternlock_;
  ::google::protobuf::internal::ArenaStringPtr serial_;
  ::google::protobuf::uint32 version_;
  ::google::protobuf::uint32 mobile_;
  ::google::protobuf::internal::ArenaStringPtr mac_;
  ::google::protobuf::internal::ArenaStringPtr devicemodel_;
  ::google::protobuf::internal::ArenaStringPtr deviceos_;
  ::google::protobuf::internal::ArenaStringPtr hostdb_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_LogonSvr_2eproto();
  friend void protobuf_AssignDesc_LogonSvr_2eproto();
  friend void protobuf_ShutdownFile_LogonSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDUserLogonReq* default_instance_;
};
// -------------------------------------------------------------------

class CMDUserLogonErrResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDUserLogonErrResp) */ {
 public:
  CMDUserLogonErrResp();
  virtual ~CMDUserLogonErrResp();

  CMDUserLogonErrResp(const CMDUserLogonErrResp& from);

  inline CMDUserLogonErrResp& operator=(const CMDUserLogonErrResp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDUserLogonErrResp& default_instance();

  void Swap(CMDUserLogonErrResp* other);

  // implements Message ----------------------------------------------

  inline CMDUserLogonErrResp* New() const { return New(NULL); }

  CMDUserLogonErrResp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDUserLogonErrResp& from);
  void MergeFrom(const CMDUserLogonErrResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDUserLogonErrResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CMDErrCode errInfo = 1;
  bool has_errinfo() const;
  void clear_errinfo();
  static const int kErrInfoFieldNumber = 1;
  const ::CMDErrCode& errinfo() const;
  ::CMDErrCode* mutable_errinfo();
  ::CMDErrCode* release_errinfo();
  void set_allocated_errinfo(::CMDErrCode* errinfo);

  // @@protoc_insertion_point(class_scope:CMDUserLogonErrResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::CMDErrCode* errinfo_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_LogonSvr_2eproto();
  friend void protobuf_AssignDesc_LogonSvr_2eproto();
  friend void protobuf_ShutdownFile_LogonSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDUserLogonErrResp* default_instance_;
};
// -------------------------------------------------------------------

class CMDUserLogonSuccessResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDUserLogonSuccessResp) */ {
 public:
  CMDUserLogonSuccessResp();
  virtual ~CMDUserLogonSuccessResp();

  CMDUserLogonSuccessResp(const CMDUserLogonSuccessResp& from);

  inline CMDUserLogonSuccessResp& operator=(const CMDUserLogonSuccessResp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDUserLogonSuccessResp& default_instance();

  void Swap(CMDUserLogonSuccessResp* other);

  // implements Message ----------------------------------------------

  inline CMDUserLogonSuccessResp* New() const { return New(NULL); }

  CMDUserLogonSuccessResp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDUserLogonSuccessResp& from);
  void MergeFrom(const CMDUserLogonSuccessResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDUserLogonSuccessResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 userid = 1;
  void clear_userid();
  static const int kUseridFieldNumber = 1;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // optional string headadd = 2;
  void clear_headadd();
  static const int kHeadaddFieldNumber = 2;
  const ::std::string& headadd() const;
  void set_headadd(const ::std::string& value);
  void set_headadd(const char* value);
  void set_headadd(const char* value, size_t size);
  ::std::string* mutable_headadd();
  ::std::string* release_headadd();
  void set_allocated_headadd(::std::string* headadd);

  // optional uint32 gender = 3;
  void clear_gender();
  static const int kGenderFieldNumber = 3;
  ::google::protobuf::uint32 gender() const;
  void set_gender(::google::protobuf::uint32 value);

  // optional string useralias = 4;
  void clear_useralias();
  static const int kUseraliasFieldNumber = 4;
  const ::std::string& useralias() const;
  void set_useralias(const ::std::string& value);
  void set_useralias(const char* value);
  void set_useralias(const char* value, size_t size);
  ::std::string* mutable_useralias();
  ::std::string* release_useralias();
  void set_allocated_useralias(::std::string* useralias);

  // optional uint32 loginplateform = 5;
  void clear_loginplateform();
  static const int kLoginplateformFieldNumber = 5;
  ::google::protobuf::uint32 loginplateform() const;
  void set_loginplateform(::google::protobuf::uint32 value);

  // optional string tel = 6;
  void clear_tel();
  static const int kTelFieldNumber = 6;
  const ::std::string& tel() const;
  void set_tel(const ::std::string& value);
  void set_tel(const char* value);
  void set_tel(const char* value, size_t size);
  ::std::string* mutable_tel();
  ::std::string* release_tel();
  void set_allocated_tel(::std::string* tel);

  // optional string sessiontoken = 7;
  void clear_sessiontoken();
  static const int kSessiontokenFieldNumber = 7;
  const ::std::string& sessiontoken() const;
  void set_sessiontoken(const ::std::string& value);
  void set_sessiontoken(const char* value);
  void set_sessiontoken(const char* value, size_t size);
  ::std::string* mutable_sessiontoken();
  ::std::string* release_sessiontoken();
  void set_allocated_sessiontoken(::std::string* sessiontoken);

  // optional string validtime = 8;
  void clear_validtime();
  static const int kValidtimeFieldNumber = 8;
  const ::std::string& validtime() const;
  void set_validtime(const ::std::string& value);
  void set_validtime(const char* value);
  void set_validtime(const char* value, size_t size);
  ::std::string* mutable_validtime();
  ::std::string* release_validtime();
  void set_allocated_validtime(::std::string* validtime);

  // optional string servArea = 9;
  void clear_servarea();
  static const int kServAreaFieldNumber = 9;
  const ::std::string& servarea() const;
  void set_servarea(const ::std::string& value);
  void set_servarea(const char* value);
  void set_servarea(const char* value, size_t size);
  ::std::string* mutable_servarea();
  ::std::string* release_servarea();
  void set_allocated_servarea(::std::string* servarea);

  // @@protoc_insertion_point(class_scope:CMDUserLogonSuccessResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr headadd_;
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 gender_;
  ::google::protobuf::internal::ArenaStringPtr useralias_;
  ::google::protobuf::internal::ArenaStringPtr tel_;
  ::google::protobuf::internal::ArenaStringPtr sessiontoken_;
  ::google::protobuf::internal::ArenaStringPtr validtime_;
  ::google::protobuf::internal::ArenaStringPtr servarea_;
  ::google::protobuf::uint32 loginplateform_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_LogonSvr_2eproto();
  friend void protobuf_AssignDesc_LogonSvr_2eproto();
  friend void protobuf_ShutdownFile_LogonSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDUserLogonSuccessResp* default_instance_;
};
// -------------------------------------------------------------------

class CMDSessionTokenReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDSessionTokenReq) */ {
 public:
  CMDSessionTokenReq();
  virtual ~CMDSessionTokenReq();

  CMDSessionTokenReq(const CMDSessionTokenReq& from);

  inline CMDSessionTokenReq& operator=(const CMDSessionTokenReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDSessionTokenReq& default_instance();

  void Swap(CMDSessionTokenReq* other);

  // implements Message ----------------------------------------------

  inline CMDSessionTokenReq* New() const { return New(NULL); }

  CMDSessionTokenReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDSessionTokenReq& from);
  void MergeFrom(const CMDSessionTokenReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDSessionTokenReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 userid = 1;
  void clear_userid();
  static const int kUseridFieldNumber = 1;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMDSessionTokenReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 userid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_LogonSvr_2eproto();
  friend void protobuf_AssignDesc_LogonSvr_2eproto();
  friend void protobuf_ShutdownFile_LogonSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDSessionTokenReq* default_instance_;
};
// -------------------------------------------------------------------

class CMDSessionTokenResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDSessionTokenResp) */ {
 public:
  CMDSessionTokenResp();
  virtual ~CMDSessionTokenResp();

  CMDSessionTokenResp(const CMDSessionTokenResp& from);

  inline CMDSessionTokenResp& operator=(const CMDSessionTokenResp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDSessionTokenResp& default_instance();

  void Swap(CMDSessionTokenResp* other);

  // implements Message ----------------------------------------------

  inline CMDSessionTokenResp* New() const { return New(NULL); }

  CMDSessionTokenResp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDSessionTokenResp& from);
  void MergeFrom(const CMDSessionTokenResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDSessionTokenResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 userid = 1;
  void clear_userid();
  static const int kUseridFieldNumber = 1;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // optional string sessiontoken = 2;
  void clear_sessiontoken();
  static const int kSessiontokenFieldNumber = 2;
  const ::std::string& sessiontoken() const;
  void set_sessiontoken(const ::std::string& value);
  void set_sessiontoken(const char* value);
  void set_sessiontoken(const char* value, size_t size);
  ::std::string* mutable_sessiontoken();
  ::std::string* release_sessiontoken();
  void set_allocated_sessiontoken(::std::string* sessiontoken);

  // optional string validtime = 3;
  void clear_validtime();
  static const int kValidtimeFieldNumber = 3;
  const ::std::string& validtime() const;
  void set_validtime(const ::std::string& value);
  void set_validtime(const char* value);
  void set_validtime(const char* value, size_t size);
  ::std::string* mutable_validtime();
  ::std::string* release_validtime();
  void set_allocated_validtime(::std::string* validtime);

  // @@protoc_insertion_point(class_scope:CMDSessionTokenResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr sessiontoken_;
  ::google::protobuf::internal::ArenaStringPtr validtime_;
  ::google::protobuf::uint32 userid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_LogonSvr_2eproto();
  friend void protobuf_AssignDesc_LogonSvr_2eproto();
  friend void protobuf_ShutdownFile_LogonSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDSessionTokenResp* default_instance_;
};
// -------------------------------------------------------------------

class CMDUserExistReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDUserExistReq) */ {
 public:
  CMDUserExistReq();
  virtual ~CMDUserExistReq();

  CMDUserExistReq(const CMDUserExistReq& from);

  inline CMDUserExistReq& operator=(const CMDUserExistReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDUserExistReq& default_instance();

  void Swap(CMDUserExistReq* other);

  // implements Message ----------------------------------------------

  inline CMDUserExistReq* New() const { return New(NULL); }

  CMDUserExistReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDUserExistReq& from);
  void MergeFrom(const CMDUserExistReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDUserExistReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 loginid = 1;
  void clear_loginid();
  static const int kLoginidFieldNumber = 1;
  ::google::protobuf::uint32 loginid() const;
  void set_loginid(::google::protobuf::uint32 value);

  // optional string token = 2;
  void clear_token();
  static const int kTokenFieldNumber = 2;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // optional uint32 platformType = 3;
  void clear_platformtype();
  static const int kPlatformTypeFieldNumber = 3;
  ::google::protobuf::uint32 platformtype() const;
  void set_platformtype(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMDUserExistReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::uint32 loginid_;
  ::google::protobuf::uint32 platformtype_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_LogonSvr_2eproto();
  friend void protobuf_AssignDesc_LogonSvr_2eproto();
  friend void protobuf_ShutdownFile_LogonSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDUserExistReq* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDUserLogonReq

// optional uint32 loginid = 1;
inline void CMDUserLogonReq::clear_loginid() {
  loginid_ = 0u;
}
inline ::google::protobuf::uint32 CMDUserLogonReq::loginid() const {
  // @@protoc_insertion_point(field_get:CMDUserLogonReq.loginid)
  return loginid_;
}
inline void CMDUserLogonReq::set_loginid(::google::protobuf::uint32 value) {
  
  loginid_ = value;
  // @@protoc_insertion_point(field_set:CMDUserLogonReq.loginid)
}

// optional string token = 2;
inline void CMDUserLogonReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMDUserLogonReq::token() const {
  // @@protoc_insertion_point(field_get:CMDUserLogonReq.token)
  return token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDUserLogonReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDUserLogonReq.token)
}
inline void CMDUserLogonReq::set_token(const char* value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDUserLogonReq.token)
}
inline void CMDUserLogonReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDUserLogonReq.token)
}
inline ::std::string* CMDUserLogonReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:CMDUserLogonReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMDUserLogonReq::release_token() {
  // @@protoc_insertion_point(field_release:CMDUserLogonReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDUserLogonReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:CMDUserLogonReq.token)
}

// optional string patternLock = 3;
inline void CMDUserLogonReq::clear_patternlock() {
  patternlock_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMDUserLogonReq::patternlock() const {
  // @@protoc_insertion_point(field_get:CMDUserLogonReq.patternLock)
  return patternlock_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDUserLogonReq::set_patternlock(const ::std::string& value) {
  
  patternlock_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDUserLogonReq.patternLock)
}
inline void CMDUserLogonReq::set_patternlock(const char* value) {
  
  patternlock_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDUserLogonReq.patternLock)
}
inline void CMDUserLogonReq::set_patternlock(const char* value, size_t size) {
  
  patternlock_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDUserLogonReq.patternLock)
}
inline ::std::string* CMDUserLogonReq::mutable_patternlock() {
  
  // @@protoc_insertion_point(field_mutable:CMDUserLogonReq.patternLock)
  return patternlock_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMDUserLogonReq::release_patternlock() {
  // @@protoc_insertion_point(field_release:CMDUserLogonReq.patternLock)
  
  return patternlock_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDUserLogonReq::set_allocated_patternlock(::std::string* patternlock) {
  if (patternlock != NULL) {
    
  } else {
    
  }
  patternlock_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), patternlock);
  // @@protoc_insertion_point(field_set_allocated:CMDUserLogonReq.patternLock)
}

// optional uint32 platformType = 4;
inline void CMDUserLogonReq::clear_platformtype() {
  platformtype_ = 0u;
}
inline ::google::protobuf::uint32 CMDUserLogonReq::platformtype() const {
  // @@protoc_insertion_point(field_get:CMDUserLogonReq.platformType)
  return platformtype_;
}
inline void CMDUserLogonReq::set_platformtype(::google::protobuf::uint32 value) {
  
  platformtype_ = value;
  // @@protoc_insertion_point(field_set:CMDUserLogonReq.platformType)
}

// optional uint32 version = 5;
inline void CMDUserLogonReq::clear_version() {
  version_ = 0u;
}
inline ::google::protobuf::uint32 CMDUserLogonReq::version() const {
  // @@protoc_insertion_point(field_get:CMDUserLogonReq.version)
  return version_;
}
inline void CMDUserLogonReq::set_version(::google::protobuf::uint32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:CMDUserLogonReq.version)
}

// optional string serial = 6;
inline void CMDUserLogonReq::clear_serial() {
  serial_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMDUserLogonReq::serial() const {
  // @@protoc_insertion_point(field_get:CMDUserLogonReq.serial)
  return serial_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDUserLogonReq::set_serial(const ::std::string& value) {
  
  serial_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDUserLogonReq.serial)
}
inline void CMDUserLogonReq::set_serial(const char* value) {
  
  serial_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDUserLogonReq.serial)
}
inline void CMDUserLogonReq::set_serial(const char* value, size_t size) {
  
  serial_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDUserLogonReq.serial)
}
inline ::std::string* CMDUserLogonReq::mutable_serial() {
  
  // @@protoc_insertion_point(field_mutable:CMDUserLogonReq.serial)
  return serial_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMDUserLogonReq::release_serial() {
  // @@protoc_insertion_point(field_release:CMDUserLogonReq.serial)
  
  return serial_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDUserLogonReq::set_allocated_serial(::std::string* serial) {
  if (serial != NULL) {
    
  } else {
    
  }
  serial_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), serial);
  // @@protoc_insertion_point(field_set_allocated:CMDUserLogonReq.serial)
}

// optional string mac = 7;
inline void CMDUserLogonReq::clear_mac() {
  mac_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMDUserLogonReq::mac() const {
  // @@protoc_insertion_point(field_get:CMDUserLogonReq.mac)
  return mac_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDUserLogonReq::set_mac(const ::std::string& value) {
  
  mac_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDUserLogonReq.mac)
}
inline void CMDUserLogonReq::set_mac(const char* value) {
  
  mac_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDUserLogonReq.mac)
}
inline void CMDUserLogonReq::set_mac(const char* value, size_t size) {
  
  mac_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDUserLogonReq.mac)
}
inline ::std::string* CMDUserLogonReq::mutable_mac() {
  
  // @@protoc_insertion_point(field_mutable:CMDUserLogonReq.mac)
  return mac_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMDUserLogonReq::release_mac() {
  // @@protoc_insertion_point(field_release:CMDUserLogonReq.mac)
  
  return mac_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDUserLogonReq::set_allocated_mac(::std::string* mac) {
  if (mac != NULL) {
    
  } else {
    
  }
  mac_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mac);
  // @@protoc_insertion_point(field_set_allocated:CMDUserLogonReq.mac)
}

// optional uint32 mobile = 8;
inline void CMDUserLogonReq::clear_mobile() {
  mobile_ = 0u;
}
inline ::google::protobuf::uint32 CMDUserLogonReq::mobile() const {
  // @@protoc_insertion_point(field_get:CMDUserLogonReq.mobile)
  return mobile_;
}
inline void CMDUserLogonReq::set_mobile(::google::protobuf::uint32 value) {
  
  mobile_ = value;
  // @@protoc_insertion_point(field_set:CMDUserLogonReq.mobile)
}

// optional string devicemodel = 9;
inline void CMDUserLogonReq::clear_devicemodel() {
  devicemodel_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMDUserLogonReq::devicemodel() const {
  // @@protoc_insertion_point(field_get:CMDUserLogonReq.devicemodel)
  return devicemodel_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDUserLogonReq::set_devicemodel(const ::std::string& value) {
  
  devicemodel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDUserLogonReq.devicemodel)
}
inline void CMDUserLogonReq::set_devicemodel(const char* value) {
  
  devicemodel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDUserLogonReq.devicemodel)
}
inline void CMDUserLogonReq::set_devicemodel(const char* value, size_t size) {
  
  devicemodel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDUserLogonReq.devicemodel)
}
inline ::std::string* CMDUserLogonReq::mutable_devicemodel() {
  
  // @@protoc_insertion_point(field_mutable:CMDUserLogonReq.devicemodel)
  return devicemodel_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMDUserLogonReq::release_devicemodel() {
  // @@protoc_insertion_point(field_release:CMDUserLogonReq.devicemodel)
  
  return devicemodel_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDUserLogonReq::set_allocated_devicemodel(::std::string* devicemodel) {
  if (devicemodel != NULL) {
    
  } else {
    
  }
  devicemodel_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), devicemodel);
  // @@protoc_insertion_point(field_set_allocated:CMDUserLogonReq.devicemodel)
}

// optional string deviceos = 10;
inline void CMDUserLogonReq::clear_deviceos() {
  deviceos_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMDUserLogonReq::deviceos() const {
  // @@protoc_insertion_point(field_get:CMDUserLogonReq.deviceos)
  return deviceos_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDUserLogonReq::set_deviceos(const ::std::string& value) {
  
  deviceos_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDUserLogonReq.deviceos)
}
inline void CMDUserLogonReq::set_deviceos(const char* value) {
  
  deviceos_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDUserLogonReq.deviceos)
}
inline void CMDUserLogonReq::set_deviceos(const char* value, size_t size) {
  
  deviceos_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDUserLogonReq.deviceos)
}
inline ::std::string* CMDUserLogonReq::mutable_deviceos() {
  
  // @@protoc_insertion_point(field_mutable:CMDUserLogonReq.deviceos)
  return deviceos_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMDUserLogonReq::release_deviceos() {
  // @@protoc_insertion_point(field_release:CMDUserLogonReq.deviceos)
  
  return deviceos_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDUserLogonReq::set_allocated_deviceos(::std::string* deviceos) {
  if (deviceos != NULL) {
    
  } else {
    
  }
  deviceos_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), deviceos);
  // @@protoc_insertion_point(field_set_allocated:CMDUserLogonReq.deviceos)
}

// optional string hostdb = 11;
inline void CMDUserLogonReq::clear_hostdb() {
  hostdb_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMDUserLogonReq::hostdb() const {
  // @@protoc_insertion_point(field_get:CMDUserLogonReq.hostdb)
  return hostdb_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDUserLogonReq::set_hostdb(const ::std::string& value) {
  
  hostdb_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDUserLogonReq.hostdb)
}
inline void CMDUserLogonReq::set_hostdb(const char* value) {
  
  hostdb_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDUserLogonReq.hostdb)
}
inline void CMDUserLogonReq::set_hostdb(const char* value, size_t size) {
  
  hostdb_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDUserLogonReq.hostdb)
}
inline ::std::string* CMDUserLogonReq::mutable_hostdb() {
  
  // @@protoc_insertion_point(field_mutable:CMDUserLogonReq.hostdb)
  return hostdb_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMDUserLogonReq::release_hostdb() {
  // @@protoc_insertion_point(field_release:CMDUserLogonReq.hostdb)
  
  return hostdb_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDUserLogonReq::set_allocated_hostdb(::std::string* hostdb) {
  if (hostdb != NULL) {
    
  } else {
    
  }
  hostdb_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hostdb);
  // @@protoc_insertion_point(field_set_allocated:CMDUserLogonReq.hostdb)
}

// -------------------------------------------------------------------

// CMDUserLogonErrResp

// optional .CMDErrCode errInfo = 1;
inline bool CMDUserLogonErrResp::has_errinfo() const {
  return !_is_default_instance_ && errinfo_ != NULL;
}
inline void CMDUserLogonErrResp::clear_errinfo() {
  if (GetArenaNoVirtual() == NULL && errinfo_ != NULL) delete errinfo_;
  errinfo_ = NULL;
}
inline const ::CMDErrCode& CMDUserLogonErrResp::errinfo() const {
  // @@protoc_insertion_point(field_get:CMDUserLogonErrResp.errInfo)
  return errinfo_ != NULL ? *errinfo_ : *default_instance_->errinfo_;
}
inline ::CMDErrCode* CMDUserLogonErrResp::mutable_errinfo() {
  
  if (errinfo_ == NULL) {
    errinfo_ = new ::CMDErrCode;
  }
  // @@protoc_insertion_point(field_mutable:CMDUserLogonErrResp.errInfo)
  return errinfo_;
}
inline ::CMDErrCode* CMDUserLogonErrResp::release_errinfo() {
  // @@protoc_insertion_point(field_release:CMDUserLogonErrResp.errInfo)
  
  ::CMDErrCode* temp = errinfo_;
  errinfo_ = NULL;
  return temp;
}
inline void CMDUserLogonErrResp::set_allocated_errinfo(::CMDErrCode* errinfo) {
  delete errinfo_;
  errinfo_ = errinfo;
  if (errinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDUserLogonErrResp.errInfo)
}

// -------------------------------------------------------------------

// CMDUserLogonSuccessResp

// optional uint32 userid = 1;
inline void CMDUserLogonSuccessResp::clear_userid() {
  userid_ = 0u;
}
inline ::google::protobuf::uint32 CMDUserLogonSuccessResp::userid() const {
  // @@protoc_insertion_point(field_get:CMDUserLogonSuccessResp.userid)
  return userid_;
}
inline void CMDUserLogonSuccessResp::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDUserLogonSuccessResp.userid)
}

// optional string headadd = 2;
inline void CMDUserLogonSuccessResp::clear_headadd() {
  headadd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMDUserLogonSuccessResp::headadd() const {
  // @@protoc_insertion_point(field_get:CMDUserLogonSuccessResp.headadd)
  return headadd_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDUserLogonSuccessResp::set_headadd(const ::std::string& value) {
  
  headadd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDUserLogonSuccessResp.headadd)
}
inline void CMDUserLogonSuccessResp::set_headadd(const char* value) {
  
  headadd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDUserLogonSuccessResp.headadd)
}
inline void CMDUserLogonSuccessResp::set_headadd(const char* value, size_t size) {
  
  headadd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDUserLogonSuccessResp.headadd)
}
inline ::std::string* CMDUserLogonSuccessResp::mutable_headadd() {
  
  // @@protoc_insertion_point(field_mutable:CMDUserLogonSuccessResp.headadd)
  return headadd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMDUserLogonSuccessResp::release_headadd() {
  // @@protoc_insertion_point(field_release:CMDUserLogonSuccessResp.headadd)
  
  return headadd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDUserLogonSuccessResp::set_allocated_headadd(::std::string* headadd) {
  if (headadd != NULL) {
    
  } else {
    
  }
  headadd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), headadd);
  // @@protoc_insertion_point(field_set_allocated:CMDUserLogonSuccessResp.headadd)
}

// optional uint32 gender = 3;
inline void CMDUserLogonSuccessResp::clear_gender() {
  gender_ = 0u;
}
inline ::google::protobuf::uint32 CMDUserLogonSuccessResp::gender() const {
  // @@protoc_insertion_point(field_get:CMDUserLogonSuccessResp.gender)
  return gender_;
}
inline void CMDUserLogonSuccessResp::set_gender(::google::protobuf::uint32 value) {
  
  gender_ = value;
  // @@protoc_insertion_point(field_set:CMDUserLogonSuccessResp.gender)
}

// optional string useralias = 4;
inline void CMDUserLogonSuccessResp::clear_useralias() {
  useralias_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMDUserLogonSuccessResp::useralias() const {
  // @@protoc_insertion_point(field_get:CMDUserLogonSuccessResp.useralias)
  return useralias_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDUserLogonSuccessResp::set_useralias(const ::std::string& value) {
  
  useralias_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDUserLogonSuccessResp.useralias)
}
inline void CMDUserLogonSuccessResp::set_useralias(const char* value) {
  
  useralias_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDUserLogonSuccessResp.useralias)
}
inline void CMDUserLogonSuccessResp::set_useralias(const char* value, size_t size) {
  
  useralias_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDUserLogonSuccessResp.useralias)
}
inline ::std::string* CMDUserLogonSuccessResp::mutable_useralias() {
  
  // @@protoc_insertion_point(field_mutable:CMDUserLogonSuccessResp.useralias)
  return useralias_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMDUserLogonSuccessResp::release_useralias() {
  // @@protoc_insertion_point(field_release:CMDUserLogonSuccessResp.useralias)
  
  return useralias_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDUserLogonSuccessResp::set_allocated_useralias(::std::string* useralias) {
  if (useralias != NULL) {
    
  } else {
    
  }
  useralias_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), useralias);
  // @@protoc_insertion_point(field_set_allocated:CMDUserLogonSuccessResp.useralias)
}

// optional uint32 loginplateform = 5;
inline void CMDUserLogonSuccessResp::clear_loginplateform() {
  loginplateform_ = 0u;
}
inline ::google::protobuf::uint32 CMDUserLogonSuccessResp::loginplateform() const {
  // @@protoc_insertion_point(field_get:CMDUserLogonSuccessResp.loginplateform)
  return loginplateform_;
}
inline void CMDUserLogonSuccessResp::set_loginplateform(::google::protobuf::uint32 value) {
  
  loginplateform_ = value;
  // @@protoc_insertion_point(field_set:CMDUserLogonSuccessResp.loginplateform)
}

// optional string tel = 6;
inline void CMDUserLogonSuccessResp::clear_tel() {
  tel_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMDUserLogonSuccessResp::tel() const {
  // @@protoc_insertion_point(field_get:CMDUserLogonSuccessResp.tel)
  return tel_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDUserLogonSuccessResp::set_tel(const ::std::string& value) {
  
  tel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDUserLogonSuccessResp.tel)
}
inline void CMDUserLogonSuccessResp::set_tel(const char* value) {
  
  tel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDUserLogonSuccessResp.tel)
}
inline void CMDUserLogonSuccessResp::set_tel(const char* value, size_t size) {
  
  tel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDUserLogonSuccessResp.tel)
}
inline ::std::string* CMDUserLogonSuccessResp::mutable_tel() {
  
  // @@protoc_insertion_point(field_mutable:CMDUserLogonSuccessResp.tel)
  return tel_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMDUserLogonSuccessResp::release_tel() {
  // @@protoc_insertion_point(field_release:CMDUserLogonSuccessResp.tel)
  
  return tel_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDUserLogonSuccessResp::set_allocated_tel(::std::string* tel) {
  if (tel != NULL) {
    
  } else {
    
  }
  tel_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tel);
  // @@protoc_insertion_point(field_set_allocated:CMDUserLogonSuccessResp.tel)
}

// optional string sessiontoken = 7;
inline void CMDUserLogonSuccessResp::clear_sessiontoken() {
  sessiontoken_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMDUserLogonSuccessResp::sessiontoken() const {
  // @@protoc_insertion_point(field_get:CMDUserLogonSuccessResp.sessiontoken)
  return sessiontoken_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDUserLogonSuccessResp::set_sessiontoken(const ::std::string& value) {
  
  sessiontoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDUserLogonSuccessResp.sessiontoken)
}
inline void CMDUserLogonSuccessResp::set_sessiontoken(const char* value) {
  
  sessiontoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDUserLogonSuccessResp.sessiontoken)
}
inline void CMDUserLogonSuccessResp::set_sessiontoken(const char* value, size_t size) {
  
  sessiontoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDUserLogonSuccessResp.sessiontoken)
}
inline ::std::string* CMDUserLogonSuccessResp::mutable_sessiontoken() {
  
  // @@protoc_insertion_point(field_mutable:CMDUserLogonSuccessResp.sessiontoken)
  return sessiontoken_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMDUserLogonSuccessResp::release_sessiontoken() {
  // @@protoc_insertion_point(field_release:CMDUserLogonSuccessResp.sessiontoken)
  
  return sessiontoken_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDUserLogonSuccessResp::set_allocated_sessiontoken(::std::string* sessiontoken) {
  if (sessiontoken != NULL) {
    
  } else {
    
  }
  sessiontoken_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sessiontoken);
  // @@protoc_insertion_point(field_set_allocated:CMDUserLogonSuccessResp.sessiontoken)
}

// optional string validtime = 8;
inline void CMDUserLogonSuccessResp::clear_validtime() {
  validtime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMDUserLogonSuccessResp::validtime() const {
  // @@protoc_insertion_point(field_get:CMDUserLogonSuccessResp.validtime)
  return validtime_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDUserLogonSuccessResp::set_validtime(const ::std::string& value) {
  
  validtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDUserLogonSuccessResp.validtime)
}
inline void CMDUserLogonSuccessResp::set_validtime(const char* value) {
  
  validtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDUserLogonSuccessResp.validtime)
}
inline void CMDUserLogonSuccessResp::set_validtime(const char* value, size_t size) {
  
  validtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDUserLogonSuccessResp.validtime)
}
inline ::std::string* CMDUserLogonSuccessResp::mutable_validtime() {
  
  // @@protoc_insertion_point(field_mutable:CMDUserLogonSuccessResp.validtime)
  return validtime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMDUserLogonSuccessResp::release_validtime() {
  // @@protoc_insertion_point(field_release:CMDUserLogonSuccessResp.validtime)
  
  return validtime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDUserLogonSuccessResp::set_allocated_validtime(::std::string* validtime) {
  if (validtime != NULL) {
    
  } else {
    
  }
  validtime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), validtime);
  // @@protoc_insertion_point(field_set_allocated:CMDUserLogonSuccessResp.validtime)
}

// optional string servArea = 9;
inline void CMDUserLogonSuccessResp::clear_servarea() {
  servarea_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMDUserLogonSuccessResp::servarea() const {
  // @@protoc_insertion_point(field_get:CMDUserLogonSuccessResp.servArea)
  return servarea_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDUserLogonSuccessResp::set_servarea(const ::std::string& value) {
  
  servarea_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDUserLogonSuccessResp.servArea)
}
inline void CMDUserLogonSuccessResp::set_servarea(const char* value) {
  
  servarea_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDUserLogonSuccessResp.servArea)
}
inline void CMDUserLogonSuccessResp::set_servarea(const char* value, size_t size) {
  
  servarea_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDUserLogonSuccessResp.servArea)
}
inline ::std::string* CMDUserLogonSuccessResp::mutable_servarea() {
  
  // @@protoc_insertion_point(field_mutable:CMDUserLogonSuccessResp.servArea)
  return servarea_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMDUserLogonSuccessResp::release_servarea() {
  // @@protoc_insertion_point(field_release:CMDUserLogonSuccessResp.servArea)
  
  return servarea_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDUserLogonSuccessResp::set_allocated_servarea(::std::string* servarea) {
  if (servarea != NULL) {
    
  } else {
    
  }
  servarea_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), servarea);
  // @@protoc_insertion_point(field_set_allocated:CMDUserLogonSuccessResp.servArea)
}

// -------------------------------------------------------------------

// CMDSessionTokenReq

// optional uint32 userid = 1;
inline void CMDSessionTokenReq::clear_userid() {
  userid_ = 0u;
}
inline ::google::protobuf::uint32 CMDSessionTokenReq::userid() const {
  // @@protoc_insertion_point(field_get:CMDSessionTokenReq.userid)
  return userid_;
}
inline void CMDSessionTokenReq::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDSessionTokenReq.userid)
}

// -------------------------------------------------------------------

// CMDSessionTokenResp

// optional uint32 userid = 1;
inline void CMDSessionTokenResp::clear_userid() {
  userid_ = 0u;
}
inline ::google::protobuf::uint32 CMDSessionTokenResp::userid() const {
  // @@protoc_insertion_point(field_get:CMDSessionTokenResp.userid)
  return userid_;
}
inline void CMDSessionTokenResp::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDSessionTokenResp.userid)
}

// optional string sessiontoken = 2;
inline void CMDSessionTokenResp::clear_sessiontoken() {
  sessiontoken_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMDSessionTokenResp::sessiontoken() const {
  // @@protoc_insertion_point(field_get:CMDSessionTokenResp.sessiontoken)
  return sessiontoken_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDSessionTokenResp::set_sessiontoken(const ::std::string& value) {
  
  sessiontoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDSessionTokenResp.sessiontoken)
}
inline void CMDSessionTokenResp::set_sessiontoken(const char* value) {
  
  sessiontoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDSessionTokenResp.sessiontoken)
}
inline void CMDSessionTokenResp::set_sessiontoken(const char* value, size_t size) {
  
  sessiontoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDSessionTokenResp.sessiontoken)
}
inline ::std::string* CMDSessionTokenResp::mutable_sessiontoken() {
  
  // @@protoc_insertion_point(field_mutable:CMDSessionTokenResp.sessiontoken)
  return sessiontoken_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMDSessionTokenResp::release_sessiontoken() {
  // @@protoc_insertion_point(field_release:CMDSessionTokenResp.sessiontoken)
  
  return sessiontoken_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDSessionTokenResp::set_allocated_sessiontoken(::std::string* sessiontoken) {
  if (sessiontoken != NULL) {
    
  } else {
    
  }
  sessiontoken_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sessiontoken);
  // @@protoc_insertion_point(field_set_allocated:CMDSessionTokenResp.sessiontoken)
}

// optional string validtime = 3;
inline void CMDSessionTokenResp::clear_validtime() {
  validtime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMDSessionTokenResp::validtime() const {
  // @@protoc_insertion_point(field_get:CMDSessionTokenResp.validtime)
  return validtime_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDSessionTokenResp::set_validtime(const ::std::string& value) {
  
  validtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDSessionTokenResp.validtime)
}
inline void CMDSessionTokenResp::set_validtime(const char* value) {
  
  validtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDSessionTokenResp.validtime)
}
inline void CMDSessionTokenResp::set_validtime(const char* value, size_t size) {
  
  validtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDSessionTokenResp.validtime)
}
inline ::std::string* CMDSessionTokenResp::mutable_validtime() {
  
  // @@protoc_insertion_point(field_mutable:CMDSessionTokenResp.validtime)
  return validtime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMDSessionTokenResp::release_validtime() {
  // @@protoc_insertion_point(field_release:CMDSessionTokenResp.validtime)
  
  return validtime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDSessionTokenResp::set_allocated_validtime(::std::string* validtime) {
  if (validtime != NULL) {
    
  } else {
    
  }
  validtime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), validtime);
  // @@protoc_insertion_point(field_set_allocated:CMDSessionTokenResp.validtime)
}

// -------------------------------------------------------------------

// CMDUserExistReq

// optional uint32 loginid = 1;
inline void CMDUserExistReq::clear_loginid() {
  loginid_ = 0u;
}
inline ::google::protobuf::uint32 CMDUserExistReq::loginid() const {
  // @@protoc_insertion_point(field_get:CMDUserExistReq.loginid)
  return loginid_;
}
inline void CMDUserExistReq::set_loginid(::google::protobuf::uint32 value) {
  
  loginid_ = value;
  // @@protoc_insertion_point(field_set:CMDUserExistReq.loginid)
}

// optional string token = 2;
inline void CMDUserExistReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMDUserExistReq::token() const {
  // @@protoc_insertion_point(field_get:CMDUserExistReq.token)
  return token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDUserExistReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDUserExistReq.token)
}
inline void CMDUserExistReq::set_token(const char* value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDUserExistReq.token)
}
inline void CMDUserExistReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDUserExistReq.token)
}
inline ::std::string* CMDUserExistReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:CMDUserExistReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMDUserExistReq::release_token() {
  // @@protoc_insertion_point(field_release:CMDUserExistReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDUserExistReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:CMDUserExistReq.token)
}

// optional uint32 platformType = 3;
inline void CMDUserExistReq::clear_platformtype() {
  platformtype_ = 0u;
}
inline ::google::protobuf::uint32 CMDUserExistReq::platformtype() const {
  // @@protoc_insertion_point(field_get:CMDUserExistReq.platformType)
  return platformtype_;
}
inline void CMDUserExistReq::set_platformtype(::google::protobuf::uint32 value) {
  
  platformtype_ = value;
  // @@protoc_insertion_point(field_set:CMDUserExistReq.platformType)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_LogonSvr_2eproto__INCLUDED
