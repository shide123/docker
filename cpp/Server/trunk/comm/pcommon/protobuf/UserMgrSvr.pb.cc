// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: UserMgrSvr.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "UserMgrSvr.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* CMDLogonClientInf_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDLogonClientInf_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDLogonClientInfLst_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDLogonClientInfLst_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDTransferMicState_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDTransferMicState_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDUserKickOffLine_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDUserKickOffLine_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDGroupInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDGroupInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDUserGroupInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDUserGroupInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDUserModInfoReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDUserModInfoReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDUserModInfoResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDUserModInfoResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDUserInfoModNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDUserInfoModNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDOperFriendshipReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDOperFriendshipReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDOperFriendshipResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDOperFriendshipResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDQryUserAttentionList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDQryUserAttentionList_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDUserAttentionList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDUserAttentionList_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDUserSysConfigNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDUserSysConfigNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDUserLocateInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDUserLocateInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDUserLocationResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDUserLocationResp_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* e_Friendship_OpType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_UserMgrSvr_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_UserMgrSvr_2eproto() {
  protobuf_AddDesc_UserMgrSvr_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "UserMgrSvr.proto");
  GOOGLE_CHECK(file != NULL);
  CMDLogonClientInf_descriptor_ = file->message_type(0);
  static const int CMDLogonClientInf_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDLogonClientInf, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDLogonClientInf, mobile_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDLogonClientInf, logontime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDLogonClientInf, connid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDLogonClientInf, uuid_),
  };
  CMDLogonClientInf_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDLogonClientInf_descriptor_,
      CMDLogonClientInf::default_instance_,
      CMDLogonClientInf_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDLogonClientInf),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDLogonClientInf, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDLogonClientInf, _is_default_instance_));
  CMDLogonClientInfLst_descriptor_ = file->message_type(1);
  static const int CMDLogonClientInfLst_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDLogonClientInfLst, userinflst_),
  };
  CMDLogonClientInfLst_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDLogonClientInfLst_descriptor_,
      CMDLogonClientInfLst::default_instance_,
      CMDLogonClientInfLst_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDLogonClientInfLst),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDLogonClientInfLst, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDLogonClientInfLst, _is_default_instance_));
  CMDTransferMicState_descriptor_ = file->message_type(2);
  static const int CMDTransferMicState_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDTransferMicState, micrunuserid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDTransferMicState, mictouserid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDTransferMicState, micgroupid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDTransferMicState, micindex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDTransferMicState, micstate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDTransferMicState, invitemicrunid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDTransferMicState, invitemictoid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDTransferMicState, invitemicsessionid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDTransferMicState, userid_),
  };
  CMDTransferMicState_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDTransferMicState_descriptor_,
      CMDTransferMicState::default_instance_,
      CMDTransferMicState_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDTransferMicState),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDTransferMicState, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDTransferMicState, _is_default_instance_));
  CMDUserKickOffLine_descriptor_ = file->message_type(3);
  static const int CMDUserKickOffLine_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserKickOffLine, reasonid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserKickOffLine, newsessionuuid_),
  };
  CMDUserKickOffLine_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDUserKickOffLine_descriptor_,
      CMDUserKickOffLine::default_instance_,
      CMDUserKickOffLine_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDUserKickOffLine),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserKickOffLine, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserKickOffLine, _is_default_instance_));
  CMDGroupInfo_descriptor_ = file->message_type(4);
  static const int CMDGroupInfo_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupInfo, groupid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupInfo, groupname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupInfo, grouphead_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupInfo, showid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupInfo, muteset_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupInfo, roletype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupInfo, membercount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupInfo, visitcount_),
  };
  CMDGroupInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDGroupInfo_descriptor_,
      CMDGroupInfo::default_instance_,
      CMDGroupInfo_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDGroupInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupInfo, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDGroupInfo, _is_default_instance_));
  CMDUserGroupInfo_descriptor_ = file->message_type(5);
  static const int CMDUserGroupInfo_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserGroupInfo, grouplst_),
  };
  CMDUserGroupInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDUserGroupInfo_descriptor_,
      CMDUserGroupInfo::default_instance_,
      CMDUserGroupInfo_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDUserGroupInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserGroupInfo, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserGroupInfo, _is_default_instance_));
  CMDUserModInfoReq_descriptor_ = file->message_type(6);
  static const int CMDUserModInfoReq_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserModInfoReq, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserModInfoReq, useralias_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserModInfoReq, headadd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserModInfoReq, birthday_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserModInfoReq, city_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserModInfoReq, sign_),
  };
  CMDUserModInfoReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDUserModInfoReq_descriptor_,
      CMDUserModInfoReq::default_instance_,
      CMDUserModInfoReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDUserModInfoReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserModInfoReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserModInfoReq, _is_default_instance_));
  CMDUserModInfoResp_descriptor_ = file->message_type(7);
  static const int CMDUserModInfoResp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserModInfoResp, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserModInfoResp, errinfo_),
  };
  CMDUserModInfoResp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDUserModInfoResp_descriptor_,
      CMDUserModInfoResp::default_instance_,
      CMDUserModInfoResp_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDUserModInfoResp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserModInfoResp, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserModInfoResp, _is_default_instance_));
  CMDUserInfoModNotify_descriptor_ = file->message_type(8);
  static const int CMDUserInfoModNotify_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserInfoModNotify, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserInfoModNotify, useralias_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserInfoModNotify, headadd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserInfoModNotify, roletype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserInfoModNotify, groupinfo_),
  };
  CMDUserInfoModNotify_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDUserInfoModNotify_descriptor_,
      CMDUserInfoModNotify::default_instance_,
      CMDUserInfoModNotify_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDUserInfoModNotify),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserInfoModNotify, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserInfoModNotify, _is_default_instance_));
  CMDOperFriendshipReq_descriptor_ = file->message_type(9);
  static const int CMDOperFriendshipReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDOperFriendshipReq, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDOperFriendshipReq, dstuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDOperFriendshipReq, action_),
  };
  CMDOperFriendshipReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDOperFriendshipReq_descriptor_,
      CMDOperFriendshipReq::default_instance_,
      CMDOperFriendshipReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDOperFriendshipReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDOperFriendshipReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDOperFriendshipReq, _is_default_instance_));
  CMDOperFriendshipResp_descriptor_ = file->message_type(10);
  static const int CMDOperFriendshipResp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDOperFriendshipResp, errinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDOperFriendshipResp, dstuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDOperFriendshipResp, action_),
  };
  CMDOperFriendshipResp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDOperFriendshipResp_descriptor_,
      CMDOperFriendshipResp::default_instance_,
      CMDOperFriendshipResp_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDOperFriendshipResp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDOperFriendshipResp, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDOperFriendshipResp, _is_default_instance_));
  CMDQryUserAttentionList_descriptor_ = file->message_type(11);
  static const int CMDQryUserAttentionList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDQryUserAttentionList, userid_),
  };
  CMDQryUserAttentionList_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDQryUserAttentionList_descriptor_,
      CMDQryUserAttentionList::default_instance_,
      CMDQryUserAttentionList_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDQryUserAttentionList),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDQryUserAttentionList, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDQryUserAttentionList, _is_default_instance_));
  CMDUserAttentionList_descriptor_ = file->message_type(12);
  static const int CMDUserAttentionList_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserAttentionList, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserAttentionList, list_),
  };
  CMDUserAttentionList_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDUserAttentionList_descriptor_,
      CMDUserAttentionList::default_instance_,
      CMDUserAttentionList_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDUserAttentionList),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserAttentionList, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserAttentionList, _is_default_instance_));
  CMDUserSysConfigNotify_descriptor_ = file->message_type(13);
  static const int CMDUserSysConfigNotify_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserSysConfigNotify, sysconfig_),
  };
  CMDUserSysConfigNotify_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDUserSysConfigNotify_descriptor_,
      CMDUserSysConfigNotify::default_instance_,
      CMDUserSysConfigNotify_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDUserSysConfigNotify),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserSysConfigNotify, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserSysConfigNotify, _is_default_instance_));
  CMDUserLocateInfo_descriptor_ = file->message_type(14);
  static const int CMDUserLocateInfo_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserLocateInfo, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserLocateInfo, longitude_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserLocateInfo, latitude_),
  };
  CMDUserLocateInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDUserLocateInfo_descriptor_,
      CMDUserLocateInfo::default_instance_,
      CMDUserLocateInfo_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDUserLocateInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserLocateInfo, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserLocateInfo, _is_default_instance_));
  CMDUserLocationResp_descriptor_ = file->message_type(15);
  static const int CMDUserLocationResp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserLocationResp, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserLocationResp, nearlist_),
  };
  CMDUserLocationResp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDUserLocationResp_descriptor_,
      CMDUserLocationResp::default_instance_,
      CMDUserLocationResp_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDUserLocationResp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserLocationResp, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUserLocationResp, _is_default_instance_));
  e_Friendship_OpType_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_UserMgrSvr_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDLogonClientInf_descriptor_, &CMDLogonClientInf::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDLogonClientInfLst_descriptor_, &CMDLogonClientInfLst::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDTransferMicState_descriptor_, &CMDTransferMicState::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDUserKickOffLine_descriptor_, &CMDUserKickOffLine::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDGroupInfo_descriptor_, &CMDGroupInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDUserGroupInfo_descriptor_, &CMDUserGroupInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDUserModInfoReq_descriptor_, &CMDUserModInfoReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDUserModInfoResp_descriptor_, &CMDUserModInfoResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDUserInfoModNotify_descriptor_, &CMDUserInfoModNotify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDOperFriendshipReq_descriptor_, &CMDOperFriendshipReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDOperFriendshipResp_descriptor_, &CMDOperFriendshipResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDQryUserAttentionList_descriptor_, &CMDQryUserAttentionList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDUserAttentionList_descriptor_, &CMDUserAttentionList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDUserSysConfigNotify_descriptor_, &CMDUserSysConfigNotify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDUserLocateInfo_descriptor_, &CMDUserLocateInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDUserLocationResp_descriptor_, &CMDUserLocationResp::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_UserMgrSvr_2eproto() {
  delete CMDLogonClientInf::default_instance_;
  delete CMDLogonClientInf_reflection_;
  delete CMDLogonClientInfLst::default_instance_;
  delete CMDLogonClientInfLst_reflection_;
  delete CMDTransferMicState::default_instance_;
  delete CMDTransferMicState_reflection_;
  delete CMDUserKickOffLine::default_instance_;
  delete CMDUserKickOffLine_reflection_;
  delete CMDGroupInfo::default_instance_;
  delete CMDGroupInfo_reflection_;
  delete CMDUserGroupInfo::default_instance_;
  delete CMDUserGroupInfo_reflection_;
  delete CMDUserModInfoReq::default_instance_;
  delete CMDUserModInfoReq_reflection_;
  delete CMDUserModInfoResp::default_instance_;
  delete CMDUserModInfoResp_reflection_;
  delete CMDUserInfoModNotify::default_instance_;
  delete CMDUserInfoModNotify_reflection_;
  delete CMDOperFriendshipReq::default_instance_;
  delete CMDOperFriendshipReq_reflection_;
  delete CMDOperFriendshipResp::default_instance_;
  delete CMDOperFriendshipResp_reflection_;
  delete CMDQryUserAttentionList::default_instance_;
  delete CMDQryUserAttentionList_reflection_;
  delete CMDUserAttentionList::default_instance_;
  delete CMDUserAttentionList_reflection_;
  delete CMDUserSysConfigNotify::default_instance_;
  delete CMDUserSysConfigNotify_reflection_;
  delete CMDUserLocateInfo::default_instance_;
  delete CMDUserLocateInfo_reflection_;
  delete CMDUserLocationResp::default_instance_;
  delete CMDUserLocationResp_reflection_;
}

void protobuf_AddDesc_UserMgrSvr_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_UserMgrSvr_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_Common_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020UserMgrSvr.proto\032\014Common.proto\"d\n\021CMDL"
    "ogonClientInf\022\016\n\006userid\030\001 \001(\r\022\016\n\006mobile\030"
    "\002 \001(\r\022\021\n\tlogontime\030\003 \001(\r\022\016\n\006connid\030\004 \001(\r"
    "\022\014\n\004uuid\030\005 \001(\t\">\n\024CMDLogonClientInfLst\022&"
    "\n\nuserInfLst\030\001 \003(\0132\022.CMDLogonClientInf\"\323"
    "\001\n\023CMDTransferMicState\022\024\n\014micRunUserID\030\001"
    " \001(\005\022\023\n\013micToUserID\030\002 \001(\005\022\022\n\nmicGroupID\030"
    "\003 \001(\005\022\020\n\010micIndex\030\004 \001(\005\022\020\n\010micState\030\005 \001("
    "\005\022\026\n\016inviteMicRunID\030\006 \001(\005\022\025\n\rinviteMicTo"
    "ID\030\007 \001(\005\022\032\n\022inviteMicSessionID\030\010 \001(\005\022\016\n\006"
    "userID\030\t \001(\r\">\n\022CMDUserKickOffLine\022\020\n\010re"
    "asonid\030\001 \001(\r\022\026\n\016newsessionUUID\030\002 \001(\t\"\241\001\n"
    "\014CMDGroupInfo\022\017\n\007groupid\030\001 \001(\r\022\021\n\tgroupN"
    "ame\030\002 \001(\t\022\021\n\tgrouphead\030\003 \001(\t\022\016\n\006showid\030\004"
    " \001(\r\022\017\n\007muteSet\030\005 \001(\r\022\020\n\010roleType\030\006 \001(\r\022"
    "\023\n\013memberCount\030\007 \001(\r\022\022\n\nvisitCount\030\010 \001(\r"
    "\"3\n\020CMDUserGroupInfo\022\037\n\010grouplst\030\001 \003(\0132\r"
    ".CMDGroupInfo\"\261\001\n\021CMDUserModInfoReq\022\016\n\006u"
    "serID\030\001 \001(\r\022\035\n\tuserAlias\030\002 \001(\0132\n.CMDStri"
    "ng\022\033\n\007headAdd\030\003 \001(\0132\n.CMDString\022\034\n\010birth"
    "day\030\004 \001(\0132\n.CMDString\022\030\n\004city\030\005 \001(\0132\n.CM"
    "DString\022\030\n\004sign\030\006 \001(\0132\n.CMDString\"B\n\022CMD"
    "UserModInfoResp\022\016\n\006userID\030\001 \001(\r\022\034\n\007errIn"
    "fo\030\002 \001(\0132\013.CMDErrCode\"\242\001\n\024CMDUserInfoMod"
    "Notify\022\016\n\006userID\030\001 \001(\r\022\035\n\tuserAlias\030\002 \001("
    "\0132\n.CMDString\022\033\n\007headAdd\030\003 \001(\0132\n.CMDStri"
    "ng\022\034\n\010roleType\030\004 \001(\0132\n.CMDUInt32\022 \n\tgrou"
    "pInfo\030\006 \001(\0132\r.CMDGroupInfo\"\\\n\024CMDOperFri"
    "endshipReq\022\016\n\006userid\030\001 \001(\r\022\016\n\006dstuid\030\002 \001"
    "(\r\022$\n\006action\030\003 \001(\0162\024.e_Friendship_OpType"
    "\"k\n\025CMDOperFriendshipResp\022\034\n\007errInfo\030\001 \001"
    "(\0132\013.CMDErrCode\022\016\n\006dstuid\030\002 \001(\r\022$\n\006actio"
    "n\030\003 \001(\0162\024.e_Friendship_OpType\")\n\027CMDQryU"
    "serAttentionList\022\016\n\006userid\030\001 \001(\r\"4\n\024CMDU"
    "serAttentionList\022\016\n\006userid\030\001 \001(\r\022\014\n\004list"
    "\030\002 \003(\r\"+\n\026CMDUserSysConfigNotify\022\021\n\tsysc"
    "onfig\030\001 \001(\t\"H\n\021CMDUserLocateInfo\022\016\n\006user"
    "id\030\001 \001(\r\022\021\n\tlongitude\030\002 \001(\001\022\020\n\010latitude\030"
    "\003 \001(\001\"K\n\023CMDUserLocationResp\022\016\n\006userid\030\001"
    " \001(\r\022$\n\010nearlist\030\002 \003(\0132\022.CMDUserLocateIn"
    "fo*c\n\023e_Friendship_OpType\022\023\n\017OPTYPE_UNFO"
    "LLOW\020\000\022\021\n\rOPTYPE_FOLLOW\020\001\022\022\n\016OPTYPE_UNBL"
    "OCK\020\002\022\020\n\014OPTYPE_BLOCK\020\003B\026\n\022com.dream.cub"
    "e.tcpH\001b\006proto3", 1735);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "UserMgrSvr.proto", &protobuf_RegisterTypes);
  CMDLogonClientInf::default_instance_ = new CMDLogonClientInf();
  CMDLogonClientInfLst::default_instance_ = new CMDLogonClientInfLst();
  CMDTransferMicState::default_instance_ = new CMDTransferMicState();
  CMDUserKickOffLine::default_instance_ = new CMDUserKickOffLine();
  CMDGroupInfo::default_instance_ = new CMDGroupInfo();
  CMDUserGroupInfo::default_instance_ = new CMDUserGroupInfo();
  CMDUserModInfoReq::default_instance_ = new CMDUserModInfoReq();
  CMDUserModInfoResp::default_instance_ = new CMDUserModInfoResp();
  CMDUserInfoModNotify::default_instance_ = new CMDUserInfoModNotify();
  CMDOperFriendshipReq::default_instance_ = new CMDOperFriendshipReq();
  CMDOperFriendshipResp::default_instance_ = new CMDOperFriendshipResp();
  CMDQryUserAttentionList::default_instance_ = new CMDQryUserAttentionList();
  CMDUserAttentionList::default_instance_ = new CMDUserAttentionList();
  CMDUserSysConfigNotify::default_instance_ = new CMDUserSysConfigNotify();
  CMDUserLocateInfo::default_instance_ = new CMDUserLocateInfo();
  CMDUserLocationResp::default_instance_ = new CMDUserLocationResp();
  CMDLogonClientInf::default_instance_->InitAsDefaultInstance();
  CMDLogonClientInfLst::default_instance_->InitAsDefaultInstance();
  CMDTransferMicState::default_instance_->InitAsDefaultInstance();
  CMDUserKickOffLine::default_instance_->InitAsDefaultInstance();
  CMDGroupInfo::default_instance_->InitAsDefaultInstance();
  CMDUserGroupInfo::default_instance_->InitAsDefaultInstance();
  CMDUserModInfoReq::default_instance_->InitAsDefaultInstance();
  CMDUserModInfoResp::default_instance_->InitAsDefaultInstance();
  CMDUserInfoModNotify::default_instance_->InitAsDefaultInstance();
  CMDOperFriendshipReq::default_instance_->InitAsDefaultInstance();
  CMDOperFriendshipResp::default_instance_->InitAsDefaultInstance();
  CMDQryUserAttentionList::default_instance_->InitAsDefaultInstance();
  CMDUserAttentionList::default_instance_->InitAsDefaultInstance();
  CMDUserSysConfigNotify::default_instance_->InitAsDefaultInstance();
  CMDUserLocateInfo::default_instance_->InitAsDefaultInstance();
  CMDUserLocationResp::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_UserMgrSvr_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_UserMgrSvr_2eproto {
  StaticDescriptorInitializer_UserMgrSvr_2eproto() {
    protobuf_AddDesc_UserMgrSvr_2eproto();
  }
} static_descriptor_initializer_UserMgrSvr_2eproto_;
const ::google::protobuf::EnumDescriptor* e_Friendship_OpType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return e_Friendship_OpType_descriptor_;
}
bool e_Friendship_OpType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDLogonClientInf::kUseridFieldNumber;
const int CMDLogonClientInf::kMobileFieldNumber;
const int CMDLogonClientInf::kLogontimeFieldNumber;
const int CMDLogonClientInf::kConnidFieldNumber;
const int CMDLogonClientInf::kUuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDLogonClientInf::CMDLogonClientInf()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDLogonClientInf)
}

void CMDLogonClientInf::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDLogonClientInf::CMDLogonClientInf(const CMDLogonClientInf& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDLogonClientInf)
}

void CMDLogonClientInf::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  userid_ = 0u;
  mobile_ = 0u;
  logontime_ = 0u;
  connid_ = 0u;
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CMDLogonClientInf::~CMDLogonClientInf() {
  // @@protoc_insertion_point(destructor:CMDLogonClientInf)
  SharedDtor();
}

void CMDLogonClientInf::SharedDtor() {
  uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CMDLogonClientInf::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDLogonClientInf::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDLogonClientInf_descriptor_;
}

const CMDLogonClientInf& CMDLogonClientInf::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_UserMgrSvr_2eproto();
  return *default_instance_;
}

CMDLogonClientInf* CMDLogonClientInf::default_instance_ = NULL;

CMDLogonClientInf* CMDLogonClientInf::New(::google::protobuf::Arena* arena) const {
  CMDLogonClientInf* n = new CMDLogonClientInf;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDLogonClientInf::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDLogonClientInf)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDLogonClientInf, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDLogonClientInf*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(userid_, connid_);
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool CMDLogonClientInf::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDLogonClientInf)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 userid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_mobile;
        break;
      }

      // optional uint32 mobile = 2;
      case 2: {
        if (tag == 16) {
         parse_mobile:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mobile_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_logontime;
        break;
      }

      // optional uint32 logontime = 3;
      case 3: {
        if (tag == 24) {
         parse_logontime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &logontime_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_connid;
        break;
      }

      // optional uint32 connid = 4;
      case 4: {
        if (tag == 32) {
         parse_connid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &connid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_uuid;
        break;
      }

      // optional string uuid = 5;
      case 5: {
        if (tag == 42) {
         parse_uuid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uuid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uuid().data(), this->uuid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMDLogonClientInf.uuid"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDLogonClientInf)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDLogonClientInf)
  return false;
#undef DO_
}

void CMDLogonClientInf::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDLogonClientInf)
  // optional uint32 userid = 1;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->userid(), output);
  }

  // optional uint32 mobile = 2;
  if (this->mobile() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->mobile(), output);
  }

  // optional uint32 logontime = 3;
  if (this->logontime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->logontime(), output);
  }

  // optional uint32 connid = 4;
  if (this->connid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->connid(), output);
  }

  // optional string uuid = 5;
  if (this->uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uuid().data(), this->uuid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDLogonClientInf.uuid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->uuid(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDLogonClientInf)
}

::google::protobuf::uint8* CMDLogonClientInf::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDLogonClientInf)
  // optional uint32 userid = 1;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->userid(), target);
  }

  // optional uint32 mobile = 2;
  if (this->mobile() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->mobile(), target);
  }

  // optional uint32 logontime = 3;
  if (this->logontime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->logontime(), target);
  }

  // optional uint32 connid = 4;
  if (this->connid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->connid(), target);
  }

  // optional string uuid = 5;
  if (this->uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uuid().data(), this->uuid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDLogonClientInf.uuid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->uuid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDLogonClientInf)
  return target;
}

int CMDLogonClientInf::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDLogonClientInf)
  int total_size = 0;

  // optional uint32 userid = 1;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userid());
  }

  // optional uint32 mobile = 2;
  if (this->mobile() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mobile());
  }

  // optional uint32 logontime = 3;
  if (this->logontime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->logontime());
  }

  // optional uint32 connid = 4;
  if (this->connid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->connid());
  }

  // optional string uuid = 5;
  if (this->uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uuid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDLogonClientInf::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDLogonClientInf)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDLogonClientInf* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDLogonClientInf>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDLogonClientInf)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDLogonClientInf)
    MergeFrom(*source);
  }
}

void CMDLogonClientInf::MergeFrom(const CMDLogonClientInf& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDLogonClientInf)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.mobile() != 0) {
    set_mobile(from.mobile());
  }
  if (from.logontime() != 0) {
    set_logontime(from.logontime());
  }
  if (from.connid() != 0) {
    set_connid(from.connid());
  }
  if (from.uuid().size() > 0) {

    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
}

void CMDLogonClientInf::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDLogonClientInf)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDLogonClientInf::CopyFrom(const CMDLogonClientInf& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDLogonClientInf)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDLogonClientInf::IsInitialized() const {

  return true;
}

void CMDLogonClientInf::Swap(CMDLogonClientInf* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDLogonClientInf::InternalSwap(CMDLogonClientInf* other) {
  std::swap(userid_, other->userid_);
  std::swap(mobile_, other->mobile_);
  std::swap(logontime_, other->logontime_);
  std::swap(connid_, other->connid_);
  uuid_.Swap(&other->uuid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDLogonClientInf::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDLogonClientInf_descriptor_;
  metadata.reflection = CMDLogonClientInf_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDLogonClientInf

// optional uint32 userid = 1;
void CMDLogonClientInf::clear_userid() {
  userid_ = 0u;
}
 ::google::protobuf::uint32 CMDLogonClientInf::userid() const {
  // @@protoc_insertion_point(field_get:CMDLogonClientInf.userid)
  return userid_;
}
 void CMDLogonClientInf::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDLogonClientInf.userid)
}

// optional uint32 mobile = 2;
void CMDLogonClientInf::clear_mobile() {
  mobile_ = 0u;
}
 ::google::protobuf::uint32 CMDLogonClientInf::mobile() const {
  // @@protoc_insertion_point(field_get:CMDLogonClientInf.mobile)
  return mobile_;
}
 void CMDLogonClientInf::set_mobile(::google::protobuf::uint32 value) {
  
  mobile_ = value;
  // @@protoc_insertion_point(field_set:CMDLogonClientInf.mobile)
}

// optional uint32 logontime = 3;
void CMDLogonClientInf::clear_logontime() {
  logontime_ = 0u;
}
 ::google::protobuf::uint32 CMDLogonClientInf::logontime() const {
  // @@protoc_insertion_point(field_get:CMDLogonClientInf.logontime)
  return logontime_;
}
 void CMDLogonClientInf::set_logontime(::google::protobuf::uint32 value) {
  
  logontime_ = value;
  // @@protoc_insertion_point(field_set:CMDLogonClientInf.logontime)
}

// optional uint32 connid = 4;
void CMDLogonClientInf::clear_connid() {
  connid_ = 0u;
}
 ::google::protobuf::uint32 CMDLogonClientInf::connid() const {
  // @@protoc_insertion_point(field_get:CMDLogonClientInf.connid)
  return connid_;
}
 void CMDLogonClientInf::set_connid(::google::protobuf::uint32 value) {
  
  connid_ = value;
  // @@protoc_insertion_point(field_set:CMDLogonClientInf.connid)
}

// optional string uuid = 5;
void CMDLogonClientInf::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CMDLogonClientInf::uuid() const {
  // @@protoc_insertion_point(field_get:CMDLogonClientInf.uuid)
  return uuid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDLogonClientInf::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDLogonClientInf.uuid)
}
 void CMDLogonClientInf::set_uuid(const char* value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDLogonClientInf.uuid)
}
 void CMDLogonClientInf::set_uuid(const char* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDLogonClientInf.uuid)
}
 ::std::string* CMDLogonClientInf::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:CMDLogonClientInf.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMDLogonClientInf::release_uuid() {
  // @@protoc_insertion_point(field_release:CMDLogonClientInf.uuid)
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDLogonClientInf::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:CMDLogonClientInf.uuid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDLogonClientInfLst::kUserInfLstFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDLogonClientInfLst::CMDLogonClientInfLst()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDLogonClientInfLst)
}

void CMDLogonClientInfLst::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDLogonClientInfLst::CMDLogonClientInfLst(const CMDLogonClientInfLst& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDLogonClientInfLst)
}

void CMDLogonClientInfLst::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

CMDLogonClientInfLst::~CMDLogonClientInfLst() {
  // @@protoc_insertion_point(destructor:CMDLogonClientInfLst)
  SharedDtor();
}

void CMDLogonClientInfLst::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMDLogonClientInfLst::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDLogonClientInfLst::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDLogonClientInfLst_descriptor_;
}

const CMDLogonClientInfLst& CMDLogonClientInfLst::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_UserMgrSvr_2eproto();
  return *default_instance_;
}

CMDLogonClientInfLst* CMDLogonClientInfLst::default_instance_ = NULL;

CMDLogonClientInfLst* CMDLogonClientInfLst::New(::google::protobuf::Arena* arena) const {
  CMDLogonClientInfLst* n = new CMDLogonClientInfLst;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDLogonClientInfLst::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDLogonClientInfLst)
  userinflst_.Clear();
}

bool CMDLogonClientInfLst::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDLogonClientInfLst)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CMDLogonClientInf userInfLst = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_userInfLst:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_userinflst()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_userInfLst;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDLogonClientInfLst)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDLogonClientInfLst)
  return false;
#undef DO_
}

void CMDLogonClientInfLst::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDLogonClientInfLst)
  // repeated .CMDLogonClientInf userInfLst = 1;
  for (unsigned int i = 0, n = this->userinflst_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->userinflst(i), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDLogonClientInfLst)
}

::google::protobuf::uint8* CMDLogonClientInfLst::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDLogonClientInfLst)
  // repeated .CMDLogonClientInf userInfLst = 1;
  for (unsigned int i = 0, n = this->userinflst_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->userinflst(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDLogonClientInfLst)
  return target;
}

int CMDLogonClientInfLst::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDLogonClientInfLst)
  int total_size = 0;

  // repeated .CMDLogonClientInf userInfLst = 1;
  total_size += 1 * this->userinflst_size();
  for (int i = 0; i < this->userinflst_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->userinflst(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDLogonClientInfLst::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDLogonClientInfLst)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDLogonClientInfLst* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDLogonClientInfLst>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDLogonClientInfLst)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDLogonClientInfLst)
    MergeFrom(*source);
  }
}

void CMDLogonClientInfLst::MergeFrom(const CMDLogonClientInfLst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDLogonClientInfLst)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  userinflst_.MergeFrom(from.userinflst_);
}

void CMDLogonClientInfLst::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDLogonClientInfLst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDLogonClientInfLst::CopyFrom(const CMDLogonClientInfLst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDLogonClientInfLst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDLogonClientInfLst::IsInitialized() const {

  return true;
}

void CMDLogonClientInfLst::Swap(CMDLogonClientInfLst* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDLogonClientInfLst::InternalSwap(CMDLogonClientInfLst* other) {
  userinflst_.UnsafeArenaSwap(&other->userinflst_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDLogonClientInfLst::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDLogonClientInfLst_descriptor_;
  metadata.reflection = CMDLogonClientInfLst_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDLogonClientInfLst

// repeated .CMDLogonClientInf userInfLst = 1;
int CMDLogonClientInfLst::userinflst_size() const {
  return userinflst_.size();
}
void CMDLogonClientInfLst::clear_userinflst() {
  userinflst_.Clear();
}
const ::CMDLogonClientInf& CMDLogonClientInfLst::userinflst(int index) const {
  // @@protoc_insertion_point(field_get:CMDLogonClientInfLst.userInfLst)
  return userinflst_.Get(index);
}
::CMDLogonClientInf* CMDLogonClientInfLst::mutable_userinflst(int index) {
  // @@protoc_insertion_point(field_mutable:CMDLogonClientInfLst.userInfLst)
  return userinflst_.Mutable(index);
}
::CMDLogonClientInf* CMDLogonClientInfLst::add_userinflst() {
  // @@protoc_insertion_point(field_add:CMDLogonClientInfLst.userInfLst)
  return userinflst_.Add();
}
::google::protobuf::RepeatedPtrField< ::CMDLogonClientInf >*
CMDLogonClientInfLst::mutable_userinflst() {
  // @@protoc_insertion_point(field_mutable_list:CMDLogonClientInfLst.userInfLst)
  return &userinflst_;
}
const ::google::protobuf::RepeatedPtrField< ::CMDLogonClientInf >&
CMDLogonClientInfLst::userinflst() const {
  // @@protoc_insertion_point(field_list:CMDLogonClientInfLst.userInfLst)
  return userinflst_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDTransferMicState::kMicRunUserIDFieldNumber;
const int CMDTransferMicState::kMicToUserIDFieldNumber;
const int CMDTransferMicState::kMicGroupIDFieldNumber;
const int CMDTransferMicState::kMicIndexFieldNumber;
const int CMDTransferMicState::kMicStateFieldNumber;
const int CMDTransferMicState::kInviteMicRunIDFieldNumber;
const int CMDTransferMicState::kInviteMicToIDFieldNumber;
const int CMDTransferMicState::kInviteMicSessionIDFieldNumber;
const int CMDTransferMicState::kUserIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDTransferMicState::CMDTransferMicState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDTransferMicState)
}

void CMDTransferMicState::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDTransferMicState::CMDTransferMicState(const CMDTransferMicState& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDTransferMicState)
}

void CMDTransferMicState::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  micrunuserid_ = 0;
  mictouserid_ = 0;
  micgroupid_ = 0;
  micindex_ = 0;
  micstate_ = 0;
  invitemicrunid_ = 0;
  invitemictoid_ = 0;
  invitemicsessionid_ = 0;
  userid_ = 0u;
}

CMDTransferMicState::~CMDTransferMicState() {
  // @@protoc_insertion_point(destructor:CMDTransferMicState)
  SharedDtor();
}

void CMDTransferMicState::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMDTransferMicState::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDTransferMicState::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDTransferMicState_descriptor_;
}

const CMDTransferMicState& CMDTransferMicState::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_UserMgrSvr_2eproto();
  return *default_instance_;
}

CMDTransferMicState* CMDTransferMicState::default_instance_ = NULL;

CMDTransferMicState* CMDTransferMicState::New(::google::protobuf::Arena* arena) const {
  CMDTransferMicState* n = new CMDTransferMicState;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDTransferMicState::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDTransferMicState)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDTransferMicState, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDTransferMicState*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(micrunuserid_, invitemicsessionid_);
  userid_ = 0u;

#undef ZR_HELPER_
#undef ZR_

}

bool CMDTransferMicState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDTransferMicState)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 micRunUserID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &micrunuserid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_micToUserID;
        break;
      }

      // optional int32 micToUserID = 2;
      case 2: {
        if (tag == 16) {
         parse_micToUserID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mictouserid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_micGroupID;
        break;
      }

      // optional int32 micGroupID = 3;
      case 3: {
        if (tag == 24) {
         parse_micGroupID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &micgroupid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_micIndex;
        break;
      }

      // optional int32 micIndex = 4;
      case 4: {
        if (tag == 32) {
         parse_micIndex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &micindex_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_micState;
        break;
      }

      // optional int32 micState = 5;
      case 5: {
        if (tag == 40) {
         parse_micState:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &micstate_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_inviteMicRunID;
        break;
      }

      // optional int32 inviteMicRunID = 6;
      case 6: {
        if (tag == 48) {
         parse_inviteMicRunID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &invitemicrunid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_inviteMicToID;
        break;
      }

      // optional int32 inviteMicToID = 7;
      case 7: {
        if (tag == 56) {
         parse_inviteMicToID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &invitemictoid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_inviteMicSessionID;
        break;
      }

      // optional int32 inviteMicSessionID = 8;
      case 8: {
        if (tag == 64) {
         parse_inviteMicSessionID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &invitemicsessionid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_userID;
        break;
      }

      // optional uint32 userID = 9;
      case 9: {
        if (tag == 72) {
         parse_userID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDTransferMicState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDTransferMicState)
  return false;
#undef DO_
}

void CMDTransferMicState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDTransferMicState)
  // optional int32 micRunUserID = 1;
  if (this->micrunuserid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->micrunuserid(), output);
  }

  // optional int32 micToUserID = 2;
  if (this->mictouserid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->mictouserid(), output);
  }

  // optional int32 micGroupID = 3;
  if (this->micgroupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->micgroupid(), output);
  }

  // optional int32 micIndex = 4;
  if (this->micindex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->micindex(), output);
  }

  // optional int32 micState = 5;
  if (this->micstate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->micstate(), output);
  }

  // optional int32 inviteMicRunID = 6;
  if (this->invitemicrunid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->invitemicrunid(), output);
  }

  // optional int32 inviteMicToID = 7;
  if (this->invitemictoid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->invitemictoid(), output);
  }

  // optional int32 inviteMicSessionID = 8;
  if (this->invitemicsessionid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->invitemicsessionid(), output);
  }

  // optional uint32 userID = 9;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->userid(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDTransferMicState)
}

::google::protobuf::uint8* CMDTransferMicState::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDTransferMicState)
  // optional int32 micRunUserID = 1;
  if (this->micrunuserid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->micrunuserid(), target);
  }

  // optional int32 micToUserID = 2;
  if (this->mictouserid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->mictouserid(), target);
  }

  // optional int32 micGroupID = 3;
  if (this->micgroupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->micgroupid(), target);
  }

  // optional int32 micIndex = 4;
  if (this->micindex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->micindex(), target);
  }

  // optional int32 micState = 5;
  if (this->micstate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->micstate(), target);
  }

  // optional int32 inviteMicRunID = 6;
  if (this->invitemicrunid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->invitemicrunid(), target);
  }

  // optional int32 inviteMicToID = 7;
  if (this->invitemictoid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->invitemictoid(), target);
  }

  // optional int32 inviteMicSessionID = 8;
  if (this->invitemicsessionid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->invitemicsessionid(), target);
  }

  // optional uint32 userID = 9;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->userid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDTransferMicState)
  return target;
}

int CMDTransferMicState::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDTransferMicState)
  int total_size = 0;

  // optional int32 micRunUserID = 1;
  if (this->micrunuserid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->micrunuserid());
  }

  // optional int32 micToUserID = 2;
  if (this->mictouserid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mictouserid());
  }

  // optional int32 micGroupID = 3;
  if (this->micgroupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->micgroupid());
  }

  // optional int32 micIndex = 4;
  if (this->micindex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->micindex());
  }

  // optional int32 micState = 5;
  if (this->micstate() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->micstate());
  }

  // optional int32 inviteMicRunID = 6;
  if (this->invitemicrunid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->invitemicrunid());
  }

  // optional int32 inviteMicToID = 7;
  if (this->invitemictoid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->invitemictoid());
  }

  // optional int32 inviteMicSessionID = 8;
  if (this->invitemicsessionid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->invitemicsessionid());
  }

  // optional uint32 userID = 9;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDTransferMicState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDTransferMicState)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDTransferMicState* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDTransferMicState>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDTransferMicState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDTransferMicState)
    MergeFrom(*source);
  }
}

void CMDTransferMicState::MergeFrom(const CMDTransferMicState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDTransferMicState)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.micrunuserid() != 0) {
    set_micrunuserid(from.micrunuserid());
  }
  if (from.mictouserid() != 0) {
    set_mictouserid(from.mictouserid());
  }
  if (from.micgroupid() != 0) {
    set_micgroupid(from.micgroupid());
  }
  if (from.micindex() != 0) {
    set_micindex(from.micindex());
  }
  if (from.micstate() != 0) {
    set_micstate(from.micstate());
  }
  if (from.invitemicrunid() != 0) {
    set_invitemicrunid(from.invitemicrunid());
  }
  if (from.invitemictoid() != 0) {
    set_invitemictoid(from.invitemictoid());
  }
  if (from.invitemicsessionid() != 0) {
    set_invitemicsessionid(from.invitemicsessionid());
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
}

void CMDTransferMicState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDTransferMicState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDTransferMicState::CopyFrom(const CMDTransferMicState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDTransferMicState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDTransferMicState::IsInitialized() const {

  return true;
}

void CMDTransferMicState::Swap(CMDTransferMicState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDTransferMicState::InternalSwap(CMDTransferMicState* other) {
  std::swap(micrunuserid_, other->micrunuserid_);
  std::swap(mictouserid_, other->mictouserid_);
  std::swap(micgroupid_, other->micgroupid_);
  std::swap(micindex_, other->micindex_);
  std::swap(micstate_, other->micstate_);
  std::swap(invitemicrunid_, other->invitemicrunid_);
  std::swap(invitemictoid_, other->invitemictoid_);
  std::swap(invitemicsessionid_, other->invitemicsessionid_);
  std::swap(userid_, other->userid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDTransferMicState::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDTransferMicState_descriptor_;
  metadata.reflection = CMDTransferMicState_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDTransferMicState

// optional int32 micRunUserID = 1;
void CMDTransferMicState::clear_micrunuserid() {
  micrunuserid_ = 0;
}
 ::google::protobuf::int32 CMDTransferMicState::micrunuserid() const {
  // @@protoc_insertion_point(field_get:CMDTransferMicState.micRunUserID)
  return micrunuserid_;
}
 void CMDTransferMicState::set_micrunuserid(::google::protobuf::int32 value) {
  
  micrunuserid_ = value;
  // @@protoc_insertion_point(field_set:CMDTransferMicState.micRunUserID)
}

// optional int32 micToUserID = 2;
void CMDTransferMicState::clear_mictouserid() {
  mictouserid_ = 0;
}
 ::google::protobuf::int32 CMDTransferMicState::mictouserid() const {
  // @@protoc_insertion_point(field_get:CMDTransferMicState.micToUserID)
  return mictouserid_;
}
 void CMDTransferMicState::set_mictouserid(::google::protobuf::int32 value) {
  
  mictouserid_ = value;
  // @@protoc_insertion_point(field_set:CMDTransferMicState.micToUserID)
}

// optional int32 micGroupID = 3;
void CMDTransferMicState::clear_micgroupid() {
  micgroupid_ = 0;
}
 ::google::protobuf::int32 CMDTransferMicState::micgroupid() const {
  // @@protoc_insertion_point(field_get:CMDTransferMicState.micGroupID)
  return micgroupid_;
}
 void CMDTransferMicState::set_micgroupid(::google::protobuf::int32 value) {
  
  micgroupid_ = value;
  // @@protoc_insertion_point(field_set:CMDTransferMicState.micGroupID)
}

// optional int32 micIndex = 4;
void CMDTransferMicState::clear_micindex() {
  micindex_ = 0;
}
 ::google::protobuf::int32 CMDTransferMicState::micindex() const {
  // @@protoc_insertion_point(field_get:CMDTransferMicState.micIndex)
  return micindex_;
}
 void CMDTransferMicState::set_micindex(::google::protobuf::int32 value) {
  
  micindex_ = value;
  // @@protoc_insertion_point(field_set:CMDTransferMicState.micIndex)
}

// optional int32 micState = 5;
void CMDTransferMicState::clear_micstate() {
  micstate_ = 0;
}
 ::google::protobuf::int32 CMDTransferMicState::micstate() const {
  // @@protoc_insertion_point(field_get:CMDTransferMicState.micState)
  return micstate_;
}
 void CMDTransferMicState::set_micstate(::google::protobuf::int32 value) {
  
  micstate_ = value;
  // @@protoc_insertion_point(field_set:CMDTransferMicState.micState)
}

// optional int32 inviteMicRunID = 6;
void CMDTransferMicState::clear_invitemicrunid() {
  invitemicrunid_ = 0;
}
 ::google::protobuf::int32 CMDTransferMicState::invitemicrunid() const {
  // @@protoc_insertion_point(field_get:CMDTransferMicState.inviteMicRunID)
  return invitemicrunid_;
}
 void CMDTransferMicState::set_invitemicrunid(::google::protobuf::int32 value) {
  
  invitemicrunid_ = value;
  // @@protoc_insertion_point(field_set:CMDTransferMicState.inviteMicRunID)
}

// optional int32 inviteMicToID = 7;
void CMDTransferMicState::clear_invitemictoid() {
  invitemictoid_ = 0;
}
 ::google::protobuf::int32 CMDTransferMicState::invitemictoid() const {
  // @@protoc_insertion_point(field_get:CMDTransferMicState.inviteMicToID)
  return invitemictoid_;
}
 void CMDTransferMicState::set_invitemictoid(::google::protobuf::int32 value) {
  
  invitemictoid_ = value;
  // @@protoc_insertion_point(field_set:CMDTransferMicState.inviteMicToID)
}

// optional int32 inviteMicSessionID = 8;
void CMDTransferMicState::clear_invitemicsessionid() {
  invitemicsessionid_ = 0;
}
 ::google::protobuf::int32 CMDTransferMicState::invitemicsessionid() const {
  // @@protoc_insertion_point(field_get:CMDTransferMicState.inviteMicSessionID)
  return invitemicsessionid_;
}
 void CMDTransferMicState::set_invitemicsessionid(::google::protobuf::int32 value) {
  
  invitemicsessionid_ = value;
  // @@protoc_insertion_point(field_set:CMDTransferMicState.inviteMicSessionID)
}

// optional uint32 userID = 9;
void CMDTransferMicState::clear_userid() {
  userid_ = 0u;
}
 ::google::protobuf::uint32 CMDTransferMicState::userid() const {
  // @@protoc_insertion_point(field_get:CMDTransferMicState.userID)
  return userid_;
}
 void CMDTransferMicState::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDTransferMicState.userID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDUserKickOffLine::kReasonidFieldNumber;
const int CMDUserKickOffLine::kNewsessionUUIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDUserKickOffLine::CMDUserKickOffLine()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDUserKickOffLine)
}

void CMDUserKickOffLine::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDUserKickOffLine::CMDUserKickOffLine(const CMDUserKickOffLine& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDUserKickOffLine)
}

void CMDUserKickOffLine::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  reasonid_ = 0u;
  newsessionuuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CMDUserKickOffLine::~CMDUserKickOffLine() {
  // @@protoc_insertion_point(destructor:CMDUserKickOffLine)
  SharedDtor();
}

void CMDUserKickOffLine::SharedDtor() {
  newsessionuuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CMDUserKickOffLine::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDUserKickOffLine::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDUserKickOffLine_descriptor_;
}

const CMDUserKickOffLine& CMDUserKickOffLine::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_UserMgrSvr_2eproto();
  return *default_instance_;
}

CMDUserKickOffLine* CMDUserKickOffLine::default_instance_ = NULL;

CMDUserKickOffLine* CMDUserKickOffLine::New(::google::protobuf::Arena* arena) const {
  CMDUserKickOffLine* n = new CMDUserKickOffLine;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDUserKickOffLine::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDUserKickOffLine)
  reasonid_ = 0u;
  newsessionuuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool CMDUserKickOffLine::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDUserKickOffLine)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 reasonid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &reasonid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_newsessionUUID;
        break;
      }

      // optional string newsessionUUID = 2;
      case 2: {
        if (tag == 18) {
         parse_newsessionUUID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_newsessionuuid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->newsessionuuid().data(), this->newsessionuuid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMDUserKickOffLine.newsessionUUID"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDUserKickOffLine)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDUserKickOffLine)
  return false;
#undef DO_
}

void CMDUserKickOffLine::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDUserKickOffLine)
  // optional uint32 reasonid = 1;
  if (this->reasonid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->reasonid(), output);
  }

  // optional string newsessionUUID = 2;
  if (this->newsessionuuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->newsessionuuid().data(), this->newsessionuuid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDUserKickOffLine.newsessionUUID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->newsessionuuid(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDUserKickOffLine)
}

::google::protobuf::uint8* CMDUserKickOffLine::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDUserKickOffLine)
  // optional uint32 reasonid = 1;
  if (this->reasonid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->reasonid(), target);
  }

  // optional string newsessionUUID = 2;
  if (this->newsessionuuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->newsessionuuid().data(), this->newsessionuuid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDUserKickOffLine.newsessionUUID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->newsessionuuid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDUserKickOffLine)
  return target;
}

int CMDUserKickOffLine::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDUserKickOffLine)
  int total_size = 0;

  // optional uint32 reasonid = 1;
  if (this->reasonid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->reasonid());
  }

  // optional string newsessionUUID = 2;
  if (this->newsessionuuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->newsessionuuid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDUserKickOffLine::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDUserKickOffLine)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDUserKickOffLine* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDUserKickOffLine>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDUserKickOffLine)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDUserKickOffLine)
    MergeFrom(*source);
  }
}

void CMDUserKickOffLine::MergeFrom(const CMDUserKickOffLine& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDUserKickOffLine)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.reasonid() != 0) {
    set_reasonid(from.reasonid());
  }
  if (from.newsessionuuid().size() > 0) {

    newsessionuuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.newsessionuuid_);
  }
}

void CMDUserKickOffLine::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDUserKickOffLine)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDUserKickOffLine::CopyFrom(const CMDUserKickOffLine& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDUserKickOffLine)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDUserKickOffLine::IsInitialized() const {

  return true;
}

void CMDUserKickOffLine::Swap(CMDUserKickOffLine* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDUserKickOffLine::InternalSwap(CMDUserKickOffLine* other) {
  std::swap(reasonid_, other->reasonid_);
  newsessionuuid_.Swap(&other->newsessionuuid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDUserKickOffLine::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDUserKickOffLine_descriptor_;
  metadata.reflection = CMDUserKickOffLine_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDUserKickOffLine

// optional uint32 reasonid = 1;
void CMDUserKickOffLine::clear_reasonid() {
  reasonid_ = 0u;
}
 ::google::protobuf::uint32 CMDUserKickOffLine::reasonid() const {
  // @@protoc_insertion_point(field_get:CMDUserKickOffLine.reasonid)
  return reasonid_;
}
 void CMDUserKickOffLine::set_reasonid(::google::protobuf::uint32 value) {
  
  reasonid_ = value;
  // @@protoc_insertion_point(field_set:CMDUserKickOffLine.reasonid)
}

// optional string newsessionUUID = 2;
void CMDUserKickOffLine::clear_newsessionuuid() {
  newsessionuuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CMDUserKickOffLine::newsessionuuid() const {
  // @@protoc_insertion_point(field_get:CMDUserKickOffLine.newsessionUUID)
  return newsessionuuid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDUserKickOffLine::set_newsessionuuid(const ::std::string& value) {
  
  newsessionuuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDUserKickOffLine.newsessionUUID)
}
 void CMDUserKickOffLine::set_newsessionuuid(const char* value) {
  
  newsessionuuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDUserKickOffLine.newsessionUUID)
}
 void CMDUserKickOffLine::set_newsessionuuid(const char* value, size_t size) {
  
  newsessionuuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDUserKickOffLine.newsessionUUID)
}
 ::std::string* CMDUserKickOffLine::mutable_newsessionuuid() {
  
  // @@protoc_insertion_point(field_mutable:CMDUserKickOffLine.newsessionUUID)
  return newsessionuuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMDUserKickOffLine::release_newsessionuuid() {
  // @@protoc_insertion_point(field_release:CMDUserKickOffLine.newsessionUUID)
  
  return newsessionuuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDUserKickOffLine::set_allocated_newsessionuuid(::std::string* newsessionuuid) {
  if (newsessionuuid != NULL) {
    
  } else {
    
  }
  newsessionuuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), newsessionuuid);
  // @@protoc_insertion_point(field_set_allocated:CMDUserKickOffLine.newsessionUUID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDGroupInfo::kGroupidFieldNumber;
const int CMDGroupInfo::kGroupNameFieldNumber;
const int CMDGroupInfo::kGroupheadFieldNumber;
const int CMDGroupInfo::kShowidFieldNumber;
const int CMDGroupInfo::kMuteSetFieldNumber;
const int CMDGroupInfo::kRoleTypeFieldNumber;
const int CMDGroupInfo::kMemberCountFieldNumber;
const int CMDGroupInfo::kVisitCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDGroupInfo::CMDGroupInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDGroupInfo)
}

void CMDGroupInfo::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDGroupInfo::CMDGroupInfo(const CMDGroupInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDGroupInfo)
}

void CMDGroupInfo::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  groupid_ = 0u;
  groupname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  grouphead_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  showid_ = 0u;
  muteset_ = 0u;
  roletype_ = 0u;
  membercount_ = 0u;
  visitcount_ = 0u;
}

CMDGroupInfo::~CMDGroupInfo() {
  // @@protoc_insertion_point(destructor:CMDGroupInfo)
  SharedDtor();
}

void CMDGroupInfo::SharedDtor() {
  groupname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  grouphead_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CMDGroupInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDGroupInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDGroupInfo_descriptor_;
}

const CMDGroupInfo& CMDGroupInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_UserMgrSvr_2eproto();
  return *default_instance_;
}

CMDGroupInfo* CMDGroupInfo::default_instance_ = NULL;

CMDGroupInfo* CMDGroupInfo::New(::google::protobuf::Arena* arena) const {
  CMDGroupInfo* n = new CMDGroupInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDGroupInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDGroupInfo)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDGroupInfo, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDGroupInfo*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(groupid_, showid_);
  ZR_(muteset_, visitcount_);
  groupname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  grouphead_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool CMDGroupInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDGroupInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 groupid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &groupid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_groupName;
        break;
      }

      // optional string groupName = 2;
      case 2: {
        if (tag == 18) {
         parse_groupName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_groupname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->groupname().data(), this->groupname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMDGroupInfo.groupName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_grouphead;
        break;
      }

      // optional string grouphead = 3;
      case 3: {
        if (tag == 26) {
         parse_grouphead:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_grouphead()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->grouphead().data(), this->grouphead().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMDGroupInfo.grouphead"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_showid;
        break;
      }

      // optional uint32 showid = 4;
      case 4: {
        if (tag == 32) {
         parse_showid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &showid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_muteSet;
        break;
      }

      // optional uint32 muteSet = 5;
      case 5: {
        if (tag == 40) {
         parse_muteSet:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &muteset_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_roleType;
        break;
      }

      // optional uint32 roleType = 6;
      case 6: {
        if (tag == 48) {
         parse_roleType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &roletype_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_memberCount;
        break;
      }

      // optional uint32 memberCount = 7;
      case 7: {
        if (tag == 56) {
         parse_memberCount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &membercount_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_visitCount;
        break;
      }

      // optional uint32 visitCount = 8;
      case 8: {
        if (tag == 64) {
         parse_visitCount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &visitcount_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDGroupInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDGroupInfo)
  return false;
#undef DO_
}

void CMDGroupInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDGroupInfo)
  // optional uint32 groupid = 1;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->groupid(), output);
  }

  // optional string groupName = 2;
  if (this->groupname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->groupname().data(), this->groupname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDGroupInfo.groupName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->groupname(), output);
  }

  // optional string grouphead = 3;
  if (this->grouphead().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->grouphead().data(), this->grouphead().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDGroupInfo.grouphead");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->grouphead(), output);
  }

  // optional uint32 showid = 4;
  if (this->showid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->showid(), output);
  }

  // optional uint32 muteSet = 5;
  if (this->muteset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->muteset(), output);
  }

  // optional uint32 roleType = 6;
  if (this->roletype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->roletype(), output);
  }

  // optional uint32 memberCount = 7;
  if (this->membercount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->membercount(), output);
  }

  // optional uint32 visitCount = 8;
  if (this->visitcount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->visitcount(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDGroupInfo)
}

::google::protobuf::uint8* CMDGroupInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDGroupInfo)
  // optional uint32 groupid = 1;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->groupid(), target);
  }

  // optional string groupName = 2;
  if (this->groupname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->groupname().data(), this->groupname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDGroupInfo.groupName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->groupname(), target);
  }

  // optional string grouphead = 3;
  if (this->grouphead().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->grouphead().data(), this->grouphead().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDGroupInfo.grouphead");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->grouphead(), target);
  }

  // optional uint32 showid = 4;
  if (this->showid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->showid(), target);
  }

  // optional uint32 muteSet = 5;
  if (this->muteset() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->muteset(), target);
  }

  // optional uint32 roleType = 6;
  if (this->roletype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->roletype(), target);
  }

  // optional uint32 memberCount = 7;
  if (this->membercount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->membercount(), target);
  }

  // optional uint32 visitCount = 8;
  if (this->visitcount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->visitcount(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDGroupInfo)
  return target;
}

int CMDGroupInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDGroupInfo)
  int total_size = 0;

  // optional uint32 groupid = 1;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->groupid());
  }

  // optional string groupName = 2;
  if (this->groupname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->groupname());
  }

  // optional string grouphead = 3;
  if (this->grouphead().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->grouphead());
  }

  // optional uint32 showid = 4;
  if (this->showid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->showid());
  }

  // optional uint32 muteSet = 5;
  if (this->muteset() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->muteset());
  }

  // optional uint32 roleType = 6;
  if (this->roletype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->roletype());
  }

  // optional uint32 memberCount = 7;
  if (this->membercount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->membercount());
  }

  // optional uint32 visitCount = 8;
  if (this->visitcount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->visitcount());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDGroupInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDGroupInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDGroupInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDGroupInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDGroupInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDGroupInfo)
    MergeFrom(*source);
  }
}

void CMDGroupInfo::MergeFrom(const CMDGroupInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDGroupInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
  if (from.groupname().size() > 0) {

    groupname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.groupname_);
  }
  if (from.grouphead().size() > 0) {

    grouphead_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.grouphead_);
  }
  if (from.showid() != 0) {
    set_showid(from.showid());
  }
  if (from.muteset() != 0) {
    set_muteset(from.muteset());
  }
  if (from.roletype() != 0) {
    set_roletype(from.roletype());
  }
  if (from.membercount() != 0) {
    set_membercount(from.membercount());
  }
  if (from.visitcount() != 0) {
    set_visitcount(from.visitcount());
  }
}

void CMDGroupInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDGroupInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDGroupInfo::CopyFrom(const CMDGroupInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDGroupInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDGroupInfo::IsInitialized() const {

  return true;
}

void CMDGroupInfo::Swap(CMDGroupInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDGroupInfo::InternalSwap(CMDGroupInfo* other) {
  std::swap(groupid_, other->groupid_);
  groupname_.Swap(&other->groupname_);
  grouphead_.Swap(&other->grouphead_);
  std::swap(showid_, other->showid_);
  std::swap(muteset_, other->muteset_);
  std::swap(roletype_, other->roletype_);
  std::swap(membercount_, other->membercount_);
  std::swap(visitcount_, other->visitcount_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDGroupInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDGroupInfo_descriptor_;
  metadata.reflection = CMDGroupInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDGroupInfo

// optional uint32 groupid = 1;
void CMDGroupInfo::clear_groupid() {
  groupid_ = 0u;
}
 ::google::protobuf::uint32 CMDGroupInfo::groupid() const {
  // @@protoc_insertion_point(field_get:CMDGroupInfo.groupid)
  return groupid_;
}
 void CMDGroupInfo::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDGroupInfo.groupid)
}

// optional string groupName = 2;
void CMDGroupInfo::clear_groupname() {
  groupname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CMDGroupInfo::groupname() const {
  // @@protoc_insertion_point(field_get:CMDGroupInfo.groupName)
  return groupname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDGroupInfo::set_groupname(const ::std::string& value) {
  
  groupname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDGroupInfo.groupName)
}
 void CMDGroupInfo::set_groupname(const char* value) {
  
  groupname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDGroupInfo.groupName)
}
 void CMDGroupInfo::set_groupname(const char* value, size_t size) {
  
  groupname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDGroupInfo.groupName)
}
 ::std::string* CMDGroupInfo::mutable_groupname() {
  
  // @@protoc_insertion_point(field_mutable:CMDGroupInfo.groupName)
  return groupname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMDGroupInfo::release_groupname() {
  // @@protoc_insertion_point(field_release:CMDGroupInfo.groupName)
  
  return groupname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDGroupInfo::set_allocated_groupname(::std::string* groupname) {
  if (groupname != NULL) {
    
  } else {
    
  }
  groupname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), groupname);
  // @@protoc_insertion_point(field_set_allocated:CMDGroupInfo.groupName)
}

// optional string grouphead = 3;
void CMDGroupInfo::clear_grouphead() {
  grouphead_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CMDGroupInfo::grouphead() const {
  // @@protoc_insertion_point(field_get:CMDGroupInfo.grouphead)
  return grouphead_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDGroupInfo::set_grouphead(const ::std::string& value) {
  
  grouphead_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDGroupInfo.grouphead)
}
 void CMDGroupInfo::set_grouphead(const char* value) {
  
  grouphead_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDGroupInfo.grouphead)
}
 void CMDGroupInfo::set_grouphead(const char* value, size_t size) {
  
  grouphead_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDGroupInfo.grouphead)
}
 ::std::string* CMDGroupInfo::mutable_grouphead() {
  
  // @@protoc_insertion_point(field_mutable:CMDGroupInfo.grouphead)
  return grouphead_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMDGroupInfo::release_grouphead() {
  // @@protoc_insertion_point(field_release:CMDGroupInfo.grouphead)
  
  return grouphead_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDGroupInfo::set_allocated_grouphead(::std::string* grouphead) {
  if (grouphead != NULL) {
    
  } else {
    
  }
  grouphead_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), grouphead);
  // @@protoc_insertion_point(field_set_allocated:CMDGroupInfo.grouphead)
}

// optional uint32 showid = 4;
void CMDGroupInfo::clear_showid() {
  showid_ = 0u;
}
 ::google::protobuf::uint32 CMDGroupInfo::showid() const {
  // @@protoc_insertion_point(field_get:CMDGroupInfo.showid)
  return showid_;
}
 void CMDGroupInfo::set_showid(::google::protobuf::uint32 value) {
  
  showid_ = value;
  // @@protoc_insertion_point(field_set:CMDGroupInfo.showid)
}

// optional uint32 muteSet = 5;
void CMDGroupInfo::clear_muteset() {
  muteset_ = 0u;
}
 ::google::protobuf::uint32 CMDGroupInfo::muteset() const {
  // @@protoc_insertion_point(field_get:CMDGroupInfo.muteSet)
  return muteset_;
}
 void CMDGroupInfo::set_muteset(::google::protobuf::uint32 value) {
  
  muteset_ = value;
  // @@protoc_insertion_point(field_set:CMDGroupInfo.muteSet)
}

// optional uint32 roleType = 6;
void CMDGroupInfo::clear_roletype() {
  roletype_ = 0u;
}
 ::google::protobuf::uint32 CMDGroupInfo::roletype() const {
  // @@protoc_insertion_point(field_get:CMDGroupInfo.roleType)
  return roletype_;
}
 void CMDGroupInfo::set_roletype(::google::protobuf::uint32 value) {
  
  roletype_ = value;
  // @@protoc_insertion_point(field_set:CMDGroupInfo.roleType)
}

// optional uint32 memberCount = 7;
void CMDGroupInfo::clear_membercount() {
  membercount_ = 0u;
}
 ::google::protobuf::uint32 CMDGroupInfo::membercount() const {
  // @@protoc_insertion_point(field_get:CMDGroupInfo.memberCount)
  return membercount_;
}
 void CMDGroupInfo::set_membercount(::google::protobuf::uint32 value) {
  
  membercount_ = value;
  // @@protoc_insertion_point(field_set:CMDGroupInfo.memberCount)
}

// optional uint32 visitCount = 8;
void CMDGroupInfo::clear_visitcount() {
  visitcount_ = 0u;
}
 ::google::protobuf::uint32 CMDGroupInfo::visitcount() const {
  // @@protoc_insertion_point(field_get:CMDGroupInfo.visitCount)
  return visitcount_;
}
 void CMDGroupInfo::set_visitcount(::google::protobuf::uint32 value) {
  
  visitcount_ = value;
  // @@protoc_insertion_point(field_set:CMDGroupInfo.visitCount)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDUserGroupInfo::kGrouplstFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDUserGroupInfo::CMDUserGroupInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDUserGroupInfo)
}

void CMDUserGroupInfo::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDUserGroupInfo::CMDUserGroupInfo(const CMDUserGroupInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDUserGroupInfo)
}

void CMDUserGroupInfo::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

CMDUserGroupInfo::~CMDUserGroupInfo() {
  // @@protoc_insertion_point(destructor:CMDUserGroupInfo)
  SharedDtor();
}

void CMDUserGroupInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMDUserGroupInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDUserGroupInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDUserGroupInfo_descriptor_;
}

const CMDUserGroupInfo& CMDUserGroupInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_UserMgrSvr_2eproto();
  return *default_instance_;
}

CMDUserGroupInfo* CMDUserGroupInfo::default_instance_ = NULL;

CMDUserGroupInfo* CMDUserGroupInfo::New(::google::protobuf::Arena* arena) const {
  CMDUserGroupInfo* n = new CMDUserGroupInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDUserGroupInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDUserGroupInfo)
  grouplst_.Clear();
}

bool CMDUserGroupInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDUserGroupInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CMDGroupInfo grouplst = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_grouplst:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_grouplst()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_grouplst;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDUserGroupInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDUserGroupInfo)
  return false;
#undef DO_
}

void CMDUserGroupInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDUserGroupInfo)
  // repeated .CMDGroupInfo grouplst = 1;
  for (unsigned int i = 0, n = this->grouplst_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->grouplst(i), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDUserGroupInfo)
}

::google::protobuf::uint8* CMDUserGroupInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDUserGroupInfo)
  // repeated .CMDGroupInfo grouplst = 1;
  for (unsigned int i = 0, n = this->grouplst_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->grouplst(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDUserGroupInfo)
  return target;
}

int CMDUserGroupInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDUserGroupInfo)
  int total_size = 0;

  // repeated .CMDGroupInfo grouplst = 1;
  total_size += 1 * this->grouplst_size();
  for (int i = 0; i < this->grouplst_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->grouplst(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDUserGroupInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDUserGroupInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDUserGroupInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDUserGroupInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDUserGroupInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDUserGroupInfo)
    MergeFrom(*source);
  }
}

void CMDUserGroupInfo::MergeFrom(const CMDUserGroupInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDUserGroupInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  grouplst_.MergeFrom(from.grouplst_);
}

void CMDUserGroupInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDUserGroupInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDUserGroupInfo::CopyFrom(const CMDUserGroupInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDUserGroupInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDUserGroupInfo::IsInitialized() const {

  return true;
}

void CMDUserGroupInfo::Swap(CMDUserGroupInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDUserGroupInfo::InternalSwap(CMDUserGroupInfo* other) {
  grouplst_.UnsafeArenaSwap(&other->grouplst_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDUserGroupInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDUserGroupInfo_descriptor_;
  metadata.reflection = CMDUserGroupInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDUserGroupInfo

// repeated .CMDGroupInfo grouplst = 1;
int CMDUserGroupInfo::grouplst_size() const {
  return grouplst_.size();
}
void CMDUserGroupInfo::clear_grouplst() {
  grouplst_.Clear();
}
const ::CMDGroupInfo& CMDUserGroupInfo::grouplst(int index) const {
  // @@protoc_insertion_point(field_get:CMDUserGroupInfo.grouplst)
  return grouplst_.Get(index);
}
::CMDGroupInfo* CMDUserGroupInfo::mutable_grouplst(int index) {
  // @@protoc_insertion_point(field_mutable:CMDUserGroupInfo.grouplst)
  return grouplst_.Mutable(index);
}
::CMDGroupInfo* CMDUserGroupInfo::add_grouplst() {
  // @@protoc_insertion_point(field_add:CMDUserGroupInfo.grouplst)
  return grouplst_.Add();
}
::google::protobuf::RepeatedPtrField< ::CMDGroupInfo >*
CMDUserGroupInfo::mutable_grouplst() {
  // @@protoc_insertion_point(field_mutable_list:CMDUserGroupInfo.grouplst)
  return &grouplst_;
}
const ::google::protobuf::RepeatedPtrField< ::CMDGroupInfo >&
CMDUserGroupInfo::grouplst() const {
  // @@protoc_insertion_point(field_list:CMDUserGroupInfo.grouplst)
  return grouplst_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDUserModInfoReq::kUserIDFieldNumber;
const int CMDUserModInfoReq::kUserAliasFieldNumber;
const int CMDUserModInfoReq::kHeadAddFieldNumber;
const int CMDUserModInfoReq::kBirthdayFieldNumber;
const int CMDUserModInfoReq::kCityFieldNumber;
const int CMDUserModInfoReq::kSignFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDUserModInfoReq::CMDUserModInfoReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDUserModInfoReq)
}

void CMDUserModInfoReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  useralias_ = const_cast< ::CMDString*>(&::CMDString::default_instance());
  headadd_ = const_cast< ::CMDString*>(&::CMDString::default_instance());
  birthday_ = const_cast< ::CMDString*>(&::CMDString::default_instance());
  city_ = const_cast< ::CMDString*>(&::CMDString::default_instance());
  sign_ = const_cast< ::CMDString*>(&::CMDString::default_instance());
}

CMDUserModInfoReq::CMDUserModInfoReq(const CMDUserModInfoReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDUserModInfoReq)
}

void CMDUserModInfoReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  userid_ = 0u;
  useralias_ = NULL;
  headadd_ = NULL;
  birthday_ = NULL;
  city_ = NULL;
  sign_ = NULL;
}

CMDUserModInfoReq::~CMDUserModInfoReq() {
  // @@protoc_insertion_point(destructor:CMDUserModInfoReq)
  SharedDtor();
}

void CMDUserModInfoReq::SharedDtor() {
  if (this != default_instance_) {
    delete useralias_;
    delete headadd_;
    delete birthday_;
    delete city_;
    delete sign_;
  }
}

void CMDUserModInfoReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDUserModInfoReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDUserModInfoReq_descriptor_;
}

const CMDUserModInfoReq& CMDUserModInfoReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_UserMgrSvr_2eproto();
  return *default_instance_;
}

CMDUserModInfoReq* CMDUserModInfoReq::default_instance_ = NULL;

CMDUserModInfoReq* CMDUserModInfoReq::New(::google::protobuf::Arena* arena) const {
  CMDUserModInfoReq* n = new CMDUserModInfoReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDUserModInfoReq::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDUserModInfoReq)
  userid_ = 0u;
  if (GetArenaNoVirtual() == NULL && useralias_ != NULL) delete useralias_;
  useralias_ = NULL;
  if (GetArenaNoVirtual() == NULL && headadd_ != NULL) delete headadd_;
  headadd_ = NULL;
  if (GetArenaNoVirtual() == NULL && birthday_ != NULL) delete birthday_;
  birthday_ = NULL;
  if (GetArenaNoVirtual() == NULL && city_ != NULL) delete city_;
  city_ = NULL;
  if (GetArenaNoVirtual() == NULL && sign_ != NULL) delete sign_;
  sign_ = NULL;
}

bool CMDUserModInfoReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDUserModInfoReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 userID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_userAlias;
        break;
      }

      // optional .CMDString userAlias = 2;
      case 2: {
        if (tag == 18) {
         parse_userAlias:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_useralias()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_headAdd;
        break;
      }

      // optional .CMDString headAdd = 3;
      case 3: {
        if (tag == 26) {
         parse_headAdd:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_headadd()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_birthday;
        break;
      }

      // optional .CMDString birthday = 4;
      case 4: {
        if (tag == 34) {
         parse_birthday:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_birthday()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_city;
        break;
      }

      // optional .CMDString city = 5;
      case 5: {
        if (tag == 42) {
         parse_city:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_city()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_sign;
        break;
      }

      // optional .CMDString sign = 6;
      case 6: {
        if (tag == 50) {
         parse_sign:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_sign()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDUserModInfoReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDUserModInfoReq)
  return false;
#undef DO_
}

void CMDUserModInfoReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDUserModInfoReq)
  // optional uint32 userID = 1;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->userid(), output);
  }

  // optional .CMDString userAlias = 2;
  if (this->has_useralias()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->useralias_, output);
  }

  // optional .CMDString headAdd = 3;
  if (this->has_headadd()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->headadd_, output);
  }

  // optional .CMDString birthday = 4;
  if (this->has_birthday()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->birthday_, output);
  }

  // optional .CMDString city = 5;
  if (this->has_city()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->city_, output);
  }

  // optional .CMDString sign = 6;
  if (this->has_sign()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->sign_, output);
  }

  // @@protoc_insertion_point(serialize_end:CMDUserModInfoReq)
}

::google::protobuf::uint8* CMDUserModInfoReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDUserModInfoReq)
  // optional uint32 userID = 1;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->userid(), target);
  }

  // optional .CMDString userAlias = 2;
  if (this->has_useralias()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->useralias_, false, target);
  }

  // optional .CMDString headAdd = 3;
  if (this->has_headadd()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->headadd_, false, target);
  }

  // optional .CMDString birthday = 4;
  if (this->has_birthday()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->birthday_, false, target);
  }

  // optional .CMDString city = 5;
  if (this->has_city()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->city_, false, target);
  }

  // optional .CMDString sign = 6;
  if (this->has_sign()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->sign_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDUserModInfoReq)
  return target;
}

int CMDUserModInfoReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDUserModInfoReq)
  int total_size = 0;

  // optional uint32 userID = 1;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userid());
  }

  // optional .CMDString userAlias = 2;
  if (this->has_useralias()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->useralias_);
  }

  // optional .CMDString headAdd = 3;
  if (this->has_headadd()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->headadd_);
  }

  // optional .CMDString birthday = 4;
  if (this->has_birthday()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->birthday_);
  }

  // optional .CMDString city = 5;
  if (this->has_city()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->city_);
  }

  // optional .CMDString sign = 6;
  if (this->has_sign()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->sign_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDUserModInfoReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDUserModInfoReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDUserModInfoReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDUserModInfoReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDUserModInfoReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDUserModInfoReq)
    MergeFrom(*source);
  }
}

void CMDUserModInfoReq::MergeFrom(const CMDUserModInfoReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDUserModInfoReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.has_useralias()) {
    mutable_useralias()->::CMDString::MergeFrom(from.useralias());
  }
  if (from.has_headadd()) {
    mutable_headadd()->::CMDString::MergeFrom(from.headadd());
  }
  if (from.has_birthday()) {
    mutable_birthday()->::CMDString::MergeFrom(from.birthday());
  }
  if (from.has_city()) {
    mutable_city()->::CMDString::MergeFrom(from.city());
  }
  if (from.has_sign()) {
    mutable_sign()->::CMDString::MergeFrom(from.sign());
  }
}

void CMDUserModInfoReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDUserModInfoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDUserModInfoReq::CopyFrom(const CMDUserModInfoReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDUserModInfoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDUserModInfoReq::IsInitialized() const {

  return true;
}

void CMDUserModInfoReq::Swap(CMDUserModInfoReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDUserModInfoReq::InternalSwap(CMDUserModInfoReq* other) {
  std::swap(userid_, other->userid_);
  std::swap(useralias_, other->useralias_);
  std::swap(headadd_, other->headadd_);
  std::swap(birthday_, other->birthday_);
  std::swap(city_, other->city_);
  std::swap(sign_, other->sign_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDUserModInfoReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDUserModInfoReq_descriptor_;
  metadata.reflection = CMDUserModInfoReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDUserModInfoReq

// optional uint32 userID = 1;
void CMDUserModInfoReq::clear_userid() {
  userid_ = 0u;
}
 ::google::protobuf::uint32 CMDUserModInfoReq::userid() const {
  // @@protoc_insertion_point(field_get:CMDUserModInfoReq.userID)
  return userid_;
}
 void CMDUserModInfoReq::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDUserModInfoReq.userID)
}

// optional .CMDString userAlias = 2;
bool CMDUserModInfoReq::has_useralias() const {
  return !_is_default_instance_ && useralias_ != NULL;
}
void CMDUserModInfoReq::clear_useralias() {
  if (GetArenaNoVirtual() == NULL && useralias_ != NULL) delete useralias_;
  useralias_ = NULL;
}
const ::CMDString& CMDUserModInfoReq::useralias() const {
  // @@protoc_insertion_point(field_get:CMDUserModInfoReq.userAlias)
  return useralias_ != NULL ? *useralias_ : *default_instance_->useralias_;
}
::CMDString* CMDUserModInfoReq::mutable_useralias() {
  
  if (useralias_ == NULL) {
    useralias_ = new ::CMDString;
  }
  // @@protoc_insertion_point(field_mutable:CMDUserModInfoReq.userAlias)
  return useralias_;
}
::CMDString* CMDUserModInfoReq::release_useralias() {
  // @@protoc_insertion_point(field_release:CMDUserModInfoReq.userAlias)
  
  ::CMDString* temp = useralias_;
  useralias_ = NULL;
  return temp;
}
void CMDUserModInfoReq::set_allocated_useralias(::CMDString* useralias) {
  delete useralias_;
  useralias_ = useralias;
  if (useralias) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDUserModInfoReq.userAlias)
}

// optional .CMDString headAdd = 3;
bool CMDUserModInfoReq::has_headadd() const {
  return !_is_default_instance_ && headadd_ != NULL;
}
void CMDUserModInfoReq::clear_headadd() {
  if (GetArenaNoVirtual() == NULL && headadd_ != NULL) delete headadd_;
  headadd_ = NULL;
}
const ::CMDString& CMDUserModInfoReq::headadd() const {
  // @@protoc_insertion_point(field_get:CMDUserModInfoReq.headAdd)
  return headadd_ != NULL ? *headadd_ : *default_instance_->headadd_;
}
::CMDString* CMDUserModInfoReq::mutable_headadd() {
  
  if (headadd_ == NULL) {
    headadd_ = new ::CMDString;
  }
  // @@protoc_insertion_point(field_mutable:CMDUserModInfoReq.headAdd)
  return headadd_;
}
::CMDString* CMDUserModInfoReq::release_headadd() {
  // @@protoc_insertion_point(field_release:CMDUserModInfoReq.headAdd)
  
  ::CMDString* temp = headadd_;
  headadd_ = NULL;
  return temp;
}
void CMDUserModInfoReq::set_allocated_headadd(::CMDString* headadd) {
  delete headadd_;
  headadd_ = headadd;
  if (headadd) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDUserModInfoReq.headAdd)
}

// optional .CMDString birthday = 4;
bool CMDUserModInfoReq::has_birthday() const {
  return !_is_default_instance_ && birthday_ != NULL;
}
void CMDUserModInfoReq::clear_birthday() {
  if (GetArenaNoVirtual() == NULL && birthday_ != NULL) delete birthday_;
  birthday_ = NULL;
}
const ::CMDString& CMDUserModInfoReq::birthday() const {
  // @@protoc_insertion_point(field_get:CMDUserModInfoReq.birthday)
  return birthday_ != NULL ? *birthday_ : *default_instance_->birthday_;
}
::CMDString* CMDUserModInfoReq::mutable_birthday() {
  
  if (birthday_ == NULL) {
    birthday_ = new ::CMDString;
  }
  // @@protoc_insertion_point(field_mutable:CMDUserModInfoReq.birthday)
  return birthday_;
}
::CMDString* CMDUserModInfoReq::release_birthday() {
  // @@protoc_insertion_point(field_release:CMDUserModInfoReq.birthday)
  
  ::CMDString* temp = birthday_;
  birthday_ = NULL;
  return temp;
}
void CMDUserModInfoReq::set_allocated_birthday(::CMDString* birthday) {
  delete birthday_;
  birthday_ = birthday;
  if (birthday) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDUserModInfoReq.birthday)
}

// optional .CMDString city = 5;
bool CMDUserModInfoReq::has_city() const {
  return !_is_default_instance_ && city_ != NULL;
}
void CMDUserModInfoReq::clear_city() {
  if (GetArenaNoVirtual() == NULL && city_ != NULL) delete city_;
  city_ = NULL;
}
const ::CMDString& CMDUserModInfoReq::city() const {
  // @@protoc_insertion_point(field_get:CMDUserModInfoReq.city)
  return city_ != NULL ? *city_ : *default_instance_->city_;
}
::CMDString* CMDUserModInfoReq::mutable_city() {
  
  if (city_ == NULL) {
    city_ = new ::CMDString;
  }
  // @@protoc_insertion_point(field_mutable:CMDUserModInfoReq.city)
  return city_;
}
::CMDString* CMDUserModInfoReq::release_city() {
  // @@protoc_insertion_point(field_release:CMDUserModInfoReq.city)
  
  ::CMDString* temp = city_;
  city_ = NULL;
  return temp;
}
void CMDUserModInfoReq::set_allocated_city(::CMDString* city) {
  delete city_;
  city_ = city;
  if (city) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDUserModInfoReq.city)
}

// optional .CMDString sign = 6;
bool CMDUserModInfoReq::has_sign() const {
  return !_is_default_instance_ && sign_ != NULL;
}
void CMDUserModInfoReq::clear_sign() {
  if (GetArenaNoVirtual() == NULL && sign_ != NULL) delete sign_;
  sign_ = NULL;
}
const ::CMDString& CMDUserModInfoReq::sign() const {
  // @@protoc_insertion_point(field_get:CMDUserModInfoReq.sign)
  return sign_ != NULL ? *sign_ : *default_instance_->sign_;
}
::CMDString* CMDUserModInfoReq::mutable_sign() {
  
  if (sign_ == NULL) {
    sign_ = new ::CMDString;
  }
  // @@protoc_insertion_point(field_mutable:CMDUserModInfoReq.sign)
  return sign_;
}
::CMDString* CMDUserModInfoReq::release_sign() {
  // @@protoc_insertion_point(field_release:CMDUserModInfoReq.sign)
  
  ::CMDString* temp = sign_;
  sign_ = NULL;
  return temp;
}
void CMDUserModInfoReq::set_allocated_sign(::CMDString* sign) {
  delete sign_;
  sign_ = sign;
  if (sign) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDUserModInfoReq.sign)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDUserModInfoResp::kUserIDFieldNumber;
const int CMDUserModInfoResp::kErrInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDUserModInfoResp::CMDUserModInfoResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDUserModInfoResp)
}

void CMDUserModInfoResp::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  errinfo_ = const_cast< ::CMDErrCode*>(&::CMDErrCode::default_instance());
}

CMDUserModInfoResp::CMDUserModInfoResp(const CMDUserModInfoResp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDUserModInfoResp)
}

void CMDUserModInfoResp::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  userid_ = 0u;
  errinfo_ = NULL;
}

CMDUserModInfoResp::~CMDUserModInfoResp() {
  // @@protoc_insertion_point(destructor:CMDUserModInfoResp)
  SharedDtor();
}

void CMDUserModInfoResp::SharedDtor() {
  if (this != default_instance_) {
    delete errinfo_;
  }
}

void CMDUserModInfoResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDUserModInfoResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDUserModInfoResp_descriptor_;
}

const CMDUserModInfoResp& CMDUserModInfoResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_UserMgrSvr_2eproto();
  return *default_instance_;
}

CMDUserModInfoResp* CMDUserModInfoResp::default_instance_ = NULL;

CMDUserModInfoResp* CMDUserModInfoResp::New(::google::protobuf::Arena* arena) const {
  CMDUserModInfoResp* n = new CMDUserModInfoResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDUserModInfoResp::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDUserModInfoResp)
  userid_ = 0u;
  if (GetArenaNoVirtual() == NULL && errinfo_ != NULL) delete errinfo_;
  errinfo_ = NULL;
}

bool CMDUserModInfoResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDUserModInfoResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 userID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_errInfo;
        break;
      }

      // optional .CMDErrCode errInfo = 2;
      case 2: {
        if (tag == 18) {
         parse_errInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_errinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDUserModInfoResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDUserModInfoResp)
  return false;
#undef DO_
}

void CMDUserModInfoResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDUserModInfoResp)
  // optional uint32 userID = 1;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->userid(), output);
  }

  // optional .CMDErrCode errInfo = 2;
  if (this->has_errinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->errinfo_, output);
  }

  // @@protoc_insertion_point(serialize_end:CMDUserModInfoResp)
}

::google::protobuf::uint8* CMDUserModInfoResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDUserModInfoResp)
  // optional uint32 userID = 1;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->userid(), target);
  }

  // optional .CMDErrCode errInfo = 2;
  if (this->has_errinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->errinfo_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDUserModInfoResp)
  return target;
}

int CMDUserModInfoResp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDUserModInfoResp)
  int total_size = 0;

  // optional uint32 userID = 1;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userid());
  }

  // optional .CMDErrCode errInfo = 2;
  if (this->has_errinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->errinfo_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDUserModInfoResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDUserModInfoResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDUserModInfoResp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDUserModInfoResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDUserModInfoResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDUserModInfoResp)
    MergeFrom(*source);
  }
}

void CMDUserModInfoResp::MergeFrom(const CMDUserModInfoResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDUserModInfoResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.has_errinfo()) {
    mutable_errinfo()->::CMDErrCode::MergeFrom(from.errinfo());
  }
}

void CMDUserModInfoResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDUserModInfoResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDUserModInfoResp::CopyFrom(const CMDUserModInfoResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDUserModInfoResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDUserModInfoResp::IsInitialized() const {

  return true;
}

void CMDUserModInfoResp::Swap(CMDUserModInfoResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDUserModInfoResp::InternalSwap(CMDUserModInfoResp* other) {
  std::swap(userid_, other->userid_);
  std::swap(errinfo_, other->errinfo_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDUserModInfoResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDUserModInfoResp_descriptor_;
  metadata.reflection = CMDUserModInfoResp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDUserModInfoResp

// optional uint32 userID = 1;
void CMDUserModInfoResp::clear_userid() {
  userid_ = 0u;
}
 ::google::protobuf::uint32 CMDUserModInfoResp::userid() const {
  // @@protoc_insertion_point(field_get:CMDUserModInfoResp.userID)
  return userid_;
}
 void CMDUserModInfoResp::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDUserModInfoResp.userID)
}

// optional .CMDErrCode errInfo = 2;
bool CMDUserModInfoResp::has_errinfo() const {
  return !_is_default_instance_ && errinfo_ != NULL;
}
void CMDUserModInfoResp::clear_errinfo() {
  if (GetArenaNoVirtual() == NULL && errinfo_ != NULL) delete errinfo_;
  errinfo_ = NULL;
}
const ::CMDErrCode& CMDUserModInfoResp::errinfo() const {
  // @@protoc_insertion_point(field_get:CMDUserModInfoResp.errInfo)
  return errinfo_ != NULL ? *errinfo_ : *default_instance_->errinfo_;
}
::CMDErrCode* CMDUserModInfoResp::mutable_errinfo() {
  
  if (errinfo_ == NULL) {
    errinfo_ = new ::CMDErrCode;
  }
  // @@protoc_insertion_point(field_mutable:CMDUserModInfoResp.errInfo)
  return errinfo_;
}
::CMDErrCode* CMDUserModInfoResp::release_errinfo() {
  // @@protoc_insertion_point(field_release:CMDUserModInfoResp.errInfo)
  
  ::CMDErrCode* temp = errinfo_;
  errinfo_ = NULL;
  return temp;
}
void CMDUserModInfoResp::set_allocated_errinfo(::CMDErrCode* errinfo) {
  delete errinfo_;
  errinfo_ = errinfo;
  if (errinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDUserModInfoResp.errInfo)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDUserInfoModNotify::kUserIDFieldNumber;
const int CMDUserInfoModNotify::kUserAliasFieldNumber;
const int CMDUserInfoModNotify::kHeadAddFieldNumber;
const int CMDUserInfoModNotify::kRoleTypeFieldNumber;
const int CMDUserInfoModNotify::kGroupInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDUserInfoModNotify::CMDUserInfoModNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDUserInfoModNotify)
}

void CMDUserInfoModNotify::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  useralias_ = const_cast< ::CMDString*>(&::CMDString::default_instance());
  headadd_ = const_cast< ::CMDString*>(&::CMDString::default_instance());
  roletype_ = const_cast< ::CMDUInt32*>(&::CMDUInt32::default_instance());
  groupinfo_ = const_cast< ::CMDGroupInfo*>(&::CMDGroupInfo::default_instance());
}

CMDUserInfoModNotify::CMDUserInfoModNotify(const CMDUserInfoModNotify& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDUserInfoModNotify)
}

void CMDUserInfoModNotify::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  userid_ = 0u;
  useralias_ = NULL;
  headadd_ = NULL;
  roletype_ = NULL;
  groupinfo_ = NULL;
}

CMDUserInfoModNotify::~CMDUserInfoModNotify() {
  // @@protoc_insertion_point(destructor:CMDUserInfoModNotify)
  SharedDtor();
}

void CMDUserInfoModNotify::SharedDtor() {
  if (this != default_instance_) {
    delete useralias_;
    delete headadd_;
    delete roletype_;
    delete groupinfo_;
  }
}

void CMDUserInfoModNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDUserInfoModNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDUserInfoModNotify_descriptor_;
}

const CMDUserInfoModNotify& CMDUserInfoModNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_UserMgrSvr_2eproto();
  return *default_instance_;
}

CMDUserInfoModNotify* CMDUserInfoModNotify::default_instance_ = NULL;

CMDUserInfoModNotify* CMDUserInfoModNotify::New(::google::protobuf::Arena* arena) const {
  CMDUserInfoModNotify* n = new CMDUserInfoModNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDUserInfoModNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDUserInfoModNotify)
  userid_ = 0u;
  if (GetArenaNoVirtual() == NULL && useralias_ != NULL) delete useralias_;
  useralias_ = NULL;
  if (GetArenaNoVirtual() == NULL && headadd_ != NULL) delete headadd_;
  headadd_ = NULL;
  if (GetArenaNoVirtual() == NULL && roletype_ != NULL) delete roletype_;
  roletype_ = NULL;
  if (GetArenaNoVirtual() == NULL && groupinfo_ != NULL) delete groupinfo_;
  groupinfo_ = NULL;
}

bool CMDUserInfoModNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDUserInfoModNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 userID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_userAlias;
        break;
      }

      // optional .CMDString userAlias = 2;
      case 2: {
        if (tag == 18) {
         parse_userAlias:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_useralias()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_headAdd;
        break;
      }

      // optional .CMDString headAdd = 3;
      case 3: {
        if (tag == 26) {
         parse_headAdd:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_headadd()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_roleType;
        break;
      }

      // optional .CMDUInt32 roleType = 4;
      case 4: {
        if (tag == 34) {
         parse_roleType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_roletype()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_groupInfo;
        break;
      }

      // optional .CMDGroupInfo groupInfo = 6;
      case 6: {
        if (tag == 50) {
         parse_groupInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_groupinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDUserInfoModNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDUserInfoModNotify)
  return false;
#undef DO_
}

void CMDUserInfoModNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDUserInfoModNotify)
  // optional uint32 userID = 1;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->userid(), output);
  }

  // optional .CMDString userAlias = 2;
  if (this->has_useralias()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->useralias_, output);
  }

  // optional .CMDString headAdd = 3;
  if (this->has_headadd()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->headadd_, output);
  }

  // optional .CMDUInt32 roleType = 4;
  if (this->has_roletype()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->roletype_, output);
  }

  // optional .CMDGroupInfo groupInfo = 6;
  if (this->has_groupinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->groupinfo_, output);
  }

  // @@protoc_insertion_point(serialize_end:CMDUserInfoModNotify)
}

::google::protobuf::uint8* CMDUserInfoModNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDUserInfoModNotify)
  // optional uint32 userID = 1;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->userid(), target);
  }

  // optional .CMDString userAlias = 2;
  if (this->has_useralias()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->useralias_, false, target);
  }

  // optional .CMDString headAdd = 3;
  if (this->has_headadd()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->headadd_, false, target);
  }

  // optional .CMDUInt32 roleType = 4;
  if (this->has_roletype()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->roletype_, false, target);
  }

  // optional .CMDGroupInfo groupInfo = 6;
  if (this->has_groupinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->groupinfo_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDUserInfoModNotify)
  return target;
}

int CMDUserInfoModNotify::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDUserInfoModNotify)
  int total_size = 0;

  // optional uint32 userID = 1;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userid());
  }

  // optional .CMDString userAlias = 2;
  if (this->has_useralias()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->useralias_);
  }

  // optional .CMDString headAdd = 3;
  if (this->has_headadd()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->headadd_);
  }

  // optional .CMDUInt32 roleType = 4;
  if (this->has_roletype()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->roletype_);
  }

  // optional .CMDGroupInfo groupInfo = 6;
  if (this->has_groupinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->groupinfo_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDUserInfoModNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDUserInfoModNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDUserInfoModNotify* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDUserInfoModNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDUserInfoModNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDUserInfoModNotify)
    MergeFrom(*source);
  }
}

void CMDUserInfoModNotify::MergeFrom(const CMDUserInfoModNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDUserInfoModNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.has_useralias()) {
    mutable_useralias()->::CMDString::MergeFrom(from.useralias());
  }
  if (from.has_headadd()) {
    mutable_headadd()->::CMDString::MergeFrom(from.headadd());
  }
  if (from.has_roletype()) {
    mutable_roletype()->::CMDUInt32::MergeFrom(from.roletype());
  }
  if (from.has_groupinfo()) {
    mutable_groupinfo()->::CMDGroupInfo::MergeFrom(from.groupinfo());
  }
}

void CMDUserInfoModNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDUserInfoModNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDUserInfoModNotify::CopyFrom(const CMDUserInfoModNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDUserInfoModNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDUserInfoModNotify::IsInitialized() const {

  return true;
}

void CMDUserInfoModNotify::Swap(CMDUserInfoModNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDUserInfoModNotify::InternalSwap(CMDUserInfoModNotify* other) {
  std::swap(userid_, other->userid_);
  std::swap(useralias_, other->useralias_);
  std::swap(headadd_, other->headadd_);
  std::swap(roletype_, other->roletype_);
  std::swap(groupinfo_, other->groupinfo_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDUserInfoModNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDUserInfoModNotify_descriptor_;
  metadata.reflection = CMDUserInfoModNotify_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDUserInfoModNotify

// optional uint32 userID = 1;
void CMDUserInfoModNotify::clear_userid() {
  userid_ = 0u;
}
 ::google::protobuf::uint32 CMDUserInfoModNotify::userid() const {
  // @@protoc_insertion_point(field_get:CMDUserInfoModNotify.userID)
  return userid_;
}
 void CMDUserInfoModNotify::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDUserInfoModNotify.userID)
}

// optional .CMDString userAlias = 2;
bool CMDUserInfoModNotify::has_useralias() const {
  return !_is_default_instance_ && useralias_ != NULL;
}
void CMDUserInfoModNotify::clear_useralias() {
  if (GetArenaNoVirtual() == NULL && useralias_ != NULL) delete useralias_;
  useralias_ = NULL;
}
const ::CMDString& CMDUserInfoModNotify::useralias() const {
  // @@protoc_insertion_point(field_get:CMDUserInfoModNotify.userAlias)
  return useralias_ != NULL ? *useralias_ : *default_instance_->useralias_;
}
::CMDString* CMDUserInfoModNotify::mutable_useralias() {
  
  if (useralias_ == NULL) {
    useralias_ = new ::CMDString;
  }
  // @@protoc_insertion_point(field_mutable:CMDUserInfoModNotify.userAlias)
  return useralias_;
}
::CMDString* CMDUserInfoModNotify::release_useralias() {
  // @@protoc_insertion_point(field_release:CMDUserInfoModNotify.userAlias)
  
  ::CMDString* temp = useralias_;
  useralias_ = NULL;
  return temp;
}
void CMDUserInfoModNotify::set_allocated_useralias(::CMDString* useralias) {
  delete useralias_;
  useralias_ = useralias;
  if (useralias) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDUserInfoModNotify.userAlias)
}

// optional .CMDString headAdd = 3;
bool CMDUserInfoModNotify::has_headadd() const {
  return !_is_default_instance_ && headadd_ != NULL;
}
void CMDUserInfoModNotify::clear_headadd() {
  if (GetArenaNoVirtual() == NULL && headadd_ != NULL) delete headadd_;
  headadd_ = NULL;
}
const ::CMDString& CMDUserInfoModNotify::headadd() const {
  // @@protoc_insertion_point(field_get:CMDUserInfoModNotify.headAdd)
  return headadd_ != NULL ? *headadd_ : *default_instance_->headadd_;
}
::CMDString* CMDUserInfoModNotify::mutable_headadd() {
  
  if (headadd_ == NULL) {
    headadd_ = new ::CMDString;
  }
  // @@protoc_insertion_point(field_mutable:CMDUserInfoModNotify.headAdd)
  return headadd_;
}
::CMDString* CMDUserInfoModNotify::release_headadd() {
  // @@protoc_insertion_point(field_release:CMDUserInfoModNotify.headAdd)
  
  ::CMDString* temp = headadd_;
  headadd_ = NULL;
  return temp;
}
void CMDUserInfoModNotify::set_allocated_headadd(::CMDString* headadd) {
  delete headadd_;
  headadd_ = headadd;
  if (headadd) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDUserInfoModNotify.headAdd)
}

// optional .CMDUInt32 roleType = 4;
bool CMDUserInfoModNotify::has_roletype() const {
  return !_is_default_instance_ && roletype_ != NULL;
}
void CMDUserInfoModNotify::clear_roletype() {
  if (GetArenaNoVirtual() == NULL && roletype_ != NULL) delete roletype_;
  roletype_ = NULL;
}
const ::CMDUInt32& CMDUserInfoModNotify::roletype() const {
  // @@protoc_insertion_point(field_get:CMDUserInfoModNotify.roleType)
  return roletype_ != NULL ? *roletype_ : *default_instance_->roletype_;
}
::CMDUInt32* CMDUserInfoModNotify::mutable_roletype() {
  
  if (roletype_ == NULL) {
    roletype_ = new ::CMDUInt32;
  }
  // @@protoc_insertion_point(field_mutable:CMDUserInfoModNotify.roleType)
  return roletype_;
}
::CMDUInt32* CMDUserInfoModNotify::release_roletype() {
  // @@protoc_insertion_point(field_release:CMDUserInfoModNotify.roleType)
  
  ::CMDUInt32* temp = roletype_;
  roletype_ = NULL;
  return temp;
}
void CMDUserInfoModNotify::set_allocated_roletype(::CMDUInt32* roletype) {
  delete roletype_;
  roletype_ = roletype;
  if (roletype) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDUserInfoModNotify.roleType)
}

// optional .CMDGroupInfo groupInfo = 6;
bool CMDUserInfoModNotify::has_groupinfo() const {
  return !_is_default_instance_ && groupinfo_ != NULL;
}
void CMDUserInfoModNotify::clear_groupinfo() {
  if (GetArenaNoVirtual() == NULL && groupinfo_ != NULL) delete groupinfo_;
  groupinfo_ = NULL;
}
const ::CMDGroupInfo& CMDUserInfoModNotify::groupinfo() const {
  // @@protoc_insertion_point(field_get:CMDUserInfoModNotify.groupInfo)
  return groupinfo_ != NULL ? *groupinfo_ : *default_instance_->groupinfo_;
}
::CMDGroupInfo* CMDUserInfoModNotify::mutable_groupinfo() {
  
  if (groupinfo_ == NULL) {
    groupinfo_ = new ::CMDGroupInfo;
  }
  // @@protoc_insertion_point(field_mutable:CMDUserInfoModNotify.groupInfo)
  return groupinfo_;
}
::CMDGroupInfo* CMDUserInfoModNotify::release_groupinfo() {
  // @@protoc_insertion_point(field_release:CMDUserInfoModNotify.groupInfo)
  
  ::CMDGroupInfo* temp = groupinfo_;
  groupinfo_ = NULL;
  return temp;
}
void CMDUserInfoModNotify::set_allocated_groupinfo(::CMDGroupInfo* groupinfo) {
  delete groupinfo_;
  groupinfo_ = groupinfo;
  if (groupinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDUserInfoModNotify.groupInfo)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDOperFriendshipReq::kUseridFieldNumber;
const int CMDOperFriendshipReq::kDstuidFieldNumber;
const int CMDOperFriendshipReq::kActionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDOperFriendshipReq::CMDOperFriendshipReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDOperFriendshipReq)
}

void CMDOperFriendshipReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDOperFriendshipReq::CMDOperFriendshipReq(const CMDOperFriendshipReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDOperFriendshipReq)
}

void CMDOperFriendshipReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  userid_ = 0u;
  dstuid_ = 0u;
  action_ = 0;
}

CMDOperFriendshipReq::~CMDOperFriendshipReq() {
  // @@protoc_insertion_point(destructor:CMDOperFriendshipReq)
  SharedDtor();
}

void CMDOperFriendshipReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMDOperFriendshipReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDOperFriendshipReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDOperFriendshipReq_descriptor_;
}

const CMDOperFriendshipReq& CMDOperFriendshipReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_UserMgrSvr_2eproto();
  return *default_instance_;
}

CMDOperFriendshipReq* CMDOperFriendshipReq::default_instance_ = NULL;

CMDOperFriendshipReq* CMDOperFriendshipReq::New(::google::protobuf::Arena* arena) const {
  CMDOperFriendshipReq* n = new CMDOperFriendshipReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDOperFriendshipReq::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDOperFriendshipReq)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDOperFriendshipReq, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDOperFriendshipReq*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(userid_, action_);

#undef ZR_HELPER_
#undef ZR_

}

bool CMDOperFriendshipReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDOperFriendshipReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 userid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_dstuid;
        break;
      }

      // optional uint32 dstuid = 2;
      case 2: {
        if (tag == 16) {
         parse_dstuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dstuid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_action;
        break;
      }

      // optional .e_Friendship_OpType action = 3;
      case 3: {
        if (tag == 24) {
         parse_action:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_action(static_cast< ::e_Friendship_OpType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDOperFriendshipReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDOperFriendshipReq)
  return false;
#undef DO_
}

void CMDOperFriendshipReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDOperFriendshipReq)
  // optional uint32 userid = 1;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->userid(), output);
  }

  // optional uint32 dstuid = 2;
  if (this->dstuid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->dstuid(), output);
  }

  // optional .e_Friendship_OpType action = 3;
  if (this->action() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->action(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDOperFriendshipReq)
}

::google::protobuf::uint8* CMDOperFriendshipReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDOperFriendshipReq)
  // optional uint32 userid = 1;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->userid(), target);
  }

  // optional uint32 dstuid = 2;
  if (this->dstuid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->dstuid(), target);
  }

  // optional .e_Friendship_OpType action = 3;
  if (this->action() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->action(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDOperFriendshipReq)
  return target;
}

int CMDOperFriendshipReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDOperFriendshipReq)
  int total_size = 0;

  // optional uint32 userid = 1;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userid());
  }

  // optional uint32 dstuid = 2;
  if (this->dstuid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dstuid());
  }

  // optional .e_Friendship_OpType action = 3;
  if (this->action() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->action());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDOperFriendshipReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDOperFriendshipReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDOperFriendshipReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDOperFriendshipReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDOperFriendshipReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDOperFriendshipReq)
    MergeFrom(*source);
  }
}

void CMDOperFriendshipReq::MergeFrom(const CMDOperFriendshipReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDOperFriendshipReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.dstuid() != 0) {
    set_dstuid(from.dstuid());
  }
  if (from.action() != 0) {
    set_action(from.action());
  }
}

void CMDOperFriendshipReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDOperFriendshipReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDOperFriendshipReq::CopyFrom(const CMDOperFriendshipReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDOperFriendshipReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDOperFriendshipReq::IsInitialized() const {

  return true;
}

void CMDOperFriendshipReq::Swap(CMDOperFriendshipReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDOperFriendshipReq::InternalSwap(CMDOperFriendshipReq* other) {
  std::swap(userid_, other->userid_);
  std::swap(dstuid_, other->dstuid_);
  std::swap(action_, other->action_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDOperFriendshipReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDOperFriendshipReq_descriptor_;
  metadata.reflection = CMDOperFriendshipReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDOperFriendshipReq

// optional uint32 userid = 1;
void CMDOperFriendshipReq::clear_userid() {
  userid_ = 0u;
}
 ::google::protobuf::uint32 CMDOperFriendshipReq::userid() const {
  // @@protoc_insertion_point(field_get:CMDOperFriendshipReq.userid)
  return userid_;
}
 void CMDOperFriendshipReq::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDOperFriendshipReq.userid)
}

// optional uint32 dstuid = 2;
void CMDOperFriendshipReq::clear_dstuid() {
  dstuid_ = 0u;
}
 ::google::protobuf::uint32 CMDOperFriendshipReq::dstuid() const {
  // @@protoc_insertion_point(field_get:CMDOperFriendshipReq.dstuid)
  return dstuid_;
}
 void CMDOperFriendshipReq::set_dstuid(::google::protobuf::uint32 value) {
  
  dstuid_ = value;
  // @@protoc_insertion_point(field_set:CMDOperFriendshipReq.dstuid)
}

// optional .e_Friendship_OpType action = 3;
void CMDOperFriendshipReq::clear_action() {
  action_ = 0;
}
 ::e_Friendship_OpType CMDOperFriendshipReq::action() const {
  // @@protoc_insertion_point(field_get:CMDOperFriendshipReq.action)
  return static_cast< ::e_Friendship_OpType >(action_);
}
 void CMDOperFriendshipReq::set_action(::e_Friendship_OpType value) {
  
  action_ = value;
  // @@protoc_insertion_point(field_set:CMDOperFriendshipReq.action)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDOperFriendshipResp::kErrInfoFieldNumber;
const int CMDOperFriendshipResp::kDstuidFieldNumber;
const int CMDOperFriendshipResp::kActionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDOperFriendshipResp::CMDOperFriendshipResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDOperFriendshipResp)
}

void CMDOperFriendshipResp::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  errinfo_ = const_cast< ::CMDErrCode*>(&::CMDErrCode::default_instance());
}

CMDOperFriendshipResp::CMDOperFriendshipResp(const CMDOperFriendshipResp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDOperFriendshipResp)
}

void CMDOperFriendshipResp::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  errinfo_ = NULL;
  dstuid_ = 0u;
  action_ = 0;
}

CMDOperFriendshipResp::~CMDOperFriendshipResp() {
  // @@protoc_insertion_point(destructor:CMDOperFriendshipResp)
  SharedDtor();
}

void CMDOperFriendshipResp::SharedDtor() {
  if (this != default_instance_) {
    delete errinfo_;
  }
}

void CMDOperFriendshipResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDOperFriendshipResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDOperFriendshipResp_descriptor_;
}

const CMDOperFriendshipResp& CMDOperFriendshipResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_UserMgrSvr_2eproto();
  return *default_instance_;
}

CMDOperFriendshipResp* CMDOperFriendshipResp::default_instance_ = NULL;

CMDOperFriendshipResp* CMDOperFriendshipResp::New(::google::protobuf::Arena* arena) const {
  CMDOperFriendshipResp* n = new CMDOperFriendshipResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDOperFriendshipResp::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDOperFriendshipResp)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDOperFriendshipResp, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDOperFriendshipResp*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(dstuid_, action_);
  if (GetArenaNoVirtual() == NULL && errinfo_ != NULL) delete errinfo_;
  errinfo_ = NULL;

#undef ZR_HELPER_
#undef ZR_

}

bool CMDOperFriendshipResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDOperFriendshipResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CMDErrCode errInfo = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_errinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_dstuid;
        break;
      }

      // optional uint32 dstuid = 2;
      case 2: {
        if (tag == 16) {
         parse_dstuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dstuid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_action;
        break;
      }

      // optional .e_Friendship_OpType action = 3;
      case 3: {
        if (tag == 24) {
         parse_action:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_action(static_cast< ::e_Friendship_OpType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDOperFriendshipResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDOperFriendshipResp)
  return false;
#undef DO_
}

void CMDOperFriendshipResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDOperFriendshipResp)
  // optional .CMDErrCode errInfo = 1;
  if (this->has_errinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->errinfo_, output);
  }

  // optional uint32 dstuid = 2;
  if (this->dstuid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->dstuid(), output);
  }

  // optional .e_Friendship_OpType action = 3;
  if (this->action() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->action(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDOperFriendshipResp)
}

::google::protobuf::uint8* CMDOperFriendshipResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDOperFriendshipResp)
  // optional .CMDErrCode errInfo = 1;
  if (this->has_errinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->errinfo_, false, target);
  }

  // optional uint32 dstuid = 2;
  if (this->dstuid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->dstuid(), target);
  }

  // optional .e_Friendship_OpType action = 3;
  if (this->action() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->action(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDOperFriendshipResp)
  return target;
}

int CMDOperFriendshipResp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDOperFriendshipResp)
  int total_size = 0;

  // optional .CMDErrCode errInfo = 1;
  if (this->has_errinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->errinfo_);
  }

  // optional uint32 dstuid = 2;
  if (this->dstuid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dstuid());
  }

  // optional .e_Friendship_OpType action = 3;
  if (this->action() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->action());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDOperFriendshipResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDOperFriendshipResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDOperFriendshipResp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDOperFriendshipResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDOperFriendshipResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDOperFriendshipResp)
    MergeFrom(*source);
  }
}

void CMDOperFriendshipResp::MergeFrom(const CMDOperFriendshipResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDOperFriendshipResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.has_errinfo()) {
    mutable_errinfo()->::CMDErrCode::MergeFrom(from.errinfo());
  }
  if (from.dstuid() != 0) {
    set_dstuid(from.dstuid());
  }
  if (from.action() != 0) {
    set_action(from.action());
  }
}

void CMDOperFriendshipResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDOperFriendshipResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDOperFriendshipResp::CopyFrom(const CMDOperFriendshipResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDOperFriendshipResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDOperFriendshipResp::IsInitialized() const {

  return true;
}

void CMDOperFriendshipResp::Swap(CMDOperFriendshipResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDOperFriendshipResp::InternalSwap(CMDOperFriendshipResp* other) {
  std::swap(errinfo_, other->errinfo_);
  std::swap(dstuid_, other->dstuid_);
  std::swap(action_, other->action_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDOperFriendshipResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDOperFriendshipResp_descriptor_;
  metadata.reflection = CMDOperFriendshipResp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDOperFriendshipResp

// optional .CMDErrCode errInfo = 1;
bool CMDOperFriendshipResp::has_errinfo() const {
  return !_is_default_instance_ && errinfo_ != NULL;
}
void CMDOperFriendshipResp::clear_errinfo() {
  if (GetArenaNoVirtual() == NULL && errinfo_ != NULL) delete errinfo_;
  errinfo_ = NULL;
}
const ::CMDErrCode& CMDOperFriendshipResp::errinfo() const {
  // @@protoc_insertion_point(field_get:CMDOperFriendshipResp.errInfo)
  return errinfo_ != NULL ? *errinfo_ : *default_instance_->errinfo_;
}
::CMDErrCode* CMDOperFriendshipResp::mutable_errinfo() {
  
  if (errinfo_ == NULL) {
    errinfo_ = new ::CMDErrCode;
  }
  // @@protoc_insertion_point(field_mutable:CMDOperFriendshipResp.errInfo)
  return errinfo_;
}
::CMDErrCode* CMDOperFriendshipResp::release_errinfo() {
  // @@protoc_insertion_point(field_release:CMDOperFriendshipResp.errInfo)
  
  ::CMDErrCode* temp = errinfo_;
  errinfo_ = NULL;
  return temp;
}
void CMDOperFriendshipResp::set_allocated_errinfo(::CMDErrCode* errinfo) {
  delete errinfo_;
  errinfo_ = errinfo;
  if (errinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDOperFriendshipResp.errInfo)
}

// optional uint32 dstuid = 2;
void CMDOperFriendshipResp::clear_dstuid() {
  dstuid_ = 0u;
}
 ::google::protobuf::uint32 CMDOperFriendshipResp::dstuid() const {
  // @@protoc_insertion_point(field_get:CMDOperFriendshipResp.dstuid)
  return dstuid_;
}
 void CMDOperFriendshipResp::set_dstuid(::google::protobuf::uint32 value) {
  
  dstuid_ = value;
  // @@protoc_insertion_point(field_set:CMDOperFriendshipResp.dstuid)
}

// optional .e_Friendship_OpType action = 3;
void CMDOperFriendshipResp::clear_action() {
  action_ = 0;
}
 ::e_Friendship_OpType CMDOperFriendshipResp::action() const {
  // @@protoc_insertion_point(field_get:CMDOperFriendshipResp.action)
  return static_cast< ::e_Friendship_OpType >(action_);
}
 void CMDOperFriendshipResp::set_action(::e_Friendship_OpType value) {
  
  action_ = value;
  // @@protoc_insertion_point(field_set:CMDOperFriendshipResp.action)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDQryUserAttentionList::kUseridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDQryUserAttentionList::CMDQryUserAttentionList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDQryUserAttentionList)
}

void CMDQryUserAttentionList::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDQryUserAttentionList::CMDQryUserAttentionList(const CMDQryUserAttentionList& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDQryUserAttentionList)
}

void CMDQryUserAttentionList::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  userid_ = 0u;
}

CMDQryUserAttentionList::~CMDQryUserAttentionList() {
  // @@protoc_insertion_point(destructor:CMDQryUserAttentionList)
  SharedDtor();
}

void CMDQryUserAttentionList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMDQryUserAttentionList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDQryUserAttentionList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDQryUserAttentionList_descriptor_;
}

const CMDQryUserAttentionList& CMDQryUserAttentionList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_UserMgrSvr_2eproto();
  return *default_instance_;
}

CMDQryUserAttentionList* CMDQryUserAttentionList::default_instance_ = NULL;

CMDQryUserAttentionList* CMDQryUserAttentionList::New(::google::protobuf::Arena* arena) const {
  CMDQryUserAttentionList* n = new CMDQryUserAttentionList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDQryUserAttentionList::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDQryUserAttentionList)
  userid_ = 0u;
}

bool CMDQryUserAttentionList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDQryUserAttentionList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 userid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDQryUserAttentionList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDQryUserAttentionList)
  return false;
#undef DO_
}

void CMDQryUserAttentionList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDQryUserAttentionList)
  // optional uint32 userid = 1;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->userid(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDQryUserAttentionList)
}

::google::protobuf::uint8* CMDQryUserAttentionList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDQryUserAttentionList)
  // optional uint32 userid = 1;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->userid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDQryUserAttentionList)
  return target;
}

int CMDQryUserAttentionList::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDQryUserAttentionList)
  int total_size = 0;

  // optional uint32 userid = 1;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDQryUserAttentionList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDQryUserAttentionList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDQryUserAttentionList* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDQryUserAttentionList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDQryUserAttentionList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDQryUserAttentionList)
    MergeFrom(*source);
  }
}

void CMDQryUserAttentionList::MergeFrom(const CMDQryUserAttentionList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDQryUserAttentionList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
}

void CMDQryUserAttentionList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDQryUserAttentionList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDQryUserAttentionList::CopyFrom(const CMDQryUserAttentionList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDQryUserAttentionList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDQryUserAttentionList::IsInitialized() const {

  return true;
}

void CMDQryUserAttentionList::Swap(CMDQryUserAttentionList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDQryUserAttentionList::InternalSwap(CMDQryUserAttentionList* other) {
  std::swap(userid_, other->userid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDQryUserAttentionList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDQryUserAttentionList_descriptor_;
  metadata.reflection = CMDQryUserAttentionList_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDQryUserAttentionList

// optional uint32 userid = 1;
void CMDQryUserAttentionList::clear_userid() {
  userid_ = 0u;
}
 ::google::protobuf::uint32 CMDQryUserAttentionList::userid() const {
  // @@protoc_insertion_point(field_get:CMDQryUserAttentionList.userid)
  return userid_;
}
 void CMDQryUserAttentionList::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDQryUserAttentionList.userid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDUserAttentionList::kUseridFieldNumber;
const int CMDUserAttentionList::kListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDUserAttentionList::CMDUserAttentionList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDUserAttentionList)
}

void CMDUserAttentionList::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDUserAttentionList::CMDUserAttentionList(const CMDUserAttentionList& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDUserAttentionList)
}

void CMDUserAttentionList::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  userid_ = 0u;
}

CMDUserAttentionList::~CMDUserAttentionList() {
  // @@protoc_insertion_point(destructor:CMDUserAttentionList)
  SharedDtor();
}

void CMDUserAttentionList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMDUserAttentionList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDUserAttentionList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDUserAttentionList_descriptor_;
}

const CMDUserAttentionList& CMDUserAttentionList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_UserMgrSvr_2eproto();
  return *default_instance_;
}

CMDUserAttentionList* CMDUserAttentionList::default_instance_ = NULL;

CMDUserAttentionList* CMDUserAttentionList::New(::google::protobuf::Arena* arena) const {
  CMDUserAttentionList* n = new CMDUserAttentionList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDUserAttentionList::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDUserAttentionList)
  userid_ = 0u;
  list_.Clear();
}

bool CMDUserAttentionList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDUserAttentionList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 userid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_list;
        break;
      }

      // repeated uint32 list = 2;
      case 2: {
        if (tag == 18) {
         parse_list:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_list())));
        } else if (tag == 16) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18, input, this->mutable_list())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDUserAttentionList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDUserAttentionList)
  return false;
#undef DO_
}

void CMDUserAttentionList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDUserAttentionList)
  // optional uint32 userid = 1;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->userid(), output);
  }

  // repeated uint32 list = 2;
  if (this->list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_list_cached_byte_size_);
  }
  for (int i = 0; i < this->list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->list(i), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDUserAttentionList)
}

::google::protobuf::uint8* CMDUserAttentionList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDUserAttentionList)
  // optional uint32 userid = 1;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->userid(), target);
  }

  // repeated uint32 list = 2;
  if (this->list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _list_cached_byte_size_, target);
  }
  for (int i = 0; i < this->list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->list(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDUserAttentionList)
  return target;
}

int CMDUserAttentionList::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDUserAttentionList)
  int total_size = 0;

  // optional uint32 userid = 1;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userid());
  }

  // repeated uint32 list = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->list_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->list(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _list_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDUserAttentionList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDUserAttentionList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDUserAttentionList* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDUserAttentionList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDUserAttentionList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDUserAttentionList)
    MergeFrom(*source);
  }
}

void CMDUserAttentionList::MergeFrom(const CMDUserAttentionList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDUserAttentionList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  list_.MergeFrom(from.list_);
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
}

void CMDUserAttentionList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDUserAttentionList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDUserAttentionList::CopyFrom(const CMDUserAttentionList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDUserAttentionList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDUserAttentionList::IsInitialized() const {

  return true;
}

void CMDUserAttentionList::Swap(CMDUserAttentionList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDUserAttentionList::InternalSwap(CMDUserAttentionList* other) {
  std::swap(userid_, other->userid_);
  list_.UnsafeArenaSwap(&other->list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDUserAttentionList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDUserAttentionList_descriptor_;
  metadata.reflection = CMDUserAttentionList_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDUserAttentionList

// optional uint32 userid = 1;
void CMDUserAttentionList::clear_userid() {
  userid_ = 0u;
}
 ::google::protobuf::uint32 CMDUserAttentionList::userid() const {
  // @@protoc_insertion_point(field_get:CMDUserAttentionList.userid)
  return userid_;
}
 void CMDUserAttentionList::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDUserAttentionList.userid)
}

// repeated uint32 list = 2;
int CMDUserAttentionList::list_size() const {
  return list_.size();
}
void CMDUserAttentionList::clear_list() {
  list_.Clear();
}
 ::google::protobuf::uint32 CMDUserAttentionList::list(int index) const {
  // @@protoc_insertion_point(field_get:CMDUserAttentionList.list)
  return list_.Get(index);
}
 void CMDUserAttentionList::set_list(int index, ::google::protobuf::uint32 value) {
  list_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMDUserAttentionList.list)
}
 void CMDUserAttentionList::add_list(::google::protobuf::uint32 value) {
  list_.Add(value);
  // @@protoc_insertion_point(field_add:CMDUserAttentionList.list)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMDUserAttentionList::list() const {
  // @@protoc_insertion_point(field_list:CMDUserAttentionList.list)
  return list_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMDUserAttentionList::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:CMDUserAttentionList.list)
  return &list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDUserSysConfigNotify::kSysconfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDUserSysConfigNotify::CMDUserSysConfigNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDUserSysConfigNotify)
}

void CMDUserSysConfigNotify::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDUserSysConfigNotify::CMDUserSysConfigNotify(const CMDUserSysConfigNotify& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDUserSysConfigNotify)
}

void CMDUserSysConfigNotify::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  sysconfig_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CMDUserSysConfigNotify::~CMDUserSysConfigNotify() {
  // @@protoc_insertion_point(destructor:CMDUserSysConfigNotify)
  SharedDtor();
}

void CMDUserSysConfigNotify::SharedDtor() {
  sysconfig_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CMDUserSysConfigNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDUserSysConfigNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDUserSysConfigNotify_descriptor_;
}

const CMDUserSysConfigNotify& CMDUserSysConfigNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_UserMgrSvr_2eproto();
  return *default_instance_;
}

CMDUserSysConfigNotify* CMDUserSysConfigNotify::default_instance_ = NULL;

CMDUserSysConfigNotify* CMDUserSysConfigNotify::New(::google::protobuf::Arena* arena) const {
  CMDUserSysConfigNotify* n = new CMDUserSysConfigNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDUserSysConfigNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDUserSysConfigNotify)
  sysconfig_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool CMDUserSysConfigNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDUserSysConfigNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string sysconfig = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sysconfig()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sysconfig().data(), this->sysconfig().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMDUserSysConfigNotify.sysconfig"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDUserSysConfigNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDUserSysConfigNotify)
  return false;
#undef DO_
}

void CMDUserSysConfigNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDUserSysConfigNotify)
  // optional string sysconfig = 1;
  if (this->sysconfig().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sysconfig().data(), this->sysconfig().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDUserSysConfigNotify.sysconfig");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sysconfig(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDUserSysConfigNotify)
}

::google::protobuf::uint8* CMDUserSysConfigNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDUserSysConfigNotify)
  // optional string sysconfig = 1;
  if (this->sysconfig().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sysconfig().data(), this->sysconfig().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDUserSysConfigNotify.sysconfig");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->sysconfig(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDUserSysConfigNotify)
  return target;
}

int CMDUserSysConfigNotify::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDUserSysConfigNotify)
  int total_size = 0;

  // optional string sysconfig = 1;
  if (this->sysconfig().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sysconfig());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDUserSysConfigNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDUserSysConfigNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDUserSysConfigNotify* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDUserSysConfigNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDUserSysConfigNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDUserSysConfigNotify)
    MergeFrom(*source);
  }
}

void CMDUserSysConfigNotify::MergeFrom(const CMDUserSysConfigNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDUserSysConfigNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.sysconfig().size() > 0) {

    sysconfig_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sysconfig_);
  }
}

void CMDUserSysConfigNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDUserSysConfigNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDUserSysConfigNotify::CopyFrom(const CMDUserSysConfigNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDUserSysConfigNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDUserSysConfigNotify::IsInitialized() const {

  return true;
}

void CMDUserSysConfigNotify::Swap(CMDUserSysConfigNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDUserSysConfigNotify::InternalSwap(CMDUserSysConfigNotify* other) {
  sysconfig_.Swap(&other->sysconfig_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDUserSysConfigNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDUserSysConfigNotify_descriptor_;
  metadata.reflection = CMDUserSysConfigNotify_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDUserSysConfigNotify

// optional string sysconfig = 1;
void CMDUserSysConfigNotify::clear_sysconfig() {
  sysconfig_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CMDUserSysConfigNotify::sysconfig() const {
  // @@protoc_insertion_point(field_get:CMDUserSysConfigNotify.sysconfig)
  return sysconfig_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDUserSysConfigNotify::set_sysconfig(const ::std::string& value) {
  
  sysconfig_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDUserSysConfigNotify.sysconfig)
}
 void CMDUserSysConfigNotify::set_sysconfig(const char* value) {
  
  sysconfig_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDUserSysConfigNotify.sysconfig)
}
 void CMDUserSysConfigNotify::set_sysconfig(const char* value, size_t size) {
  
  sysconfig_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDUserSysConfigNotify.sysconfig)
}
 ::std::string* CMDUserSysConfigNotify::mutable_sysconfig() {
  
  // @@protoc_insertion_point(field_mutable:CMDUserSysConfigNotify.sysconfig)
  return sysconfig_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMDUserSysConfigNotify::release_sysconfig() {
  // @@protoc_insertion_point(field_release:CMDUserSysConfigNotify.sysconfig)
  
  return sysconfig_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDUserSysConfigNotify::set_allocated_sysconfig(::std::string* sysconfig) {
  if (sysconfig != NULL) {
    
  } else {
    
  }
  sysconfig_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sysconfig);
  // @@protoc_insertion_point(field_set_allocated:CMDUserSysConfigNotify.sysconfig)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDUserLocateInfo::kUseridFieldNumber;
const int CMDUserLocateInfo::kLongitudeFieldNumber;
const int CMDUserLocateInfo::kLatitudeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDUserLocateInfo::CMDUserLocateInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDUserLocateInfo)
}

void CMDUserLocateInfo::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDUserLocateInfo::CMDUserLocateInfo(const CMDUserLocateInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDUserLocateInfo)
}

void CMDUserLocateInfo::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  userid_ = 0u;
  longitude_ = 0;
  latitude_ = 0;
}

CMDUserLocateInfo::~CMDUserLocateInfo() {
  // @@protoc_insertion_point(destructor:CMDUserLocateInfo)
  SharedDtor();
}

void CMDUserLocateInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMDUserLocateInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDUserLocateInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDUserLocateInfo_descriptor_;
}

const CMDUserLocateInfo& CMDUserLocateInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_UserMgrSvr_2eproto();
  return *default_instance_;
}

CMDUserLocateInfo* CMDUserLocateInfo::default_instance_ = NULL;

CMDUserLocateInfo* CMDUserLocateInfo::New(::google::protobuf::Arena* arena) const {
  CMDUserLocateInfo* n = new CMDUserLocateInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDUserLocateInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDUserLocateInfo)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDUserLocateInfo, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDUserLocateInfo*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(longitude_, userid_);

#undef ZR_HELPER_
#undef ZR_

}

bool CMDUserLocateInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDUserLocateInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 userid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_longitude;
        break;
      }

      // optional double longitude = 2;
      case 2: {
        if (tag == 17) {
         parse_longitude:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &longitude_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_latitude;
        break;
      }

      // optional double latitude = 3;
      case 3: {
        if (tag == 25) {
         parse_latitude:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &latitude_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDUserLocateInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDUserLocateInfo)
  return false;
#undef DO_
}

void CMDUserLocateInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDUserLocateInfo)
  // optional uint32 userid = 1;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->userid(), output);
  }

  // optional double longitude = 2;
  if (this->longitude() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->longitude(), output);
  }

  // optional double latitude = 3;
  if (this->latitude() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->latitude(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDUserLocateInfo)
}

::google::protobuf::uint8* CMDUserLocateInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDUserLocateInfo)
  // optional uint32 userid = 1;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->userid(), target);
  }

  // optional double longitude = 2;
  if (this->longitude() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->longitude(), target);
  }

  // optional double latitude = 3;
  if (this->latitude() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->latitude(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDUserLocateInfo)
  return target;
}

int CMDUserLocateInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDUserLocateInfo)
  int total_size = 0;

  // optional uint32 userid = 1;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userid());
  }

  // optional double longitude = 2;
  if (this->longitude() != 0) {
    total_size += 1 + 8;
  }

  // optional double latitude = 3;
  if (this->latitude() != 0) {
    total_size += 1 + 8;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDUserLocateInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDUserLocateInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDUserLocateInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDUserLocateInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDUserLocateInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDUserLocateInfo)
    MergeFrom(*source);
  }
}

void CMDUserLocateInfo::MergeFrom(const CMDUserLocateInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDUserLocateInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.longitude() != 0) {
    set_longitude(from.longitude());
  }
  if (from.latitude() != 0) {
    set_latitude(from.latitude());
  }
}

void CMDUserLocateInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDUserLocateInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDUserLocateInfo::CopyFrom(const CMDUserLocateInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDUserLocateInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDUserLocateInfo::IsInitialized() const {

  return true;
}

void CMDUserLocateInfo::Swap(CMDUserLocateInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDUserLocateInfo::InternalSwap(CMDUserLocateInfo* other) {
  std::swap(userid_, other->userid_);
  std::swap(longitude_, other->longitude_);
  std::swap(latitude_, other->latitude_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDUserLocateInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDUserLocateInfo_descriptor_;
  metadata.reflection = CMDUserLocateInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDUserLocateInfo

// optional uint32 userid = 1;
void CMDUserLocateInfo::clear_userid() {
  userid_ = 0u;
}
 ::google::protobuf::uint32 CMDUserLocateInfo::userid() const {
  // @@protoc_insertion_point(field_get:CMDUserLocateInfo.userid)
  return userid_;
}
 void CMDUserLocateInfo::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDUserLocateInfo.userid)
}

// optional double longitude = 2;
void CMDUserLocateInfo::clear_longitude() {
  longitude_ = 0;
}
 double CMDUserLocateInfo::longitude() const {
  // @@protoc_insertion_point(field_get:CMDUserLocateInfo.longitude)
  return longitude_;
}
 void CMDUserLocateInfo::set_longitude(double value) {
  
  longitude_ = value;
  // @@protoc_insertion_point(field_set:CMDUserLocateInfo.longitude)
}

// optional double latitude = 3;
void CMDUserLocateInfo::clear_latitude() {
  latitude_ = 0;
}
 double CMDUserLocateInfo::latitude() const {
  // @@protoc_insertion_point(field_get:CMDUserLocateInfo.latitude)
  return latitude_;
}
 void CMDUserLocateInfo::set_latitude(double value) {
  
  latitude_ = value;
  // @@protoc_insertion_point(field_set:CMDUserLocateInfo.latitude)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDUserLocationResp::kUseridFieldNumber;
const int CMDUserLocationResp::kNearlistFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDUserLocationResp::CMDUserLocationResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDUserLocationResp)
}

void CMDUserLocationResp::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDUserLocationResp::CMDUserLocationResp(const CMDUserLocationResp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDUserLocationResp)
}

void CMDUserLocationResp::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  userid_ = 0u;
}

CMDUserLocationResp::~CMDUserLocationResp() {
  // @@protoc_insertion_point(destructor:CMDUserLocationResp)
  SharedDtor();
}

void CMDUserLocationResp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMDUserLocationResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDUserLocationResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDUserLocationResp_descriptor_;
}

const CMDUserLocationResp& CMDUserLocationResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_UserMgrSvr_2eproto();
  return *default_instance_;
}

CMDUserLocationResp* CMDUserLocationResp::default_instance_ = NULL;

CMDUserLocationResp* CMDUserLocationResp::New(::google::protobuf::Arena* arena) const {
  CMDUserLocationResp* n = new CMDUserLocationResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDUserLocationResp::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDUserLocationResp)
  userid_ = 0u;
  nearlist_.Clear();
}

bool CMDUserLocationResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDUserLocationResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 userid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_nearlist;
        break;
      }

      // repeated .CMDUserLocateInfo nearlist = 2;
      case 2: {
        if (tag == 18) {
         parse_nearlist:
          DO_(input->IncrementRecursionDepth());
         parse_loop_nearlist:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_nearlist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_nearlist;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDUserLocationResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDUserLocationResp)
  return false;
#undef DO_
}

void CMDUserLocationResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDUserLocationResp)
  // optional uint32 userid = 1;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->userid(), output);
  }

  // repeated .CMDUserLocateInfo nearlist = 2;
  for (unsigned int i = 0, n = this->nearlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->nearlist(i), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDUserLocationResp)
}

::google::protobuf::uint8* CMDUserLocationResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDUserLocationResp)
  // optional uint32 userid = 1;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->userid(), target);
  }

  // repeated .CMDUserLocateInfo nearlist = 2;
  for (unsigned int i = 0, n = this->nearlist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->nearlist(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDUserLocationResp)
  return target;
}

int CMDUserLocationResp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDUserLocationResp)
  int total_size = 0;

  // optional uint32 userid = 1;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userid());
  }

  // repeated .CMDUserLocateInfo nearlist = 2;
  total_size += 1 * this->nearlist_size();
  for (int i = 0; i < this->nearlist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->nearlist(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDUserLocationResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDUserLocationResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDUserLocationResp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDUserLocationResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDUserLocationResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDUserLocationResp)
    MergeFrom(*source);
  }
}

void CMDUserLocationResp::MergeFrom(const CMDUserLocationResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDUserLocationResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  nearlist_.MergeFrom(from.nearlist_);
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
}

void CMDUserLocationResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDUserLocationResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDUserLocationResp::CopyFrom(const CMDUserLocationResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDUserLocationResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDUserLocationResp::IsInitialized() const {

  return true;
}

void CMDUserLocationResp::Swap(CMDUserLocationResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDUserLocationResp::InternalSwap(CMDUserLocationResp* other) {
  std::swap(userid_, other->userid_);
  nearlist_.UnsafeArenaSwap(&other->nearlist_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDUserLocationResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDUserLocationResp_descriptor_;
  metadata.reflection = CMDUserLocationResp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDUserLocationResp

// optional uint32 userid = 1;
void CMDUserLocationResp::clear_userid() {
  userid_ = 0u;
}
 ::google::protobuf::uint32 CMDUserLocationResp::userid() const {
  // @@protoc_insertion_point(field_get:CMDUserLocationResp.userid)
  return userid_;
}
 void CMDUserLocationResp::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDUserLocationResp.userid)
}

// repeated .CMDUserLocateInfo nearlist = 2;
int CMDUserLocationResp::nearlist_size() const {
  return nearlist_.size();
}
void CMDUserLocationResp::clear_nearlist() {
  nearlist_.Clear();
}
const ::CMDUserLocateInfo& CMDUserLocationResp::nearlist(int index) const {
  // @@protoc_insertion_point(field_get:CMDUserLocationResp.nearlist)
  return nearlist_.Get(index);
}
::CMDUserLocateInfo* CMDUserLocationResp::mutable_nearlist(int index) {
  // @@protoc_insertion_point(field_mutable:CMDUserLocationResp.nearlist)
  return nearlist_.Mutable(index);
}
::CMDUserLocateInfo* CMDUserLocationResp::add_nearlist() {
  // @@protoc_insertion_point(field_add:CMDUserLocationResp.nearlist)
  return nearlist_.Add();
}
::google::protobuf::RepeatedPtrField< ::CMDUserLocateInfo >*
CMDUserLocationResp::mutable_nearlist() {
  // @@protoc_insertion_point(field_mutable_list:CMDUserLocationResp.nearlist)
  return &nearlist_;
}
const ::google::protobuf::RepeatedPtrField< ::CMDUserLocateInfo >&
CMDUserLocationResp::nearlist() const {
  // @@protoc_insertion_point(field_list:CMDUserLocationResp.nearlist)
  return nearlist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
