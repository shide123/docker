// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Common.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "Common.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* CMDString_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDString_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDUInt32_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDUInt32_reflection_ = NULL;
const ::google::protobuf::Descriptor* UserInfo_t_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UserInfo_t_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDErrCode_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDErrCode_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* e_GenderType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* e_MsgType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* e_RemindType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_Common_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_Common_2eproto() {
  protobuf_AddDesc_Common_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "Common.proto");
  GOOGLE_CHECK(file != NULL);
  CMDString_descriptor_ = file->message_type(0);
  static const int CMDString_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDString, data_),
  };
  CMDString_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDString_descriptor_,
      CMDString::default_instance_,
      CMDString_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDString),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDString, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDString, _is_default_instance_));
  CMDUInt32_descriptor_ = file->message_type(1);
  static const int CMDUInt32_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUInt32, data_),
  };
  CMDUInt32_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDUInt32_descriptor_,
      CMDUInt32::default_instance_,
      CMDUInt32_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDUInt32),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUInt32, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUInt32, _is_default_instance_));
  UserInfo_t_descriptor_ = file->message_type(2);
  static const int UserInfo_t_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo_t, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo_t, alias_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo_t, head_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo_t, roletype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo_t, authstate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo_t, gender_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo_t, usertype_),
  };
  UserInfo_t_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UserInfo_t_descriptor_,
      UserInfo_t::default_instance_,
      UserInfo_t_offsets_,
      -1,
      -1,
      -1,
      sizeof(UserInfo_t),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo_t, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo_t, _is_default_instance_));
  CMDErrCode_descriptor_ = file->message_type(3);
  static const int CMDErrCode_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDErrCode, errid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDErrCode, errmsg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDErrCode, paramvalue_),
  };
  CMDErrCode_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDErrCode_descriptor_,
      CMDErrCode::default_instance_,
      CMDErrCode_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDErrCode),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDErrCode, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDErrCode, _is_default_instance_));
  e_GenderType_descriptor_ = file->enum_type(0);
  e_MsgType_descriptor_ = file->enum_type(1);
  e_RemindType_descriptor_ = file->enum_type(2);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_Common_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDString_descriptor_, &CMDString::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDUInt32_descriptor_, &CMDUInt32::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UserInfo_t_descriptor_, &UserInfo_t::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDErrCode_descriptor_, &CMDErrCode::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_Common_2eproto() {
  delete CMDString::default_instance_;
  delete CMDString_reflection_;
  delete CMDUInt32::default_instance_;
  delete CMDUInt32_reflection_;
  delete UserInfo_t::default_instance_;
  delete UserInfo_t_reflection_;
  delete CMDErrCode::default_instance_;
  delete CMDErrCode_reflection_;
}

void protobuf_AddDesc_Common_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_Common_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\014Common.proto\"\031\n\tCMDString\022\014\n\004data\030\001 \001("
    "\t\"\031\n\tCMDUInt32\022\014\n\004data\030\001 \001(\r\"\217\001\n\nUserInf"
    "o_t\022\016\n\006userId\030\001 \001(\r\022\r\n\005alias\030\002 \001(\t\022\014\n\004he"
    "ad\030\003 \001(\t\022\020\n\010roleType\030\004 \001(\r\022\021\n\tauthState\030"
    "\005 \001(\r\022\035\n\006gender\030\006 \001(\0162\r.e_GenderType\022\020\n\010"
    "UserType\030\007 \001(\r\"\?\n\nCMDErrCode\022\r\n\005errID\030\001 "
    "\001(\r\022\016\n\006errMsg\030\002 \001(\t\022\022\n\nparamValue\030\003 \003(\t*"
    "L\n\014e_GenderType\022\024\n\020e_Gender_Unknown\020\000\022\021\n"
    "\re_Gender_Male\020\001\022\023\n\017e_Gender_Female\020\002*\230\003"
    "\n\te_MsgType\022\020\n\014MSGTYPE_TEXT\020\000\022\030\n\024MSGTYPE"
    "_IMAGE_WEIXIN\020\001\022\030\n\024MSGTYPE_VOICE_WEIXIN\020"
    "\002\022\021\n\rMSGTYPE_VEDIO\020\003\022\023\n\017MSGTYPE_REDPACK\020"
    "\004\022\022\n\016MSGTYPE_ASSIST\020\005\022\026\n\022MSGTYPE_SYSTEMI"
    "NFO\020\006\022\022\n\016MSGTYPE_REMIND\020\007\022\022\n\016MSGTYPE_REC"
    "ALL\020\010\022\021\n\rMSGTYPE_LINKS\020\t\022\023\n\017MSGTYPE_STIC"
    "KER\020\n\022\017\n\013MSGTYPE_TIP\020\013\022\021\n\rMSGTYPE_IMAGE\020"
    "\014\022\021\n\rMSGTYPE_VOICE\020\r\022\026\n\022MSGTYPE_UPLOADWA"
    "LL\020\016\022\035\n\031MSGTYPE_CLOSE_LIVE_COURSE\020\017\022\025\n\021M"
    "SGTYPE_PPT_VOICE\020\020\022\034\n\030MSGTYPE_CANCELL_KE"
    "YPOINT\020\021*u\n\014e_RemindType\022\031\n\025REMIND_TAKE_"
    "REDPACKET\020\000\022\035\n\031REMIND_BE_TAKEN_REDPACKET"
    "\020\001\022\024\n\020REMIND_JOINGROUP\020\002\022\025\n\021REMIND_ROLEC"
    "HANGE\020\003B\026\n\022com.dream.cube.tcpH\001b\006proto3", 919);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Common.proto", &protobuf_RegisterTypes);
  CMDString::default_instance_ = new CMDString();
  CMDUInt32::default_instance_ = new CMDUInt32();
  UserInfo_t::default_instance_ = new UserInfo_t();
  CMDErrCode::default_instance_ = new CMDErrCode();
  CMDString::default_instance_->InitAsDefaultInstance();
  CMDUInt32::default_instance_->InitAsDefaultInstance();
  UserInfo_t::default_instance_->InitAsDefaultInstance();
  CMDErrCode::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_Common_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_Common_2eproto {
  StaticDescriptorInitializer_Common_2eproto() {
    protobuf_AddDesc_Common_2eproto();
  }
} static_descriptor_initializer_Common_2eproto_;
const ::google::protobuf::EnumDescriptor* e_GenderType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return e_GenderType_descriptor_;
}
bool e_GenderType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* e_MsgType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return e_MsgType_descriptor_;
}
bool e_MsgType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* e_RemindType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return e_RemindType_descriptor_;
}
bool e_RemindType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDString::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDString::CMDString()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDString)
}

void CMDString::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDString::CMDString(const CMDString& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDString)
}

void CMDString::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CMDString::~CMDString() {
  // @@protoc_insertion_point(destructor:CMDString)
  SharedDtor();
}

void CMDString::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CMDString::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDString::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDString_descriptor_;
}

const CMDString& CMDString::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Common_2eproto();
  return *default_instance_;
}

CMDString* CMDString::default_instance_ = NULL;

CMDString* CMDString::New(::google::protobuf::Arena* arena) const {
  CMDString* n = new CMDString;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDString::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDString)
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool CMDString::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDString)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMDString.data"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDString)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDString)
  return false;
#undef DO_
}

void CMDString::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDString)
  // optional string data = 1;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDString.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDString)
}

::google::protobuf::uint8* CMDString::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDString)
  // optional string data = 1;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDString.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDString)
  return target;
}

int CMDString::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDString)
  int total_size = 0;

  // optional string data = 1;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDString::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDString)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDString* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDString>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDString)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDString)
    MergeFrom(*source);
  }
}

void CMDString::MergeFrom(const CMDString& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDString)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
}

void CMDString::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDString)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDString::CopyFrom(const CMDString& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDString)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDString::IsInitialized() const {

  return true;
}

void CMDString::Swap(CMDString* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDString::InternalSwap(CMDString* other) {
  data_.Swap(&other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDString::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDString_descriptor_;
  metadata.reflection = CMDString_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDString

// optional string data = 1;
void CMDString::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CMDString::data() const {
  // @@protoc_insertion_point(field_get:CMDString.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDString::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDString.data)
}
 void CMDString::set_data(const char* value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDString.data)
}
 void CMDString::set_data(const char* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDString.data)
}
 ::std::string* CMDString::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:CMDString.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMDString::release_data() {
  // @@protoc_insertion_point(field_release:CMDString.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDString::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:CMDString.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDUInt32::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDUInt32::CMDUInt32()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDUInt32)
}

void CMDUInt32::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDUInt32::CMDUInt32(const CMDUInt32& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDUInt32)
}

void CMDUInt32::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  data_ = 0u;
}

CMDUInt32::~CMDUInt32() {
  // @@protoc_insertion_point(destructor:CMDUInt32)
  SharedDtor();
}

void CMDUInt32::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMDUInt32::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDUInt32::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDUInt32_descriptor_;
}

const CMDUInt32& CMDUInt32::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Common_2eproto();
  return *default_instance_;
}

CMDUInt32* CMDUInt32::default_instance_ = NULL;

CMDUInt32* CMDUInt32::New(::google::protobuf::Arena* arena) const {
  CMDUInt32* n = new CMDUInt32;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDUInt32::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDUInt32)
  data_ = 0u;
}

bool CMDUInt32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDUInt32)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 data = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &data_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDUInt32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDUInt32)
  return false;
#undef DO_
}

void CMDUInt32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDUInt32)
  // optional uint32 data = 1;
  if (this->data() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->data(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDUInt32)
}

::google::protobuf::uint8* CMDUInt32::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDUInt32)
  // optional uint32 data = 1;
  if (this->data() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->data(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDUInt32)
  return target;
}

int CMDUInt32::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDUInt32)
  int total_size = 0;

  // optional uint32 data = 1;
  if (this->data() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->data());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDUInt32::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDUInt32)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDUInt32* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDUInt32>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDUInt32)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDUInt32)
    MergeFrom(*source);
  }
}

void CMDUInt32::MergeFrom(const CMDUInt32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDUInt32)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.data() != 0) {
    set_data(from.data());
  }
}

void CMDUInt32::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDUInt32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDUInt32::CopyFrom(const CMDUInt32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDUInt32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDUInt32::IsInitialized() const {

  return true;
}

void CMDUInt32::Swap(CMDUInt32* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDUInt32::InternalSwap(CMDUInt32* other) {
  std::swap(data_, other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDUInt32::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDUInt32_descriptor_;
  metadata.reflection = CMDUInt32_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDUInt32

// optional uint32 data = 1;
void CMDUInt32::clear_data() {
  data_ = 0u;
}
 ::google::protobuf::uint32 CMDUInt32::data() const {
  // @@protoc_insertion_point(field_get:CMDUInt32.data)
  return data_;
}
 void CMDUInt32::set_data(::google::protobuf::uint32 value) {
  
  data_ = value;
  // @@protoc_insertion_point(field_set:CMDUInt32.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserInfo_t::kUserIdFieldNumber;
const int UserInfo_t::kAliasFieldNumber;
const int UserInfo_t::kHeadFieldNumber;
const int UserInfo_t::kRoleTypeFieldNumber;
const int UserInfo_t::kAuthStateFieldNumber;
const int UserInfo_t::kGenderFieldNumber;
const int UserInfo_t::kUserTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserInfo_t::UserInfo_t()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:UserInfo_t)
}

void UserInfo_t::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

UserInfo_t::UserInfo_t(const UserInfo_t& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:UserInfo_t)
}

void UserInfo_t::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  userid_ = 0u;
  alias_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  head_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  roletype_ = 0u;
  authstate_ = 0u;
  gender_ = 0;
  usertype_ = 0u;
}

UserInfo_t::~UserInfo_t() {
  // @@protoc_insertion_point(destructor:UserInfo_t)
  SharedDtor();
}

void UserInfo_t::SharedDtor() {
  alias_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  head_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void UserInfo_t::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserInfo_t::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UserInfo_t_descriptor_;
}

const UserInfo_t& UserInfo_t::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Common_2eproto();
  return *default_instance_;
}

UserInfo_t* UserInfo_t::default_instance_ = NULL;

UserInfo_t* UserInfo_t::New(::google::protobuf::Arena* arena) const {
  UserInfo_t* n = new UserInfo_t;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserInfo_t::Clear() {
// @@protoc_insertion_point(message_clear_start:UserInfo_t)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(UserInfo_t, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<UserInfo_t*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(userid_, roletype_);
  ZR_(authstate_, usertype_);
  alias_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  head_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool UserInfo_t::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UserInfo_t)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 userId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_alias;
        break;
      }

      // optional string alias = 2;
      case 2: {
        if (tag == 18) {
         parse_alias:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_alias()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->alias().data(), this->alias().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "UserInfo_t.alias"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_head;
        break;
      }

      // optional string head = 3;
      case 3: {
        if (tag == 26) {
         parse_head:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_head()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->head().data(), this->head().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "UserInfo_t.head"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_roleType;
        break;
      }

      // optional uint32 roleType = 4;
      case 4: {
        if (tag == 32) {
         parse_roleType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &roletype_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_authState;
        break;
      }

      // optional uint32 authState = 5;
      case 5: {
        if (tag == 40) {
         parse_authState:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &authstate_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_gender;
        break;
      }

      // optional .e_GenderType gender = 6;
      case 6: {
        if (tag == 48) {
         parse_gender:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_gender(static_cast< ::e_GenderType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_UserType;
        break;
      }

      // optional uint32 UserType = 7;
      case 7: {
        if (tag == 56) {
         parse_UserType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &usertype_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UserInfo_t)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UserInfo_t)
  return false;
#undef DO_
}

void UserInfo_t::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UserInfo_t)
  // optional uint32 userId = 1;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->userid(), output);
  }

  // optional string alias = 2;
  if (this->alias().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->alias().data(), this->alias().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "UserInfo_t.alias");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->alias(), output);
  }

  // optional string head = 3;
  if (this->head().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->head().data(), this->head().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "UserInfo_t.head");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->head(), output);
  }

  // optional uint32 roleType = 4;
  if (this->roletype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->roletype(), output);
  }

  // optional uint32 authState = 5;
  if (this->authstate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->authstate(), output);
  }

  // optional .e_GenderType gender = 6;
  if (this->gender() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->gender(), output);
  }

  // optional uint32 UserType = 7;
  if (this->usertype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->usertype(), output);
  }

  // @@protoc_insertion_point(serialize_end:UserInfo_t)
}

::google::protobuf::uint8* UserInfo_t::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:UserInfo_t)
  // optional uint32 userId = 1;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->userid(), target);
  }

  // optional string alias = 2;
  if (this->alias().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->alias().data(), this->alias().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "UserInfo_t.alias");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->alias(), target);
  }

  // optional string head = 3;
  if (this->head().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->head().data(), this->head().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "UserInfo_t.head");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->head(), target);
  }

  // optional uint32 roleType = 4;
  if (this->roletype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->roletype(), target);
  }

  // optional uint32 authState = 5;
  if (this->authstate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->authstate(), target);
  }

  // optional .e_GenderType gender = 6;
  if (this->gender() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->gender(), target);
  }

  // optional uint32 UserType = 7;
  if (this->usertype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->usertype(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:UserInfo_t)
  return target;
}

int UserInfo_t::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:UserInfo_t)
  int total_size = 0;

  // optional uint32 userId = 1;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userid());
  }

  // optional string alias = 2;
  if (this->alias().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->alias());
  }

  // optional string head = 3;
  if (this->head().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->head());
  }

  // optional uint32 roleType = 4;
  if (this->roletype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->roletype());
  }

  // optional uint32 authState = 5;
  if (this->authstate() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->authstate());
  }

  // optional .e_GenderType gender = 6;
  if (this->gender() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->gender());
  }

  // optional uint32 UserType = 7;
  if (this->usertype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->usertype());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserInfo_t::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UserInfo_t)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const UserInfo_t* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const UserInfo_t>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UserInfo_t)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UserInfo_t)
    MergeFrom(*source);
  }
}

void UserInfo_t::MergeFrom(const UserInfo_t& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UserInfo_t)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.alias().size() > 0) {

    alias_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.alias_);
  }
  if (from.head().size() > 0) {

    head_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.head_);
  }
  if (from.roletype() != 0) {
    set_roletype(from.roletype());
  }
  if (from.authstate() != 0) {
    set_authstate(from.authstate());
  }
  if (from.gender() != 0) {
    set_gender(from.gender());
  }
  if (from.usertype() != 0) {
    set_usertype(from.usertype());
  }
}

void UserInfo_t::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UserInfo_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserInfo_t::CopyFrom(const UserInfo_t& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UserInfo_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserInfo_t::IsInitialized() const {

  return true;
}

void UserInfo_t::Swap(UserInfo_t* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserInfo_t::InternalSwap(UserInfo_t* other) {
  std::swap(userid_, other->userid_);
  alias_.Swap(&other->alias_);
  head_.Swap(&other->head_);
  std::swap(roletype_, other->roletype_);
  std::swap(authstate_, other->authstate_);
  std::swap(gender_, other->gender_);
  std::swap(usertype_, other->usertype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UserInfo_t::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UserInfo_t_descriptor_;
  metadata.reflection = UserInfo_t_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UserInfo_t

// optional uint32 userId = 1;
void UserInfo_t::clear_userid() {
  userid_ = 0u;
}
 ::google::protobuf::uint32 UserInfo_t::userid() const {
  // @@protoc_insertion_point(field_get:UserInfo_t.userId)
  return userid_;
}
 void UserInfo_t::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:UserInfo_t.userId)
}

// optional string alias = 2;
void UserInfo_t::clear_alias() {
  alias_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& UserInfo_t::alias() const {
  // @@protoc_insertion_point(field_get:UserInfo_t.alias)
  return alias_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UserInfo_t::set_alias(const ::std::string& value) {
  
  alias_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UserInfo_t.alias)
}
 void UserInfo_t::set_alias(const char* value) {
  
  alias_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UserInfo_t.alias)
}
 void UserInfo_t::set_alias(const char* value, size_t size) {
  
  alias_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UserInfo_t.alias)
}
 ::std::string* UserInfo_t::mutable_alias() {
  
  // @@protoc_insertion_point(field_mutable:UserInfo_t.alias)
  return alias_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* UserInfo_t::release_alias() {
  // @@protoc_insertion_point(field_release:UserInfo_t.alias)
  
  return alias_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UserInfo_t::set_allocated_alias(::std::string* alias) {
  if (alias != NULL) {
    
  } else {
    
  }
  alias_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alias);
  // @@protoc_insertion_point(field_set_allocated:UserInfo_t.alias)
}

// optional string head = 3;
void UserInfo_t::clear_head() {
  head_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& UserInfo_t::head() const {
  // @@protoc_insertion_point(field_get:UserInfo_t.head)
  return head_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UserInfo_t::set_head(const ::std::string& value) {
  
  head_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UserInfo_t.head)
}
 void UserInfo_t::set_head(const char* value) {
  
  head_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UserInfo_t.head)
}
 void UserInfo_t::set_head(const char* value, size_t size) {
  
  head_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UserInfo_t.head)
}
 ::std::string* UserInfo_t::mutable_head() {
  
  // @@protoc_insertion_point(field_mutable:UserInfo_t.head)
  return head_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* UserInfo_t::release_head() {
  // @@protoc_insertion_point(field_release:UserInfo_t.head)
  
  return head_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UserInfo_t::set_allocated_head(::std::string* head) {
  if (head != NULL) {
    
  } else {
    
  }
  head_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), head);
  // @@protoc_insertion_point(field_set_allocated:UserInfo_t.head)
}

// optional uint32 roleType = 4;
void UserInfo_t::clear_roletype() {
  roletype_ = 0u;
}
 ::google::protobuf::uint32 UserInfo_t::roletype() const {
  // @@protoc_insertion_point(field_get:UserInfo_t.roleType)
  return roletype_;
}
 void UserInfo_t::set_roletype(::google::protobuf::uint32 value) {
  
  roletype_ = value;
  // @@protoc_insertion_point(field_set:UserInfo_t.roleType)
}

// optional uint32 authState = 5;
void UserInfo_t::clear_authstate() {
  authstate_ = 0u;
}
 ::google::protobuf::uint32 UserInfo_t::authstate() const {
  // @@protoc_insertion_point(field_get:UserInfo_t.authState)
  return authstate_;
}
 void UserInfo_t::set_authstate(::google::protobuf::uint32 value) {
  
  authstate_ = value;
  // @@protoc_insertion_point(field_set:UserInfo_t.authState)
}

// optional .e_GenderType gender = 6;
void UserInfo_t::clear_gender() {
  gender_ = 0;
}
 ::e_GenderType UserInfo_t::gender() const {
  // @@protoc_insertion_point(field_get:UserInfo_t.gender)
  return static_cast< ::e_GenderType >(gender_);
}
 void UserInfo_t::set_gender(::e_GenderType value) {
  
  gender_ = value;
  // @@protoc_insertion_point(field_set:UserInfo_t.gender)
}

// optional uint32 UserType = 7;
void UserInfo_t::clear_usertype() {
  usertype_ = 0u;
}
 ::google::protobuf::uint32 UserInfo_t::usertype() const {
  // @@protoc_insertion_point(field_get:UserInfo_t.UserType)
  return usertype_;
}
 void UserInfo_t::set_usertype(::google::protobuf::uint32 value) {
  
  usertype_ = value;
  // @@protoc_insertion_point(field_set:UserInfo_t.UserType)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDErrCode::kErrIDFieldNumber;
const int CMDErrCode::kErrMsgFieldNumber;
const int CMDErrCode::kParamValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDErrCode::CMDErrCode()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDErrCode)
}

void CMDErrCode::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDErrCode::CMDErrCode(const CMDErrCode& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDErrCode)
}

void CMDErrCode::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  errid_ = 0u;
  errmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CMDErrCode::~CMDErrCode() {
  // @@protoc_insertion_point(destructor:CMDErrCode)
  SharedDtor();
}

void CMDErrCode::SharedDtor() {
  errmsg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CMDErrCode::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDErrCode::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDErrCode_descriptor_;
}

const CMDErrCode& CMDErrCode::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Common_2eproto();
  return *default_instance_;
}

CMDErrCode* CMDErrCode::default_instance_ = NULL;

CMDErrCode* CMDErrCode::New(::google::protobuf::Arena* arena) const {
  CMDErrCode* n = new CMDErrCode;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDErrCode::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDErrCode)
  errid_ = 0u;
  errmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  paramvalue_.Clear();
}

bool CMDErrCode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDErrCode)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 errID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &errid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_errMsg;
        break;
      }

      // optional string errMsg = 2;
      case 2: {
        if (tag == 18) {
         parse_errMsg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_errmsg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->errmsg().data(), this->errmsg().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMDErrCode.errMsg"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_paramValue;
        break;
      }

      // repeated string paramValue = 3;
      case 3: {
        if (tag == 26) {
         parse_paramValue:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_paramvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->paramvalue(this->paramvalue_size() - 1).data(),
            this->paramvalue(this->paramvalue_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMDErrCode.paramValue"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_paramValue;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDErrCode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDErrCode)
  return false;
#undef DO_
}

void CMDErrCode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDErrCode)
  // optional uint32 errID = 1;
  if (this->errid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->errid(), output);
  }

  // optional string errMsg = 2;
  if (this->errmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errmsg().data(), this->errmsg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDErrCode.errMsg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->errmsg(), output);
  }

  // repeated string paramValue = 3;
  for (int i = 0; i < this->paramvalue_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->paramvalue(i).data(), this->paramvalue(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDErrCode.paramValue");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->paramvalue(i), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDErrCode)
}

::google::protobuf::uint8* CMDErrCode::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDErrCode)
  // optional uint32 errID = 1;
  if (this->errid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->errid(), target);
  }

  // optional string errMsg = 2;
  if (this->errmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errmsg().data(), this->errmsg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDErrCode.errMsg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->errmsg(), target);
  }

  // repeated string paramValue = 3;
  for (int i = 0; i < this->paramvalue_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->paramvalue(i).data(), this->paramvalue(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDErrCode.paramValue");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->paramvalue(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDErrCode)
  return target;
}

int CMDErrCode::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDErrCode)
  int total_size = 0;

  // optional uint32 errID = 1;
  if (this->errid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->errid());
  }

  // optional string errMsg = 2;
  if (this->errmsg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->errmsg());
  }

  // repeated string paramValue = 3;
  total_size += 1 * this->paramvalue_size();
  for (int i = 0; i < this->paramvalue_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->paramvalue(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDErrCode::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDErrCode)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDErrCode* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDErrCode>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDErrCode)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDErrCode)
    MergeFrom(*source);
  }
}

void CMDErrCode::MergeFrom(const CMDErrCode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDErrCode)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  paramvalue_.MergeFrom(from.paramvalue_);
  if (from.errid() != 0) {
    set_errid(from.errid());
  }
  if (from.errmsg().size() > 0) {

    errmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errmsg_);
  }
}

void CMDErrCode::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDErrCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDErrCode::CopyFrom(const CMDErrCode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDErrCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDErrCode::IsInitialized() const {

  return true;
}

void CMDErrCode::Swap(CMDErrCode* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDErrCode::InternalSwap(CMDErrCode* other) {
  std::swap(errid_, other->errid_);
  errmsg_.Swap(&other->errmsg_);
  paramvalue_.UnsafeArenaSwap(&other->paramvalue_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDErrCode::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDErrCode_descriptor_;
  metadata.reflection = CMDErrCode_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDErrCode

// optional uint32 errID = 1;
void CMDErrCode::clear_errid() {
  errid_ = 0u;
}
 ::google::protobuf::uint32 CMDErrCode::errid() const {
  // @@protoc_insertion_point(field_get:CMDErrCode.errID)
  return errid_;
}
 void CMDErrCode::set_errid(::google::protobuf::uint32 value) {
  
  errid_ = value;
  // @@protoc_insertion_point(field_set:CMDErrCode.errID)
}

// optional string errMsg = 2;
void CMDErrCode::clear_errmsg() {
  errmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CMDErrCode::errmsg() const {
  // @@protoc_insertion_point(field_get:CMDErrCode.errMsg)
  return errmsg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDErrCode::set_errmsg(const ::std::string& value) {
  
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDErrCode.errMsg)
}
 void CMDErrCode::set_errmsg(const char* value) {
  
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDErrCode.errMsg)
}
 void CMDErrCode::set_errmsg(const char* value, size_t size) {
  
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDErrCode.errMsg)
}
 ::std::string* CMDErrCode::mutable_errmsg() {
  
  // @@protoc_insertion_point(field_mutable:CMDErrCode.errMsg)
  return errmsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMDErrCode::release_errmsg() {
  // @@protoc_insertion_point(field_release:CMDErrCode.errMsg)
  
  return errmsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDErrCode::set_allocated_errmsg(::std::string* errmsg) {
  if (errmsg != NULL) {
    
  } else {
    
  }
  errmsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), errmsg);
  // @@protoc_insertion_point(field_set_allocated:CMDErrCode.errMsg)
}

// repeated string paramValue = 3;
int CMDErrCode::paramvalue_size() const {
  return paramvalue_.size();
}
void CMDErrCode::clear_paramvalue() {
  paramvalue_.Clear();
}
 const ::std::string& CMDErrCode::paramvalue(int index) const {
  // @@protoc_insertion_point(field_get:CMDErrCode.paramValue)
  return paramvalue_.Get(index);
}
 ::std::string* CMDErrCode::mutable_paramvalue(int index) {
  // @@protoc_insertion_point(field_mutable:CMDErrCode.paramValue)
  return paramvalue_.Mutable(index);
}
 void CMDErrCode::set_paramvalue(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:CMDErrCode.paramValue)
  paramvalue_.Mutable(index)->assign(value);
}
 void CMDErrCode::set_paramvalue(int index, const char* value) {
  paramvalue_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CMDErrCode.paramValue)
}
 void CMDErrCode::set_paramvalue(int index, const char* value, size_t size) {
  paramvalue_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMDErrCode.paramValue)
}
 ::std::string* CMDErrCode::add_paramvalue() {
  // @@protoc_insertion_point(field_add_mutable:CMDErrCode.paramValue)
  return paramvalue_.Add();
}
 void CMDErrCode::add_paramvalue(const ::std::string& value) {
  paramvalue_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:CMDErrCode.paramValue)
}
 void CMDErrCode::add_paramvalue(const char* value) {
  paramvalue_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CMDErrCode.paramValue)
}
 void CMDErrCode::add_paramvalue(const char* value, size_t size) {
  paramvalue_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CMDErrCode.paramValue)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
CMDErrCode::paramvalue() const {
  // @@protoc_insertion_point(field_list:CMDErrCode.paramValue)
  return paramvalue_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
CMDErrCode::mutable_paramvalue() {
  // @@protoc_insertion_point(field_mutable_list:CMDErrCode.paramValue)
  return &paramvalue_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
