// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ConsumeSvr.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ConsumeSvr.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* CMDSendRedPacketReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDSendRedPacketReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDSendRedPacketResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDSendRedPacketResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDCatchRedPacketReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDCatchRedPacketReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDCatchRedPacketResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDCatchRedPacketResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDTakeRedPacketReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDTakeRedPacketReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDTakeRedPacketResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDTakeRedPacketResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDQryRedPacketInfoReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDQryRedPacketInfoReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDRedPacketTakenRes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDRedPacketTakenRes_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDRedPacketInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDRedPacketInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDWeekListRes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDWeekListRes_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDWeekListNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDWeekListNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDQryWeekListReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDQryWeekListReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDQryRedPacketReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDQryRedPacketReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDRedPacket_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDRedPacket_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDQryRedPacketRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDQryRedPacketRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDUesrTreasureBuyInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDUesrTreasureBuyInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDTreasureInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDTreasureInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDTreasureExtraInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDTreasureExtraInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDBuyCodeRange_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDBuyCodeRange_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDSponsorTreasureReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDSponsorTreasureReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDSponsorTreasureResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDSponsorTreasureResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDBuyTreasure_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDBuyTreasure_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDBuyTreasureResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDBuyTreasureResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDQryMyTreasureDetail_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDQryMyTreasureDetail_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDMyTreasureDetail_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDMyTreasureDetail_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDQryTreasureList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDQryTreasureList_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDTreasureList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDTreasureList_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDTreasureInfoNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDTreasureInfoNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDQryTreasureInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDQryTreasureInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDQryTreasureInfoResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDQryTreasureInfoResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDSendPressStampReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDSendPressStampReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDSendPressStampResp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDSendPressStampResp_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDQryStampReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDQryStampReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDStampInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDStampInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMDQryStampRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMDQryStampRsp_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* ePacketType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* ePacketFixType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* eRangeType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* eRangeGender_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* e_TreasureType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* e_LotteryType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* e_TreasureStatus_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* e_UserRange_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_ConsumeSvr_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_ConsumeSvr_2eproto() {
  protobuf_AddDesc_ConsumeSvr_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ConsumeSvr.proto");
  GOOGLE_CHECK(file != NULL);
  CMDSendRedPacketReq_descriptor_ = file->message_type(0);
  static const int CMDSendRedPacketReq_offsets_[16] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSendRedPacketReq, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSendRedPacketReq, groupid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSendRedPacketReq, packettype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSendRedPacketReq, rangetype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSendRedPacketReq, dstuserid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSendRedPacketReq, packetnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSendRedPacketReq, packetmoney_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSendRedPacketReq, perpacketmoney_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSendRedPacketReq, message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSendRedPacketReq, privatetype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSendRedPacketReq, rangegender_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSendRedPacketReq, fixtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSendRedPacketReq, invalidtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSendRedPacketReq, longitude_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSendRedPacketReq, latitude_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSendRedPacketReq, location_),
  };
  CMDSendRedPacketReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDSendRedPacketReq_descriptor_,
      CMDSendRedPacketReq::default_instance_,
      CMDSendRedPacketReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDSendRedPacketReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSendRedPacketReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSendRedPacketReq, _is_default_instance_));
  CMDSendRedPacketResp_descriptor_ = file->message_type(1);
  static const int CMDSendRedPacketResp_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSendRedPacketResp, errinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSendRedPacketResp, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSendRedPacketResp, groupid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSendRedPacketResp, packetid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSendRedPacketResp, combonum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSendRedPacketResp, privatetype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSendRedPacketResp, combotime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSendRedPacketResp, packettype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSendRedPacketResp, longitude_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSendRedPacketResp, latitude_),
  };
  CMDSendRedPacketResp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDSendRedPacketResp_descriptor_,
      CMDSendRedPacketResp::default_instance_,
      CMDSendRedPacketResp_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDSendRedPacketResp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSendRedPacketResp, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSendRedPacketResp, _is_default_instance_));
  CMDCatchRedPacketReq_descriptor_ = file->message_type(2);
  static const int CMDCatchRedPacketReq_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDCatchRedPacketReq, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDCatchRedPacketReq, groupid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDCatchRedPacketReq, packetid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDCatchRedPacketReq, longitude_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDCatchRedPacketReq, latitude_),
  };
  CMDCatchRedPacketReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDCatchRedPacketReq_descriptor_,
      CMDCatchRedPacketReq::default_instance_,
      CMDCatchRedPacketReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDCatchRedPacketReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDCatchRedPacketReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDCatchRedPacketReq, _is_default_instance_));
  CMDCatchRedPacketResp_descriptor_ = file->message_type(3);
  static const int CMDCatchRedPacketResp_offsets_[14] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDCatchRedPacketResp, errinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDCatchRedPacketResp, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDCatchRedPacketResp, groupid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDCatchRedPacketResp, packetid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDCatchRedPacketResp, srcuser_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDCatchRedPacketResp, dstuser_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDCatchRedPacketResp, packettype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDCatchRedPacketResp, rangetype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDCatchRedPacketResp, packetnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDCatchRedPacketResp, packetmoney_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDCatchRedPacketResp, message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDCatchRedPacketResp, privatetype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDCatchRedPacketResp, fixtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDCatchRedPacketResp, difftime_),
  };
  CMDCatchRedPacketResp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDCatchRedPacketResp_descriptor_,
      CMDCatchRedPacketResp::default_instance_,
      CMDCatchRedPacketResp_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDCatchRedPacketResp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDCatchRedPacketResp, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDCatchRedPacketResp, _is_default_instance_));
  CMDTakeRedPacketReq_descriptor_ = file->message_type(4);
  static const int CMDTakeRedPacketReq_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDTakeRedPacketReq, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDTakeRedPacketReq, groupid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDTakeRedPacketReq, packetid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDTakeRedPacketReq, photopath_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDTakeRedPacketReq, longitude_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDTakeRedPacketReq, latitude_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDTakeRedPacketReq, message_),
  };
  CMDTakeRedPacketReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDTakeRedPacketReq_descriptor_,
      CMDTakeRedPacketReq::default_instance_,
      CMDTakeRedPacketReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDTakeRedPacketReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDTakeRedPacketReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDTakeRedPacketReq, _is_default_instance_));
  CMDTakeRedPacketResp_descriptor_ = file->message_type(5);
  static const int CMDTakeRedPacketResp_offsets_[12] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDTakeRedPacketResp, errinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDTakeRedPacketResp, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDTakeRedPacketResp, packetid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDTakeRedPacketResp, money_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDTakeRedPacketResp, privatetype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDTakeRedPacketResp, packettype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDTakeRedPacketResp, rangetype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDTakeRedPacketResp, packetnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDTakeRedPacketResp, packetmoney_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDTakeRedPacketResp, message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDTakeRedPacketResp, fixtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDTakeRedPacketResp, difftime_),
  };
  CMDTakeRedPacketResp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDTakeRedPacketResp_descriptor_,
      CMDTakeRedPacketResp::default_instance_,
      CMDTakeRedPacketResp_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDTakeRedPacketResp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDTakeRedPacketResp, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDTakeRedPacketResp, _is_default_instance_));
  CMDQryRedPacketInfoReq_descriptor_ = file->message_type(6);
  static const int CMDQryRedPacketInfoReq_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDQryRedPacketInfoReq, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDQryRedPacketInfoReq, groupid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDQryRedPacketInfoReq, packetid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDQryRedPacketInfoReq, offset_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDQryRedPacketInfoReq, count_),
  };
  CMDQryRedPacketInfoReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDQryRedPacketInfoReq_descriptor_,
      CMDQryRedPacketInfoReq::default_instance_,
      CMDQryRedPacketInfoReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDQryRedPacketInfoReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDQryRedPacketInfoReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDQryRedPacketInfoReq, _is_default_instance_));
  CMDRedPacketTakenRes_descriptor_ = file->message_type(7);
  static const int CMDRedPacketTakenRes_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDRedPacketTakenRes, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDRedPacketTakenRes, alias_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDRedPacketTakenRes, head_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDRedPacketTakenRes, money_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDRedPacketTakenRes, taketime_),
  };
  CMDRedPacketTakenRes_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDRedPacketTakenRes_descriptor_,
      CMDRedPacketTakenRes::default_instance_,
      CMDRedPacketTakenRes_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDRedPacketTakenRes),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDRedPacketTakenRes, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDRedPacketTakenRes, _is_default_instance_));
  CMDRedPacketInfo_descriptor_ = file->message_type(8);
  static const int CMDRedPacketInfo_offsets_[16] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDRedPacketInfo, packetid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDRedPacketInfo, packettype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDRedPacketInfo, rangetype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDRedPacketInfo, srcuser_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDRedPacketInfo, dstuser_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDRedPacketInfo, packetnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDRedPacketInfo, takennum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDRedPacketInfo, packetmoney_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDRedPacketInfo, takenmoney_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDRedPacketInfo, mytakemoney_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDRedPacketInfo, message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDRedPacketInfo, createtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDRedPacketInfo, offset_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDRedPacketInfo, res_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDRedPacketInfo, finishcosttime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDRedPacketInfo, topuserid_),
  };
  CMDRedPacketInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDRedPacketInfo_descriptor_,
      CMDRedPacketInfo::default_instance_,
      CMDRedPacketInfo_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDRedPacketInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDRedPacketInfo, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDRedPacketInfo, _is_default_instance_));
  CMDWeekListRes_descriptor_ = file->message_type(9);
  static const int CMDWeekListRes_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDWeekListRes, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDWeekListRes, alias_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDWeekListRes, head_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDWeekListRes, contributevalue_),
  };
  CMDWeekListRes_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDWeekListRes_descriptor_,
      CMDWeekListRes::default_instance_,
      CMDWeekListRes_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDWeekListRes),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDWeekListRes, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDWeekListRes, _is_default_instance_));
  CMDWeekListNotify_descriptor_ = file->message_type(10);
  static const int CMDWeekListNotify_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDWeekListNotify, groupid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDWeekListNotify, res_),
  };
  CMDWeekListNotify_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDWeekListNotify_descriptor_,
      CMDWeekListNotify::default_instance_,
      CMDWeekListNotify_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDWeekListNotify),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDWeekListNotify, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDWeekListNotify, _is_default_instance_));
  CMDQryWeekListReq_descriptor_ = file->message_type(11);
  static const int CMDQryWeekListReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDQryWeekListReq, groupid_),
  };
  CMDQryWeekListReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDQryWeekListReq_descriptor_,
      CMDQryWeekListReq::default_instance_,
      CMDQryWeekListReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDQryWeekListReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDQryWeekListReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDQryWeekListReq, _is_default_instance_));
  CMDQryRedPacketReq_descriptor_ = file->message_type(12);
  static const int CMDQryRedPacketReq_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDQryRedPacketReq, groupid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDQryRedPacketReq, packettype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDQryRedPacketReq, count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDQryRedPacketReq, offset_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDQryRedPacketReq, fixtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDQryRedPacketReq, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDQryRedPacketReq, clienttimestamp_),
  };
  CMDQryRedPacketReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDQryRedPacketReq_descriptor_,
      CMDQryRedPacketReq::default_instance_,
      CMDQryRedPacketReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDQryRedPacketReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDQryRedPacketReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDQryRedPacketReq, _is_default_instance_));
  CMDRedPacket_descriptor_ = file->message_type(13);
  static const int CMDRedPacket_offsets_[13] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDRedPacket, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDRedPacket, packetid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDRedPacket, packettype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDRedPacket, fixtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDRedPacket, difftime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDRedPacket, packetmoney_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDRedPacket, rangetype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDRedPacket, packetnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDRedPacket, rangegender_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDRedPacket, message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDRedPacket, fixtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDRedPacket, longitude_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDRedPacket, latitude_),
  };
  CMDRedPacket_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDRedPacket_descriptor_,
      CMDRedPacket::default_instance_,
      CMDRedPacket_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDRedPacket),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDRedPacket, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDRedPacket, _is_default_instance_));
  CMDQryRedPacketRsp_descriptor_ = file->message_type(14);
  static const int CMDQryRedPacketRsp_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDQryRedPacketRsp, groupid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDQryRedPacketRsp, offset_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDQryRedPacketRsp, rsp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDQryRedPacketRsp, clienttimestamp_),
  };
  CMDQryRedPacketRsp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDQryRedPacketRsp_descriptor_,
      CMDQryRedPacketRsp::default_instance_,
      CMDQryRedPacketRsp_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDQryRedPacketRsp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDQryRedPacketRsp, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDQryRedPacketRsp, _is_default_instance_));
  CMDUesrTreasureBuyInfo_descriptor_ = file->message_type(15);
  static const int CMDUesrTreasureBuyInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUesrTreasureBuyInfo, buy_user_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUesrTreasureBuyInfo, buy_num_),
  };
  CMDUesrTreasureBuyInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDUesrTreasureBuyInfo_descriptor_,
      CMDUesrTreasureBuyInfo::default_instance_,
      CMDUesrTreasureBuyInfo_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDUesrTreasureBuyInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUesrTreasureBuyInfo, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDUesrTreasureBuyInfo, _is_default_instance_));
  CMDTreasureInfo_descriptor_ = file->message_type(16);
  static const int CMDTreasureInfo_offsets_[12] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDTreasureInfo, treasure_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDTreasureInfo, groupid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDTreasureInfo, user_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDTreasureInfo, join_range_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDTreasureInfo, treasure_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDTreasureInfo, treasure_amount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDTreasureInfo, treasure_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDTreasureInfo, lottery_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDTreasureInfo, winner_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDTreasureInfo, message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDTreasureInfo, create_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDTreasureInfo, ext_),
  };
  CMDTreasureInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDTreasureInfo_descriptor_,
      CMDTreasureInfo::default_instance_,
      CMDTreasureInfo_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDTreasureInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDTreasureInfo, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDTreasureInfo, _is_default_instance_));
  CMDTreasureExtraInfo_descriptor_ = file->message_type(17);
  static const int CMDTreasureExtraInfo_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDTreasureExtraInfo, buy_people_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDTreasureExtraInfo, buy_amount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDTreasureExtraInfo, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDTreasureExtraInfo, finished_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDTreasureExtraInfo, my_buy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDTreasureExtraInfo, buyers_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDTreasureExtraInfo, winners_),
  };
  CMDTreasureExtraInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDTreasureExtraInfo_descriptor_,
      CMDTreasureExtraInfo::default_instance_,
      CMDTreasureExtraInfo_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDTreasureExtraInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDTreasureExtraInfo, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDTreasureExtraInfo, _is_default_instance_));
  CMDBuyCodeRange_descriptor_ = file->message_type(18);
  static const int CMDBuyCodeRange_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDBuyCodeRange, buy_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDBuyCodeRange, begin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDBuyCodeRange, end_),
  };
  CMDBuyCodeRange_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDBuyCodeRange_descriptor_,
      CMDBuyCodeRange::default_instance_,
      CMDBuyCodeRange_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDBuyCodeRange),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDBuyCodeRange, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDBuyCodeRange, _is_default_instance_));
  CMDSponsorTreasureReq_descriptor_ = file->message_type(19);
  static const int CMDSponsorTreasureReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSponsorTreasureReq, info_),
  };
  CMDSponsorTreasureReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDSponsorTreasureReq_descriptor_,
      CMDSponsorTreasureReq::default_instance_,
      CMDSponsorTreasureReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDSponsorTreasureReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSponsorTreasureReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSponsorTreasureReq, _is_default_instance_));
  CMDSponsorTreasureResp_descriptor_ = file->message_type(20);
  static const int CMDSponsorTreasureResp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSponsorTreasureResp, errinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSponsorTreasureResp, info_),
  };
  CMDSponsorTreasureResp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDSponsorTreasureResp_descriptor_,
      CMDSponsorTreasureResp::default_instance_,
      CMDSponsorTreasureResp_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDSponsorTreasureResp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSponsorTreasureResp, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSponsorTreasureResp, _is_default_instance_));
  CMDBuyTreasure_descriptor_ = file->message_type(21);
  static const int CMDBuyTreasure_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDBuyTreasure, groupid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDBuyTreasure, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDBuyTreasure, treasure_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDBuyTreasure, buy_amount_),
  };
  CMDBuyTreasure_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDBuyTreasure_descriptor_,
      CMDBuyTreasure::default_instance_,
      CMDBuyTreasure_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDBuyTreasure),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDBuyTreasure, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDBuyTreasure, _is_default_instance_));
  CMDBuyTreasureResp_descriptor_ = file->message_type(22);
  static const int CMDBuyTreasureResp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDBuyTreasureResp, errinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDBuyTreasureResp, buy_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDBuyTreasureResp, buy_code_),
  };
  CMDBuyTreasureResp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDBuyTreasureResp_descriptor_,
      CMDBuyTreasureResp::default_instance_,
      CMDBuyTreasureResp_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDBuyTreasureResp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDBuyTreasureResp, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDBuyTreasureResp, _is_default_instance_));
  CMDQryMyTreasureDetail_descriptor_ = file->message_type(23);
  static const int CMDQryMyTreasureDetail_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDQryMyTreasureDetail, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDQryMyTreasureDetail, groupid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDQryMyTreasureDetail, treasure_id_),
  };
  CMDQryMyTreasureDetail_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDQryMyTreasureDetail_descriptor_,
      CMDQryMyTreasureDetail::default_instance_,
      CMDQryMyTreasureDetail_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDQryMyTreasureDetail),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDQryMyTreasureDetail, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDQryMyTreasureDetail, _is_default_instance_));
  CMDMyTreasureDetail_descriptor_ = file->message_type(24);
  static const int CMDMyTreasureDetail_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDMyTreasureDetail, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDMyTreasureDetail, groupid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDMyTreasureDetail, treasure_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDMyTreasureDetail, buy_total_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDMyTreasureDetail, buy_list_),
  };
  CMDMyTreasureDetail_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDMyTreasureDetail_descriptor_,
      CMDMyTreasureDetail::default_instance_,
      CMDMyTreasureDetail_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDMyTreasureDetail),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDMyTreasureDetail, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDMyTreasureDetail, _is_default_instance_));
  CMDQryTreasureList_descriptor_ = file->message_type(25);
  static const int CMDQryTreasureList_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDQryTreasureList, groupid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDQryTreasureList, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDQryTreasureList, count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDQryTreasureList, last_create_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDQryTreasureList, last_end_time_),
  };
  CMDQryTreasureList_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDQryTreasureList_descriptor_,
      CMDQryTreasureList::default_instance_,
      CMDQryTreasureList_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDQryTreasureList),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDQryTreasureList, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDQryTreasureList, _is_default_instance_));
  CMDTreasureList_descriptor_ = file->message_type(26);
  static const int CMDTreasureList_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDTreasureList, groupid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDTreasureList, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDTreasureList, list_),
  };
  CMDTreasureList_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDTreasureList_descriptor_,
      CMDTreasureList::default_instance_,
      CMDTreasureList_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDTreasureList),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDTreasureList, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDTreasureList, _is_default_instance_));
  CMDTreasureInfoNotify_descriptor_ = file->message_type(27);
  static const int CMDTreasureInfoNotify_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDTreasureInfoNotify, old_status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDTreasureInfoNotify, new_status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDTreasureInfoNotify, info_),
  };
  CMDTreasureInfoNotify_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDTreasureInfoNotify_descriptor_,
      CMDTreasureInfoNotify::default_instance_,
      CMDTreasureInfoNotify_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDTreasureInfoNotify),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDTreasureInfoNotify, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDTreasureInfoNotify, _is_default_instance_));
  CMDQryTreasureInfo_descriptor_ = file->message_type(28);
  static const int CMDQryTreasureInfo_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDQryTreasureInfo, groupid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDQryTreasureInfo, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDQryTreasureInfo, treasure_id_),
  };
  CMDQryTreasureInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDQryTreasureInfo_descriptor_,
      CMDQryTreasureInfo::default_instance_,
      CMDQryTreasureInfo_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDQryTreasureInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDQryTreasureInfo, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDQryTreasureInfo, _is_default_instance_));
  CMDQryTreasureInfoResp_descriptor_ = file->message_type(29);
  static const int CMDQryTreasureInfoResp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDQryTreasureInfoResp, errinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDQryTreasureInfoResp, req_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDQryTreasureInfoResp, info_),
  };
  CMDQryTreasureInfoResp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDQryTreasureInfoResp_descriptor_,
      CMDQryTreasureInfoResp::default_instance_,
      CMDQryTreasureInfoResp_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDQryTreasureInfoResp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDQryTreasureInfoResp, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDQryTreasureInfoResp, _is_default_instance_));
  CMDSendPressStampReq_descriptor_ = file->message_type(30);
  static const int CMDSendPressStampReq_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSendPressStampReq, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSendPressStampReq, groupid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSendPressStampReq, dstuserid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSendPressStampReq, money_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSendPressStampReq, message_),
  };
  CMDSendPressStampReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDSendPressStampReq_descriptor_,
      CMDSendPressStampReq::default_instance_,
      CMDSendPressStampReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDSendPressStampReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSendPressStampReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSendPressStampReq, _is_default_instance_));
  CMDSendPressStampResp_descriptor_ = file->message_type(31);
  static const int CMDSendPressStampResp_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSendPressStampResp, errinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSendPressStampResp, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSendPressStampResp, groupid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSendPressStampResp, stampid_),
  };
  CMDSendPressStampResp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDSendPressStampResp_descriptor_,
      CMDSendPressStampResp::default_instance_,
      CMDSendPressStampResp_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDSendPressStampResp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSendPressStampResp, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDSendPressStampResp, _is_default_instance_));
  CMDQryStampReq_descriptor_ = file->message_type(32);
  static const int CMDQryStampReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDQryStampReq, groupid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDQryStampReq, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDQryStampReq, dstuserid_),
  };
  CMDQryStampReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDQryStampReq_descriptor_,
      CMDQryStampReq::default_instance_,
      CMDQryStampReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDQryStampReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDQryStampReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDQryStampReq, _is_default_instance_));
  CMDStampInfo_descriptor_ = file->message_type(33);
  static const int CMDStampInfo_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDStampInfo, stampid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDStampInfo, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDStampInfo, dstuserid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDStampInfo, pressnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDStampInfo, money_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDStampInfo, message_),
  };
  CMDStampInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDStampInfo_descriptor_,
      CMDStampInfo::default_instance_,
      CMDStampInfo_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDStampInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDStampInfo, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDStampInfo, _is_default_instance_));
  CMDQryStampRsp_descriptor_ = file->message_type(34);
  static const int CMDQryStampRsp_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDQryStampRsp, groupid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDQryStampRsp, startmoney_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDQryStampRsp, increasemoney_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDQryStampRsp, stamp_),
  };
  CMDQryStampRsp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMDQryStampRsp_descriptor_,
      CMDQryStampRsp::default_instance_,
      CMDQryStampRsp_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMDQryStampRsp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDQryStampRsp, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMDQryStampRsp, _is_default_instance_));
  ePacketType_descriptor_ = file->enum_type(0);
  ePacketFixType_descriptor_ = file->enum_type(1);
  eRangeType_descriptor_ = file->enum_type(2);
  eRangeGender_descriptor_ = file->enum_type(3);
  e_TreasureType_descriptor_ = file->enum_type(4);
  e_LotteryType_descriptor_ = file->enum_type(5);
  e_TreasureStatus_descriptor_ = file->enum_type(6);
  e_UserRange_descriptor_ = file->enum_type(7);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ConsumeSvr_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDSendRedPacketReq_descriptor_, &CMDSendRedPacketReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDSendRedPacketResp_descriptor_, &CMDSendRedPacketResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDCatchRedPacketReq_descriptor_, &CMDCatchRedPacketReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDCatchRedPacketResp_descriptor_, &CMDCatchRedPacketResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDTakeRedPacketReq_descriptor_, &CMDTakeRedPacketReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDTakeRedPacketResp_descriptor_, &CMDTakeRedPacketResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDQryRedPacketInfoReq_descriptor_, &CMDQryRedPacketInfoReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDRedPacketTakenRes_descriptor_, &CMDRedPacketTakenRes::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDRedPacketInfo_descriptor_, &CMDRedPacketInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDWeekListRes_descriptor_, &CMDWeekListRes::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDWeekListNotify_descriptor_, &CMDWeekListNotify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDQryWeekListReq_descriptor_, &CMDQryWeekListReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDQryRedPacketReq_descriptor_, &CMDQryRedPacketReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDRedPacket_descriptor_, &CMDRedPacket::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDQryRedPacketRsp_descriptor_, &CMDQryRedPacketRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDUesrTreasureBuyInfo_descriptor_, &CMDUesrTreasureBuyInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDTreasureInfo_descriptor_, &CMDTreasureInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDTreasureExtraInfo_descriptor_, &CMDTreasureExtraInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDBuyCodeRange_descriptor_, &CMDBuyCodeRange::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDSponsorTreasureReq_descriptor_, &CMDSponsorTreasureReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDSponsorTreasureResp_descriptor_, &CMDSponsorTreasureResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDBuyTreasure_descriptor_, &CMDBuyTreasure::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDBuyTreasureResp_descriptor_, &CMDBuyTreasureResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDQryMyTreasureDetail_descriptor_, &CMDQryMyTreasureDetail::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDMyTreasureDetail_descriptor_, &CMDMyTreasureDetail::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDQryTreasureList_descriptor_, &CMDQryTreasureList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDTreasureList_descriptor_, &CMDTreasureList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDTreasureInfoNotify_descriptor_, &CMDTreasureInfoNotify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDQryTreasureInfo_descriptor_, &CMDQryTreasureInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDQryTreasureInfoResp_descriptor_, &CMDQryTreasureInfoResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDSendPressStampReq_descriptor_, &CMDSendPressStampReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDSendPressStampResp_descriptor_, &CMDSendPressStampResp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDQryStampReq_descriptor_, &CMDQryStampReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDStampInfo_descriptor_, &CMDStampInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMDQryStampRsp_descriptor_, &CMDQryStampRsp::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ConsumeSvr_2eproto() {
  delete CMDSendRedPacketReq::default_instance_;
  delete CMDSendRedPacketReq_reflection_;
  delete CMDSendRedPacketResp::default_instance_;
  delete CMDSendRedPacketResp_reflection_;
  delete CMDCatchRedPacketReq::default_instance_;
  delete CMDCatchRedPacketReq_reflection_;
  delete CMDCatchRedPacketResp::default_instance_;
  delete CMDCatchRedPacketResp_reflection_;
  delete CMDTakeRedPacketReq::default_instance_;
  delete CMDTakeRedPacketReq_reflection_;
  delete CMDTakeRedPacketResp::default_instance_;
  delete CMDTakeRedPacketResp_reflection_;
  delete CMDQryRedPacketInfoReq::default_instance_;
  delete CMDQryRedPacketInfoReq_reflection_;
  delete CMDRedPacketTakenRes::default_instance_;
  delete CMDRedPacketTakenRes_reflection_;
  delete CMDRedPacketInfo::default_instance_;
  delete CMDRedPacketInfo_reflection_;
  delete CMDWeekListRes::default_instance_;
  delete CMDWeekListRes_reflection_;
  delete CMDWeekListNotify::default_instance_;
  delete CMDWeekListNotify_reflection_;
  delete CMDQryWeekListReq::default_instance_;
  delete CMDQryWeekListReq_reflection_;
  delete CMDQryRedPacketReq::default_instance_;
  delete CMDQryRedPacketReq_reflection_;
  delete CMDRedPacket::default_instance_;
  delete CMDRedPacket_reflection_;
  delete CMDQryRedPacketRsp::default_instance_;
  delete CMDQryRedPacketRsp_reflection_;
  delete CMDUesrTreasureBuyInfo::default_instance_;
  delete CMDUesrTreasureBuyInfo_reflection_;
  delete CMDTreasureInfo::default_instance_;
  delete CMDTreasureInfo_reflection_;
  delete CMDTreasureExtraInfo::default_instance_;
  delete CMDTreasureExtraInfo_reflection_;
  delete CMDBuyCodeRange::default_instance_;
  delete CMDBuyCodeRange_reflection_;
  delete CMDSponsorTreasureReq::default_instance_;
  delete CMDSponsorTreasureReq_reflection_;
  delete CMDSponsorTreasureResp::default_instance_;
  delete CMDSponsorTreasureResp_reflection_;
  delete CMDBuyTreasure::default_instance_;
  delete CMDBuyTreasure_reflection_;
  delete CMDBuyTreasureResp::default_instance_;
  delete CMDBuyTreasureResp_reflection_;
  delete CMDQryMyTreasureDetail::default_instance_;
  delete CMDQryMyTreasureDetail_reflection_;
  delete CMDMyTreasureDetail::default_instance_;
  delete CMDMyTreasureDetail_reflection_;
  delete CMDQryTreasureList::default_instance_;
  delete CMDQryTreasureList_reflection_;
  delete CMDTreasureList::default_instance_;
  delete CMDTreasureList_reflection_;
  delete CMDTreasureInfoNotify::default_instance_;
  delete CMDTreasureInfoNotify_reflection_;
  delete CMDQryTreasureInfo::default_instance_;
  delete CMDQryTreasureInfo_reflection_;
  delete CMDQryTreasureInfoResp::default_instance_;
  delete CMDQryTreasureInfoResp_reflection_;
  delete CMDSendPressStampReq::default_instance_;
  delete CMDSendPressStampReq_reflection_;
  delete CMDSendPressStampResp::default_instance_;
  delete CMDSendPressStampResp_reflection_;
  delete CMDQryStampReq::default_instance_;
  delete CMDQryStampReq_reflection_;
  delete CMDStampInfo::default_instance_;
  delete CMDStampInfo_reflection_;
  delete CMDQryStampRsp::default_instance_;
  delete CMDQryStampRsp_reflection_;
}

void protobuf_AddDesc_ConsumeSvr_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_ConsumeSvr_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_Common_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020ConsumeSvr.proto\032\014Common.proto\"\362\002\n\023CMD"
    "SendRedPacketReq\022\016\n\006userID\030\001 \001(\r\022\017\n\007grou"
    "pID\030\002 \001(\r\022 \n\npacketType\030\003 \001(\0162\014.ePacketT"
    "ype\022\036\n\trangeType\030\004 \001(\0162\013.eRangeType\022\021\n\td"
    "stUserID\030\005 \001(\r\022\021\n\tpacketNum\030\006 \001(\r\022\023\n\013pac"
    "ketMoney\030\007 \001(\r\022\026\n\016perPacketMoney\030\010 \001(\r\022\017"
    "\n\007message\030\t \001(\t\022\023\n\013privateType\030\n \001(\010\022\"\n\013"
    "rangeGender\030\013 \001(\0162\r.eRangeGender\022\017\n\007fixt"
    "ime\030\014 \001(\r\022\023\n\013invalidTime\030\r \001(\r\022\021\n\tlongit"
    "ude\030\016 \001(\001\022\020\n\010latitude\030\017 \001(\001\022\020\n\010location\030"
    "\020 \001(\t\"\350\001\n\024CMDSendRedPacketResp\022\034\n\007errInf"
    "o\030\001 \001(\0132\013.CMDErrCode\022\016\n\006userID\030\002 \001(\r\022\017\n\007"
    "groupID\030\003 \001(\r\022\020\n\010packetID\030\004 \001(\r\022\020\n\010combo"
    "Num\030\005 \001(\r\022\023\n\013privateType\030\006 \001(\010\022\021\n\tcomboT"
    "ime\030\007 \001(\r\022 \n\npacketType\030\010 \001(\0162\014.ePacketT"
    "ype\022\021\n\tlongitude\030\t \001(\001\022\020\n\010latitude\030\n \001(\001"
    "\"n\n\024CMDCatchRedPacketReq\022\016\n\006userID\030\001 \001(\r"
    "\022\017\n\007groupID\030\002 \001(\r\022\020\n\010packetID\030\003 \001(\r\022\021\n\tl"
    "ongitude\030\004 \001(\001\022\020\n\010latitude\030\005 \001(\001\"\327\002\n\025CMD"
    "CatchRedPacketResp\022\034\n\007errInfo\030\001 \001(\0132\013.CM"
    "DErrCode\022\016\n\006userID\030\002 \001(\r\022\017\n\007groupID\030\003 \001("
    "\r\022\020\n\010packetID\030\004 \001(\r\022\034\n\007srcUser\030\005 \001(\0132\013.U"
    "serInfo_t\022\034\n\007dstUser\030\006 \001(\0132\013.UserInfo_t\022"
    " \n\npacketType\030\007 \001(\0162\014.ePacketType\022\036\n\tran"
    "geType\030\010 \001(\0162\013.eRangeType\022\021\n\tpacketNum\030\t"
    " \001(\r\022\023\n\013packetMoney\030\n \001(\r\022\017\n\007message\030\013 \001"
    "(\t\022\023\n\013privateType\030\014 \001(\010\022\017\n\007fixTime\030\r \001(\r"
    "\022\020\n\010diffTime\030\016 \001(\r\"\221\001\n\023CMDTakeRedPacketR"
    "eq\022\016\n\006userID\030\001 \001(\r\022\017\n\007groupID\030\002 \001(\r\022\020\n\010p"
    "acketID\030\003 \001(\r\022\021\n\tphotoPath\030\004 \001(\t\022\021\n\tlong"
    "itude\030\005 \001(\001\022\020\n\010latitude\030\006 \001(\001\022\017\n\007message"
    "\030\007 \001(\t\"\230\002\n\024CMDTakeRedPacketResp\022\034\n\007errIn"
    "fo\030\001 \001(\0132\013.CMDErrCode\022\016\n\006userID\030\002 \001(\r\022\020\n"
    "\010packetID\030\003 \001(\r\022\r\n\005money\030\004 \001(\r\022\023\n\013privat"
    "eType\030\005 \001(\010\022 \n\npacketType\030\010 \001(\0162\014.ePacke"
    "tType\022\036\n\trangeType\030\t \001(\0162\013.eRangeType\022\021\n"
    "\tpacketNum\030\n \001(\r\022\023\n\013packetMoney\030\013 \001(\r\022\017\n"
    "\007message\030\014 \001(\t\022\017\n\007fixTime\030\r \001(\r\022\020\n\010diffT"
    "ime\030\016 \001(\r\"j\n\026CMDQryRedPacketInfoReq\022\016\n\006u"
    "serID\030\001 \001(\r\022\017\n\007groupID\030\002 \001(\r\022\020\n\010packetID"
    "\030\003 \001(\r\022\016\n\006offset\030\004 \001(\r\022\r\n\005count\030\005 \001(\r\"d\n"
    "\024CMDRedPacketTakenRes\022\016\n\006userID\030\001 \001(\r\022\r\n"
    "\005alias\030\002 \001(\t\022\014\n\004head\030\003 \001(\t\022\r\n\005money\030\004 \001("
    "\r\022\020\n\010takeTime\030\005 \001(\r\"\211\003\n\020CMDRedPacketInfo"
    "\022\020\n\010packetID\030\001 \001(\r\022 \n\npacketType\030\002 \001(\0162\014"
    ".ePacketType\022\036\n\trangeType\030\003 \001(\0162\013.eRange"
    "Type\022\034\n\007srcUser\030\004 \001(\0132\013.UserInfo_t\022\034\n\007ds"
    "tUser\030\005 \001(\0132\013.UserInfo_t\022\021\n\tpacketNum\030\006 "
    "\001(\r\022\020\n\010takenNum\030\007 \001(\r\022\023\n\013packetMoney\030\010 \001"
    "(\r\022\022\n\ntakenMoney\030\t \001(\r\022\023\n\013myTakeMoney\030\n "
    "\001(\r\022\017\n\007message\030\013 \001(\t\022\022\n\ncreateTime\030\014 \001(\r"
    "\022\016\n\006offset\030\r \001(\r\022\"\n\003res\030\016 \003(\0132\025.CMDRedPa"
    "cketTakenRes\022\026\n\016finishCostTime\030\017 \001(\r\022\021\n\t"
    "topUserID\030\020 \001(\r\"V\n\016CMDWeekListRes\022\016\n\006use"
    "rID\030\001 \001(\r\022\r\n\005alias\030\002 \001(\t\022\014\n\004head\030\003 \001(\t\022\027"
    "\n\017contributeValue\030\004 \001(\r\"B\n\021CMDWeekListNo"
    "tify\022\017\n\007groupID\030\001 \001(\r\022\034\n\003res\030\002 \003(\0132\017.CMD"
    "WeekListRes\"$\n\021CMDQryWeekListReq\022\017\n\007grou"
    "pID\030\001 \001(\r\"\261\001\n\022CMDQryRedPacketReq\022\017\n\007grou"
    "pID\030\001 \001(\r\022 \n\npacketType\030\002 \001(\0162\014.ePacketT"
    "ype\022\r\n\005count\030\003 \001(\r\022\016\n\006offset\030\004 \001(\r\022 \n\007fi"
    "xType\030\005 \001(\0162\017.ePacketFixType\022\016\n\006userID\030\006"
    " \001(\r\022\027\n\017clienttimestamp\030\007 \001(\004\"\271\002\n\014CMDRed"
    "Packet\022\016\n\006userID\030\001 \001(\r\022\020\n\010packetID\030\002 \001(\r"
    "\022 \n\npacketType\030\003 \001(\0162\014.ePacketType\022\017\n\007fi"
    "xTime\030\004 \001(\r\022\020\n\010diffTime\030\005 \001(\r\022\023\n\013packetM"
    "oney\030\006 \001(\r\022\036\n\trangeType\030\007 \001(\0162\013.eRangeTy"
    "pe\022\021\n\tpacketNum\030\010 \001(\r\022\"\n\013rangeGender\030\t \001"
    "(\0162\r.eRangeGender\022\017\n\007message\030\n \001(\t\022 \n\007fi"
    "xType\030\013 \001(\0162\017.ePacketFixType\022\021\n\tlongitud"
    "e\030\014 \001(\001\022\020\n\010latitude\030\r \001(\001\"j\n\022CMDQryRedPa"
    "cketRsp\022\017\n\007groupID\030\001 \001(\r\022\016\n\006offset\030\002 \001(\r"
    "\022\032\n\003rsp\030\003 \003(\0132\r.CMDRedPacket\022\027\n\017clientti"
    "mestamp\030\004 \001(\004\"H\n\026CMDUesrTreasureBuyInfo\022"
    "\035\n\010buy_user\030\001 \001(\0132\013.UserInfo_t\022\017\n\007buy_nu"
    "m\030\002 \001(\r\"\320\002\n\017CMDTreasureInfo\022\023\n\013treasure_"
    "id\030\001 \001(\r\022\017\n\007groupid\030\002 \001(\r\022\031\n\004user\030\003 \001(\0132"
    "\013.UserInfo_t\022 \n\njoin_range\030\004 \001(\0162\014.e_Use"
    "rRange\022&\n\rtreasure_type\030\005 \001(\0162\017.e_Treasu"
    "reType\022\027\n\017treasure_amount\030\006 \001(\r\022\025\n\rtreas"
    "ure_time\030\007 \001(\r\022$\n\014lottery_type\030\010 \001(\0162\016.e"
    "_LotteryType\022\022\n\nwinner_num\030\t \001(\r\022\017\n\007mess"
    "age\030\n \001(\t\022\023\n\013create_time\030\013 \001(\r\022\"\n\003ext\030\014 "
    "\001(\0132\025.CMDTreasureExtraInfo\"\364\001\n\024CMDTreasu"
    "reExtraInfo\022\022\n\nbuy_people\030\001 \001(\r\022\022\n\nbuy_a"
    "mount\030\002 \001(\r\022!\n\006status\030\003 \001(\0162\021.e_Treasure"
    "Status\022\025\n\rfinished_time\030\004 \001(\r\022\'\n\006my_buy\030"
    "\005 \001(\0132\027.CMDUesrTreasureBuyInfo\022\'\n\006buyers"
    "\030\006 \003(\0132\027.CMDUesrTreasureBuyInfo\022(\n\007winne"
    "rs\030\007 \003(\0132\027.CMDUesrTreasureBuyInfo\"\?\n\017CMD"
    "BuyCodeRange\022\020\n\010buy_time\030\001 \001(\r\022\r\n\005begin\030"
    "\002 \001(\r\022\013\n\003end\030\003 \001(\r\"7\n\025CMDSponsorTreasure"
    "Req\022\036\n\004info\030\001 \001(\0132\020.CMDTreasureInfo\"V\n\026C"
    "MDSponsorTreasureResp\022\034\n\007errinfo\030\001 \001(\0132\013"
    ".CMDErrCode\022\036\n\004info\030\002 \001(\0132\020.CMDTreasureI"
    "nfo\"Z\n\016CMDBuyTreasure\022\017\n\007groupid\030\001 \001(\r\022\016"
    "\n\006userid\030\002 \001(\r\022\023\n\013treasure_id\030\003 \001(\r\022\022\n\nb"
    "uy_amount\030\004 \001(\r\"y\n\022CMDBuyTreasureResp\022\034\n"
    "\007errinfo\030\001 \001(\0132\013.CMDErrCode\022!\n\010buy_info\030"
    "\002 \001(\0132\017.CMDBuyTreasure\022\"\n\010buy_code\030\003 \001(\013"
    "2\020.CMDBuyCodeRange\"N\n\026CMDQryMyTreasureDe"
    "tail\022\016\n\006userid\030\001 \001(\r\022\017\n\007groupid\030\002 \001(\r\022\023\n"
    "\013treasure_id\030\003 \001(\r\"\202\001\n\023CMDMyTreasureDeta"
    "il\022\016\n\006userid\030\001 \001(\r\022\017\n\007groupid\030\002 \001(\r\022\023\n\013t"
    "reasure_id\030\003 \001(\r\022\021\n\tbuy_total\030\004 \001(\r\022\"\n\010b"
    "uy_list\030\005 \003(\0132\020.CMDBuyCodeRange\"u\n\022CMDQr"
    "yTreasureList\022\017\n\007groupid\030\001 \001(\r\022\016\n\006userid"
    "\030\002 \001(\r\022\r\n\005count\030\003 \001(\r\022\030\n\020last_create_tim"
    "e\030\004 \001(\r\022\025\n\rlast_end_time\030\005 \001(\r\"R\n\017CMDTre"
    "asureList\022\017\n\007groupid\030\001 \001(\r\022\016\n\006userid\030\002 \001"
    "(\r\022\036\n\004list\030\003 \003(\0132\020.CMDTreasureInfo\"\205\001\n\025C"
    "MDTreasureInfoNotify\022%\n\nold_status\030\001 \001(\016"
    "2\021.e_TreasureStatus\022%\n\nnew_status\030\002 \001(\0162"
    "\021.e_TreasureStatus\022\036\n\004info\030\003 \001(\0132\020.CMDTr"
    "easureInfo\"J\n\022CMDQryTreasureInfo\022\017\n\007grou"
    "pid\030\001 \001(\r\022\016\n\006userid\030\002 \001(\r\022\023\n\013treasure_id"
    "\030\003 \001(\r\"x\n\026CMDQryTreasureInfoResp\022\034\n\007erri"
    "nfo\030\001 \001(\0132\013.CMDErrCode\022 \n\003req\030\002 \001(\0132\023.CM"
    "DQryTreasureInfo\022\036\n\004info\030\003 \001(\0132\020.CMDTrea"
    "sureInfo\"j\n\024CMDSendPressStampReq\022\016\n\006user"
    "ID\030\001 \001(\r\022\017\n\007groupID\030\002 \001(\r\022\021\n\tdstUserID\030\003"
    " \001(\r\022\r\n\005Money\030\004 \001(\r\022\017\n\007message\030\005 \001(\t\"g\n\025"
    "CMDSendPressStampResp\022\034\n\007errInfo\030\001 \001(\0132\013"
    ".CMDErrCode\022\016\n\006userID\030\002 \001(\r\022\017\n\007groupID\030\003"
    " \001(\r\022\017\n\007stampID\030\004 \001(\r\"D\n\016CMDQryStampReq\022"
    "\017\n\007groupID\030\001 \001(\r\022\016\n\006userID\030\002 \001(\r\022\021\n\tdstU"
    "serID\030\003 \001(\r\"t\n\014CMDStampInfo\022\017\n\007stampID\030\001"
    " \001(\r\022\016\n\006userID\030\002 \001(\r\022\021\n\tdstUserID\030\003 \001(\r\022"
    "\020\n\010pressNum\030\004 \001(\r\022\r\n\005Money\030\005 \001(\r\022\017\n\007mess"
    "age\030\006 \001(\t\"j\n\016CMDQryStampRsp\022\017\n\007groupID\030\001"
    " \001(\r\022\022\n\nstartMoney\030\002 \001(\r\022\025\n\rIncreaseMone"
    "y\030\003 \001(\r\022\034\n\005stamp\030\004 \003(\0132\r.CMDStampInfo*\366\001"
    "\n\013ePacketType\022\r\n\teLuckType\020\000\022\014\n\010eUniType"
    "\020\001\022\017\n\013eDirectType\020\002\022\016\n\neLigntType\020\003\022\022\n\016e"
    "JoinGroupType\020\004\022\033\n\027eCommandImmediatelyTy"
    "pe\020\005\022\036\n\032eCommandUniImmediatelyType\020\006\022\020\n\014"
    "eFixTimeType\020\007\022\021\n\reLocationType\020\010\022\027\n\023eCo"
    "mmandFixTimeType\020\t\022\032\n\026eCommandUniFixTime"
    "Type\020\n*Q\n\016ePacketFixType\022\016\n\neStartType\020\000"
    "\022\020\n\014eUnStartType\020\001\022\017\n\013eFinishType\020\002\022\014\n\010e"
    "ExpType\020\003*=\n\neRangeType\022\020\n\014eVisitorType\020"
    "\000\022\017\n\013eMemberType\020\001\022\014\n\010eAllType\020\002*B\n\014eRan"
    "geGender\022\016\n\neGenderAll\020\000\022\017\n\013eGenderMale\020"
    "\001\022\021\n\reGenderFemale\020\002*D\n\016e_TreasureType\022\030"
    "\n\024e_TreasureType_Quota\020\000\022\030\n\024e_TreasureTy"
    "pe_Timer\020\001*D\n\re_LotteryType\022\031\n\025e_Lottery"
    "Type_AVERAGE\020\000\022\030\n\024e_LotteryType_RANDOM\020\001"
    "*\205\001\n\020e_TreasureStatus\022\033\n\027e_TreasureStatu"
    "s_Runing\020\000\022\033\n\027e_TreasureStatus_Opened\020\001\022"
    "\034\n\030e_TreasureStatus_Timeout\020\002\022\031\n\025e_Treas"
    "ureStatus_None\020c*S\n\013e_UserRange\022\023\n\017e_Use"
    "rRange_All\020\000\022\026\n\022e_UserRange_Member\020\001\022\027\n\023"
    "e_UserRange_Visitor\020\002B\026\n\022com.dream.cube."
    "tcpH\001b\006proto3", 6133);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ConsumeSvr.proto", &protobuf_RegisterTypes);
  CMDSendRedPacketReq::default_instance_ = new CMDSendRedPacketReq();
  CMDSendRedPacketResp::default_instance_ = new CMDSendRedPacketResp();
  CMDCatchRedPacketReq::default_instance_ = new CMDCatchRedPacketReq();
  CMDCatchRedPacketResp::default_instance_ = new CMDCatchRedPacketResp();
  CMDTakeRedPacketReq::default_instance_ = new CMDTakeRedPacketReq();
  CMDTakeRedPacketResp::default_instance_ = new CMDTakeRedPacketResp();
  CMDQryRedPacketInfoReq::default_instance_ = new CMDQryRedPacketInfoReq();
  CMDRedPacketTakenRes::default_instance_ = new CMDRedPacketTakenRes();
  CMDRedPacketInfo::default_instance_ = new CMDRedPacketInfo();
  CMDWeekListRes::default_instance_ = new CMDWeekListRes();
  CMDWeekListNotify::default_instance_ = new CMDWeekListNotify();
  CMDQryWeekListReq::default_instance_ = new CMDQryWeekListReq();
  CMDQryRedPacketReq::default_instance_ = new CMDQryRedPacketReq();
  CMDRedPacket::default_instance_ = new CMDRedPacket();
  CMDQryRedPacketRsp::default_instance_ = new CMDQryRedPacketRsp();
  CMDUesrTreasureBuyInfo::default_instance_ = new CMDUesrTreasureBuyInfo();
  CMDTreasureInfo::default_instance_ = new CMDTreasureInfo();
  CMDTreasureExtraInfo::default_instance_ = new CMDTreasureExtraInfo();
  CMDBuyCodeRange::default_instance_ = new CMDBuyCodeRange();
  CMDSponsorTreasureReq::default_instance_ = new CMDSponsorTreasureReq();
  CMDSponsorTreasureResp::default_instance_ = new CMDSponsorTreasureResp();
  CMDBuyTreasure::default_instance_ = new CMDBuyTreasure();
  CMDBuyTreasureResp::default_instance_ = new CMDBuyTreasureResp();
  CMDQryMyTreasureDetail::default_instance_ = new CMDQryMyTreasureDetail();
  CMDMyTreasureDetail::default_instance_ = new CMDMyTreasureDetail();
  CMDQryTreasureList::default_instance_ = new CMDQryTreasureList();
  CMDTreasureList::default_instance_ = new CMDTreasureList();
  CMDTreasureInfoNotify::default_instance_ = new CMDTreasureInfoNotify();
  CMDQryTreasureInfo::default_instance_ = new CMDQryTreasureInfo();
  CMDQryTreasureInfoResp::default_instance_ = new CMDQryTreasureInfoResp();
  CMDSendPressStampReq::default_instance_ = new CMDSendPressStampReq();
  CMDSendPressStampResp::default_instance_ = new CMDSendPressStampResp();
  CMDQryStampReq::default_instance_ = new CMDQryStampReq();
  CMDStampInfo::default_instance_ = new CMDStampInfo();
  CMDQryStampRsp::default_instance_ = new CMDQryStampRsp();
  CMDSendRedPacketReq::default_instance_->InitAsDefaultInstance();
  CMDSendRedPacketResp::default_instance_->InitAsDefaultInstance();
  CMDCatchRedPacketReq::default_instance_->InitAsDefaultInstance();
  CMDCatchRedPacketResp::default_instance_->InitAsDefaultInstance();
  CMDTakeRedPacketReq::default_instance_->InitAsDefaultInstance();
  CMDTakeRedPacketResp::default_instance_->InitAsDefaultInstance();
  CMDQryRedPacketInfoReq::default_instance_->InitAsDefaultInstance();
  CMDRedPacketTakenRes::default_instance_->InitAsDefaultInstance();
  CMDRedPacketInfo::default_instance_->InitAsDefaultInstance();
  CMDWeekListRes::default_instance_->InitAsDefaultInstance();
  CMDWeekListNotify::default_instance_->InitAsDefaultInstance();
  CMDQryWeekListReq::default_instance_->InitAsDefaultInstance();
  CMDQryRedPacketReq::default_instance_->InitAsDefaultInstance();
  CMDRedPacket::default_instance_->InitAsDefaultInstance();
  CMDQryRedPacketRsp::default_instance_->InitAsDefaultInstance();
  CMDUesrTreasureBuyInfo::default_instance_->InitAsDefaultInstance();
  CMDTreasureInfo::default_instance_->InitAsDefaultInstance();
  CMDTreasureExtraInfo::default_instance_->InitAsDefaultInstance();
  CMDBuyCodeRange::default_instance_->InitAsDefaultInstance();
  CMDSponsorTreasureReq::default_instance_->InitAsDefaultInstance();
  CMDSponsorTreasureResp::default_instance_->InitAsDefaultInstance();
  CMDBuyTreasure::default_instance_->InitAsDefaultInstance();
  CMDBuyTreasureResp::default_instance_->InitAsDefaultInstance();
  CMDQryMyTreasureDetail::default_instance_->InitAsDefaultInstance();
  CMDMyTreasureDetail::default_instance_->InitAsDefaultInstance();
  CMDQryTreasureList::default_instance_->InitAsDefaultInstance();
  CMDTreasureList::default_instance_->InitAsDefaultInstance();
  CMDTreasureInfoNotify::default_instance_->InitAsDefaultInstance();
  CMDQryTreasureInfo::default_instance_->InitAsDefaultInstance();
  CMDQryTreasureInfoResp::default_instance_->InitAsDefaultInstance();
  CMDSendPressStampReq::default_instance_->InitAsDefaultInstance();
  CMDSendPressStampResp::default_instance_->InitAsDefaultInstance();
  CMDQryStampReq::default_instance_->InitAsDefaultInstance();
  CMDStampInfo::default_instance_->InitAsDefaultInstance();
  CMDQryStampRsp::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ConsumeSvr_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ConsumeSvr_2eproto {
  StaticDescriptorInitializer_ConsumeSvr_2eproto() {
    protobuf_AddDesc_ConsumeSvr_2eproto();
  }
} static_descriptor_initializer_ConsumeSvr_2eproto_;
const ::google::protobuf::EnumDescriptor* ePacketType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ePacketType_descriptor_;
}
bool ePacketType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ePacketFixType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ePacketFixType_descriptor_;
}
bool ePacketFixType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eRangeType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return eRangeType_descriptor_;
}
bool eRangeType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* eRangeGender_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return eRangeGender_descriptor_;
}
bool eRangeGender_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* e_TreasureType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return e_TreasureType_descriptor_;
}
bool e_TreasureType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* e_LotteryType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return e_LotteryType_descriptor_;
}
bool e_LotteryType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* e_TreasureStatus_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return e_TreasureStatus_descriptor_;
}
bool e_TreasureStatus_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 99:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* e_UserRange_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return e_UserRange_descriptor_;
}
bool e_UserRange_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDSendRedPacketReq::kUserIDFieldNumber;
const int CMDSendRedPacketReq::kGroupIDFieldNumber;
const int CMDSendRedPacketReq::kPacketTypeFieldNumber;
const int CMDSendRedPacketReq::kRangeTypeFieldNumber;
const int CMDSendRedPacketReq::kDstUserIDFieldNumber;
const int CMDSendRedPacketReq::kPacketNumFieldNumber;
const int CMDSendRedPacketReq::kPacketMoneyFieldNumber;
const int CMDSendRedPacketReq::kPerPacketMoneyFieldNumber;
const int CMDSendRedPacketReq::kMessageFieldNumber;
const int CMDSendRedPacketReq::kPrivateTypeFieldNumber;
const int CMDSendRedPacketReq::kRangeGenderFieldNumber;
const int CMDSendRedPacketReq::kFixtimeFieldNumber;
const int CMDSendRedPacketReq::kInvalidTimeFieldNumber;
const int CMDSendRedPacketReq::kLongitudeFieldNumber;
const int CMDSendRedPacketReq::kLatitudeFieldNumber;
const int CMDSendRedPacketReq::kLocationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDSendRedPacketReq::CMDSendRedPacketReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDSendRedPacketReq)
}

void CMDSendRedPacketReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDSendRedPacketReq::CMDSendRedPacketReq(const CMDSendRedPacketReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDSendRedPacketReq)
}

void CMDSendRedPacketReq::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  userid_ = 0u;
  groupid_ = 0u;
  packettype_ = 0;
  rangetype_ = 0;
  dstuserid_ = 0u;
  packetnum_ = 0u;
  packetmoney_ = 0u;
  perpacketmoney_ = 0u;
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  privatetype_ = false;
  rangegender_ = 0;
  fixtime_ = 0u;
  invalidtime_ = 0u;
  longitude_ = 0;
  latitude_ = 0;
  location_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CMDSendRedPacketReq::~CMDSendRedPacketReq() {
  // @@protoc_insertion_point(destructor:CMDSendRedPacketReq)
  SharedDtor();
}

void CMDSendRedPacketReq::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CMDSendRedPacketReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDSendRedPacketReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDSendRedPacketReq_descriptor_;
}

const CMDSendRedPacketReq& CMDSendRedPacketReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ConsumeSvr_2eproto();
  return *default_instance_;
}

CMDSendRedPacketReq* CMDSendRedPacketReq::default_instance_ = NULL;

CMDSendRedPacketReq* CMDSendRedPacketReq::New(::google::protobuf::Arena* arena) const {
  CMDSendRedPacketReq* n = new CMDSendRedPacketReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDSendRedPacketReq::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDSendRedPacketReq)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDSendRedPacketReq, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDSendRedPacketReq*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(userid_, perpacketmoney_);
  ZR_(privatetype_, latitude_);
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool CMDSendRedPacketReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDSendRedPacketReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 userID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_groupID;
        break;
      }

      // optional uint32 groupID = 2;
      case 2: {
        if (tag == 16) {
         parse_groupID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &groupid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_packetType;
        break;
      }

      // optional .ePacketType packetType = 3;
      case 3: {
        if (tag == 24) {
         parse_packetType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_packettype(static_cast< ::ePacketType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_rangeType;
        break;
      }

      // optional .eRangeType rangeType = 4;
      case 4: {
        if (tag == 32) {
         parse_rangeType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_rangetype(static_cast< ::eRangeType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_dstUserID;
        break;
      }

      // optional uint32 dstUserID = 5;
      case 5: {
        if (tag == 40) {
         parse_dstUserID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dstuserid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_packetNum;
        break;
      }

      // optional uint32 packetNum = 6;
      case 6: {
        if (tag == 48) {
         parse_packetNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &packetnum_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_packetMoney;
        break;
      }

      // optional uint32 packetMoney = 7;
      case 7: {
        if (tag == 56) {
         parse_packetMoney:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &packetmoney_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_perPacketMoney;
        break;
      }

      // optional uint32 perPacketMoney = 8;
      case 8: {
        if (tag == 64) {
         parse_perPacketMoney:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &perpacketmoney_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_message;
        break;
      }

      // optional string message = 9;
      case 9: {
        if (tag == 74) {
         parse_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), this->message().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMDSendRedPacketReq.message"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_privateType;
        break;
      }

      // optional bool privateType = 10;
      case 10: {
        if (tag == 80) {
         parse_privateType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &privatetype_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_rangeGender;
        break;
      }

      // optional .eRangeGender rangeGender = 11;
      case 11: {
        if (tag == 88) {
         parse_rangeGender:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_rangegender(static_cast< ::eRangeGender >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_fixtime;
        break;
      }

      // optional uint32 fixtime = 12;
      case 12: {
        if (tag == 96) {
         parse_fixtime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &fixtime_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_invalidTime;
        break;
      }

      // optional uint32 invalidTime = 13;
      case 13: {
        if (tag == 104) {
         parse_invalidTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &invalidtime_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(113)) goto parse_longitude;
        break;
      }

      // optional double longitude = 14;
      case 14: {
        if (tag == 113) {
         parse_longitude:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &longitude_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(121)) goto parse_latitude;
        break;
      }

      // optional double latitude = 15;
      case 15: {
        if (tag == 121) {
         parse_latitude:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &latitude_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(130)) goto parse_location;
        break;
      }

      // optional string location = 16;
      case 16: {
        if (tag == 130) {
         parse_location:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_location()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->location().data(), this->location().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMDSendRedPacketReq.location"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDSendRedPacketReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDSendRedPacketReq)
  return false;
#undef DO_
}

void CMDSendRedPacketReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDSendRedPacketReq)
  // optional uint32 userID = 1;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->userid(), output);
  }

  // optional uint32 groupID = 2;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->groupid(), output);
  }

  // optional .ePacketType packetType = 3;
  if (this->packettype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->packettype(), output);
  }

  // optional .eRangeType rangeType = 4;
  if (this->rangetype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->rangetype(), output);
  }

  // optional uint32 dstUserID = 5;
  if (this->dstuserid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->dstuserid(), output);
  }

  // optional uint32 packetNum = 6;
  if (this->packetnum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->packetnum(), output);
  }

  // optional uint32 packetMoney = 7;
  if (this->packetmoney() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->packetmoney(), output);
  }

  // optional uint32 perPacketMoney = 8;
  if (this->perpacketmoney() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->perpacketmoney(), output);
  }

  // optional string message = 9;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDSendRedPacketReq.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->message(), output);
  }

  // optional bool privateType = 10;
  if (this->privatetype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->privatetype(), output);
  }

  // optional .eRangeGender rangeGender = 11;
  if (this->rangegender() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      11, this->rangegender(), output);
  }

  // optional uint32 fixtime = 12;
  if (this->fixtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->fixtime(), output);
  }

  // optional uint32 invalidTime = 13;
  if (this->invalidtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->invalidtime(), output);
  }

  // optional double longitude = 14;
  if (this->longitude() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(14, this->longitude(), output);
  }

  // optional double latitude = 15;
  if (this->latitude() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(15, this->latitude(), output);
  }

  // optional string location = 16;
  if (this->location().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->location().data(), this->location().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDSendRedPacketReq.location");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      16, this->location(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDSendRedPacketReq)
}

::google::protobuf::uint8* CMDSendRedPacketReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDSendRedPacketReq)
  // optional uint32 userID = 1;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->userid(), target);
  }

  // optional uint32 groupID = 2;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->groupid(), target);
  }

  // optional .ePacketType packetType = 3;
  if (this->packettype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->packettype(), target);
  }

  // optional .eRangeType rangeType = 4;
  if (this->rangetype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->rangetype(), target);
  }

  // optional uint32 dstUserID = 5;
  if (this->dstuserid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->dstuserid(), target);
  }

  // optional uint32 packetNum = 6;
  if (this->packetnum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->packetnum(), target);
  }

  // optional uint32 packetMoney = 7;
  if (this->packetmoney() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->packetmoney(), target);
  }

  // optional uint32 perPacketMoney = 8;
  if (this->perpacketmoney() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->perpacketmoney(), target);
  }

  // optional string message = 9;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDSendRedPacketReq.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->message(), target);
  }

  // optional bool privateType = 10;
  if (this->privatetype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->privatetype(), target);
  }

  // optional .eRangeGender rangeGender = 11;
  if (this->rangegender() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      11, this->rangegender(), target);
  }

  // optional uint32 fixtime = 12;
  if (this->fixtime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->fixtime(), target);
  }

  // optional uint32 invalidTime = 13;
  if (this->invalidtime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->invalidtime(), target);
  }

  // optional double longitude = 14;
  if (this->longitude() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(14, this->longitude(), target);
  }

  // optional double latitude = 15;
  if (this->latitude() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(15, this->latitude(), target);
  }

  // optional string location = 16;
  if (this->location().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->location().data(), this->location().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDSendRedPacketReq.location");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->location(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDSendRedPacketReq)
  return target;
}

int CMDSendRedPacketReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDSendRedPacketReq)
  int total_size = 0;

  // optional uint32 userID = 1;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userid());
  }

  // optional uint32 groupID = 2;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->groupid());
  }

  // optional .ePacketType packetType = 3;
  if (this->packettype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->packettype());
  }

  // optional .eRangeType rangeType = 4;
  if (this->rangetype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->rangetype());
  }

  // optional uint32 dstUserID = 5;
  if (this->dstuserid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dstuserid());
  }

  // optional uint32 packetNum = 6;
  if (this->packetnum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->packetnum());
  }

  // optional uint32 packetMoney = 7;
  if (this->packetmoney() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->packetmoney());
  }

  // optional uint32 perPacketMoney = 8;
  if (this->perpacketmoney() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->perpacketmoney());
  }

  // optional string message = 9;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // optional bool privateType = 10;
  if (this->privatetype() != 0) {
    total_size += 1 + 1;
  }

  // optional .eRangeGender rangeGender = 11;
  if (this->rangegender() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->rangegender());
  }

  // optional uint32 fixtime = 12;
  if (this->fixtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->fixtime());
  }

  // optional uint32 invalidTime = 13;
  if (this->invalidtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->invalidtime());
  }

  // optional double longitude = 14;
  if (this->longitude() != 0) {
    total_size += 1 + 8;
  }

  // optional double latitude = 15;
  if (this->latitude() != 0) {
    total_size += 1 + 8;
  }

  // optional string location = 16;
  if (this->location().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->location());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDSendRedPacketReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDSendRedPacketReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDSendRedPacketReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDSendRedPacketReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDSendRedPacketReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDSendRedPacketReq)
    MergeFrom(*source);
  }
}

void CMDSendRedPacketReq::MergeFrom(const CMDSendRedPacketReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDSendRedPacketReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
  if (from.packettype() != 0) {
    set_packettype(from.packettype());
  }
  if (from.rangetype() != 0) {
    set_rangetype(from.rangetype());
  }
  if (from.dstuserid() != 0) {
    set_dstuserid(from.dstuserid());
  }
  if (from.packetnum() != 0) {
    set_packetnum(from.packetnum());
  }
  if (from.packetmoney() != 0) {
    set_packetmoney(from.packetmoney());
  }
  if (from.perpacketmoney() != 0) {
    set_perpacketmoney(from.perpacketmoney());
  }
  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.privatetype() != 0) {
    set_privatetype(from.privatetype());
  }
  if (from.rangegender() != 0) {
    set_rangegender(from.rangegender());
  }
  if (from.fixtime() != 0) {
    set_fixtime(from.fixtime());
  }
  if (from.invalidtime() != 0) {
    set_invalidtime(from.invalidtime());
  }
  if (from.longitude() != 0) {
    set_longitude(from.longitude());
  }
  if (from.latitude() != 0) {
    set_latitude(from.latitude());
  }
  if (from.location().size() > 0) {

    location_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.location_);
  }
}

void CMDSendRedPacketReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDSendRedPacketReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDSendRedPacketReq::CopyFrom(const CMDSendRedPacketReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDSendRedPacketReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDSendRedPacketReq::IsInitialized() const {

  return true;
}

void CMDSendRedPacketReq::Swap(CMDSendRedPacketReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDSendRedPacketReq::InternalSwap(CMDSendRedPacketReq* other) {
  std::swap(userid_, other->userid_);
  std::swap(groupid_, other->groupid_);
  std::swap(packettype_, other->packettype_);
  std::swap(rangetype_, other->rangetype_);
  std::swap(dstuserid_, other->dstuserid_);
  std::swap(packetnum_, other->packetnum_);
  std::swap(packetmoney_, other->packetmoney_);
  std::swap(perpacketmoney_, other->perpacketmoney_);
  message_.Swap(&other->message_);
  std::swap(privatetype_, other->privatetype_);
  std::swap(rangegender_, other->rangegender_);
  std::swap(fixtime_, other->fixtime_);
  std::swap(invalidtime_, other->invalidtime_);
  std::swap(longitude_, other->longitude_);
  std::swap(latitude_, other->latitude_);
  location_.Swap(&other->location_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDSendRedPacketReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDSendRedPacketReq_descriptor_;
  metadata.reflection = CMDSendRedPacketReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDSendRedPacketReq

// optional uint32 userID = 1;
void CMDSendRedPacketReq::clear_userid() {
  userid_ = 0u;
}
 ::google::protobuf::uint32 CMDSendRedPacketReq::userid() const {
  // @@protoc_insertion_point(field_get:CMDSendRedPacketReq.userID)
  return userid_;
}
 void CMDSendRedPacketReq::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDSendRedPacketReq.userID)
}

// optional uint32 groupID = 2;
void CMDSendRedPacketReq::clear_groupid() {
  groupid_ = 0u;
}
 ::google::protobuf::uint32 CMDSendRedPacketReq::groupid() const {
  // @@protoc_insertion_point(field_get:CMDSendRedPacketReq.groupID)
  return groupid_;
}
 void CMDSendRedPacketReq::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDSendRedPacketReq.groupID)
}

// optional .ePacketType packetType = 3;
void CMDSendRedPacketReq::clear_packettype() {
  packettype_ = 0;
}
 ::ePacketType CMDSendRedPacketReq::packettype() const {
  // @@protoc_insertion_point(field_get:CMDSendRedPacketReq.packetType)
  return static_cast< ::ePacketType >(packettype_);
}
 void CMDSendRedPacketReq::set_packettype(::ePacketType value) {
  
  packettype_ = value;
  // @@protoc_insertion_point(field_set:CMDSendRedPacketReq.packetType)
}

// optional .eRangeType rangeType = 4;
void CMDSendRedPacketReq::clear_rangetype() {
  rangetype_ = 0;
}
 ::eRangeType CMDSendRedPacketReq::rangetype() const {
  // @@protoc_insertion_point(field_get:CMDSendRedPacketReq.rangeType)
  return static_cast< ::eRangeType >(rangetype_);
}
 void CMDSendRedPacketReq::set_rangetype(::eRangeType value) {
  
  rangetype_ = value;
  // @@protoc_insertion_point(field_set:CMDSendRedPacketReq.rangeType)
}

// optional uint32 dstUserID = 5;
void CMDSendRedPacketReq::clear_dstuserid() {
  dstuserid_ = 0u;
}
 ::google::protobuf::uint32 CMDSendRedPacketReq::dstuserid() const {
  // @@protoc_insertion_point(field_get:CMDSendRedPacketReq.dstUserID)
  return dstuserid_;
}
 void CMDSendRedPacketReq::set_dstuserid(::google::protobuf::uint32 value) {
  
  dstuserid_ = value;
  // @@protoc_insertion_point(field_set:CMDSendRedPacketReq.dstUserID)
}

// optional uint32 packetNum = 6;
void CMDSendRedPacketReq::clear_packetnum() {
  packetnum_ = 0u;
}
 ::google::protobuf::uint32 CMDSendRedPacketReq::packetnum() const {
  // @@protoc_insertion_point(field_get:CMDSendRedPacketReq.packetNum)
  return packetnum_;
}
 void CMDSendRedPacketReq::set_packetnum(::google::protobuf::uint32 value) {
  
  packetnum_ = value;
  // @@protoc_insertion_point(field_set:CMDSendRedPacketReq.packetNum)
}

// optional uint32 packetMoney = 7;
void CMDSendRedPacketReq::clear_packetmoney() {
  packetmoney_ = 0u;
}
 ::google::protobuf::uint32 CMDSendRedPacketReq::packetmoney() const {
  // @@protoc_insertion_point(field_get:CMDSendRedPacketReq.packetMoney)
  return packetmoney_;
}
 void CMDSendRedPacketReq::set_packetmoney(::google::protobuf::uint32 value) {
  
  packetmoney_ = value;
  // @@protoc_insertion_point(field_set:CMDSendRedPacketReq.packetMoney)
}

// optional uint32 perPacketMoney = 8;
void CMDSendRedPacketReq::clear_perpacketmoney() {
  perpacketmoney_ = 0u;
}
 ::google::protobuf::uint32 CMDSendRedPacketReq::perpacketmoney() const {
  // @@protoc_insertion_point(field_get:CMDSendRedPacketReq.perPacketMoney)
  return perpacketmoney_;
}
 void CMDSendRedPacketReq::set_perpacketmoney(::google::protobuf::uint32 value) {
  
  perpacketmoney_ = value;
  // @@protoc_insertion_point(field_set:CMDSendRedPacketReq.perPacketMoney)
}

// optional string message = 9;
void CMDSendRedPacketReq::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CMDSendRedPacketReq::message() const {
  // @@protoc_insertion_point(field_get:CMDSendRedPacketReq.message)
  return message_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDSendRedPacketReq::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDSendRedPacketReq.message)
}
 void CMDSendRedPacketReq::set_message(const char* value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDSendRedPacketReq.message)
}
 void CMDSendRedPacketReq::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDSendRedPacketReq.message)
}
 ::std::string* CMDSendRedPacketReq::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:CMDSendRedPacketReq.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMDSendRedPacketReq::release_message() {
  // @@protoc_insertion_point(field_release:CMDSendRedPacketReq.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDSendRedPacketReq::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:CMDSendRedPacketReq.message)
}

// optional bool privateType = 10;
void CMDSendRedPacketReq::clear_privatetype() {
  privatetype_ = false;
}
 bool CMDSendRedPacketReq::privatetype() const {
  // @@protoc_insertion_point(field_get:CMDSendRedPacketReq.privateType)
  return privatetype_;
}
 void CMDSendRedPacketReq::set_privatetype(bool value) {
  
  privatetype_ = value;
  // @@protoc_insertion_point(field_set:CMDSendRedPacketReq.privateType)
}

// optional .eRangeGender rangeGender = 11;
void CMDSendRedPacketReq::clear_rangegender() {
  rangegender_ = 0;
}
 ::eRangeGender CMDSendRedPacketReq::rangegender() const {
  // @@protoc_insertion_point(field_get:CMDSendRedPacketReq.rangeGender)
  return static_cast< ::eRangeGender >(rangegender_);
}
 void CMDSendRedPacketReq::set_rangegender(::eRangeGender value) {
  
  rangegender_ = value;
  // @@protoc_insertion_point(field_set:CMDSendRedPacketReq.rangeGender)
}

// optional uint32 fixtime = 12;
void CMDSendRedPacketReq::clear_fixtime() {
  fixtime_ = 0u;
}
 ::google::protobuf::uint32 CMDSendRedPacketReq::fixtime() const {
  // @@protoc_insertion_point(field_get:CMDSendRedPacketReq.fixtime)
  return fixtime_;
}
 void CMDSendRedPacketReq::set_fixtime(::google::protobuf::uint32 value) {
  
  fixtime_ = value;
  // @@protoc_insertion_point(field_set:CMDSendRedPacketReq.fixtime)
}

// optional uint32 invalidTime = 13;
void CMDSendRedPacketReq::clear_invalidtime() {
  invalidtime_ = 0u;
}
 ::google::protobuf::uint32 CMDSendRedPacketReq::invalidtime() const {
  // @@protoc_insertion_point(field_get:CMDSendRedPacketReq.invalidTime)
  return invalidtime_;
}
 void CMDSendRedPacketReq::set_invalidtime(::google::protobuf::uint32 value) {
  
  invalidtime_ = value;
  // @@protoc_insertion_point(field_set:CMDSendRedPacketReq.invalidTime)
}

// optional double longitude = 14;
void CMDSendRedPacketReq::clear_longitude() {
  longitude_ = 0;
}
 double CMDSendRedPacketReq::longitude() const {
  // @@protoc_insertion_point(field_get:CMDSendRedPacketReq.longitude)
  return longitude_;
}
 void CMDSendRedPacketReq::set_longitude(double value) {
  
  longitude_ = value;
  // @@protoc_insertion_point(field_set:CMDSendRedPacketReq.longitude)
}

// optional double latitude = 15;
void CMDSendRedPacketReq::clear_latitude() {
  latitude_ = 0;
}
 double CMDSendRedPacketReq::latitude() const {
  // @@protoc_insertion_point(field_get:CMDSendRedPacketReq.latitude)
  return latitude_;
}
 void CMDSendRedPacketReq::set_latitude(double value) {
  
  latitude_ = value;
  // @@protoc_insertion_point(field_set:CMDSendRedPacketReq.latitude)
}

// optional string location = 16;
void CMDSendRedPacketReq::clear_location() {
  location_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CMDSendRedPacketReq::location() const {
  // @@protoc_insertion_point(field_get:CMDSendRedPacketReq.location)
  return location_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDSendRedPacketReq::set_location(const ::std::string& value) {
  
  location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDSendRedPacketReq.location)
}
 void CMDSendRedPacketReq::set_location(const char* value) {
  
  location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDSendRedPacketReq.location)
}
 void CMDSendRedPacketReq::set_location(const char* value, size_t size) {
  
  location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDSendRedPacketReq.location)
}
 ::std::string* CMDSendRedPacketReq::mutable_location() {
  
  // @@protoc_insertion_point(field_mutable:CMDSendRedPacketReq.location)
  return location_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMDSendRedPacketReq::release_location() {
  // @@protoc_insertion_point(field_release:CMDSendRedPacketReq.location)
  
  return location_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDSendRedPacketReq::set_allocated_location(::std::string* location) {
  if (location != NULL) {
    
  } else {
    
  }
  location_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), location);
  // @@protoc_insertion_point(field_set_allocated:CMDSendRedPacketReq.location)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDSendRedPacketResp::kErrInfoFieldNumber;
const int CMDSendRedPacketResp::kUserIDFieldNumber;
const int CMDSendRedPacketResp::kGroupIDFieldNumber;
const int CMDSendRedPacketResp::kPacketIDFieldNumber;
const int CMDSendRedPacketResp::kComboNumFieldNumber;
const int CMDSendRedPacketResp::kPrivateTypeFieldNumber;
const int CMDSendRedPacketResp::kComboTimeFieldNumber;
const int CMDSendRedPacketResp::kPacketTypeFieldNumber;
const int CMDSendRedPacketResp::kLongitudeFieldNumber;
const int CMDSendRedPacketResp::kLatitudeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDSendRedPacketResp::CMDSendRedPacketResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDSendRedPacketResp)
}

void CMDSendRedPacketResp::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  errinfo_ = const_cast< ::CMDErrCode*>(&::CMDErrCode::default_instance());
}

CMDSendRedPacketResp::CMDSendRedPacketResp(const CMDSendRedPacketResp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDSendRedPacketResp)
}

void CMDSendRedPacketResp::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  errinfo_ = NULL;
  userid_ = 0u;
  groupid_ = 0u;
  packetid_ = 0u;
  combonum_ = 0u;
  privatetype_ = false;
  combotime_ = 0u;
  packettype_ = 0;
  longitude_ = 0;
  latitude_ = 0;
}

CMDSendRedPacketResp::~CMDSendRedPacketResp() {
  // @@protoc_insertion_point(destructor:CMDSendRedPacketResp)
  SharedDtor();
}

void CMDSendRedPacketResp::SharedDtor() {
  if (this != default_instance_) {
    delete errinfo_;
  }
}

void CMDSendRedPacketResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDSendRedPacketResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDSendRedPacketResp_descriptor_;
}

const CMDSendRedPacketResp& CMDSendRedPacketResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ConsumeSvr_2eproto();
  return *default_instance_;
}

CMDSendRedPacketResp* CMDSendRedPacketResp::default_instance_ = NULL;

CMDSendRedPacketResp* CMDSendRedPacketResp::New(::google::protobuf::Arena* arena) const {
  CMDSendRedPacketResp* n = new CMDSendRedPacketResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDSendRedPacketResp::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDSendRedPacketResp)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDSendRedPacketResp, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDSendRedPacketResp*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(userid_, combotime_);
  if (GetArenaNoVirtual() == NULL && errinfo_ != NULL) delete errinfo_;
  errinfo_ = NULL;
  packettype_ = 0;
  ZR_(longitude_, latitude_);

#undef ZR_HELPER_
#undef ZR_

}

bool CMDSendRedPacketResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDSendRedPacketResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CMDErrCode errInfo = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_errinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_userID;
        break;
      }

      // optional uint32 userID = 2;
      case 2: {
        if (tag == 16) {
         parse_userID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_groupID;
        break;
      }

      // optional uint32 groupID = 3;
      case 3: {
        if (tag == 24) {
         parse_groupID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &groupid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_packetID;
        break;
      }

      // optional uint32 packetID = 4;
      case 4: {
        if (tag == 32) {
         parse_packetID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &packetid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_comboNum;
        break;
      }

      // optional uint32 comboNum = 5;
      case 5: {
        if (tag == 40) {
         parse_comboNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &combonum_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_privateType;
        break;
      }

      // optional bool privateType = 6;
      case 6: {
        if (tag == 48) {
         parse_privateType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &privatetype_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_comboTime;
        break;
      }

      // optional uint32 comboTime = 7;
      case 7: {
        if (tag == 56) {
         parse_comboTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &combotime_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_packetType;
        break;
      }

      // optional .ePacketType packetType = 8;
      case 8: {
        if (tag == 64) {
         parse_packetType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_packettype(static_cast< ::ePacketType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(73)) goto parse_longitude;
        break;
      }

      // optional double longitude = 9;
      case 9: {
        if (tag == 73) {
         parse_longitude:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &longitude_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(81)) goto parse_latitude;
        break;
      }

      // optional double latitude = 10;
      case 10: {
        if (tag == 81) {
         parse_latitude:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &latitude_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDSendRedPacketResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDSendRedPacketResp)
  return false;
#undef DO_
}

void CMDSendRedPacketResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDSendRedPacketResp)
  // optional .CMDErrCode errInfo = 1;
  if (this->has_errinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->errinfo_, output);
  }

  // optional uint32 userID = 2;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->userid(), output);
  }

  // optional uint32 groupID = 3;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->groupid(), output);
  }

  // optional uint32 packetID = 4;
  if (this->packetid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->packetid(), output);
  }

  // optional uint32 comboNum = 5;
  if (this->combonum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->combonum(), output);
  }

  // optional bool privateType = 6;
  if (this->privatetype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->privatetype(), output);
  }

  // optional uint32 comboTime = 7;
  if (this->combotime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->combotime(), output);
  }

  // optional .ePacketType packetType = 8;
  if (this->packettype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->packettype(), output);
  }

  // optional double longitude = 9;
  if (this->longitude() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->longitude(), output);
  }

  // optional double latitude = 10;
  if (this->latitude() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(10, this->latitude(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDSendRedPacketResp)
}

::google::protobuf::uint8* CMDSendRedPacketResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDSendRedPacketResp)
  // optional .CMDErrCode errInfo = 1;
  if (this->has_errinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->errinfo_, false, target);
  }

  // optional uint32 userID = 2;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->userid(), target);
  }

  // optional uint32 groupID = 3;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->groupid(), target);
  }

  // optional uint32 packetID = 4;
  if (this->packetid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->packetid(), target);
  }

  // optional uint32 comboNum = 5;
  if (this->combonum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->combonum(), target);
  }

  // optional bool privateType = 6;
  if (this->privatetype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->privatetype(), target);
  }

  // optional uint32 comboTime = 7;
  if (this->combotime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->combotime(), target);
  }

  // optional .ePacketType packetType = 8;
  if (this->packettype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->packettype(), target);
  }

  // optional double longitude = 9;
  if (this->longitude() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->longitude(), target);
  }

  // optional double latitude = 10;
  if (this->latitude() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(10, this->latitude(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDSendRedPacketResp)
  return target;
}

int CMDSendRedPacketResp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDSendRedPacketResp)
  int total_size = 0;

  // optional .CMDErrCode errInfo = 1;
  if (this->has_errinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->errinfo_);
  }

  // optional uint32 userID = 2;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userid());
  }

  // optional uint32 groupID = 3;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->groupid());
  }

  // optional uint32 packetID = 4;
  if (this->packetid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->packetid());
  }

  // optional uint32 comboNum = 5;
  if (this->combonum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->combonum());
  }

  // optional bool privateType = 6;
  if (this->privatetype() != 0) {
    total_size += 1 + 1;
  }

  // optional uint32 comboTime = 7;
  if (this->combotime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->combotime());
  }

  // optional .ePacketType packetType = 8;
  if (this->packettype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->packettype());
  }

  // optional double longitude = 9;
  if (this->longitude() != 0) {
    total_size += 1 + 8;
  }

  // optional double latitude = 10;
  if (this->latitude() != 0) {
    total_size += 1 + 8;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDSendRedPacketResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDSendRedPacketResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDSendRedPacketResp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDSendRedPacketResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDSendRedPacketResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDSendRedPacketResp)
    MergeFrom(*source);
  }
}

void CMDSendRedPacketResp::MergeFrom(const CMDSendRedPacketResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDSendRedPacketResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.has_errinfo()) {
    mutable_errinfo()->::CMDErrCode::MergeFrom(from.errinfo());
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
  if (from.packetid() != 0) {
    set_packetid(from.packetid());
  }
  if (from.combonum() != 0) {
    set_combonum(from.combonum());
  }
  if (from.privatetype() != 0) {
    set_privatetype(from.privatetype());
  }
  if (from.combotime() != 0) {
    set_combotime(from.combotime());
  }
  if (from.packettype() != 0) {
    set_packettype(from.packettype());
  }
  if (from.longitude() != 0) {
    set_longitude(from.longitude());
  }
  if (from.latitude() != 0) {
    set_latitude(from.latitude());
  }
}

void CMDSendRedPacketResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDSendRedPacketResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDSendRedPacketResp::CopyFrom(const CMDSendRedPacketResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDSendRedPacketResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDSendRedPacketResp::IsInitialized() const {

  return true;
}

void CMDSendRedPacketResp::Swap(CMDSendRedPacketResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDSendRedPacketResp::InternalSwap(CMDSendRedPacketResp* other) {
  std::swap(errinfo_, other->errinfo_);
  std::swap(userid_, other->userid_);
  std::swap(groupid_, other->groupid_);
  std::swap(packetid_, other->packetid_);
  std::swap(combonum_, other->combonum_);
  std::swap(privatetype_, other->privatetype_);
  std::swap(combotime_, other->combotime_);
  std::swap(packettype_, other->packettype_);
  std::swap(longitude_, other->longitude_);
  std::swap(latitude_, other->latitude_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDSendRedPacketResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDSendRedPacketResp_descriptor_;
  metadata.reflection = CMDSendRedPacketResp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDSendRedPacketResp

// optional .CMDErrCode errInfo = 1;
bool CMDSendRedPacketResp::has_errinfo() const {
  return !_is_default_instance_ && errinfo_ != NULL;
}
void CMDSendRedPacketResp::clear_errinfo() {
  if (GetArenaNoVirtual() == NULL && errinfo_ != NULL) delete errinfo_;
  errinfo_ = NULL;
}
const ::CMDErrCode& CMDSendRedPacketResp::errinfo() const {
  // @@protoc_insertion_point(field_get:CMDSendRedPacketResp.errInfo)
  return errinfo_ != NULL ? *errinfo_ : *default_instance_->errinfo_;
}
::CMDErrCode* CMDSendRedPacketResp::mutable_errinfo() {
  
  if (errinfo_ == NULL) {
    errinfo_ = new ::CMDErrCode;
  }
  // @@protoc_insertion_point(field_mutable:CMDSendRedPacketResp.errInfo)
  return errinfo_;
}
::CMDErrCode* CMDSendRedPacketResp::release_errinfo() {
  // @@protoc_insertion_point(field_release:CMDSendRedPacketResp.errInfo)
  
  ::CMDErrCode* temp = errinfo_;
  errinfo_ = NULL;
  return temp;
}
void CMDSendRedPacketResp::set_allocated_errinfo(::CMDErrCode* errinfo) {
  delete errinfo_;
  errinfo_ = errinfo;
  if (errinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDSendRedPacketResp.errInfo)
}

// optional uint32 userID = 2;
void CMDSendRedPacketResp::clear_userid() {
  userid_ = 0u;
}
 ::google::protobuf::uint32 CMDSendRedPacketResp::userid() const {
  // @@protoc_insertion_point(field_get:CMDSendRedPacketResp.userID)
  return userid_;
}
 void CMDSendRedPacketResp::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDSendRedPacketResp.userID)
}

// optional uint32 groupID = 3;
void CMDSendRedPacketResp::clear_groupid() {
  groupid_ = 0u;
}
 ::google::protobuf::uint32 CMDSendRedPacketResp::groupid() const {
  // @@protoc_insertion_point(field_get:CMDSendRedPacketResp.groupID)
  return groupid_;
}
 void CMDSendRedPacketResp::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDSendRedPacketResp.groupID)
}

// optional uint32 packetID = 4;
void CMDSendRedPacketResp::clear_packetid() {
  packetid_ = 0u;
}
 ::google::protobuf::uint32 CMDSendRedPacketResp::packetid() const {
  // @@protoc_insertion_point(field_get:CMDSendRedPacketResp.packetID)
  return packetid_;
}
 void CMDSendRedPacketResp::set_packetid(::google::protobuf::uint32 value) {
  
  packetid_ = value;
  // @@protoc_insertion_point(field_set:CMDSendRedPacketResp.packetID)
}

// optional uint32 comboNum = 5;
void CMDSendRedPacketResp::clear_combonum() {
  combonum_ = 0u;
}
 ::google::protobuf::uint32 CMDSendRedPacketResp::combonum() const {
  // @@protoc_insertion_point(field_get:CMDSendRedPacketResp.comboNum)
  return combonum_;
}
 void CMDSendRedPacketResp::set_combonum(::google::protobuf::uint32 value) {
  
  combonum_ = value;
  // @@protoc_insertion_point(field_set:CMDSendRedPacketResp.comboNum)
}

// optional bool privateType = 6;
void CMDSendRedPacketResp::clear_privatetype() {
  privatetype_ = false;
}
 bool CMDSendRedPacketResp::privatetype() const {
  // @@protoc_insertion_point(field_get:CMDSendRedPacketResp.privateType)
  return privatetype_;
}
 void CMDSendRedPacketResp::set_privatetype(bool value) {
  
  privatetype_ = value;
  // @@protoc_insertion_point(field_set:CMDSendRedPacketResp.privateType)
}

// optional uint32 comboTime = 7;
void CMDSendRedPacketResp::clear_combotime() {
  combotime_ = 0u;
}
 ::google::protobuf::uint32 CMDSendRedPacketResp::combotime() const {
  // @@protoc_insertion_point(field_get:CMDSendRedPacketResp.comboTime)
  return combotime_;
}
 void CMDSendRedPacketResp::set_combotime(::google::protobuf::uint32 value) {
  
  combotime_ = value;
  // @@protoc_insertion_point(field_set:CMDSendRedPacketResp.comboTime)
}

// optional .ePacketType packetType = 8;
void CMDSendRedPacketResp::clear_packettype() {
  packettype_ = 0;
}
 ::ePacketType CMDSendRedPacketResp::packettype() const {
  // @@protoc_insertion_point(field_get:CMDSendRedPacketResp.packetType)
  return static_cast< ::ePacketType >(packettype_);
}
 void CMDSendRedPacketResp::set_packettype(::ePacketType value) {
  
  packettype_ = value;
  // @@protoc_insertion_point(field_set:CMDSendRedPacketResp.packetType)
}

// optional double longitude = 9;
void CMDSendRedPacketResp::clear_longitude() {
  longitude_ = 0;
}
 double CMDSendRedPacketResp::longitude() const {
  // @@protoc_insertion_point(field_get:CMDSendRedPacketResp.longitude)
  return longitude_;
}
 void CMDSendRedPacketResp::set_longitude(double value) {
  
  longitude_ = value;
  // @@protoc_insertion_point(field_set:CMDSendRedPacketResp.longitude)
}

// optional double latitude = 10;
void CMDSendRedPacketResp::clear_latitude() {
  latitude_ = 0;
}
 double CMDSendRedPacketResp::latitude() const {
  // @@protoc_insertion_point(field_get:CMDSendRedPacketResp.latitude)
  return latitude_;
}
 void CMDSendRedPacketResp::set_latitude(double value) {
  
  latitude_ = value;
  // @@protoc_insertion_point(field_set:CMDSendRedPacketResp.latitude)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDCatchRedPacketReq::kUserIDFieldNumber;
const int CMDCatchRedPacketReq::kGroupIDFieldNumber;
const int CMDCatchRedPacketReq::kPacketIDFieldNumber;
const int CMDCatchRedPacketReq::kLongitudeFieldNumber;
const int CMDCatchRedPacketReq::kLatitudeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDCatchRedPacketReq::CMDCatchRedPacketReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDCatchRedPacketReq)
}

void CMDCatchRedPacketReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDCatchRedPacketReq::CMDCatchRedPacketReq(const CMDCatchRedPacketReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDCatchRedPacketReq)
}

void CMDCatchRedPacketReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  userid_ = 0u;
  groupid_ = 0u;
  packetid_ = 0u;
  longitude_ = 0;
  latitude_ = 0;
}

CMDCatchRedPacketReq::~CMDCatchRedPacketReq() {
  // @@protoc_insertion_point(destructor:CMDCatchRedPacketReq)
  SharedDtor();
}

void CMDCatchRedPacketReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMDCatchRedPacketReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDCatchRedPacketReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDCatchRedPacketReq_descriptor_;
}

const CMDCatchRedPacketReq& CMDCatchRedPacketReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ConsumeSvr_2eproto();
  return *default_instance_;
}

CMDCatchRedPacketReq* CMDCatchRedPacketReq::default_instance_ = NULL;

CMDCatchRedPacketReq* CMDCatchRedPacketReq::New(::google::protobuf::Arena* arena) const {
  CMDCatchRedPacketReq* n = new CMDCatchRedPacketReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDCatchRedPacketReq::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDCatchRedPacketReq)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDCatchRedPacketReq, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDCatchRedPacketReq*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(userid_, packetid_);

#undef ZR_HELPER_
#undef ZR_

}

bool CMDCatchRedPacketReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDCatchRedPacketReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 userID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_groupID;
        break;
      }

      // optional uint32 groupID = 2;
      case 2: {
        if (tag == 16) {
         parse_groupID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &groupid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_packetID;
        break;
      }

      // optional uint32 packetID = 3;
      case 3: {
        if (tag == 24) {
         parse_packetID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &packetid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(33)) goto parse_longitude;
        break;
      }

      // optional double longitude = 4;
      case 4: {
        if (tag == 33) {
         parse_longitude:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &longitude_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(41)) goto parse_latitude;
        break;
      }

      // optional double latitude = 5;
      case 5: {
        if (tag == 41) {
         parse_latitude:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &latitude_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDCatchRedPacketReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDCatchRedPacketReq)
  return false;
#undef DO_
}

void CMDCatchRedPacketReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDCatchRedPacketReq)
  // optional uint32 userID = 1;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->userid(), output);
  }

  // optional uint32 groupID = 2;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->groupid(), output);
  }

  // optional uint32 packetID = 3;
  if (this->packetid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->packetid(), output);
  }

  // optional double longitude = 4;
  if (this->longitude() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->longitude(), output);
  }

  // optional double latitude = 5;
  if (this->latitude() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->latitude(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDCatchRedPacketReq)
}

::google::protobuf::uint8* CMDCatchRedPacketReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDCatchRedPacketReq)
  // optional uint32 userID = 1;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->userid(), target);
  }

  // optional uint32 groupID = 2;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->groupid(), target);
  }

  // optional uint32 packetID = 3;
  if (this->packetid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->packetid(), target);
  }

  // optional double longitude = 4;
  if (this->longitude() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->longitude(), target);
  }

  // optional double latitude = 5;
  if (this->latitude() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->latitude(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDCatchRedPacketReq)
  return target;
}

int CMDCatchRedPacketReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDCatchRedPacketReq)
  int total_size = 0;

  // optional uint32 userID = 1;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userid());
  }

  // optional uint32 groupID = 2;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->groupid());
  }

  // optional uint32 packetID = 3;
  if (this->packetid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->packetid());
  }

  // optional double longitude = 4;
  if (this->longitude() != 0) {
    total_size += 1 + 8;
  }

  // optional double latitude = 5;
  if (this->latitude() != 0) {
    total_size += 1 + 8;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDCatchRedPacketReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDCatchRedPacketReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDCatchRedPacketReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDCatchRedPacketReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDCatchRedPacketReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDCatchRedPacketReq)
    MergeFrom(*source);
  }
}

void CMDCatchRedPacketReq::MergeFrom(const CMDCatchRedPacketReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDCatchRedPacketReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
  if (from.packetid() != 0) {
    set_packetid(from.packetid());
  }
  if (from.longitude() != 0) {
    set_longitude(from.longitude());
  }
  if (from.latitude() != 0) {
    set_latitude(from.latitude());
  }
}

void CMDCatchRedPacketReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDCatchRedPacketReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDCatchRedPacketReq::CopyFrom(const CMDCatchRedPacketReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDCatchRedPacketReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDCatchRedPacketReq::IsInitialized() const {

  return true;
}

void CMDCatchRedPacketReq::Swap(CMDCatchRedPacketReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDCatchRedPacketReq::InternalSwap(CMDCatchRedPacketReq* other) {
  std::swap(userid_, other->userid_);
  std::swap(groupid_, other->groupid_);
  std::swap(packetid_, other->packetid_);
  std::swap(longitude_, other->longitude_);
  std::swap(latitude_, other->latitude_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDCatchRedPacketReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDCatchRedPacketReq_descriptor_;
  metadata.reflection = CMDCatchRedPacketReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDCatchRedPacketReq

// optional uint32 userID = 1;
void CMDCatchRedPacketReq::clear_userid() {
  userid_ = 0u;
}
 ::google::protobuf::uint32 CMDCatchRedPacketReq::userid() const {
  // @@protoc_insertion_point(field_get:CMDCatchRedPacketReq.userID)
  return userid_;
}
 void CMDCatchRedPacketReq::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDCatchRedPacketReq.userID)
}

// optional uint32 groupID = 2;
void CMDCatchRedPacketReq::clear_groupid() {
  groupid_ = 0u;
}
 ::google::protobuf::uint32 CMDCatchRedPacketReq::groupid() const {
  // @@protoc_insertion_point(field_get:CMDCatchRedPacketReq.groupID)
  return groupid_;
}
 void CMDCatchRedPacketReq::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDCatchRedPacketReq.groupID)
}

// optional uint32 packetID = 3;
void CMDCatchRedPacketReq::clear_packetid() {
  packetid_ = 0u;
}
 ::google::protobuf::uint32 CMDCatchRedPacketReq::packetid() const {
  // @@protoc_insertion_point(field_get:CMDCatchRedPacketReq.packetID)
  return packetid_;
}
 void CMDCatchRedPacketReq::set_packetid(::google::protobuf::uint32 value) {
  
  packetid_ = value;
  // @@protoc_insertion_point(field_set:CMDCatchRedPacketReq.packetID)
}

// optional double longitude = 4;
void CMDCatchRedPacketReq::clear_longitude() {
  longitude_ = 0;
}
 double CMDCatchRedPacketReq::longitude() const {
  // @@protoc_insertion_point(field_get:CMDCatchRedPacketReq.longitude)
  return longitude_;
}
 void CMDCatchRedPacketReq::set_longitude(double value) {
  
  longitude_ = value;
  // @@protoc_insertion_point(field_set:CMDCatchRedPacketReq.longitude)
}

// optional double latitude = 5;
void CMDCatchRedPacketReq::clear_latitude() {
  latitude_ = 0;
}
 double CMDCatchRedPacketReq::latitude() const {
  // @@protoc_insertion_point(field_get:CMDCatchRedPacketReq.latitude)
  return latitude_;
}
 void CMDCatchRedPacketReq::set_latitude(double value) {
  
  latitude_ = value;
  // @@protoc_insertion_point(field_set:CMDCatchRedPacketReq.latitude)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDCatchRedPacketResp::kErrInfoFieldNumber;
const int CMDCatchRedPacketResp::kUserIDFieldNumber;
const int CMDCatchRedPacketResp::kGroupIDFieldNumber;
const int CMDCatchRedPacketResp::kPacketIDFieldNumber;
const int CMDCatchRedPacketResp::kSrcUserFieldNumber;
const int CMDCatchRedPacketResp::kDstUserFieldNumber;
const int CMDCatchRedPacketResp::kPacketTypeFieldNumber;
const int CMDCatchRedPacketResp::kRangeTypeFieldNumber;
const int CMDCatchRedPacketResp::kPacketNumFieldNumber;
const int CMDCatchRedPacketResp::kPacketMoneyFieldNumber;
const int CMDCatchRedPacketResp::kMessageFieldNumber;
const int CMDCatchRedPacketResp::kPrivateTypeFieldNumber;
const int CMDCatchRedPacketResp::kFixTimeFieldNumber;
const int CMDCatchRedPacketResp::kDiffTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDCatchRedPacketResp::CMDCatchRedPacketResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDCatchRedPacketResp)
}

void CMDCatchRedPacketResp::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  errinfo_ = const_cast< ::CMDErrCode*>(&::CMDErrCode::default_instance());
  srcuser_ = const_cast< ::UserInfo_t*>(&::UserInfo_t::default_instance());
  dstuser_ = const_cast< ::UserInfo_t*>(&::UserInfo_t::default_instance());
}

CMDCatchRedPacketResp::CMDCatchRedPacketResp(const CMDCatchRedPacketResp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDCatchRedPacketResp)
}

void CMDCatchRedPacketResp::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  errinfo_ = NULL;
  userid_ = 0u;
  groupid_ = 0u;
  packetid_ = 0u;
  srcuser_ = NULL;
  dstuser_ = NULL;
  packettype_ = 0;
  rangetype_ = 0;
  packetnum_ = 0u;
  packetmoney_ = 0u;
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  privatetype_ = false;
  fixtime_ = 0u;
  difftime_ = 0u;
}

CMDCatchRedPacketResp::~CMDCatchRedPacketResp() {
  // @@protoc_insertion_point(destructor:CMDCatchRedPacketResp)
  SharedDtor();
}

void CMDCatchRedPacketResp::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete errinfo_;
    delete srcuser_;
    delete dstuser_;
  }
}

void CMDCatchRedPacketResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDCatchRedPacketResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDCatchRedPacketResp_descriptor_;
}

const CMDCatchRedPacketResp& CMDCatchRedPacketResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ConsumeSvr_2eproto();
  return *default_instance_;
}

CMDCatchRedPacketResp* CMDCatchRedPacketResp::default_instance_ = NULL;

CMDCatchRedPacketResp* CMDCatchRedPacketResp::New(::google::protobuf::Arena* arena) const {
  CMDCatchRedPacketResp* n = new CMDCatchRedPacketResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDCatchRedPacketResp::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDCatchRedPacketResp)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDCatchRedPacketResp, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDCatchRedPacketResp*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(userid_, groupid_);
  ZR_(packetid_, packettype_);
  if (GetArenaNoVirtual() == NULL && errinfo_ != NULL) delete errinfo_;
  errinfo_ = NULL;
  if (GetArenaNoVirtual() == NULL && srcuser_ != NULL) delete srcuser_;
  srcuser_ = NULL;
  if (GetArenaNoVirtual() == NULL && dstuser_ != NULL) delete dstuser_;
  dstuser_ = NULL;
  rangetype_ = 0;
  ZR_(packetmoney_, difftime_);
  packetnum_ = 0u;
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool CMDCatchRedPacketResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDCatchRedPacketResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CMDErrCode errInfo = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_errinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_userID;
        break;
      }

      // optional uint32 userID = 2;
      case 2: {
        if (tag == 16) {
         parse_userID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_groupID;
        break;
      }

      // optional uint32 groupID = 3;
      case 3: {
        if (tag == 24) {
         parse_groupID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &groupid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_packetID;
        break;
      }

      // optional uint32 packetID = 4;
      case 4: {
        if (tag == 32) {
         parse_packetID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &packetid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_srcUser;
        break;
      }

      // optional .UserInfo_t srcUser = 5;
      case 5: {
        if (tag == 42) {
         parse_srcUser:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_srcuser()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_dstUser;
        break;
      }

      // optional .UserInfo_t dstUser = 6;
      case 6: {
        if (tag == 50) {
         parse_dstUser:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_dstuser()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_packetType;
        break;
      }

      // optional .ePacketType packetType = 7;
      case 7: {
        if (tag == 56) {
         parse_packetType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_packettype(static_cast< ::ePacketType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_rangeType;
        break;
      }

      // optional .eRangeType rangeType = 8;
      case 8: {
        if (tag == 64) {
         parse_rangeType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_rangetype(static_cast< ::eRangeType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_packetNum;
        break;
      }

      // optional uint32 packetNum = 9;
      case 9: {
        if (tag == 72) {
         parse_packetNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &packetnum_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_packetMoney;
        break;
      }

      // optional uint32 packetMoney = 10;
      case 10: {
        if (tag == 80) {
         parse_packetMoney:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &packetmoney_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_message;
        break;
      }

      // optional string message = 11;
      case 11: {
        if (tag == 90) {
         parse_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), this->message().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMDCatchRedPacketResp.message"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_privateType;
        break;
      }

      // optional bool privateType = 12;
      case 12: {
        if (tag == 96) {
         parse_privateType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &privatetype_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_fixTime;
        break;
      }

      // optional uint32 fixTime = 13;
      case 13: {
        if (tag == 104) {
         parse_fixTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &fixtime_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_diffTime;
        break;
      }

      // optional uint32 diffTime = 14;
      case 14: {
        if (tag == 112) {
         parse_diffTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &difftime_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDCatchRedPacketResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDCatchRedPacketResp)
  return false;
#undef DO_
}

void CMDCatchRedPacketResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDCatchRedPacketResp)
  // optional .CMDErrCode errInfo = 1;
  if (this->has_errinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->errinfo_, output);
  }

  // optional uint32 userID = 2;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->userid(), output);
  }

  // optional uint32 groupID = 3;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->groupid(), output);
  }

  // optional uint32 packetID = 4;
  if (this->packetid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->packetid(), output);
  }

  // optional .UserInfo_t srcUser = 5;
  if (this->has_srcuser()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->srcuser_, output);
  }

  // optional .UserInfo_t dstUser = 6;
  if (this->has_dstuser()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->dstuser_, output);
  }

  // optional .ePacketType packetType = 7;
  if (this->packettype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->packettype(), output);
  }

  // optional .eRangeType rangeType = 8;
  if (this->rangetype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->rangetype(), output);
  }

  // optional uint32 packetNum = 9;
  if (this->packetnum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->packetnum(), output);
  }

  // optional uint32 packetMoney = 10;
  if (this->packetmoney() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->packetmoney(), output);
  }

  // optional string message = 11;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDCatchRedPacketResp.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->message(), output);
  }

  // optional bool privateType = 12;
  if (this->privatetype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->privatetype(), output);
  }

  // optional uint32 fixTime = 13;
  if (this->fixtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->fixtime(), output);
  }

  // optional uint32 diffTime = 14;
  if (this->difftime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->difftime(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDCatchRedPacketResp)
}

::google::protobuf::uint8* CMDCatchRedPacketResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDCatchRedPacketResp)
  // optional .CMDErrCode errInfo = 1;
  if (this->has_errinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->errinfo_, false, target);
  }

  // optional uint32 userID = 2;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->userid(), target);
  }

  // optional uint32 groupID = 3;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->groupid(), target);
  }

  // optional uint32 packetID = 4;
  if (this->packetid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->packetid(), target);
  }

  // optional .UserInfo_t srcUser = 5;
  if (this->has_srcuser()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->srcuser_, false, target);
  }

  // optional .UserInfo_t dstUser = 6;
  if (this->has_dstuser()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->dstuser_, false, target);
  }

  // optional .ePacketType packetType = 7;
  if (this->packettype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->packettype(), target);
  }

  // optional .eRangeType rangeType = 8;
  if (this->rangetype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->rangetype(), target);
  }

  // optional uint32 packetNum = 9;
  if (this->packetnum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->packetnum(), target);
  }

  // optional uint32 packetMoney = 10;
  if (this->packetmoney() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->packetmoney(), target);
  }

  // optional string message = 11;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDCatchRedPacketResp.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->message(), target);
  }

  // optional bool privateType = 12;
  if (this->privatetype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(12, this->privatetype(), target);
  }

  // optional uint32 fixTime = 13;
  if (this->fixtime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->fixtime(), target);
  }

  // optional uint32 diffTime = 14;
  if (this->difftime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->difftime(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDCatchRedPacketResp)
  return target;
}

int CMDCatchRedPacketResp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDCatchRedPacketResp)
  int total_size = 0;

  // optional .CMDErrCode errInfo = 1;
  if (this->has_errinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->errinfo_);
  }

  // optional uint32 userID = 2;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userid());
  }

  // optional uint32 groupID = 3;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->groupid());
  }

  // optional uint32 packetID = 4;
  if (this->packetid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->packetid());
  }

  // optional .UserInfo_t srcUser = 5;
  if (this->has_srcuser()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->srcuser_);
  }

  // optional .UserInfo_t dstUser = 6;
  if (this->has_dstuser()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->dstuser_);
  }

  // optional .ePacketType packetType = 7;
  if (this->packettype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->packettype());
  }

  // optional .eRangeType rangeType = 8;
  if (this->rangetype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->rangetype());
  }

  // optional uint32 packetNum = 9;
  if (this->packetnum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->packetnum());
  }

  // optional uint32 packetMoney = 10;
  if (this->packetmoney() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->packetmoney());
  }

  // optional string message = 11;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // optional bool privateType = 12;
  if (this->privatetype() != 0) {
    total_size += 1 + 1;
  }

  // optional uint32 fixTime = 13;
  if (this->fixtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->fixtime());
  }

  // optional uint32 diffTime = 14;
  if (this->difftime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->difftime());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDCatchRedPacketResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDCatchRedPacketResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDCatchRedPacketResp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDCatchRedPacketResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDCatchRedPacketResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDCatchRedPacketResp)
    MergeFrom(*source);
  }
}

void CMDCatchRedPacketResp::MergeFrom(const CMDCatchRedPacketResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDCatchRedPacketResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.has_errinfo()) {
    mutable_errinfo()->::CMDErrCode::MergeFrom(from.errinfo());
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
  if (from.packetid() != 0) {
    set_packetid(from.packetid());
  }
  if (from.has_srcuser()) {
    mutable_srcuser()->::UserInfo_t::MergeFrom(from.srcuser());
  }
  if (from.has_dstuser()) {
    mutable_dstuser()->::UserInfo_t::MergeFrom(from.dstuser());
  }
  if (from.packettype() != 0) {
    set_packettype(from.packettype());
  }
  if (from.rangetype() != 0) {
    set_rangetype(from.rangetype());
  }
  if (from.packetnum() != 0) {
    set_packetnum(from.packetnum());
  }
  if (from.packetmoney() != 0) {
    set_packetmoney(from.packetmoney());
  }
  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.privatetype() != 0) {
    set_privatetype(from.privatetype());
  }
  if (from.fixtime() != 0) {
    set_fixtime(from.fixtime());
  }
  if (from.difftime() != 0) {
    set_difftime(from.difftime());
  }
}

void CMDCatchRedPacketResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDCatchRedPacketResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDCatchRedPacketResp::CopyFrom(const CMDCatchRedPacketResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDCatchRedPacketResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDCatchRedPacketResp::IsInitialized() const {

  return true;
}

void CMDCatchRedPacketResp::Swap(CMDCatchRedPacketResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDCatchRedPacketResp::InternalSwap(CMDCatchRedPacketResp* other) {
  std::swap(errinfo_, other->errinfo_);
  std::swap(userid_, other->userid_);
  std::swap(groupid_, other->groupid_);
  std::swap(packetid_, other->packetid_);
  std::swap(srcuser_, other->srcuser_);
  std::swap(dstuser_, other->dstuser_);
  std::swap(packettype_, other->packettype_);
  std::swap(rangetype_, other->rangetype_);
  std::swap(packetnum_, other->packetnum_);
  std::swap(packetmoney_, other->packetmoney_);
  message_.Swap(&other->message_);
  std::swap(privatetype_, other->privatetype_);
  std::swap(fixtime_, other->fixtime_);
  std::swap(difftime_, other->difftime_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDCatchRedPacketResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDCatchRedPacketResp_descriptor_;
  metadata.reflection = CMDCatchRedPacketResp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDCatchRedPacketResp

// optional .CMDErrCode errInfo = 1;
bool CMDCatchRedPacketResp::has_errinfo() const {
  return !_is_default_instance_ && errinfo_ != NULL;
}
void CMDCatchRedPacketResp::clear_errinfo() {
  if (GetArenaNoVirtual() == NULL && errinfo_ != NULL) delete errinfo_;
  errinfo_ = NULL;
}
const ::CMDErrCode& CMDCatchRedPacketResp::errinfo() const {
  // @@protoc_insertion_point(field_get:CMDCatchRedPacketResp.errInfo)
  return errinfo_ != NULL ? *errinfo_ : *default_instance_->errinfo_;
}
::CMDErrCode* CMDCatchRedPacketResp::mutable_errinfo() {
  
  if (errinfo_ == NULL) {
    errinfo_ = new ::CMDErrCode;
  }
  // @@protoc_insertion_point(field_mutable:CMDCatchRedPacketResp.errInfo)
  return errinfo_;
}
::CMDErrCode* CMDCatchRedPacketResp::release_errinfo() {
  // @@protoc_insertion_point(field_release:CMDCatchRedPacketResp.errInfo)
  
  ::CMDErrCode* temp = errinfo_;
  errinfo_ = NULL;
  return temp;
}
void CMDCatchRedPacketResp::set_allocated_errinfo(::CMDErrCode* errinfo) {
  delete errinfo_;
  errinfo_ = errinfo;
  if (errinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDCatchRedPacketResp.errInfo)
}

// optional uint32 userID = 2;
void CMDCatchRedPacketResp::clear_userid() {
  userid_ = 0u;
}
 ::google::protobuf::uint32 CMDCatchRedPacketResp::userid() const {
  // @@protoc_insertion_point(field_get:CMDCatchRedPacketResp.userID)
  return userid_;
}
 void CMDCatchRedPacketResp::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDCatchRedPacketResp.userID)
}

// optional uint32 groupID = 3;
void CMDCatchRedPacketResp::clear_groupid() {
  groupid_ = 0u;
}
 ::google::protobuf::uint32 CMDCatchRedPacketResp::groupid() const {
  // @@protoc_insertion_point(field_get:CMDCatchRedPacketResp.groupID)
  return groupid_;
}
 void CMDCatchRedPacketResp::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDCatchRedPacketResp.groupID)
}

// optional uint32 packetID = 4;
void CMDCatchRedPacketResp::clear_packetid() {
  packetid_ = 0u;
}
 ::google::protobuf::uint32 CMDCatchRedPacketResp::packetid() const {
  // @@protoc_insertion_point(field_get:CMDCatchRedPacketResp.packetID)
  return packetid_;
}
 void CMDCatchRedPacketResp::set_packetid(::google::protobuf::uint32 value) {
  
  packetid_ = value;
  // @@protoc_insertion_point(field_set:CMDCatchRedPacketResp.packetID)
}

// optional .UserInfo_t srcUser = 5;
bool CMDCatchRedPacketResp::has_srcuser() const {
  return !_is_default_instance_ && srcuser_ != NULL;
}
void CMDCatchRedPacketResp::clear_srcuser() {
  if (GetArenaNoVirtual() == NULL && srcuser_ != NULL) delete srcuser_;
  srcuser_ = NULL;
}
const ::UserInfo_t& CMDCatchRedPacketResp::srcuser() const {
  // @@protoc_insertion_point(field_get:CMDCatchRedPacketResp.srcUser)
  return srcuser_ != NULL ? *srcuser_ : *default_instance_->srcuser_;
}
::UserInfo_t* CMDCatchRedPacketResp::mutable_srcuser() {
  
  if (srcuser_ == NULL) {
    srcuser_ = new ::UserInfo_t;
  }
  // @@protoc_insertion_point(field_mutable:CMDCatchRedPacketResp.srcUser)
  return srcuser_;
}
::UserInfo_t* CMDCatchRedPacketResp::release_srcuser() {
  // @@protoc_insertion_point(field_release:CMDCatchRedPacketResp.srcUser)
  
  ::UserInfo_t* temp = srcuser_;
  srcuser_ = NULL;
  return temp;
}
void CMDCatchRedPacketResp::set_allocated_srcuser(::UserInfo_t* srcuser) {
  delete srcuser_;
  srcuser_ = srcuser;
  if (srcuser) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDCatchRedPacketResp.srcUser)
}

// optional .UserInfo_t dstUser = 6;
bool CMDCatchRedPacketResp::has_dstuser() const {
  return !_is_default_instance_ && dstuser_ != NULL;
}
void CMDCatchRedPacketResp::clear_dstuser() {
  if (GetArenaNoVirtual() == NULL && dstuser_ != NULL) delete dstuser_;
  dstuser_ = NULL;
}
const ::UserInfo_t& CMDCatchRedPacketResp::dstuser() const {
  // @@protoc_insertion_point(field_get:CMDCatchRedPacketResp.dstUser)
  return dstuser_ != NULL ? *dstuser_ : *default_instance_->dstuser_;
}
::UserInfo_t* CMDCatchRedPacketResp::mutable_dstuser() {
  
  if (dstuser_ == NULL) {
    dstuser_ = new ::UserInfo_t;
  }
  // @@protoc_insertion_point(field_mutable:CMDCatchRedPacketResp.dstUser)
  return dstuser_;
}
::UserInfo_t* CMDCatchRedPacketResp::release_dstuser() {
  // @@protoc_insertion_point(field_release:CMDCatchRedPacketResp.dstUser)
  
  ::UserInfo_t* temp = dstuser_;
  dstuser_ = NULL;
  return temp;
}
void CMDCatchRedPacketResp::set_allocated_dstuser(::UserInfo_t* dstuser) {
  delete dstuser_;
  dstuser_ = dstuser;
  if (dstuser) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDCatchRedPacketResp.dstUser)
}

// optional .ePacketType packetType = 7;
void CMDCatchRedPacketResp::clear_packettype() {
  packettype_ = 0;
}
 ::ePacketType CMDCatchRedPacketResp::packettype() const {
  // @@protoc_insertion_point(field_get:CMDCatchRedPacketResp.packetType)
  return static_cast< ::ePacketType >(packettype_);
}
 void CMDCatchRedPacketResp::set_packettype(::ePacketType value) {
  
  packettype_ = value;
  // @@protoc_insertion_point(field_set:CMDCatchRedPacketResp.packetType)
}

// optional .eRangeType rangeType = 8;
void CMDCatchRedPacketResp::clear_rangetype() {
  rangetype_ = 0;
}
 ::eRangeType CMDCatchRedPacketResp::rangetype() const {
  // @@protoc_insertion_point(field_get:CMDCatchRedPacketResp.rangeType)
  return static_cast< ::eRangeType >(rangetype_);
}
 void CMDCatchRedPacketResp::set_rangetype(::eRangeType value) {
  
  rangetype_ = value;
  // @@protoc_insertion_point(field_set:CMDCatchRedPacketResp.rangeType)
}

// optional uint32 packetNum = 9;
void CMDCatchRedPacketResp::clear_packetnum() {
  packetnum_ = 0u;
}
 ::google::protobuf::uint32 CMDCatchRedPacketResp::packetnum() const {
  // @@protoc_insertion_point(field_get:CMDCatchRedPacketResp.packetNum)
  return packetnum_;
}
 void CMDCatchRedPacketResp::set_packetnum(::google::protobuf::uint32 value) {
  
  packetnum_ = value;
  // @@protoc_insertion_point(field_set:CMDCatchRedPacketResp.packetNum)
}

// optional uint32 packetMoney = 10;
void CMDCatchRedPacketResp::clear_packetmoney() {
  packetmoney_ = 0u;
}
 ::google::protobuf::uint32 CMDCatchRedPacketResp::packetmoney() const {
  // @@protoc_insertion_point(field_get:CMDCatchRedPacketResp.packetMoney)
  return packetmoney_;
}
 void CMDCatchRedPacketResp::set_packetmoney(::google::protobuf::uint32 value) {
  
  packetmoney_ = value;
  // @@protoc_insertion_point(field_set:CMDCatchRedPacketResp.packetMoney)
}

// optional string message = 11;
void CMDCatchRedPacketResp::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CMDCatchRedPacketResp::message() const {
  // @@protoc_insertion_point(field_get:CMDCatchRedPacketResp.message)
  return message_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDCatchRedPacketResp::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDCatchRedPacketResp.message)
}
 void CMDCatchRedPacketResp::set_message(const char* value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDCatchRedPacketResp.message)
}
 void CMDCatchRedPacketResp::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDCatchRedPacketResp.message)
}
 ::std::string* CMDCatchRedPacketResp::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:CMDCatchRedPacketResp.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMDCatchRedPacketResp::release_message() {
  // @@protoc_insertion_point(field_release:CMDCatchRedPacketResp.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDCatchRedPacketResp::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:CMDCatchRedPacketResp.message)
}

// optional bool privateType = 12;
void CMDCatchRedPacketResp::clear_privatetype() {
  privatetype_ = false;
}
 bool CMDCatchRedPacketResp::privatetype() const {
  // @@protoc_insertion_point(field_get:CMDCatchRedPacketResp.privateType)
  return privatetype_;
}
 void CMDCatchRedPacketResp::set_privatetype(bool value) {
  
  privatetype_ = value;
  // @@protoc_insertion_point(field_set:CMDCatchRedPacketResp.privateType)
}

// optional uint32 fixTime = 13;
void CMDCatchRedPacketResp::clear_fixtime() {
  fixtime_ = 0u;
}
 ::google::protobuf::uint32 CMDCatchRedPacketResp::fixtime() const {
  // @@protoc_insertion_point(field_get:CMDCatchRedPacketResp.fixTime)
  return fixtime_;
}
 void CMDCatchRedPacketResp::set_fixtime(::google::protobuf::uint32 value) {
  
  fixtime_ = value;
  // @@protoc_insertion_point(field_set:CMDCatchRedPacketResp.fixTime)
}

// optional uint32 diffTime = 14;
void CMDCatchRedPacketResp::clear_difftime() {
  difftime_ = 0u;
}
 ::google::protobuf::uint32 CMDCatchRedPacketResp::difftime() const {
  // @@protoc_insertion_point(field_get:CMDCatchRedPacketResp.diffTime)
  return difftime_;
}
 void CMDCatchRedPacketResp::set_difftime(::google::protobuf::uint32 value) {
  
  difftime_ = value;
  // @@protoc_insertion_point(field_set:CMDCatchRedPacketResp.diffTime)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDTakeRedPacketReq::kUserIDFieldNumber;
const int CMDTakeRedPacketReq::kGroupIDFieldNumber;
const int CMDTakeRedPacketReq::kPacketIDFieldNumber;
const int CMDTakeRedPacketReq::kPhotoPathFieldNumber;
const int CMDTakeRedPacketReq::kLongitudeFieldNumber;
const int CMDTakeRedPacketReq::kLatitudeFieldNumber;
const int CMDTakeRedPacketReq::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDTakeRedPacketReq::CMDTakeRedPacketReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDTakeRedPacketReq)
}

void CMDTakeRedPacketReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDTakeRedPacketReq::CMDTakeRedPacketReq(const CMDTakeRedPacketReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDTakeRedPacketReq)
}

void CMDTakeRedPacketReq::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  userid_ = 0u;
  groupid_ = 0u;
  packetid_ = 0u;
  photopath_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  longitude_ = 0;
  latitude_ = 0;
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CMDTakeRedPacketReq::~CMDTakeRedPacketReq() {
  // @@protoc_insertion_point(destructor:CMDTakeRedPacketReq)
  SharedDtor();
}

void CMDTakeRedPacketReq::SharedDtor() {
  photopath_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CMDTakeRedPacketReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDTakeRedPacketReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDTakeRedPacketReq_descriptor_;
}

const CMDTakeRedPacketReq& CMDTakeRedPacketReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ConsumeSvr_2eproto();
  return *default_instance_;
}

CMDTakeRedPacketReq* CMDTakeRedPacketReq::default_instance_ = NULL;

CMDTakeRedPacketReq* CMDTakeRedPacketReq::New(::google::protobuf::Arena* arena) const {
  CMDTakeRedPacketReq* n = new CMDTakeRedPacketReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDTakeRedPacketReq::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDTakeRedPacketReq)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDTakeRedPacketReq, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDTakeRedPacketReq*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(userid_, groupid_);
  ZR_(longitude_, latitude_);
  packetid_ = 0u;
  photopath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool CMDTakeRedPacketReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDTakeRedPacketReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 userID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_groupID;
        break;
      }

      // optional uint32 groupID = 2;
      case 2: {
        if (tag == 16) {
         parse_groupID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &groupid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_packetID;
        break;
      }

      // optional uint32 packetID = 3;
      case 3: {
        if (tag == 24) {
         parse_packetID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &packetid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_photoPath;
        break;
      }

      // optional string photoPath = 4;
      case 4: {
        if (tag == 34) {
         parse_photoPath:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_photopath()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->photopath().data(), this->photopath().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMDTakeRedPacketReq.photoPath"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(41)) goto parse_longitude;
        break;
      }

      // optional double longitude = 5;
      case 5: {
        if (tag == 41) {
         parse_longitude:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &longitude_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(49)) goto parse_latitude;
        break;
      }

      // optional double latitude = 6;
      case 6: {
        if (tag == 49) {
         parse_latitude:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &latitude_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_message;
        break;
      }

      // optional string message = 7;
      case 7: {
        if (tag == 58) {
         parse_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), this->message().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMDTakeRedPacketReq.message"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDTakeRedPacketReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDTakeRedPacketReq)
  return false;
#undef DO_
}

void CMDTakeRedPacketReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDTakeRedPacketReq)
  // optional uint32 userID = 1;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->userid(), output);
  }

  // optional uint32 groupID = 2;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->groupid(), output);
  }

  // optional uint32 packetID = 3;
  if (this->packetid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->packetid(), output);
  }

  // optional string photoPath = 4;
  if (this->photopath().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->photopath().data(), this->photopath().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDTakeRedPacketReq.photoPath");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->photopath(), output);
  }

  // optional double longitude = 5;
  if (this->longitude() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->longitude(), output);
  }

  // optional double latitude = 6;
  if (this->latitude() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->latitude(), output);
  }

  // optional string message = 7;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDTakeRedPacketReq.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->message(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDTakeRedPacketReq)
}

::google::protobuf::uint8* CMDTakeRedPacketReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDTakeRedPacketReq)
  // optional uint32 userID = 1;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->userid(), target);
  }

  // optional uint32 groupID = 2;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->groupid(), target);
  }

  // optional uint32 packetID = 3;
  if (this->packetid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->packetid(), target);
  }

  // optional string photoPath = 4;
  if (this->photopath().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->photopath().data(), this->photopath().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDTakeRedPacketReq.photoPath");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->photopath(), target);
  }

  // optional double longitude = 5;
  if (this->longitude() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->longitude(), target);
  }

  // optional double latitude = 6;
  if (this->latitude() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->latitude(), target);
  }

  // optional string message = 7;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDTakeRedPacketReq.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->message(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDTakeRedPacketReq)
  return target;
}

int CMDTakeRedPacketReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDTakeRedPacketReq)
  int total_size = 0;

  // optional uint32 userID = 1;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userid());
  }

  // optional uint32 groupID = 2;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->groupid());
  }

  // optional uint32 packetID = 3;
  if (this->packetid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->packetid());
  }

  // optional string photoPath = 4;
  if (this->photopath().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->photopath());
  }

  // optional double longitude = 5;
  if (this->longitude() != 0) {
    total_size += 1 + 8;
  }

  // optional double latitude = 6;
  if (this->latitude() != 0) {
    total_size += 1 + 8;
  }

  // optional string message = 7;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDTakeRedPacketReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDTakeRedPacketReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDTakeRedPacketReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDTakeRedPacketReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDTakeRedPacketReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDTakeRedPacketReq)
    MergeFrom(*source);
  }
}

void CMDTakeRedPacketReq::MergeFrom(const CMDTakeRedPacketReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDTakeRedPacketReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
  if (from.packetid() != 0) {
    set_packetid(from.packetid());
  }
  if (from.photopath().size() > 0) {

    photopath_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.photopath_);
  }
  if (from.longitude() != 0) {
    set_longitude(from.longitude());
  }
  if (from.latitude() != 0) {
    set_latitude(from.latitude());
  }
  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
}

void CMDTakeRedPacketReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDTakeRedPacketReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDTakeRedPacketReq::CopyFrom(const CMDTakeRedPacketReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDTakeRedPacketReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDTakeRedPacketReq::IsInitialized() const {

  return true;
}

void CMDTakeRedPacketReq::Swap(CMDTakeRedPacketReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDTakeRedPacketReq::InternalSwap(CMDTakeRedPacketReq* other) {
  std::swap(userid_, other->userid_);
  std::swap(groupid_, other->groupid_);
  std::swap(packetid_, other->packetid_);
  photopath_.Swap(&other->photopath_);
  std::swap(longitude_, other->longitude_);
  std::swap(latitude_, other->latitude_);
  message_.Swap(&other->message_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDTakeRedPacketReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDTakeRedPacketReq_descriptor_;
  metadata.reflection = CMDTakeRedPacketReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDTakeRedPacketReq

// optional uint32 userID = 1;
void CMDTakeRedPacketReq::clear_userid() {
  userid_ = 0u;
}
 ::google::protobuf::uint32 CMDTakeRedPacketReq::userid() const {
  // @@protoc_insertion_point(field_get:CMDTakeRedPacketReq.userID)
  return userid_;
}
 void CMDTakeRedPacketReq::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDTakeRedPacketReq.userID)
}

// optional uint32 groupID = 2;
void CMDTakeRedPacketReq::clear_groupid() {
  groupid_ = 0u;
}
 ::google::protobuf::uint32 CMDTakeRedPacketReq::groupid() const {
  // @@protoc_insertion_point(field_get:CMDTakeRedPacketReq.groupID)
  return groupid_;
}
 void CMDTakeRedPacketReq::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDTakeRedPacketReq.groupID)
}

// optional uint32 packetID = 3;
void CMDTakeRedPacketReq::clear_packetid() {
  packetid_ = 0u;
}
 ::google::protobuf::uint32 CMDTakeRedPacketReq::packetid() const {
  // @@protoc_insertion_point(field_get:CMDTakeRedPacketReq.packetID)
  return packetid_;
}
 void CMDTakeRedPacketReq::set_packetid(::google::protobuf::uint32 value) {
  
  packetid_ = value;
  // @@protoc_insertion_point(field_set:CMDTakeRedPacketReq.packetID)
}

// optional string photoPath = 4;
void CMDTakeRedPacketReq::clear_photopath() {
  photopath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CMDTakeRedPacketReq::photopath() const {
  // @@protoc_insertion_point(field_get:CMDTakeRedPacketReq.photoPath)
  return photopath_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDTakeRedPacketReq::set_photopath(const ::std::string& value) {
  
  photopath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDTakeRedPacketReq.photoPath)
}
 void CMDTakeRedPacketReq::set_photopath(const char* value) {
  
  photopath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDTakeRedPacketReq.photoPath)
}
 void CMDTakeRedPacketReq::set_photopath(const char* value, size_t size) {
  
  photopath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDTakeRedPacketReq.photoPath)
}
 ::std::string* CMDTakeRedPacketReq::mutable_photopath() {
  
  // @@protoc_insertion_point(field_mutable:CMDTakeRedPacketReq.photoPath)
  return photopath_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMDTakeRedPacketReq::release_photopath() {
  // @@protoc_insertion_point(field_release:CMDTakeRedPacketReq.photoPath)
  
  return photopath_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDTakeRedPacketReq::set_allocated_photopath(::std::string* photopath) {
  if (photopath != NULL) {
    
  } else {
    
  }
  photopath_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), photopath);
  // @@protoc_insertion_point(field_set_allocated:CMDTakeRedPacketReq.photoPath)
}

// optional double longitude = 5;
void CMDTakeRedPacketReq::clear_longitude() {
  longitude_ = 0;
}
 double CMDTakeRedPacketReq::longitude() const {
  // @@protoc_insertion_point(field_get:CMDTakeRedPacketReq.longitude)
  return longitude_;
}
 void CMDTakeRedPacketReq::set_longitude(double value) {
  
  longitude_ = value;
  // @@protoc_insertion_point(field_set:CMDTakeRedPacketReq.longitude)
}

// optional double latitude = 6;
void CMDTakeRedPacketReq::clear_latitude() {
  latitude_ = 0;
}
 double CMDTakeRedPacketReq::latitude() const {
  // @@protoc_insertion_point(field_get:CMDTakeRedPacketReq.latitude)
  return latitude_;
}
 void CMDTakeRedPacketReq::set_latitude(double value) {
  
  latitude_ = value;
  // @@protoc_insertion_point(field_set:CMDTakeRedPacketReq.latitude)
}

// optional string message = 7;
void CMDTakeRedPacketReq::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CMDTakeRedPacketReq::message() const {
  // @@protoc_insertion_point(field_get:CMDTakeRedPacketReq.message)
  return message_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDTakeRedPacketReq::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDTakeRedPacketReq.message)
}
 void CMDTakeRedPacketReq::set_message(const char* value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDTakeRedPacketReq.message)
}
 void CMDTakeRedPacketReq::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDTakeRedPacketReq.message)
}
 ::std::string* CMDTakeRedPacketReq::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:CMDTakeRedPacketReq.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMDTakeRedPacketReq::release_message() {
  // @@protoc_insertion_point(field_release:CMDTakeRedPacketReq.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDTakeRedPacketReq::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:CMDTakeRedPacketReq.message)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDTakeRedPacketResp::kErrInfoFieldNumber;
const int CMDTakeRedPacketResp::kUserIDFieldNumber;
const int CMDTakeRedPacketResp::kPacketIDFieldNumber;
const int CMDTakeRedPacketResp::kMoneyFieldNumber;
const int CMDTakeRedPacketResp::kPrivateTypeFieldNumber;
const int CMDTakeRedPacketResp::kPacketTypeFieldNumber;
const int CMDTakeRedPacketResp::kRangeTypeFieldNumber;
const int CMDTakeRedPacketResp::kPacketNumFieldNumber;
const int CMDTakeRedPacketResp::kPacketMoneyFieldNumber;
const int CMDTakeRedPacketResp::kMessageFieldNumber;
const int CMDTakeRedPacketResp::kFixTimeFieldNumber;
const int CMDTakeRedPacketResp::kDiffTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDTakeRedPacketResp::CMDTakeRedPacketResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDTakeRedPacketResp)
}

void CMDTakeRedPacketResp::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  errinfo_ = const_cast< ::CMDErrCode*>(&::CMDErrCode::default_instance());
}

CMDTakeRedPacketResp::CMDTakeRedPacketResp(const CMDTakeRedPacketResp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDTakeRedPacketResp)
}

void CMDTakeRedPacketResp::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  errinfo_ = NULL;
  userid_ = 0u;
  packetid_ = 0u;
  money_ = 0u;
  privatetype_ = false;
  packettype_ = 0;
  rangetype_ = 0;
  packetnum_ = 0u;
  packetmoney_ = 0u;
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fixtime_ = 0u;
  difftime_ = 0u;
}

CMDTakeRedPacketResp::~CMDTakeRedPacketResp() {
  // @@protoc_insertion_point(destructor:CMDTakeRedPacketResp)
  SharedDtor();
}

void CMDTakeRedPacketResp::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete errinfo_;
  }
}

void CMDTakeRedPacketResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDTakeRedPacketResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDTakeRedPacketResp_descriptor_;
}

const CMDTakeRedPacketResp& CMDTakeRedPacketResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ConsumeSvr_2eproto();
  return *default_instance_;
}

CMDTakeRedPacketResp* CMDTakeRedPacketResp::default_instance_ = NULL;

CMDTakeRedPacketResp* CMDTakeRedPacketResp::New(::google::protobuf::Arena* arena) const {
  CMDTakeRedPacketResp* n = new CMDTakeRedPacketResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDTakeRedPacketResp::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDTakeRedPacketResp)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDTakeRedPacketResp, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDTakeRedPacketResp*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(userid_, packetnum_);
  if (GetArenaNoVirtual() == NULL && errinfo_ != NULL) delete errinfo_;
  errinfo_ = NULL;
  ZR_(fixtime_, difftime_);
  packetmoney_ = 0u;
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool CMDTakeRedPacketResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDTakeRedPacketResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CMDErrCode errInfo = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_errinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_userID;
        break;
      }

      // optional uint32 userID = 2;
      case 2: {
        if (tag == 16) {
         parse_userID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_packetID;
        break;
      }

      // optional uint32 packetID = 3;
      case 3: {
        if (tag == 24) {
         parse_packetID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &packetid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_money;
        break;
      }

      // optional uint32 money = 4;
      case 4: {
        if (tag == 32) {
         parse_money:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &money_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_privateType;
        break;
      }

      // optional bool privateType = 5;
      case 5: {
        if (tag == 40) {
         parse_privateType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &privatetype_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_packetType;
        break;
      }

      // optional .ePacketType packetType = 8;
      case 8: {
        if (tag == 64) {
         parse_packetType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_packettype(static_cast< ::ePacketType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_rangeType;
        break;
      }

      // optional .eRangeType rangeType = 9;
      case 9: {
        if (tag == 72) {
         parse_rangeType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_rangetype(static_cast< ::eRangeType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_packetNum;
        break;
      }

      // optional uint32 packetNum = 10;
      case 10: {
        if (tag == 80) {
         parse_packetNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &packetnum_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_packetMoney;
        break;
      }

      // optional uint32 packetMoney = 11;
      case 11: {
        if (tag == 88) {
         parse_packetMoney:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &packetmoney_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_message;
        break;
      }

      // optional string message = 12;
      case 12: {
        if (tag == 98) {
         parse_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), this->message().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMDTakeRedPacketResp.message"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_fixTime;
        break;
      }

      // optional uint32 fixTime = 13;
      case 13: {
        if (tag == 104) {
         parse_fixTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &fixtime_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_diffTime;
        break;
      }

      // optional uint32 diffTime = 14;
      case 14: {
        if (tag == 112) {
         parse_diffTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &difftime_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDTakeRedPacketResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDTakeRedPacketResp)
  return false;
#undef DO_
}

void CMDTakeRedPacketResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDTakeRedPacketResp)
  // optional .CMDErrCode errInfo = 1;
  if (this->has_errinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->errinfo_, output);
  }

  // optional uint32 userID = 2;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->userid(), output);
  }

  // optional uint32 packetID = 3;
  if (this->packetid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->packetid(), output);
  }

  // optional uint32 money = 4;
  if (this->money() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->money(), output);
  }

  // optional bool privateType = 5;
  if (this->privatetype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->privatetype(), output);
  }

  // optional .ePacketType packetType = 8;
  if (this->packettype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->packettype(), output);
  }

  // optional .eRangeType rangeType = 9;
  if (this->rangetype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->rangetype(), output);
  }

  // optional uint32 packetNum = 10;
  if (this->packetnum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->packetnum(), output);
  }

  // optional uint32 packetMoney = 11;
  if (this->packetmoney() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->packetmoney(), output);
  }

  // optional string message = 12;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDTakeRedPacketResp.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->message(), output);
  }

  // optional uint32 fixTime = 13;
  if (this->fixtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->fixtime(), output);
  }

  // optional uint32 diffTime = 14;
  if (this->difftime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->difftime(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDTakeRedPacketResp)
}

::google::protobuf::uint8* CMDTakeRedPacketResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDTakeRedPacketResp)
  // optional .CMDErrCode errInfo = 1;
  if (this->has_errinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->errinfo_, false, target);
  }

  // optional uint32 userID = 2;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->userid(), target);
  }

  // optional uint32 packetID = 3;
  if (this->packetid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->packetid(), target);
  }

  // optional uint32 money = 4;
  if (this->money() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->money(), target);
  }

  // optional bool privateType = 5;
  if (this->privatetype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->privatetype(), target);
  }

  // optional .ePacketType packetType = 8;
  if (this->packettype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->packettype(), target);
  }

  // optional .eRangeType rangeType = 9;
  if (this->rangetype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      9, this->rangetype(), target);
  }

  // optional uint32 packetNum = 10;
  if (this->packetnum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->packetnum(), target);
  }

  // optional uint32 packetMoney = 11;
  if (this->packetmoney() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->packetmoney(), target);
  }

  // optional string message = 12;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDTakeRedPacketResp.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->message(), target);
  }

  // optional uint32 fixTime = 13;
  if (this->fixtime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->fixtime(), target);
  }

  // optional uint32 diffTime = 14;
  if (this->difftime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->difftime(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDTakeRedPacketResp)
  return target;
}

int CMDTakeRedPacketResp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDTakeRedPacketResp)
  int total_size = 0;

  // optional .CMDErrCode errInfo = 1;
  if (this->has_errinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->errinfo_);
  }

  // optional uint32 userID = 2;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userid());
  }

  // optional uint32 packetID = 3;
  if (this->packetid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->packetid());
  }

  // optional uint32 money = 4;
  if (this->money() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->money());
  }

  // optional bool privateType = 5;
  if (this->privatetype() != 0) {
    total_size += 1 + 1;
  }

  // optional .ePacketType packetType = 8;
  if (this->packettype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->packettype());
  }

  // optional .eRangeType rangeType = 9;
  if (this->rangetype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->rangetype());
  }

  // optional uint32 packetNum = 10;
  if (this->packetnum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->packetnum());
  }

  // optional uint32 packetMoney = 11;
  if (this->packetmoney() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->packetmoney());
  }

  // optional string message = 12;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // optional uint32 fixTime = 13;
  if (this->fixtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->fixtime());
  }

  // optional uint32 diffTime = 14;
  if (this->difftime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->difftime());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDTakeRedPacketResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDTakeRedPacketResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDTakeRedPacketResp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDTakeRedPacketResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDTakeRedPacketResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDTakeRedPacketResp)
    MergeFrom(*source);
  }
}

void CMDTakeRedPacketResp::MergeFrom(const CMDTakeRedPacketResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDTakeRedPacketResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.has_errinfo()) {
    mutable_errinfo()->::CMDErrCode::MergeFrom(from.errinfo());
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.packetid() != 0) {
    set_packetid(from.packetid());
  }
  if (from.money() != 0) {
    set_money(from.money());
  }
  if (from.privatetype() != 0) {
    set_privatetype(from.privatetype());
  }
  if (from.packettype() != 0) {
    set_packettype(from.packettype());
  }
  if (from.rangetype() != 0) {
    set_rangetype(from.rangetype());
  }
  if (from.packetnum() != 0) {
    set_packetnum(from.packetnum());
  }
  if (from.packetmoney() != 0) {
    set_packetmoney(from.packetmoney());
  }
  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.fixtime() != 0) {
    set_fixtime(from.fixtime());
  }
  if (from.difftime() != 0) {
    set_difftime(from.difftime());
  }
}

void CMDTakeRedPacketResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDTakeRedPacketResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDTakeRedPacketResp::CopyFrom(const CMDTakeRedPacketResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDTakeRedPacketResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDTakeRedPacketResp::IsInitialized() const {

  return true;
}

void CMDTakeRedPacketResp::Swap(CMDTakeRedPacketResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDTakeRedPacketResp::InternalSwap(CMDTakeRedPacketResp* other) {
  std::swap(errinfo_, other->errinfo_);
  std::swap(userid_, other->userid_);
  std::swap(packetid_, other->packetid_);
  std::swap(money_, other->money_);
  std::swap(privatetype_, other->privatetype_);
  std::swap(packettype_, other->packettype_);
  std::swap(rangetype_, other->rangetype_);
  std::swap(packetnum_, other->packetnum_);
  std::swap(packetmoney_, other->packetmoney_);
  message_.Swap(&other->message_);
  std::swap(fixtime_, other->fixtime_);
  std::swap(difftime_, other->difftime_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDTakeRedPacketResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDTakeRedPacketResp_descriptor_;
  metadata.reflection = CMDTakeRedPacketResp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDTakeRedPacketResp

// optional .CMDErrCode errInfo = 1;
bool CMDTakeRedPacketResp::has_errinfo() const {
  return !_is_default_instance_ && errinfo_ != NULL;
}
void CMDTakeRedPacketResp::clear_errinfo() {
  if (GetArenaNoVirtual() == NULL && errinfo_ != NULL) delete errinfo_;
  errinfo_ = NULL;
}
const ::CMDErrCode& CMDTakeRedPacketResp::errinfo() const {
  // @@protoc_insertion_point(field_get:CMDTakeRedPacketResp.errInfo)
  return errinfo_ != NULL ? *errinfo_ : *default_instance_->errinfo_;
}
::CMDErrCode* CMDTakeRedPacketResp::mutable_errinfo() {
  
  if (errinfo_ == NULL) {
    errinfo_ = new ::CMDErrCode;
  }
  // @@protoc_insertion_point(field_mutable:CMDTakeRedPacketResp.errInfo)
  return errinfo_;
}
::CMDErrCode* CMDTakeRedPacketResp::release_errinfo() {
  // @@protoc_insertion_point(field_release:CMDTakeRedPacketResp.errInfo)
  
  ::CMDErrCode* temp = errinfo_;
  errinfo_ = NULL;
  return temp;
}
void CMDTakeRedPacketResp::set_allocated_errinfo(::CMDErrCode* errinfo) {
  delete errinfo_;
  errinfo_ = errinfo;
  if (errinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDTakeRedPacketResp.errInfo)
}

// optional uint32 userID = 2;
void CMDTakeRedPacketResp::clear_userid() {
  userid_ = 0u;
}
 ::google::protobuf::uint32 CMDTakeRedPacketResp::userid() const {
  // @@protoc_insertion_point(field_get:CMDTakeRedPacketResp.userID)
  return userid_;
}
 void CMDTakeRedPacketResp::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDTakeRedPacketResp.userID)
}

// optional uint32 packetID = 3;
void CMDTakeRedPacketResp::clear_packetid() {
  packetid_ = 0u;
}
 ::google::protobuf::uint32 CMDTakeRedPacketResp::packetid() const {
  // @@protoc_insertion_point(field_get:CMDTakeRedPacketResp.packetID)
  return packetid_;
}
 void CMDTakeRedPacketResp::set_packetid(::google::protobuf::uint32 value) {
  
  packetid_ = value;
  // @@protoc_insertion_point(field_set:CMDTakeRedPacketResp.packetID)
}

// optional uint32 money = 4;
void CMDTakeRedPacketResp::clear_money() {
  money_ = 0u;
}
 ::google::protobuf::uint32 CMDTakeRedPacketResp::money() const {
  // @@protoc_insertion_point(field_get:CMDTakeRedPacketResp.money)
  return money_;
}
 void CMDTakeRedPacketResp::set_money(::google::protobuf::uint32 value) {
  
  money_ = value;
  // @@protoc_insertion_point(field_set:CMDTakeRedPacketResp.money)
}

// optional bool privateType = 5;
void CMDTakeRedPacketResp::clear_privatetype() {
  privatetype_ = false;
}
 bool CMDTakeRedPacketResp::privatetype() const {
  // @@protoc_insertion_point(field_get:CMDTakeRedPacketResp.privateType)
  return privatetype_;
}
 void CMDTakeRedPacketResp::set_privatetype(bool value) {
  
  privatetype_ = value;
  // @@protoc_insertion_point(field_set:CMDTakeRedPacketResp.privateType)
}

// optional .ePacketType packetType = 8;
void CMDTakeRedPacketResp::clear_packettype() {
  packettype_ = 0;
}
 ::ePacketType CMDTakeRedPacketResp::packettype() const {
  // @@protoc_insertion_point(field_get:CMDTakeRedPacketResp.packetType)
  return static_cast< ::ePacketType >(packettype_);
}
 void CMDTakeRedPacketResp::set_packettype(::ePacketType value) {
  
  packettype_ = value;
  // @@protoc_insertion_point(field_set:CMDTakeRedPacketResp.packetType)
}

// optional .eRangeType rangeType = 9;
void CMDTakeRedPacketResp::clear_rangetype() {
  rangetype_ = 0;
}
 ::eRangeType CMDTakeRedPacketResp::rangetype() const {
  // @@protoc_insertion_point(field_get:CMDTakeRedPacketResp.rangeType)
  return static_cast< ::eRangeType >(rangetype_);
}
 void CMDTakeRedPacketResp::set_rangetype(::eRangeType value) {
  
  rangetype_ = value;
  // @@protoc_insertion_point(field_set:CMDTakeRedPacketResp.rangeType)
}

// optional uint32 packetNum = 10;
void CMDTakeRedPacketResp::clear_packetnum() {
  packetnum_ = 0u;
}
 ::google::protobuf::uint32 CMDTakeRedPacketResp::packetnum() const {
  // @@protoc_insertion_point(field_get:CMDTakeRedPacketResp.packetNum)
  return packetnum_;
}
 void CMDTakeRedPacketResp::set_packetnum(::google::protobuf::uint32 value) {
  
  packetnum_ = value;
  // @@protoc_insertion_point(field_set:CMDTakeRedPacketResp.packetNum)
}

// optional uint32 packetMoney = 11;
void CMDTakeRedPacketResp::clear_packetmoney() {
  packetmoney_ = 0u;
}
 ::google::protobuf::uint32 CMDTakeRedPacketResp::packetmoney() const {
  // @@protoc_insertion_point(field_get:CMDTakeRedPacketResp.packetMoney)
  return packetmoney_;
}
 void CMDTakeRedPacketResp::set_packetmoney(::google::protobuf::uint32 value) {
  
  packetmoney_ = value;
  // @@protoc_insertion_point(field_set:CMDTakeRedPacketResp.packetMoney)
}

// optional string message = 12;
void CMDTakeRedPacketResp::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CMDTakeRedPacketResp::message() const {
  // @@protoc_insertion_point(field_get:CMDTakeRedPacketResp.message)
  return message_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDTakeRedPacketResp::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDTakeRedPacketResp.message)
}
 void CMDTakeRedPacketResp::set_message(const char* value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDTakeRedPacketResp.message)
}
 void CMDTakeRedPacketResp::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDTakeRedPacketResp.message)
}
 ::std::string* CMDTakeRedPacketResp::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:CMDTakeRedPacketResp.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMDTakeRedPacketResp::release_message() {
  // @@protoc_insertion_point(field_release:CMDTakeRedPacketResp.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDTakeRedPacketResp::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:CMDTakeRedPacketResp.message)
}

// optional uint32 fixTime = 13;
void CMDTakeRedPacketResp::clear_fixtime() {
  fixtime_ = 0u;
}
 ::google::protobuf::uint32 CMDTakeRedPacketResp::fixtime() const {
  // @@protoc_insertion_point(field_get:CMDTakeRedPacketResp.fixTime)
  return fixtime_;
}
 void CMDTakeRedPacketResp::set_fixtime(::google::protobuf::uint32 value) {
  
  fixtime_ = value;
  // @@protoc_insertion_point(field_set:CMDTakeRedPacketResp.fixTime)
}

// optional uint32 diffTime = 14;
void CMDTakeRedPacketResp::clear_difftime() {
  difftime_ = 0u;
}
 ::google::protobuf::uint32 CMDTakeRedPacketResp::difftime() const {
  // @@protoc_insertion_point(field_get:CMDTakeRedPacketResp.diffTime)
  return difftime_;
}
 void CMDTakeRedPacketResp::set_difftime(::google::protobuf::uint32 value) {
  
  difftime_ = value;
  // @@protoc_insertion_point(field_set:CMDTakeRedPacketResp.diffTime)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDQryRedPacketInfoReq::kUserIDFieldNumber;
const int CMDQryRedPacketInfoReq::kGroupIDFieldNumber;
const int CMDQryRedPacketInfoReq::kPacketIDFieldNumber;
const int CMDQryRedPacketInfoReq::kOffsetFieldNumber;
const int CMDQryRedPacketInfoReq::kCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDQryRedPacketInfoReq::CMDQryRedPacketInfoReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDQryRedPacketInfoReq)
}

void CMDQryRedPacketInfoReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDQryRedPacketInfoReq::CMDQryRedPacketInfoReq(const CMDQryRedPacketInfoReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDQryRedPacketInfoReq)
}

void CMDQryRedPacketInfoReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  userid_ = 0u;
  groupid_ = 0u;
  packetid_ = 0u;
  offset_ = 0u;
  count_ = 0u;
}

CMDQryRedPacketInfoReq::~CMDQryRedPacketInfoReq() {
  // @@protoc_insertion_point(destructor:CMDQryRedPacketInfoReq)
  SharedDtor();
}

void CMDQryRedPacketInfoReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMDQryRedPacketInfoReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDQryRedPacketInfoReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDQryRedPacketInfoReq_descriptor_;
}

const CMDQryRedPacketInfoReq& CMDQryRedPacketInfoReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ConsumeSvr_2eproto();
  return *default_instance_;
}

CMDQryRedPacketInfoReq* CMDQryRedPacketInfoReq::default_instance_ = NULL;

CMDQryRedPacketInfoReq* CMDQryRedPacketInfoReq::New(::google::protobuf::Arena* arena) const {
  CMDQryRedPacketInfoReq* n = new CMDQryRedPacketInfoReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDQryRedPacketInfoReq::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDQryRedPacketInfoReq)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDQryRedPacketInfoReq, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDQryRedPacketInfoReq*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(userid_, count_);

#undef ZR_HELPER_
#undef ZR_

}

bool CMDQryRedPacketInfoReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDQryRedPacketInfoReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 userID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_groupID;
        break;
      }

      // optional uint32 groupID = 2;
      case 2: {
        if (tag == 16) {
         parse_groupID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &groupid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_packetID;
        break;
      }

      // optional uint32 packetID = 3;
      case 3: {
        if (tag == 24) {
         parse_packetID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &packetid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_offset;
        break;
      }

      // optional uint32 offset = 4;
      case 4: {
        if (tag == 32) {
         parse_offset:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &offset_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_count;
        break;
      }

      // optional uint32 count = 5;
      case 5: {
        if (tag == 40) {
         parse_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDQryRedPacketInfoReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDQryRedPacketInfoReq)
  return false;
#undef DO_
}

void CMDQryRedPacketInfoReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDQryRedPacketInfoReq)
  // optional uint32 userID = 1;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->userid(), output);
  }

  // optional uint32 groupID = 2;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->groupid(), output);
  }

  // optional uint32 packetID = 3;
  if (this->packetid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->packetid(), output);
  }

  // optional uint32 offset = 4;
  if (this->offset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->offset(), output);
  }

  // optional uint32 count = 5;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->count(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDQryRedPacketInfoReq)
}

::google::protobuf::uint8* CMDQryRedPacketInfoReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDQryRedPacketInfoReq)
  // optional uint32 userID = 1;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->userid(), target);
  }

  // optional uint32 groupID = 2;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->groupid(), target);
  }

  // optional uint32 packetID = 3;
  if (this->packetid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->packetid(), target);
  }

  // optional uint32 offset = 4;
  if (this->offset() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->offset(), target);
  }

  // optional uint32 count = 5;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->count(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDQryRedPacketInfoReq)
  return target;
}

int CMDQryRedPacketInfoReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDQryRedPacketInfoReq)
  int total_size = 0;

  // optional uint32 userID = 1;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userid());
  }

  // optional uint32 groupID = 2;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->groupid());
  }

  // optional uint32 packetID = 3;
  if (this->packetid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->packetid());
  }

  // optional uint32 offset = 4;
  if (this->offset() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->offset());
  }

  // optional uint32 count = 5;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDQryRedPacketInfoReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDQryRedPacketInfoReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDQryRedPacketInfoReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDQryRedPacketInfoReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDQryRedPacketInfoReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDQryRedPacketInfoReq)
    MergeFrom(*source);
  }
}

void CMDQryRedPacketInfoReq::MergeFrom(const CMDQryRedPacketInfoReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDQryRedPacketInfoReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
  if (from.packetid() != 0) {
    set_packetid(from.packetid());
  }
  if (from.offset() != 0) {
    set_offset(from.offset());
  }
  if (from.count() != 0) {
    set_count(from.count());
  }
}

void CMDQryRedPacketInfoReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDQryRedPacketInfoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDQryRedPacketInfoReq::CopyFrom(const CMDQryRedPacketInfoReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDQryRedPacketInfoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDQryRedPacketInfoReq::IsInitialized() const {

  return true;
}

void CMDQryRedPacketInfoReq::Swap(CMDQryRedPacketInfoReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDQryRedPacketInfoReq::InternalSwap(CMDQryRedPacketInfoReq* other) {
  std::swap(userid_, other->userid_);
  std::swap(groupid_, other->groupid_);
  std::swap(packetid_, other->packetid_);
  std::swap(offset_, other->offset_);
  std::swap(count_, other->count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDQryRedPacketInfoReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDQryRedPacketInfoReq_descriptor_;
  metadata.reflection = CMDQryRedPacketInfoReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDQryRedPacketInfoReq

// optional uint32 userID = 1;
void CMDQryRedPacketInfoReq::clear_userid() {
  userid_ = 0u;
}
 ::google::protobuf::uint32 CMDQryRedPacketInfoReq::userid() const {
  // @@protoc_insertion_point(field_get:CMDQryRedPacketInfoReq.userID)
  return userid_;
}
 void CMDQryRedPacketInfoReq::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDQryRedPacketInfoReq.userID)
}

// optional uint32 groupID = 2;
void CMDQryRedPacketInfoReq::clear_groupid() {
  groupid_ = 0u;
}
 ::google::protobuf::uint32 CMDQryRedPacketInfoReq::groupid() const {
  // @@protoc_insertion_point(field_get:CMDQryRedPacketInfoReq.groupID)
  return groupid_;
}
 void CMDQryRedPacketInfoReq::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDQryRedPacketInfoReq.groupID)
}

// optional uint32 packetID = 3;
void CMDQryRedPacketInfoReq::clear_packetid() {
  packetid_ = 0u;
}
 ::google::protobuf::uint32 CMDQryRedPacketInfoReq::packetid() const {
  // @@protoc_insertion_point(field_get:CMDQryRedPacketInfoReq.packetID)
  return packetid_;
}
 void CMDQryRedPacketInfoReq::set_packetid(::google::protobuf::uint32 value) {
  
  packetid_ = value;
  // @@protoc_insertion_point(field_set:CMDQryRedPacketInfoReq.packetID)
}

// optional uint32 offset = 4;
void CMDQryRedPacketInfoReq::clear_offset() {
  offset_ = 0u;
}
 ::google::protobuf::uint32 CMDQryRedPacketInfoReq::offset() const {
  // @@protoc_insertion_point(field_get:CMDQryRedPacketInfoReq.offset)
  return offset_;
}
 void CMDQryRedPacketInfoReq::set_offset(::google::protobuf::uint32 value) {
  
  offset_ = value;
  // @@protoc_insertion_point(field_set:CMDQryRedPacketInfoReq.offset)
}

// optional uint32 count = 5;
void CMDQryRedPacketInfoReq::clear_count() {
  count_ = 0u;
}
 ::google::protobuf::uint32 CMDQryRedPacketInfoReq::count() const {
  // @@protoc_insertion_point(field_get:CMDQryRedPacketInfoReq.count)
  return count_;
}
 void CMDQryRedPacketInfoReq::set_count(::google::protobuf::uint32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:CMDQryRedPacketInfoReq.count)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDRedPacketTakenRes::kUserIDFieldNumber;
const int CMDRedPacketTakenRes::kAliasFieldNumber;
const int CMDRedPacketTakenRes::kHeadFieldNumber;
const int CMDRedPacketTakenRes::kMoneyFieldNumber;
const int CMDRedPacketTakenRes::kTakeTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDRedPacketTakenRes::CMDRedPacketTakenRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDRedPacketTakenRes)
}

void CMDRedPacketTakenRes::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDRedPacketTakenRes::CMDRedPacketTakenRes(const CMDRedPacketTakenRes& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDRedPacketTakenRes)
}

void CMDRedPacketTakenRes::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  userid_ = 0u;
  alias_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  head_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  money_ = 0u;
  taketime_ = 0u;
}

CMDRedPacketTakenRes::~CMDRedPacketTakenRes() {
  // @@protoc_insertion_point(destructor:CMDRedPacketTakenRes)
  SharedDtor();
}

void CMDRedPacketTakenRes::SharedDtor() {
  alias_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  head_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CMDRedPacketTakenRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDRedPacketTakenRes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDRedPacketTakenRes_descriptor_;
}

const CMDRedPacketTakenRes& CMDRedPacketTakenRes::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ConsumeSvr_2eproto();
  return *default_instance_;
}

CMDRedPacketTakenRes* CMDRedPacketTakenRes::default_instance_ = NULL;

CMDRedPacketTakenRes* CMDRedPacketTakenRes::New(::google::protobuf::Arena* arena) const {
  CMDRedPacketTakenRes* n = new CMDRedPacketTakenRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDRedPacketTakenRes::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDRedPacketTakenRes)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDRedPacketTakenRes, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDRedPacketTakenRes*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(userid_, money_);
  alias_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  head_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  taketime_ = 0u;

#undef ZR_HELPER_
#undef ZR_

}

bool CMDRedPacketTakenRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDRedPacketTakenRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 userID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_alias;
        break;
      }

      // optional string alias = 2;
      case 2: {
        if (tag == 18) {
         parse_alias:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_alias()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->alias().data(), this->alias().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMDRedPacketTakenRes.alias"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_head;
        break;
      }

      // optional string head = 3;
      case 3: {
        if (tag == 26) {
         parse_head:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_head()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->head().data(), this->head().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMDRedPacketTakenRes.head"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_money;
        break;
      }

      // optional uint32 money = 4;
      case 4: {
        if (tag == 32) {
         parse_money:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &money_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_takeTime;
        break;
      }

      // optional uint32 takeTime = 5;
      case 5: {
        if (tag == 40) {
         parse_takeTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &taketime_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDRedPacketTakenRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDRedPacketTakenRes)
  return false;
#undef DO_
}

void CMDRedPacketTakenRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDRedPacketTakenRes)
  // optional uint32 userID = 1;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->userid(), output);
  }

  // optional string alias = 2;
  if (this->alias().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->alias().data(), this->alias().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDRedPacketTakenRes.alias");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->alias(), output);
  }

  // optional string head = 3;
  if (this->head().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->head().data(), this->head().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDRedPacketTakenRes.head");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->head(), output);
  }

  // optional uint32 money = 4;
  if (this->money() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->money(), output);
  }

  // optional uint32 takeTime = 5;
  if (this->taketime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->taketime(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDRedPacketTakenRes)
}

::google::protobuf::uint8* CMDRedPacketTakenRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDRedPacketTakenRes)
  // optional uint32 userID = 1;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->userid(), target);
  }

  // optional string alias = 2;
  if (this->alias().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->alias().data(), this->alias().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDRedPacketTakenRes.alias");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->alias(), target);
  }

  // optional string head = 3;
  if (this->head().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->head().data(), this->head().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDRedPacketTakenRes.head");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->head(), target);
  }

  // optional uint32 money = 4;
  if (this->money() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->money(), target);
  }

  // optional uint32 takeTime = 5;
  if (this->taketime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->taketime(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDRedPacketTakenRes)
  return target;
}

int CMDRedPacketTakenRes::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDRedPacketTakenRes)
  int total_size = 0;

  // optional uint32 userID = 1;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userid());
  }

  // optional string alias = 2;
  if (this->alias().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->alias());
  }

  // optional string head = 3;
  if (this->head().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->head());
  }

  // optional uint32 money = 4;
  if (this->money() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->money());
  }

  // optional uint32 takeTime = 5;
  if (this->taketime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->taketime());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDRedPacketTakenRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDRedPacketTakenRes)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDRedPacketTakenRes* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDRedPacketTakenRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDRedPacketTakenRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDRedPacketTakenRes)
    MergeFrom(*source);
  }
}

void CMDRedPacketTakenRes::MergeFrom(const CMDRedPacketTakenRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDRedPacketTakenRes)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.alias().size() > 0) {

    alias_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.alias_);
  }
  if (from.head().size() > 0) {

    head_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.head_);
  }
  if (from.money() != 0) {
    set_money(from.money());
  }
  if (from.taketime() != 0) {
    set_taketime(from.taketime());
  }
}

void CMDRedPacketTakenRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDRedPacketTakenRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDRedPacketTakenRes::CopyFrom(const CMDRedPacketTakenRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDRedPacketTakenRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDRedPacketTakenRes::IsInitialized() const {

  return true;
}

void CMDRedPacketTakenRes::Swap(CMDRedPacketTakenRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDRedPacketTakenRes::InternalSwap(CMDRedPacketTakenRes* other) {
  std::swap(userid_, other->userid_);
  alias_.Swap(&other->alias_);
  head_.Swap(&other->head_);
  std::swap(money_, other->money_);
  std::swap(taketime_, other->taketime_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDRedPacketTakenRes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDRedPacketTakenRes_descriptor_;
  metadata.reflection = CMDRedPacketTakenRes_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDRedPacketTakenRes

// optional uint32 userID = 1;
void CMDRedPacketTakenRes::clear_userid() {
  userid_ = 0u;
}
 ::google::protobuf::uint32 CMDRedPacketTakenRes::userid() const {
  // @@protoc_insertion_point(field_get:CMDRedPacketTakenRes.userID)
  return userid_;
}
 void CMDRedPacketTakenRes::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDRedPacketTakenRes.userID)
}

// optional string alias = 2;
void CMDRedPacketTakenRes::clear_alias() {
  alias_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CMDRedPacketTakenRes::alias() const {
  // @@protoc_insertion_point(field_get:CMDRedPacketTakenRes.alias)
  return alias_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDRedPacketTakenRes::set_alias(const ::std::string& value) {
  
  alias_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDRedPacketTakenRes.alias)
}
 void CMDRedPacketTakenRes::set_alias(const char* value) {
  
  alias_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDRedPacketTakenRes.alias)
}
 void CMDRedPacketTakenRes::set_alias(const char* value, size_t size) {
  
  alias_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDRedPacketTakenRes.alias)
}
 ::std::string* CMDRedPacketTakenRes::mutable_alias() {
  
  // @@protoc_insertion_point(field_mutable:CMDRedPacketTakenRes.alias)
  return alias_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMDRedPacketTakenRes::release_alias() {
  // @@protoc_insertion_point(field_release:CMDRedPacketTakenRes.alias)
  
  return alias_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDRedPacketTakenRes::set_allocated_alias(::std::string* alias) {
  if (alias != NULL) {
    
  } else {
    
  }
  alias_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alias);
  // @@protoc_insertion_point(field_set_allocated:CMDRedPacketTakenRes.alias)
}

// optional string head = 3;
void CMDRedPacketTakenRes::clear_head() {
  head_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CMDRedPacketTakenRes::head() const {
  // @@protoc_insertion_point(field_get:CMDRedPacketTakenRes.head)
  return head_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDRedPacketTakenRes::set_head(const ::std::string& value) {
  
  head_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDRedPacketTakenRes.head)
}
 void CMDRedPacketTakenRes::set_head(const char* value) {
  
  head_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDRedPacketTakenRes.head)
}
 void CMDRedPacketTakenRes::set_head(const char* value, size_t size) {
  
  head_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDRedPacketTakenRes.head)
}
 ::std::string* CMDRedPacketTakenRes::mutable_head() {
  
  // @@protoc_insertion_point(field_mutable:CMDRedPacketTakenRes.head)
  return head_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMDRedPacketTakenRes::release_head() {
  // @@protoc_insertion_point(field_release:CMDRedPacketTakenRes.head)
  
  return head_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDRedPacketTakenRes::set_allocated_head(::std::string* head) {
  if (head != NULL) {
    
  } else {
    
  }
  head_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), head);
  // @@protoc_insertion_point(field_set_allocated:CMDRedPacketTakenRes.head)
}

// optional uint32 money = 4;
void CMDRedPacketTakenRes::clear_money() {
  money_ = 0u;
}
 ::google::protobuf::uint32 CMDRedPacketTakenRes::money() const {
  // @@protoc_insertion_point(field_get:CMDRedPacketTakenRes.money)
  return money_;
}
 void CMDRedPacketTakenRes::set_money(::google::protobuf::uint32 value) {
  
  money_ = value;
  // @@protoc_insertion_point(field_set:CMDRedPacketTakenRes.money)
}

// optional uint32 takeTime = 5;
void CMDRedPacketTakenRes::clear_taketime() {
  taketime_ = 0u;
}
 ::google::protobuf::uint32 CMDRedPacketTakenRes::taketime() const {
  // @@protoc_insertion_point(field_get:CMDRedPacketTakenRes.takeTime)
  return taketime_;
}
 void CMDRedPacketTakenRes::set_taketime(::google::protobuf::uint32 value) {
  
  taketime_ = value;
  // @@protoc_insertion_point(field_set:CMDRedPacketTakenRes.takeTime)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDRedPacketInfo::kPacketIDFieldNumber;
const int CMDRedPacketInfo::kPacketTypeFieldNumber;
const int CMDRedPacketInfo::kRangeTypeFieldNumber;
const int CMDRedPacketInfo::kSrcUserFieldNumber;
const int CMDRedPacketInfo::kDstUserFieldNumber;
const int CMDRedPacketInfo::kPacketNumFieldNumber;
const int CMDRedPacketInfo::kTakenNumFieldNumber;
const int CMDRedPacketInfo::kPacketMoneyFieldNumber;
const int CMDRedPacketInfo::kTakenMoneyFieldNumber;
const int CMDRedPacketInfo::kMyTakeMoneyFieldNumber;
const int CMDRedPacketInfo::kMessageFieldNumber;
const int CMDRedPacketInfo::kCreateTimeFieldNumber;
const int CMDRedPacketInfo::kOffsetFieldNumber;
const int CMDRedPacketInfo::kResFieldNumber;
const int CMDRedPacketInfo::kFinishCostTimeFieldNumber;
const int CMDRedPacketInfo::kTopUserIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDRedPacketInfo::CMDRedPacketInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDRedPacketInfo)
}

void CMDRedPacketInfo::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  srcuser_ = const_cast< ::UserInfo_t*>(&::UserInfo_t::default_instance());
  dstuser_ = const_cast< ::UserInfo_t*>(&::UserInfo_t::default_instance());
}

CMDRedPacketInfo::CMDRedPacketInfo(const CMDRedPacketInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDRedPacketInfo)
}

void CMDRedPacketInfo::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  packetid_ = 0u;
  packettype_ = 0;
  rangetype_ = 0;
  srcuser_ = NULL;
  dstuser_ = NULL;
  packetnum_ = 0u;
  takennum_ = 0u;
  packetmoney_ = 0u;
  takenmoney_ = 0u;
  mytakemoney_ = 0u;
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  createtime_ = 0u;
  offset_ = 0u;
  finishcosttime_ = 0u;
  topuserid_ = 0u;
}

CMDRedPacketInfo::~CMDRedPacketInfo() {
  // @@protoc_insertion_point(destructor:CMDRedPacketInfo)
  SharedDtor();
}

void CMDRedPacketInfo::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete srcuser_;
    delete dstuser_;
  }
}

void CMDRedPacketInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDRedPacketInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDRedPacketInfo_descriptor_;
}

const CMDRedPacketInfo& CMDRedPacketInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ConsumeSvr_2eproto();
  return *default_instance_;
}

CMDRedPacketInfo* CMDRedPacketInfo::default_instance_ = NULL;

CMDRedPacketInfo* CMDRedPacketInfo::New(::google::protobuf::Arena* arena) const {
  CMDRedPacketInfo* n = new CMDRedPacketInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDRedPacketInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDRedPacketInfo)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDRedPacketInfo, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDRedPacketInfo*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(packetid_, packettype_);
  ZR_(rangetype_, packetnum_);
  ZR_(takennum_, packetmoney_);
  if (GetArenaNoVirtual() == NULL && srcuser_ != NULL) delete srcuser_;
  srcuser_ = NULL;
  if (GetArenaNoVirtual() == NULL && dstuser_ != NULL) delete dstuser_;
  dstuser_ = NULL;
  ZR_(takenmoney_, mytakemoney_);
  ZR_(createtime_, offset_);
  ZR_(finishcosttime_, topuserid_);
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

  res_.Clear();
}

bool CMDRedPacketInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDRedPacketInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 packetID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &packetid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_packetType;
        break;
      }

      // optional .ePacketType packetType = 2;
      case 2: {
        if (tag == 16) {
         parse_packetType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_packettype(static_cast< ::ePacketType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_rangeType;
        break;
      }

      // optional .eRangeType rangeType = 3;
      case 3: {
        if (tag == 24) {
         parse_rangeType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_rangetype(static_cast< ::eRangeType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_srcUser;
        break;
      }

      // optional .UserInfo_t srcUser = 4;
      case 4: {
        if (tag == 34) {
         parse_srcUser:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_srcuser()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_dstUser;
        break;
      }

      // optional .UserInfo_t dstUser = 5;
      case 5: {
        if (tag == 42) {
         parse_dstUser:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_dstuser()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_packetNum;
        break;
      }

      // optional uint32 packetNum = 6;
      case 6: {
        if (tag == 48) {
         parse_packetNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &packetnum_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_takenNum;
        break;
      }

      // optional uint32 takenNum = 7;
      case 7: {
        if (tag == 56) {
         parse_takenNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &takennum_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_packetMoney;
        break;
      }

      // optional uint32 packetMoney = 8;
      case 8: {
        if (tag == 64) {
         parse_packetMoney:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &packetmoney_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_takenMoney;
        break;
      }

      // optional uint32 takenMoney = 9;
      case 9: {
        if (tag == 72) {
         parse_takenMoney:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &takenmoney_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_myTakeMoney;
        break;
      }

      // optional uint32 myTakeMoney = 10;
      case 10: {
        if (tag == 80) {
         parse_myTakeMoney:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mytakemoney_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_message;
        break;
      }

      // optional string message = 11;
      case 11: {
        if (tag == 90) {
         parse_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), this->message().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMDRedPacketInfo.message"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_createTime;
        break;
      }

      // optional uint32 createTime = 12;
      case 12: {
        if (tag == 96) {
         parse_createTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &createtime_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_offset;
        break;
      }

      // optional uint32 offset = 13;
      case 13: {
        if (tag == 104) {
         parse_offset:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &offset_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_res;
        break;
      }

      // repeated .CMDRedPacketTakenRes res = 14;
      case 14: {
        if (tag == 114) {
         parse_res:
          DO_(input->IncrementRecursionDepth());
         parse_loop_res:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_res()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_loop_res;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(120)) goto parse_finishCostTime;
        break;
      }

      // optional uint32 finishCostTime = 15;
      case 15: {
        if (tag == 120) {
         parse_finishCostTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &finishcosttime_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(128)) goto parse_topUserID;
        break;
      }

      // optional uint32 topUserID = 16;
      case 16: {
        if (tag == 128) {
         parse_topUserID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &topuserid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDRedPacketInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDRedPacketInfo)
  return false;
#undef DO_
}

void CMDRedPacketInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDRedPacketInfo)
  // optional uint32 packetID = 1;
  if (this->packetid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->packetid(), output);
  }

  // optional .ePacketType packetType = 2;
  if (this->packettype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->packettype(), output);
  }

  // optional .eRangeType rangeType = 3;
  if (this->rangetype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->rangetype(), output);
  }

  // optional .UserInfo_t srcUser = 4;
  if (this->has_srcuser()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->srcuser_, output);
  }

  // optional .UserInfo_t dstUser = 5;
  if (this->has_dstuser()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->dstuser_, output);
  }

  // optional uint32 packetNum = 6;
  if (this->packetnum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->packetnum(), output);
  }

  // optional uint32 takenNum = 7;
  if (this->takennum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->takennum(), output);
  }

  // optional uint32 packetMoney = 8;
  if (this->packetmoney() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->packetmoney(), output);
  }

  // optional uint32 takenMoney = 9;
  if (this->takenmoney() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->takenmoney(), output);
  }

  // optional uint32 myTakeMoney = 10;
  if (this->mytakemoney() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->mytakemoney(), output);
  }

  // optional string message = 11;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDRedPacketInfo.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->message(), output);
  }

  // optional uint32 createTime = 12;
  if (this->createtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->createtime(), output);
  }

  // optional uint32 offset = 13;
  if (this->offset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->offset(), output);
  }

  // repeated .CMDRedPacketTakenRes res = 14;
  for (unsigned int i = 0, n = this->res_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->res(i), output);
  }

  // optional uint32 finishCostTime = 15;
  if (this->finishcosttime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->finishcosttime(), output);
  }

  // optional uint32 topUserID = 16;
  if (this->topuserid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(16, this->topuserid(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDRedPacketInfo)
}

::google::protobuf::uint8* CMDRedPacketInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDRedPacketInfo)
  // optional uint32 packetID = 1;
  if (this->packetid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->packetid(), target);
  }

  // optional .ePacketType packetType = 2;
  if (this->packettype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->packettype(), target);
  }

  // optional .eRangeType rangeType = 3;
  if (this->rangetype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->rangetype(), target);
  }

  // optional .UserInfo_t srcUser = 4;
  if (this->has_srcuser()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->srcuser_, false, target);
  }

  // optional .UserInfo_t dstUser = 5;
  if (this->has_dstuser()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->dstuser_, false, target);
  }

  // optional uint32 packetNum = 6;
  if (this->packetnum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->packetnum(), target);
  }

  // optional uint32 takenNum = 7;
  if (this->takennum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->takennum(), target);
  }

  // optional uint32 packetMoney = 8;
  if (this->packetmoney() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->packetmoney(), target);
  }

  // optional uint32 takenMoney = 9;
  if (this->takenmoney() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->takenmoney(), target);
  }

  // optional uint32 myTakeMoney = 10;
  if (this->mytakemoney() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->mytakemoney(), target);
  }

  // optional string message = 11;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDRedPacketInfo.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->message(), target);
  }

  // optional uint32 createTime = 12;
  if (this->createtime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->createtime(), target);
  }

  // optional uint32 offset = 13;
  if (this->offset() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->offset(), target);
  }

  // repeated .CMDRedPacketTakenRes res = 14;
  for (unsigned int i = 0, n = this->res_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        14, this->res(i), false, target);
  }

  // optional uint32 finishCostTime = 15;
  if (this->finishcosttime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->finishcosttime(), target);
  }

  // optional uint32 topUserID = 16;
  if (this->topuserid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(16, this->topuserid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDRedPacketInfo)
  return target;
}

int CMDRedPacketInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDRedPacketInfo)
  int total_size = 0;

  // optional uint32 packetID = 1;
  if (this->packetid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->packetid());
  }

  // optional .ePacketType packetType = 2;
  if (this->packettype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->packettype());
  }

  // optional .eRangeType rangeType = 3;
  if (this->rangetype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->rangetype());
  }

  // optional .UserInfo_t srcUser = 4;
  if (this->has_srcuser()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->srcuser_);
  }

  // optional .UserInfo_t dstUser = 5;
  if (this->has_dstuser()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->dstuser_);
  }

  // optional uint32 packetNum = 6;
  if (this->packetnum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->packetnum());
  }

  // optional uint32 takenNum = 7;
  if (this->takennum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->takennum());
  }

  // optional uint32 packetMoney = 8;
  if (this->packetmoney() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->packetmoney());
  }

  // optional uint32 takenMoney = 9;
  if (this->takenmoney() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->takenmoney());
  }

  // optional uint32 myTakeMoney = 10;
  if (this->mytakemoney() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mytakemoney());
  }

  // optional string message = 11;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // optional uint32 createTime = 12;
  if (this->createtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->createtime());
  }

  // optional uint32 offset = 13;
  if (this->offset() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->offset());
  }

  // optional uint32 finishCostTime = 15;
  if (this->finishcosttime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->finishcosttime());
  }

  // optional uint32 topUserID = 16;
  if (this->topuserid() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->topuserid());
  }

  // repeated .CMDRedPacketTakenRes res = 14;
  total_size += 1 * this->res_size();
  for (int i = 0; i < this->res_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->res(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDRedPacketInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDRedPacketInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDRedPacketInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDRedPacketInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDRedPacketInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDRedPacketInfo)
    MergeFrom(*source);
  }
}

void CMDRedPacketInfo::MergeFrom(const CMDRedPacketInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDRedPacketInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  res_.MergeFrom(from.res_);
  if (from.packetid() != 0) {
    set_packetid(from.packetid());
  }
  if (from.packettype() != 0) {
    set_packettype(from.packettype());
  }
  if (from.rangetype() != 0) {
    set_rangetype(from.rangetype());
  }
  if (from.has_srcuser()) {
    mutable_srcuser()->::UserInfo_t::MergeFrom(from.srcuser());
  }
  if (from.has_dstuser()) {
    mutable_dstuser()->::UserInfo_t::MergeFrom(from.dstuser());
  }
  if (from.packetnum() != 0) {
    set_packetnum(from.packetnum());
  }
  if (from.takennum() != 0) {
    set_takennum(from.takennum());
  }
  if (from.packetmoney() != 0) {
    set_packetmoney(from.packetmoney());
  }
  if (from.takenmoney() != 0) {
    set_takenmoney(from.takenmoney());
  }
  if (from.mytakemoney() != 0) {
    set_mytakemoney(from.mytakemoney());
  }
  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.createtime() != 0) {
    set_createtime(from.createtime());
  }
  if (from.offset() != 0) {
    set_offset(from.offset());
  }
  if (from.finishcosttime() != 0) {
    set_finishcosttime(from.finishcosttime());
  }
  if (from.topuserid() != 0) {
    set_topuserid(from.topuserid());
  }
}

void CMDRedPacketInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDRedPacketInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDRedPacketInfo::CopyFrom(const CMDRedPacketInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDRedPacketInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDRedPacketInfo::IsInitialized() const {

  return true;
}

void CMDRedPacketInfo::Swap(CMDRedPacketInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDRedPacketInfo::InternalSwap(CMDRedPacketInfo* other) {
  std::swap(packetid_, other->packetid_);
  std::swap(packettype_, other->packettype_);
  std::swap(rangetype_, other->rangetype_);
  std::swap(srcuser_, other->srcuser_);
  std::swap(dstuser_, other->dstuser_);
  std::swap(packetnum_, other->packetnum_);
  std::swap(takennum_, other->takennum_);
  std::swap(packetmoney_, other->packetmoney_);
  std::swap(takenmoney_, other->takenmoney_);
  std::swap(mytakemoney_, other->mytakemoney_);
  message_.Swap(&other->message_);
  std::swap(createtime_, other->createtime_);
  std::swap(offset_, other->offset_);
  res_.UnsafeArenaSwap(&other->res_);
  std::swap(finishcosttime_, other->finishcosttime_);
  std::swap(topuserid_, other->topuserid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDRedPacketInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDRedPacketInfo_descriptor_;
  metadata.reflection = CMDRedPacketInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDRedPacketInfo

// optional uint32 packetID = 1;
void CMDRedPacketInfo::clear_packetid() {
  packetid_ = 0u;
}
 ::google::protobuf::uint32 CMDRedPacketInfo::packetid() const {
  // @@protoc_insertion_point(field_get:CMDRedPacketInfo.packetID)
  return packetid_;
}
 void CMDRedPacketInfo::set_packetid(::google::protobuf::uint32 value) {
  
  packetid_ = value;
  // @@protoc_insertion_point(field_set:CMDRedPacketInfo.packetID)
}

// optional .ePacketType packetType = 2;
void CMDRedPacketInfo::clear_packettype() {
  packettype_ = 0;
}
 ::ePacketType CMDRedPacketInfo::packettype() const {
  // @@protoc_insertion_point(field_get:CMDRedPacketInfo.packetType)
  return static_cast< ::ePacketType >(packettype_);
}
 void CMDRedPacketInfo::set_packettype(::ePacketType value) {
  
  packettype_ = value;
  // @@protoc_insertion_point(field_set:CMDRedPacketInfo.packetType)
}

// optional .eRangeType rangeType = 3;
void CMDRedPacketInfo::clear_rangetype() {
  rangetype_ = 0;
}
 ::eRangeType CMDRedPacketInfo::rangetype() const {
  // @@protoc_insertion_point(field_get:CMDRedPacketInfo.rangeType)
  return static_cast< ::eRangeType >(rangetype_);
}
 void CMDRedPacketInfo::set_rangetype(::eRangeType value) {
  
  rangetype_ = value;
  // @@protoc_insertion_point(field_set:CMDRedPacketInfo.rangeType)
}

// optional .UserInfo_t srcUser = 4;
bool CMDRedPacketInfo::has_srcuser() const {
  return !_is_default_instance_ && srcuser_ != NULL;
}
void CMDRedPacketInfo::clear_srcuser() {
  if (GetArenaNoVirtual() == NULL && srcuser_ != NULL) delete srcuser_;
  srcuser_ = NULL;
}
const ::UserInfo_t& CMDRedPacketInfo::srcuser() const {
  // @@protoc_insertion_point(field_get:CMDRedPacketInfo.srcUser)
  return srcuser_ != NULL ? *srcuser_ : *default_instance_->srcuser_;
}
::UserInfo_t* CMDRedPacketInfo::mutable_srcuser() {
  
  if (srcuser_ == NULL) {
    srcuser_ = new ::UserInfo_t;
  }
  // @@protoc_insertion_point(field_mutable:CMDRedPacketInfo.srcUser)
  return srcuser_;
}
::UserInfo_t* CMDRedPacketInfo::release_srcuser() {
  // @@protoc_insertion_point(field_release:CMDRedPacketInfo.srcUser)
  
  ::UserInfo_t* temp = srcuser_;
  srcuser_ = NULL;
  return temp;
}
void CMDRedPacketInfo::set_allocated_srcuser(::UserInfo_t* srcuser) {
  delete srcuser_;
  srcuser_ = srcuser;
  if (srcuser) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDRedPacketInfo.srcUser)
}

// optional .UserInfo_t dstUser = 5;
bool CMDRedPacketInfo::has_dstuser() const {
  return !_is_default_instance_ && dstuser_ != NULL;
}
void CMDRedPacketInfo::clear_dstuser() {
  if (GetArenaNoVirtual() == NULL && dstuser_ != NULL) delete dstuser_;
  dstuser_ = NULL;
}
const ::UserInfo_t& CMDRedPacketInfo::dstuser() const {
  // @@protoc_insertion_point(field_get:CMDRedPacketInfo.dstUser)
  return dstuser_ != NULL ? *dstuser_ : *default_instance_->dstuser_;
}
::UserInfo_t* CMDRedPacketInfo::mutable_dstuser() {
  
  if (dstuser_ == NULL) {
    dstuser_ = new ::UserInfo_t;
  }
  // @@protoc_insertion_point(field_mutable:CMDRedPacketInfo.dstUser)
  return dstuser_;
}
::UserInfo_t* CMDRedPacketInfo::release_dstuser() {
  // @@protoc_insertion_point(field_release:CMDRedPacketInfo.dstUser)
  
  ::UserInfo_t* temp = dstuser_;
  dstuser_ = NULL;
  return temp;
}
void CMDRedPacketInfo::set_allocated_dstuser(::UserInfo_t* dstuser) {
  delete dstuser_;
  dstuser_ = dstuser;
  if (dstuser) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDRedPacketInfo.dstUser)
}

// optional uint32 packetNum = 6;
void CMDRedPacketInfo::clear_packetnum() {
  packetnum_ = 0u;
}
 ::google::protobuf::uint32 CMDRedPacketInfo::packetnum() const {
  // @@protoc_insertion_point(field_get:CMDRedPacketInfo.packetNum)
  return packetnum_;
}
 void CMDRedPacketInfo::set_packetnum(::google::protobuf::uint32 value) {
  
  packetnum_ = value;
  // @@protoc_insertion_point(field_set:CMDRedPacketInfo.packetNum)
}

// optional uint32 takenNum = 7;
void CMDRedPacketInfo::clear_takennum() {
  takennum_ = 0u;
}
 ::google::protobuf::uint32 CMDRedPacketInfo::takennum() const {
  // @@protoc_insertion_point(field_get:CMDRedPacketInfo.takenNum)
  return takennum_;
}
 void CMDRedPacketInfo::set_takennum(::google::protobuf::uint32 value) {
  
  takennum_ = value;
  // @@protoc_insertion_point(field_set:CMDRedPacketInfo.takenNum)
}

// optional uint32 packetMoney = 8;
void CMDRedPacketInfo::clear_packetmoney() {
  packetmoney_ = 0u;
}
 ::google::protobuf::uint32 CMDRedPacketInfo::packetmoney() const {
  // @@protoc_insertion_point(field_get:CMDRedPacketInfo.packetMoney)
  return packetmoney_;
}
 void CMDRedPacketInfo::set_packetmoney(::google::protobuf::uint32 value) {
  
  packetmoney_ = value;
  // @@protoc_insertion_point(field_set:CMDRedPacketInfo.packetMoney)
}

// optional uint32 takenMoney = 9;
void CMDRedPacketInfo::clear_takenmoney() {
  takenmoney_ = 0u;
}
 ::google::protobuf::uint32 CMDRedPacketInfo::takenmoney() const {
  // @@protoc_insertion_point(field_get:CMDRedPacketInfo.takenMoney)
  return takenmoney_;
}
 void CMDRedPacketInfo::set_takenmoney(::google::protobuf::uint32 value) {
  
  takenmoney_ = value;
  // @@protoc_insertion_point(field_set:CMDRedPacketInfo.takenMoney)
}

// optional uint32 myTakeMoney = 10;
void CMDRedPacketInfo::clear_mytakemoney() {
  mytakemoney_ = 0u;
}
 ::google::protobuf::uint32 CMDRedPacketInfo::mytakemoney() const {
  // @@protoc_insertion_point(field_get:CMDRedPacketInfo.myTakeMoney)
  return mytakemoney_;
}
 void CMDRedPacketInfo::set_mytakemoney(::google::protobuf::uint32 value) {
  
  mytakemoney_ = value;
  // @@protoc_insertion_point(field_set:CMDRedPacketInfo.myTakeMoney)
}

// optional string message = 11;
void CMDRedPacketInfo::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CMDRedPacketInfo::message() const {
  // @@protoc_insertion_point(field_get:CMDRedPacketInfo.message)
  return message_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDRedPacketInfo::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDRedPacketInfo.message)
}
 void CMDRedPacketInfo::set_message(const char* value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDRedPacketInfo.message)
}
 void CMDRedPacketInfo::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDRedPacketInfo.message)
}
 ::std::string* CMDRedPacketInfo::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:CMDRedPacketInfo.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMDRedPacketInfo::release_message() {
  // @@protoc_insertion_point(field_release:CMDRedPacketInfo.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDRedPacketInfo::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:CMDRedPacketInfo.message)
}

// optional uint32 createTime = 12;
void CMDRedPacketInfo::clear_createtime() {
  createtime_ = 0u;
}
 ::google::protobuf::uint32 CMDRedPacketInfo::createtime() const {
  // @@protoc_insertion_point(field_get:CMDRedPacketInfo.createTime)
  return createtime_;
}
 void CMDRedPacketInfo::set_createtime(::google::protobuf::uint32 value) {
  
  createtime_ = value;
  // @@protoc_insertion_point(field_set:CMDRedPacketInfo.createTime)
}

// optional uint32 offset = 13;
void CMDRedPacketInfo::clear_offset() {
  offset_ = 0u;
}
 ::google::protobuf::uint32 CMDRedPacketInfo::offset() const {
  // @@protoc_insertion_point(field_get:CMDRedPacketInfo.offset)
  return offset_;
}
 void CMDRedPacketInfo::set_offset(::google::protobuf::uint32 value) {
  
  offset_ = value;
  // @@protoc_insertion_point(field_set:CMDRedPacketInfo.offset)
}

// repeated .CMDRedPacketTakenRes res = 14;
int CMDRedPacketInfo::res_size() const {
  return res_.size();
}
void CMDRedPacketInfo::clear_res() {
  res_.Clear();
}
const ::CMDRedPacketTakenRes& CMDRedPacketInfo::res(int index) const {
  // @@protoc_insertion_point(field_get:CMDRedPacketInfo.res)
  return res_.Get(index);
}
::CMDRedPacketTakenRes* CMDRedPacketInfo::mutable_res(int index) {
  // @@protoc_insertion_point(field_mutable:CMDRedPacketInfo.res)
  return res_.Mutable(index);
}
::CMDRedPacketTakenRes* CMDRedPacketInfo::add_res() {
  // @@protoc_insertion_point(field_add:CMDRedPacketInfo.res)
  return res_.Add();
}
::google::protobuf::RepeatedPtrField< ::CMDRedPacketTakenRes >*
CMDRedPacketInfo::mutable_res() {
  // @@protoc_insertion_point(field_mutable_list:CMDRedPacketInfo.res)
  return &res_;
}
const ::google::protobuf::RepeatedPtrField< ::CMDRedPacketTakenRes >&
CMDRedPacketInfo::res() const {
  // @@protoc_insertion_point(field_list:CMDRedPacketInfo.res)
  return res_;
}

// optional uint32 finishCostTime = 15;
void CMDRedPacketInfo::clear_finishcosttime() {
  finishcosttime_ = 0u;
}
 ::google::protobuf::uint32 CMDRedPacketInfo::finishcosttime() const {
  // @@protoc_insertion_point(field_get:CMDRedPacketInfo.finishCostTime)
  return finishcosttime_;
}
 void CMDRedPacketInfo::set_finishcosttime(::google::protobuf::uint32 value) {
  
  finishcosttime_ = value;
  // @@protoc_insertion_point(field_set:CMDRedPacketInfo.finishCostTime)
}

// optional uint32 topUserID = 16;
void CMDRedPacketInfo::clear_topuserid() {
  topuserid_ = 0u;
}
 ::google::protobuf::uint32 CMDRedPacketInfo::topuserid() const {
  // @@protoc_insertion_point(field_get:CMDRedPacketInfo.topUserID)
  return topuserid_;
}
 void CMDRedPacketInfo::set_topuserid(::google::protobuf::uint32 value) {
  
  topuserid_ = value;
  // @@protoc_insertion_point(field_set:CMDRedPacketInfo.topUserID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDWeekListRes::kUserIDFieldNumber;
const int CMDWeekListRes::kAliasFieldNumber;
const int CMDWeekListRes::kHeadFieldNumber;
const int CMDWeekListRes::kContributeValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDWeekListRes::CMDWeekListRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDWeekListRes)
}

void CMDWeekListRes::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDWeekListRes::CMDWeekListRes(const CMDWeekListRes& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDWeekListRes)
}

void CMDWeekListRes::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  userid_ = 0u;
  alias_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  head_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contributevalue_ = 0u;
}

CMDWeekListRes::~CMDWeekListRes() {
  // @@protoc_insertion_point(destructor:CMDWeekListRes)
  SharedDtor();
}

void CMDWeekListRes::SharedDtor() {
  alias_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  head_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CMDWeekListRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDWeekListRes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDWeekListRes_descriptor_;
}

const CMDWeekListRes& CMDWeekListRes::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ConsumeSvr_2eproto();
  return *default_instance_;
}

CMDWeekListRes* CMDWeekListRes::default_instance_ = NULL;

CMDWeekListRes* CMDWeekListRes::New(::google::protobuf::Arena* arena) const {
  CMDWeekListRes* n = new CMDWeekListRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDWeekListRes::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDWeekListRes)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDWeekListRes, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDWeekListRes*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(userid_, contributevalue_);
  alias_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  head_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool CMDWeekListRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDWeekListRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 userID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_alias;
        break;
      }

      // optional string alias = 2;
      case 2: {
        if (tag == 18) {
         parse_alias:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_alias()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->alias().data(), this->alias().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMDWeekListRes.alias"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_head;
        break;
      }

      // optional string head = 3;
      case 3: {
        if (tag == 26) {
         parse_head:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_head()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->head().data(), this->head().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMDWeekListRes.head"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_contributeValue;
        break;
      }

      // optional uint32 contributeValue = 4;
      case 4: {
        if (tag == 32) {
         parse_contributeValue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &contributevalue_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDWeekListRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDWeekListRes)
  return false;
#undef DO_
}

void CMDWeekListRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDWeekListRes)
  // optional uint32 userID = 1;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->userid(), output);
  }

  // optional string alias = 2;
  if (this->alias().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->alias().data(), this->alias().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDWeekListRes.alias");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->alias(), output);
  }

  // optional string head = 3;
  if (this->head().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->head().data(), this->head().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDWeekListRes.head");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->head(), output);
  }

  // optional uint32 contributeValue = 4;
  if (this->contributevalue() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->contributevalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDWeekListRes)
}

::google::protobuf::uint8* CMDWeekListRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDWeekListRes)
  // optional uint32 userID = 1;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->userid(), target);
  }

  // optional string alias = 2;
  if (this->alias().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->alias().data(), this->alias().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDWeekListRes.alias");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->alias(), target);
  }

  // optional string head = 3;
  if (this->head().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->head().data(), this->head().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDWeekListRes.head");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->head(), target);
  }

  // optional uint32 contributeValue = 4;
  if (this->contributevalue() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->contributevalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDWeekListRes)
  return target;
}

int CMDWeekListRes::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDWeekListRes)
  int total_size = 0;

  // optional uint32 userID = 1;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userid());
  }

  // optional string alias = 2;
  if (this->alias().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->alias());
  }

  // optional string head = 3;
  if (this->head().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->head());
  }

  // optional uint32 contributeValue = 4;
  if (this->contributevalue() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->contributevalue());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDWeekListRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDWeekListRes)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDWeekListRes* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDWeekListRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDWeekListRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDWeekListRes)
    MergeFrom(*source);
  }
}

void CMDWeekListRes::MergeFrom(const CMDWeekListRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDWeekListRes)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.alias().size() > 0) {

    alias_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.alias_);
  }
  if (from.head().size() > 0) {

    head_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.head_);
  }
  if (from.contributevalue() != 0) {
    set_contributevalue(from.contributevalue());
  }
}

void CMDWeekListRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDWeekListRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDWeekListRes::CopyFrom(const CMDWeekListRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDWeekListRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDWeekListRes::IsInitialized() const {

  return true;
}

void CMDWeekListRes::Swap(CMDWeekListRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDWeekListRes::InternalSwap(CMDWeekListRes* other) {
  std::swap(userid_, other->userid_);
  alias_.Swap(&other->alias_);
  head_.Swap(&other->head_);
  std::swap(contributevalue_, other->contributevalue_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDWeekListRes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDWeekListRes_descriptor_;
  metadata.reflection = CMDWeekListRes_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDWeekListRes

// optional uint32 userID = 1;
void CMDWeekListRes::clear_userid() {
  userid_ = 0u;
}
 ::google::protobuf::uint32 CMDWeekListRes::userid() const {
  // @@protoc_insertion_point(field_get:CMDWeekListRes.userID)
  return userid_;
}
 void CMDWeekListRes::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDWeekListRes.userID)
}

// optional string alias = 2;
void CMDWeekListRes::clear_alias() {
  alias_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CMDWeekListRes::alias() const {
  // @@protoc_insertion_point(field_get:CMDWeekListRes.alias)
  return alias_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDWeekListRes::set_alias(const ::std::string& value) {
  
  alias_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDWeekListRes.alias)
}
 void CMDWeekListRes::set_alias(const char* value) {
  
  alias_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDWeekListRes.alias)
}
 void CMDWeekListRes::set_alias(const char* value, size_t size) {
  
  alias_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDWeekListRes.alias)
}
 ::std::string* CMDWeekListRes::mutable_alias() {
  
  // @@protoc_insertion_point(field_mutable:CMDWeekListRes.alias)
  return alias_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMDWeekListRes::release_alias() {
  // @@protoc_insertion_point(field_release:CMDWeekListRes.alias)
  
  return alias_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDWeekListRes::set_allocated_alias(::std::string* alias) {
  if (alias != NULL) {
    
  } else {
    
  }
  alias_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alias);
  // @@protoc_insertion_point(field_set_allocated:CMDWeekListRes.alias)
}

// optional string head = 3;
void CMDWeekListRes::clear_head() {
  head_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CMDWeekListRes::head() const {
  // @@protoc_insertion_point(field_get:CMDWeekListRes.head)
  return head_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDWeekListRes::set_head(const ::std::string& value) {
  
  head_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDWeekListRes.head)
}
 void CMDWeekListRes::set_head(const char* value) {
  
  head_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDWeekListRes.head)
}
 void CMDWeekListRes::set_head(const char* value, size_t size) {
  
  head_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDWeekListRes.head)
}
 ::std::string* CMDWeekListRes::mutable_head() {
  
  // @@protoc_insertion_point(field_mutable:CMDWeekListRes.head)
  return head_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMDWeekListRes::release_head() {
  // @@protoc_insertion_point(field_release:CMDWeekListRes.head)
  
  return head_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDWeekListRes::set_allocated_head(::std::string* head) {
  if (head != NULL) {
    
  } else {
    
  }
  head_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), head);
  // @@protoc_insertion_point(field_set_allocated:CMDWeekListRes.head)
}

// optional uint32 contributeValue = 4;
void CMDWeekListRes::clear_contributevalue() {
  contributevalue_ = 0u;
}
 ::google::protobuf::uint32 CMDWeekListRes::contributevalue() const {
  // @@protoc_insertion_point(field_get:CMDWeekListRes.contributeValue)
  return contributevalue_;
}
 void CMDWeekListRes::set_contributevalue(::google::protobuf::uint32 value) {
  
  contributevalue_ = value;
  // @@protoc_insertion_point(field_set:CMDWeekListRes.contributeValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDWeekListNotify::kGroupIDFieldNumber;
const int CMDWeekListNotify::kResFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDWeekListNotify::CMDWeekListNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDWeekListNotify)
}

void CMDWeekListNotify::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDWeekListNotify::CMDWeekListNotify(const CMDWeekListNotify& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDWeekListNotify)
}

void CMDWeekListNotify::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  groupid_ = 0u;
}

CMDWeekListNotify::~CMDWeekListNotify() {
  // @@protoc_insertion_point(destructor:CMDWeekListNotify)
  SharedDtor();
}

void CMDWeekListNotify::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMDWeekListNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDWeekListNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDWeekListNotify_descriptor_;
}

const CMDWeekListNotify& CMDWeekListNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ConsumeSvr_2eproto();
  return *default_instance_;
}

CMDWeekListNotify* CMDWeekListNotify::default_instance_ = NULL;

CMDWeekListNotify* CMDWeekListNotify::New(::google::protobuf::Arena* arena) const {
  CMDWeekListNotify* n = new CMDWeekListNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDWeekListNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDWeekListNotify)
  groupid_ = 0u;
  res_.Clear();
}

bool CMDWeekListNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDWeekListNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 groupID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &groupid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_res;
        break;
      }

      // repeated .CMDWeekListRes res = 2;
      case 2: {
        if (tag == 18) {
         parse_res:
          DO_(input->IncrementRecursionDepth());
         parse_loop_res:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_res()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_res;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDWeekListNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDWeekListNotify)
  return false;
#undef DO_
}

void CMDWeekListNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDWeekListNotify)
  // optional uint32 groupID = 1;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->groupid(), output);
  }

  // repeated .CMDWeekListRes res = 2;
  for (unsigned int i = 0, n = this->res_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->res(i), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDWeekListNotify)
}

::google::protobuf::uint8* CMDWeekListNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDWeekListNotify)
  // optional uint32 groupID = 1;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->groupid(), target);
  }

  // repeated .CMDWeekListRes res = 2;
  for (unsigned int i = 0, n = this->res_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->res(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDWeekListNotify)
  return target;
}

int CMDWeekListNotify::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDWeekListNotify)
  int total_size = 0;

  // optional uint32 groupID = 1;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->groupid());
  }

  // repeated .CMDWeekListRes res = 2;
  total_size += 1 * this->res_size();
  for (int i = 0; i < this->res_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->res(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDWeekListNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDWeekListNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDWeekListNotify* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDWeekListNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDWeekListNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDWeekListNotify)
    MergeFrom(*source);
  }
}

void CMDWeekListNotify::MergeFrom(const CMDWeekListNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDWeekListNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  res_.MergeFrom(from.res_);
  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
}

void CMDWeekListNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDWeekListNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDWeekListNotify::CopyFrom(const CMDWeekListNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDWeekListNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDWeekListNotify::IsInitialized() const {

  return true;
}

void CMDWeekListNotify::Swap(CMDWeekListNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDWeekListNotify::InternalSwap(CMDWeekListNotify* other) {
  std::swap(groupid_, other->groupid_);
  res_.UnsafeArenaSwap(&other->res_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDWeekListNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDWeekListNotify_descriptor_;
  metadata.reflection = CMDWeekListNotify_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDWeekListNotify

// optional uint32 groupID = 1;
void CMDWeekListNotify::clear_groupid() {
  groupid_ = 0u;
}
 ::google::protobuf::uint32 CMDWeekListNotify::groupid() const {
  // @@protoc_insertion_point(field_get:CMDWeekListNotify.groupID)
  return groupid_;
}
 void CMDWeekListNotify::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDWeekListNotify.groupID)
}

// repeated .CMDWeekListRes res = 2;
int CMDWeekListNotify::res_size() const {
  return res_.size();
}
void CMDWeekListNotify::clear_res() {
  res_.Clear();
}
const ::CMDWeekListRes& CMDWeekListNotify::res(int index) const {
  // @@protoc_insertion_point(field_get:CMDWeekListNotify.res)
  return res_.Get(index);
}
::CMDWeekListRes* CMDWeekListNotify::mutable_res(int index) {
  // @@protoc_insertion_point(field_mutable:CMDWeekListNotify.res)
  return res_.Mutable(index);
}
::CMDWeekListRes* CMDWeekListNotify::add_res() {
  // @@protoc_insertion_point(field_add:CMDWeekListNotify.res)
  return res_.Add();
}
::google::protobuf::RepeatedPtrField< ::CMDWeekListRes >*
CMDWeekListNotify::mutable_res() {
  // @@protoc_insertion_point(field_mutable_list:CMDWeekListNotify.res)
  return &res_;
}
const ::google::protobuf::RepeatedPtrField< ::CMDWeekListRes >&
CMDWeekListNotify::res() const {
  // @@protoc_insertion_point(field_list:CMDWeekListNotify.res)
  return res_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDQryWeekListReq::kGroupIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDQryWeekListReq::CMDQryWeekListReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDQryWeekListReq)
}

void CMDQryWeekListReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDQryWeekListReq::CMDQryWeekListReq(const CMDQryWeekListReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDQryWeekListReq)
}

void CMDQryWeekListReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  groupid_ = 0u;
}

CMDQryWeekListReq::~CMDQryWeekListReq() {
  // @@protoc_insertion_point(destructor:CMDQryWeekListReq)
  SharedDtor();
}

void CMDQryWeekListReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMDQryWeekListReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDQryWeekListReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDQryWeekListReq_descriptor_;
}

const CMDQryWeekListReq& CMDQryWeekListReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ConsumeSvr_2eproto();
  return *default_instance_;
}

CMDQryWeekListReq* CMDQryWeekListReq::default_instance_ = NULL;

CMDQryWeekListReq* CMDQryWeekListReq::New(::google::protobuf::Arena* arena) const {
  CMDQryWeekListReq* n = new CMDQryWeekListReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDQryWeekListReq::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDQryWeekListReq)
  groupid_ = 0u;
}

bool CMDQryWeekListReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDQryWeekListReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 groupID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &groupid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDQryWeekListReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDQryWeekListReq)
  return false;
#undef DO_
}

void CMDQryWeekListReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDQryWeekListReq)
  // optional uint32 groupID = 1;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->groupid(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDQryWeekListReq)
}

::google::protobuf::uint8* CMDQryWeekListReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDQryWeekListReq)
  // optional uint32 groupID = 1;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->groupid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDQryWeekListReq)
  return target;
}

int CMDQryWeekListReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDQryWeekListReq)
  int total_size = 0;

  // optional uint32 groupID = 1;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->groupid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDQryWeekListReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDQryWeekListReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDQryWeekListReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDQryWeekListReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDQryWeekListReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDQryWeekListReq)
    MergeFrom(*source);
  }
}

void CMDQryWeekListReq::MergeFrom(const CMDQryWeekListReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDQryWeekListReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
}

void CMDQryWeekListReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDQryWeekListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDQryWeekListReq::CopyFrom(const CMDQryWeekListReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDQryWeekListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDQryWeekListReq::IsInitialized() const {

  return true;
}

void CMDQryWeekListReq::Swap(CMDQryWeekListReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDQryWeekListReq::InternalSwap(CMDQryWeekListReq* other) {
  std::swap(groupid_, other->groupid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDQryWeekListReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDQryWeekListReq_descriptor_;
  metadata.reflection = CMDQryWeekListReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDQryWeekListReq

// optional uint32 groupID = 1;
void CMDQryWeekListReq::clear_groupid() {
  groupid_ = 0u;
}
 ::google::protobuf::uint32 CMDQryWeekListReq::groupid() const {
  // @@protoc_insertion_point(field_get:CMDQryWeekListReq.groupID)
  return groupid_;
}
 void CMDQryWeekListReq::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDQryWeekListReq.groupID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDQryRedPacketReq::kGroupIDFieldNumber;
const int CMDQryRedPacketReq::kPacketTypeFieldNumber;
const int CMDQryRedPacketReq::kCountFieldNumber;
const int CMDQryRedPacketReq::kOffsetFieldNumber;
const int CMDQryRedPacketReq::kFixTypeFieldNumber;
const int CMDQryRedPacketReq::kUserIDFieldNumber;
const int CMDQryRedPacketReq::kClienttimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDQryRedPacketReq::CMDQryRedPacketReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDQryRedPacketReq)
}

void CMDQryRedPacketReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDQryRedPacketReq::CMDQryRedPacketReq(const CMDQryRedPacketReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDQryRedPacketReq)
}

void CMDQryRedPacketReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  groupid_ = 0u;
  packettype_ = 0;
  count_ = 0u;
  offset_ = 0u;
  fixtype_ = 0;
  userid_ = 0u;
  clienttimestamp_ = GOOGLE_ULONGLONG(0);
}

CMDQryRedPacketReq::~CMDQryRedPacketReq() {
  // @@protoc_insertion_point(destructor:CMDQryRedPacketReq)
  SharedDtor();
}

void CMDQryRedPacketReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMDQryRedPacketReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDQryRedPacketReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDQryRedPacketReq_descriptor_;
}

const CMDQryRedPacketReq& CMDQryRedPacketReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ConsumeSvr_2eproto();
  return *default_instance_;
}

CMDQryRedPacketReq* CMDQryRedPacketReq::default_instance_ = NULL;

CMDQryRedPacketReq* CMDQryRedPacketReq::New(::google::protobuf::Arena* arena) const {
  CMDQryRedPacketReq* n = new CMDQryRedPacketReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDQryRedPacketReq::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDQryRedPacketReq)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDQryRedPacketReq, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDQryRedPacketReq*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(groupid_, clienttimestamp_);

#undef ZR_HELPER_
#undef ZR_

}

bool CMDQryRedPacketReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDQryRedPacketReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 groupID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &groupid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_packetType;
        break;
      }

      // optional .ePacketType packetType = 2;
      case 2: {
        if (tag == 16) {
         parse_packetType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_packettype(static_cast< ::ePacketType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_count;
        break;
      }

      // optional uint32 count = 3;
      case 3: {
        if (tag == 24) {
         parse_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_offset;
        break;
      }

      // optional uint32 offset = 4;
      case 4: {
        if (tag == 32) {
         parse_offset:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &offset_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_fixType;
        break;
      }

      // optional .ePacketFixType fixType = 5;
      case 5: {
        if (tag == 40) {
         parse_fixType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_fixtype(static_cast< ::ePacketFixType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_userID;
        break;
      }

      // optional uint32 userID = 6;
      case 6: {
        if (tag == 48) {
         parse_userID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_clienttimestamp;
        break;
      }

      // optional uint64 clienttimestamp = 7;
      case 7: {
        if (tag == 56) {
         parse_clienttimestamp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &clienttimestamp_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDQryRedPacketReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDQryRedPacketReq)
  return false;
#undef DO_
}

void CMDQryRedPacketReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDQryRedPacketReq)
  // optional uint32 groupID = 1;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->groupid(), output);
  }

  // optional .ePacketType packetType = 2;
  if (this->packettype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->packettype(), output);
  }

  // optional uint32 count = 3;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->count(), output);
  }

  // optional uint32 offset = 4;
  if (this->offset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->offset(), output);
  }

  // optional .ePacketFixType fixType = 5;
  if (this->fixtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->fixtype(), output);
  }

  // optional uint32 userID = 6;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->userid(), output);
  }

  // optional uint64 clienttimestamp = 7;
  if (this->clienttimestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->clienttimestamp(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDQryRedPacketReq)
}

::google::protobuf::uint8* CMDQryRedPacketReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDQryRedPacketReq)
  // optional uint32 groupID = 1;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->groupid(), target);
  }

  // optional .ePacketType packetType = 2;
  if (this->packettype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->packettype(), target);
  }

  // optional uint32 count = 3;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->count(), target);
  }

  // optional uint32 offset = 4;
  if (this->offset() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->offset(), target);
  }

  // optional .ePacketFixType fixType = 5;
  if (this->fixtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->fixtype(), target);
  }

  // optional uint32 userID = 6;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->userid(), target);
  }

  // optional uint64 clienttimestamp = 7;
  if (this->clienttimestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->clienttimestamp(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDQryRedPacketReq)
  return target;
}

int CMDQryRedPacketReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDQryRedPacketReq)
  int total_size = 0;

  // optional uint32 groupID = 1;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->groupid());
  }

  // optional .ePacketType packetType = 2;
  if (this->packettype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->packettype());
  }

  // optional uint32 count = 3;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  // optional uint32 offset = 4;
  if (this->offset() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->offset());
  }

  // optional .ePacketFixType fixType = 5;
  if (this->fixtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->fixtype());
  }

  // optional uint32 userID = 6;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userid());
  }

  // optional uint64 clienttimestamp = 7;
  if (this->clienttimestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->clienttimestamp());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDQryRedPacketReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDQryRedPacketReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDQryRedPacketReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDQryRedPacketReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDQryRedPacketReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDQryRedPacketReq)
    MergeFrom(*source);
  }
}

void CMDQryRedPacketReq::MergeFrom(const CMDQryRedPacketReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDQryRedPacketReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
  if (from.packettype() != 0) {
    set_packettype(from.packettype());
  }
  if (from.count() != 0) {
    set_count(from.count());
  }
  if (from.offset() != 0) {
    set_offset(from.offset());
  }
  if (from.fixtype() != 0) {
    set_fixtype(from.fixtype());
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.clienttimestamp() != 0) {
    set_clienttimestamp(from.clienttimestamp());
  }
}

void CMDQryRedPacketReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDQryRedPacketReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDQryRedPacketReq::CopyFrom(const CMDQryRedPacketReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDQryRedPacketReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDQryRedPacketReq::IsInitialized() const {

  return true;
}

void CMDQryRedPacketReq::Swap(CMDQryRedPacketReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDQryRedPacketReq::InternalSwap(CMDQryRedPacketReq* other) {
  std::swap(groupid_, other->groupid_);
  std::swap(packettype_, other->packettype_);
  std::swap(count_, other->count_);
  std::swap(offset_, other->offset_);
  std::swap(fixtype_, other->fixtype_);
  std::swap(userid_, other->userid_);
  std::swap(clienttimestamp_, other->clienttimestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDQryRedPacketReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDQryRedPacketReq_descriptor_;
  metadata.reflection = CMDQryRedPacketReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDQryRedPacketReq

// optional uint32 groupID = 1;
void CMDQryRedPacketReq::clear_groupid() {
  groupid_ = 0u;
}
 ::google::protobuf::uint32 CMDQryRedPacketReq::groupid() const {
  // @@protoc_insertion_point(field_get:CMDQryRedPacketReq.groupID)
  return groupid_;
}
 void CMDQryRedPacketReq::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDQryRedPacketReq.groupID)
}

// optional .ePacketType packetType = 2;
void CMDQryRedPacketReq::clear_packettype() {
  packettype_ = 0;
}
 ::ePacketType CMDQryRedPacketReq::packettype() const {
  // @@protoc_insertion_point(field_get:CMDQryRedPacketReq.packetType)
  return static_cast< ::ePacketType >(packettype_);
}
 void CMDQryRedPacketReq::set_packettype(::ePacketType value) {
  
  packettype_ = value;
  // @@protoc_insertion_point(field_set:CMDQryRedPacketReq.packetType)
}

// optional uint32 count = 3;
void CMDQryRedPacketReq::clear_count() {
  count_ = 0u;
}
 ::google::protobuf::uint32 CMDQryRedPacketReq::count() const {
  // @@protoc_insertion_point(field_get:CMDQryRedPacketReq.count)
  return count_;
}
 void CMDQryRedPacketReq::set_count(::google::protobuf::uint32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:CMDQryRedPacketReq.count)
}

// optional uint32 offset = 4;
void CMDQryRedPacketReq::clear_offset() {
  offset_ = 0u;
}
 ::google::protobuf::uint32 CMDQryRedPacketReq::offset() const {
  // @@protoc_insertion_point(field_get:CMDQryRedPacketReq.offset)
  return offset_;
}
 void CMDQryRedPacketReq::set_offset(::google::protobuf::uint32 value) {
  
  offset_ = value;
  // @@protoc_insertion_point(field_set:CMDQryRedPacketReq.offset)
}

// optional .ePacketFixType fixType = 5;
void CMDQryRedPacketReq::clear_fixtype() {
  fixtype_ = 0;
}
 ::ePacketFixType CMDQryRedPacketReq::fixtype() const {
  // @@protoc_insertion_point(field_get:CMDQryRedPacketReq.fixType)
  return static_cast< ::ePacketFixType >(fixtype_);
}
 void CMDQryRedPacketReq::set_fixtype(::ePacketFixType value) {
  
  fixtype_ = value;
  // @@protoc_insertion_point(field_set:CMDQryRedPacketReq.fixType)
}

// optional uint32 userID = 6;
void CMDQryRedPacketReq::clear_userid() {
  userid_ = 0u;
}
 ::google::protobuf::uint32 CMDQryRedPacketReq::userid() const {
  // @@protoc_insertion_point(field_get:CMDQryRedPacketReq.userID)
  return userid_;
}
 void CMDQryRedPacketReq::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDQryRedPacketReq.userID)
}

// optional uint64 clienttimestamp = 7;
void CMDQryRedPacketReq::clear_clienttimestamp() {
  clienttimestamp_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 CMDQryRedPacketReq::clienttimestamp() const {
  // @@protoc_insertion_point(field_get:CMDQryRedPacketReq.clienttimestamp)
  return clienttimestamp_;
}
 void CMDQryRedPacketReq::set_clienttimestamp(::google::protobuf::uint64 value) {
  
  clienttimestamp_ = value;
  // @@protoc_insertion_point(field_set:CMDQryRedPacketReq.clienttimestamp)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDRedPacket::kUserIDFieldNumber;
const int CMDRedPacket::kPacketIDFieldNumber;
const int CMDRedPacket::kPacketTypeFieldNumber;
const int CMDRedPacket::kFixTimeFieldNumber;
const int CMDRedPacket::kDiffTimeFieldNumber;
const int CMDRedPacket::kPacketMoneyFieldNumber;
const int CMDRedPacket::kRangeTypeFieldNumber;
const int CMDRedPacket::kPacketNumFieldNumber;
const int CMDRedPacket::kRangeGenderFieldNumber;
const int CMDRedPacket::kMessageFieldNumber;
const int CMDRedPacket::kFixTypeFieldNumber;
const int CMDRedPacket::kLongitudeFieldNumber;
const int CMDRedPacket::kLatitudeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDRedPacket::CMDRedPacket()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDRedPacket)
}

void CMDRedPacket::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDRedPacket::CMDRedPacket(const CMDRedPacket& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDRedPacket)
}

void CMDRedPacket::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  userid_ = 0u;
  packetid_ = 0u;
  packettype_ = 0;
  fixtime_ = 0u;
  difftime_ = 0u;
  packetmoney_ = 0u;
  rangetype_ = 0;
  packetnum_ = 0u;
  rangegender_ = 0;
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fixtype_ = 0;
  longitude_ = 0;
  latitude_ = 0;
}

CMDRedPacket::~CMDRedPacket() {
  // @@protoc_insertion_point(destructor:CMDRedPacket)
  SharedDtor();
}

void CMDRedPacket::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CMDRedPacket::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDRedPacket::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDRedPacket_descriptor_;
}

const CMDRedPacket& CMDRedPacket::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ConsumeSvr_2eproto();
  return *default_instance_;
}

CMDRedPacket* CMDRedPacket::default_instance_ = NULL;

CMDRedPacket* CMDRedPacket::New(::google::protobuf::Arena* arena) const {
  CMDRedPacket* n = new CMDRedPacket;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDRedPacket::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDRedPacket)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDRedPacket, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDRedPacket*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(userid_, packetnum_);
  ZR_(rangegender_, latitude_);
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool CMDRedPacket::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDRedPacket)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 userID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_packetID;
        break;
      }

      // optional uint32 packetID = 2;
      case 2: {
        if (tag == 16) {
         parse_packetID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &packetid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_packetType;
        break;
      }

      // optional .ePacketType packetType = 3;
      case 3: {
        if (tag == 24) {
         parse_packetType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_packettype(static_cast< ::ePacketType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_fixTime;
        break;
      }

      // optional uint32 fixTime = 4;
      case 4: {
        if (tag == 32) {
         parse_fixTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &fixtime_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_diffTime;
        break;
      }

      // optional uint32 diffTime = 5;
      case 5: {
        if (tag == 40) {
         parse_diffTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &difftime_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_packetMoney;
        break;
      }

      // optional uint32 packetMoney = 6;
      case 6: {
        if (tag == 48) {
         parse_packetMoney:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &packetmoney_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_rangeType;
        break;
      }

      // optional .eRangeType rangeType = 7;
      case 7: {
        if (tag == 56) {
         parse_rangeType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_rangetype(static_cast< ::eRangeType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_packetNum;
        break;
      }

      // optional uint32 packetNum = 8;
      case 8: {
        if (tag == 64) {
         parse_packetNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &packetnum_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_rangeGender;
        break;
      }

      // optional .eRangeGender rangeGender = 9;
      case 9: {
        if (tag == 72) {
         parse_rangeGender:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_rangegender(static_cast< ::eRangeGender >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_message;
        break;
      }

      // optional string message = 10;
      case 10: {
        if (tag == 82) {
         parse_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), this->message().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMDRedPacket.message"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_fixType;
        break;
      }

      // optional .ePacketFixType fixType = 11;
      case 11: {
        if (tag == 88) {
         parse_fixType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_fixtype(static_cast< ::ePacketFixType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(97)) goto parse_longitude;
        break;
      }

      // optional double longitude = 12;
      case 12: {
        if (tag == 97) {
         parse_longitude:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &longitude_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(105)) goto parse_latitude;
        break;
      }

      // optional double latitude = 13;
      case 13: {
        if (tag == 105) {
         parse_latitude:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &latitude_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDRedPacket)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDRedPacket)
  return false;
#undef DO_
}

void CMDRedPacket::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDRedPacket)
  // optional uint32 userID = 1;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->userid(), output);
  }

  // optional uint32 packetID = 2;
  if (this->packetid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->packetid(), output);
  }

  // optional .ePacketType packetType = 3;
  if (this->packettype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->packettype(), output);
  }

  // optional uint32 fixTime = 4;
  if (this->fixtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->fixtime(), output);
  }

  // optional uint32 diffTime = 5;
  if (this->difftime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->difftime(), output);
  }

  // optional uint32 packetMoney = 6;
  if (this->packetmoney() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->packetmoney(), output);
  }

  // optional .eRangeType rangeType = 7;
  if (this->rangetype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->rangetype(), output);
  }

  // optional uint32 packetNum = 8;
  if (this->packetnum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->packetnum(), output);
  }

  // optional .eRangeGender rangeGender = 9;
  if (this->rangegender() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->rangegender(), output);
  }

  // optional string message = 10;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDRedPacket.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->message(), output);
  }

  // optional .ePacketFixType fixType = 11;
  if (this->fixtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      11, this->fixtype(), output);
  }

  // optional double longitude = 12;
  if (this->longitude() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(12, this->longitude(), output);
  }

  // optional double latitude = 13;
  if (this->latitude() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(13, this->latitude(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDRedPacket)
}

::google::protobuf::uint8* CMDRedPacket::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDRedPacket)
  // optional uint32 userID = 1;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->userid(), target);
  }

  // optional uint32 packetID = 2;
  if (this->packetid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->packetid(), target);
  }

  // optional .ePacketType packetType = 3;
  if (this->packettype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->packettype(), target);
  }

  // optional uint32 fixTime = 4;
  if (this->fixtime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->fixtime(), target);
  }

  // optional uint32 diffTime = 5;
  if (this->difftime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->difftime(), target);
  }

  // optional uint32 packetMoney = 6;
  if (this->packetmoney() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->packetmoney(), target);
  }

  // optional .eRangeType rangeType = 7;
  if (this->rangetype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->rangetype(), target);
  }

  // optional uint32 packetNum = 8;
  if (this->packetnum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->packetnum(), target);
  }

  // optional .eRangeGender rangeGender = 9;
  if (this->rangegender() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      9, this->rangegender(), target);
  }

  // optional string message = 10;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDRedPacket.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->message(), target);
  }

  // optional .ePacketFixType fixType = 11;
  if (this->fixtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      11, this->fixtype(), target);
  }

  // optional double longitude = 12;
  if (this->longitude() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(12, this->longitude(), target);
  }

  // optional double latitude = 13;
  if (this->latitude() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(13, this->latitude(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDRedPacket)
  return target;
}

int CMDRedPacket::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDRedPacket)
  int total_size = 0;

  // optional uint32 userID = 1;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userid());
  }

  // optional uint32 packetID = 2;
  if (this->packetid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->packetid());
  }

  // optional .ePacketType packetType = 3;
  if (this->packettype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->packettype());
  }

  // optional uint32 fixTime = 4;
  if (this->fixtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->fixtime());
  }

  // optional uint32 diffTime = 5;
  if (this->difftime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->difftime());
  }

  // optional uint32 packetMoney = 6;
  if (this->packetmoney() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->packetmoney());
  }

  // optional .eRangeType rangeType = 7;
  if (this->rangetype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->rangetype());
  }

  // optional uint32 packetNum = 8;
  if (this->packetnum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->packetnum());
  }

  // optional .eRangeGender rangeGender = 9;
  if (this->rangegender() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->rangegender());
  }

  // optional string message = 10;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // optional .ePacketFixType fixType = 11;
  if (this->fixtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->fixtype());
  }

  // optional double longitude = 12;
  if (this->longitude() != 0) {
    total_size += 1 + 8;
  }

  // optional double latitude = 13;
  if (this->latitude() != 0) {
    total_size += 1 + 8;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDRedPacket::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDRedPacket)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDRedPacket* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDRedPacket>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDRedPacket)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDRedPacket)
    MergeFrom(*source);
  }
}

void CMDRedPacket::MergeFrom(const CMDRedPacket& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDRedPacket)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.packetid() != 0) {
    set_packetid(from.packetid());
  }
  if (from.packettype() != 0) {
    set_packettype(from.packettype());
  }
  if (from.fixtime() != 0) {
    set_fixtime(from.fixtime());
  }
  if (from.difftime() != 0) {
    set_difftime(from.difftime());
  }
  if (from.packetmoney() != 0) {
    set_packetmoney(from.packetmoney());
  }
  if (from.rangetype() != 0) {
    set_rangetype(from.rangetype());
  }
  if (from.packetnum() != 0) {
    set_packetnum(from.packetnum());
  }
  if (from.rangegender() != 0) {
    set_rangegender(from.rangegender());
  }
  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.fixtype() != 0) {
    set_fixtype(from.fixtype());
  }
  if (from.longitude() != 0) {
    set_longitude(from.longitude());
  }
  if (from.latitude() != 0) {
    set_latitude(from.latitude());
  }
}

void CMDRedPacket::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDRedPacket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDRedPacket::CopyFrom(const CMDRedPacket& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDRedPacket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDRedPacket::IsInitialized() const {

  return true;
}

void CMDRedPacket::Swap(CMDRedPacket* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDRedPacket::InternalSwap(CMDRedPacket* other) {
  std::swap(userid_, other->userid_);
  std::swap(packetid_, other->packetid_);
  std::swap(packettype_, other->packettype_);
  std::swap(fixtime_, other->fixtime_);
  std::swap(difftime_, other->difftime_);
  std::swap(packetmoney_, other->packetmoney_);
  std::swap(rangetype_, other->rangetype_);
  std::swap(packetnum_, other->packetnum_);
  std::swap(rangegender_, other->rangegender_);
  message_.Swap(&other->message_);
  std::swap(fixtype_, other->fixtype_);
  std::swap(longitude_, other->longitude_);
  std::swap(latitude_, other->latitude_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDRedPacket::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDRedPacket_descriptor_;
  metadata.reflection = CMDRedPacket_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDRedPacket

// optional uint32 userID = 1;
void CMDRedPacket::clear_userid() {
  userid_ = 0u;
}
 ::google::protobuf::uint32 CMDRedPacket::userid() const {
  // @@protoc_insertion_point(field_get:CMDRedPacket.userID)
  return userid_;
}
 void CMDRedPacket::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDRedPacket.userID)
}

// optional uint32 packetID = 2;
void CMDRedPacket::clear_packetid() {
  packetid_ = 0u;
}
 ::google::protobuf::uint32 CMDRedPacket::packetid() const {
  // @@protoc_insertion_point(field_get:CMDRedPacket.packetID)
  return packetid_;
}
 void CMDRedPacket::set_packetid(::google::protobuf::uint32 value) {
  
  packetid_ = value;
  // @@protoc_insertion_point(field_set:CMDRedPacket.packetID)
}

// optional .ePacketType packetType = 3;
void CMDRedPacket::clear_packettype() {
  packettype_ = 0;
}
 ::ePacketType CMDRedPacket::packettype() const {
  // @@protoc_insertion_point(field_get:CMDRedPacket.packetType)
  return static_cast< ::ePacketType >(packettype_);
}
 void CMDRedPacket::set_packettype(::ePacketType value) {
  
  packettype_ = value;
  // @@protoc_insertion_point(field_set:CMDRedPacket.packetType)
}

// optional uint32 fixTime = 4;
void CMDRedPacket::clear_fixtime() {
  fixtime_ = 0u;
}
 ::google::protobuf::uint32 CMDRedPacket::fixtime() const {
  // @@protoc_insertion_point(field_get:CMDRedPacket.fixTime)
  return fixtime_;
}
 void CMDRedPacket::set_fixtime(::google::protobuf::uint32 value) {
  
  fixtime_ = value;
  // @@protoc_insertion_point(field_set:CMDRedPacket.fixTime)
}

// optional uint32 diffTime = 5;
void CMDRedPacket::clear_difftime() {
  difftime_ = 0u;
}
 ::google::protobuf::uint32 CMDRedPacket::difftime() const {
  // @@protoc_insertion_point(field_get:CMDRedPacket.diffTime)
  return difftime_;
}
 void CMDRedPacket::set_difftime(::google::protobuf::uint32 value) {
  
  difftime_ = value;
  // @@protoc_insertion_point(field_set:CMDRedPacket.diffTime)
}

// optional uint32 packetMoney = 6;
void CMDRedPacket::clear_packetmoney() {
  packetmoney_ = 0u;
}
 ::google::protobuf::uint32 CMDRedPacket::packetmoney() const {
  // @@protoc_insertion_point(field_get:CMDRedPacket.packetMoney)
  return packetmoney_;
}
 void CMDRedPacket::set_packetmoney(::google::protobuf::uint32 value) {
  
  packetmoney_ = value;
  // @@protoc_insertion_point(field_set:CMDRedPacket.packetMoney)
}

// optional .eRangeType rangeType = 7;
void CMDRedPacket::clear_rangetype() {
  rangetype_ = 0;
}
 ::eRangeType CMDRedPacket::rangetype() const {
  // @@protoc_insertion_point(field_get:CMDRedPacket.rangeType)
  return static_cast< ::eRangeType >(rangetype_);
}
 void CMDRedPacket::set_rangetype(::eRangeType value) {
  
  rangetype_ = value;
  // @@protoc_insertion_point(field_set:CMDRedPacket.rangeType)
}

// optional uint32 packetNum = 8;
void CMDRedPacket::clear_packetnum() {
  packetnum_ = 0u;
}
 ::google::protobuf::uint32 CMDRedPacket::packetnum() const {
  // @@protoc_insertion_point(field_get:CMDRedPacket.packetNum)
  return packetnum_;
}
 void CMDRedPacket::set_packetnum(::google::protobuf::uint32 value) {
  
  packetnum_ = value;
  // @@protoc_insertion_point(field_set:CMDRedPacket.packetNum)
}

// optional .eRangeGender rangeGender = 9;
void CMDRedPacket::clear_rangegender() {
  rangegender_ = 0;
}
 ::eRangeGender CMDRedPacket::rangegender() const {
  // @@protoc_insertion_point(field_get:CMDRedPacket.rangeGender)
  return static_cast< ::eRangeGender >(rangegender_);
}
 void CMDRedPacket::set_rangegender(::eRangeGender value) {
  
  rangegender_ = value;
  // @@protoc_insertion_point(field_set:CMDRedPacket.rangeGender)
}

// optional string message = 10;
void CMDRedPacket::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CMDRedPacket::message() const {
  // @@protoc_insertion_point(field_get:CMDRedPacket.message)
  return message_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDRedPacket::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDRedPacket.message)
}
 void CMDRedPacket::set_message(const char* value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDRedPacket.message)
}
 void CMDRedPacket::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDRedPacket.message)
}
 ::std::string* CMDRedPacket::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:CMDRedPacket.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMDRedPacket::release_message() {
  // @@protoc_insertion_point(field_release:CMDRedPacket.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDRedPacket::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:CMDRedPacket.message)
}

// optional .ePacketFixType fixType = 11;
void CMDRedPacket::clear_fixtype() {
  fixtype_ = 0;
}
 ::ePacketFixType CMDRedPacket::fixtype() const {
  // @@protoc_insertion_point(field_get:CMDRedPacket.fixType)
  return static_cast< ::ePacketFixType >(fixtype_);
}
 void CMDRedPacket::set_fixtype(::ePacketFixType value) {
  
  fixtype_ = value;
  // @@protoc_insertion_point(field_set:CMDRedPacket.fixType)
}

// optional double longitude = 12;
void CMDRedPacket::clear_longitude() {
  longitude_ = 0;
}
 double CMDRedPacket::longitude() const {
  // @@protoc_insertion_point(field_get:CMDRedPacket.longitude)
  return longitude_;
}
 void CMDRedPacket::set_longitude(double value) {
  
  longitude_ = value;
  // @@protoc_insertion_point(field_set:CMDRedPacket.longitude)
}

// optional double latitude = 13;
void CMDRedPacket::clear_latitude() {
  latitude_ = 0;
}
 double CMDRedPacket::latitude() const {
  // @@protoc_insertion_point(field_get:CMDRedPacket.latitude)
  return latitude_;
}
 void CMDRedPacket::set_latitude(double value) {
  
  latitude_ = value;
  // @@protoc_insertion_point(field_set:CMDRedPacket.latitude)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDQryRedPacketRsp::kGroupIDFieldNumber;
const int CMDQryRedPacketRsp::kOffsetFieldNumber;
const int CMDQryRedPacketRsp::kRspFieldNumber;
const int CMDQryRedPacketRsp::kClienttimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDQryRedPacketRsp::CMDQryRedPacketRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDQryRedPacketRsp)
}

void CMDQryRedPacketRsp::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDQryRedPacketRsp::CMDQryRedPacketRsp(const CMDQryRedPacketRsp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDQryRedPacketRsp)
}

void CMDQryRedPacketRsp::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  groupid_ = 0u;
  offset_ = 0u;
  clienttimestamp_ = GOOGLE_ULONGLONG(0);
}

CMDQryRedPacketRsp::~CMDQryRedPacketRsp() {
  // @@protoc_insertion_point(destructor:CMDQryRedPacketRsp)
  SharedDtor();
}

void CMDQryRedPacketRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMDQryRedPacketRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDQryRedPacketRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDQryRedPacketRsp_descriptor_;
}

const CMDQryRedPacketRsp& CMDQryRedPacketRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ConsumeSvr_2eproto();
  return *default_instance_;
}

CMDQryRedPacketRsp* CMDQryRedPacketRsp::default_instance_ = NULL;

CMDQryRedPacketRsp* CMDQryRedPacketRsp::New(::google::protobuf::Arena* arena) const {
  CMDQryRedPacketRsp* n = new CMDQryRedPacketRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDQryRedPacketRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDQryRedPacketRsp)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDQryRedPacketRsp, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDQryRedPacketRsp*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(groupid_, offset_);
  clienttimestamp_ = GOOGLE_ULONGLONG(0);

#undef ZR_HELPER_
#undef ZR_

  rsp_.Clear();
}

bool CMDQryRedPacketRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDQryRedPacketRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 groupID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &groupid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_offset;
        break;
      }

      // optional uint32 offset = 2;
      case 2: {
        if (tag == 16) {
         parse_offset:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &offset_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_rsp;
        break;
      }

      // repeated .CMDRedPacket rsp = 3;
      case 3: {
        if (tag == 26) {
         parse_rsp:
          DO_(input->IncrementRecursionDepth());
         parse_loop_rsp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_rsp()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_rsp;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(32)) goto parse_clienttimestamp;
        break;
      }

      // optional uint64 clienttimestamp = 4;
      case 4: {
        if (tag == 32) {
         parse_clienttimestamp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &clienttimestamp_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDQryRedPacketRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDQryRedPacketRsp)
  return false;
#undef DO_
}

void CMDQryRedPacketRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDQryRedPacketRsp)
  // optional uint32 groupID = 1;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->groupid(), output);
  }

  // optional uint32 offset = 2;
  if (this->offset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->offset(), output);
  }

  // repeated .CMDRedPacket rsp = 3;
  for (unsigned int i = 0, n = this->rsp_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->rsp(i), output);
  }

  // optional uint64 clienttimestamp = 4;
  if (this->clienttimestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->clienttimestamp(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDQryRedPacketRsp)
}

::google::protobuf::uint8* CMDQryRedPacketRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDQryRedPacketRsp)
  // optional uint32 groupID = 1;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->groupid(), target);
  }

  // optional uint32 offset = 2;
  if (this->offset() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->offset(), target);
  }

  // repeated .CMDRedPacket rsp = 3;
  for (unsigned int i = 0, n = this->rsp_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->rsp(i), false, target);
  }

  // optional uint64 clienttimestamp = 4;
  if (this->clienttimestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->clienttimestamp(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDQryRedPacketRsp)
  return target;
}

int CMDQryRedPacketRsp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDQryRedPacketRsp)
  int total_size = 0;

  // optional uint32 groupID = 1;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->groupid());
  }

  // optional uint32 offset = 2;
  if (this->offset() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->offset());
  }

  // optional uint64 clienttimestamp = 4;
  if (this->clienttimestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->clienttimestamp());
  }

  // repeated .CMDRedPacket rsp = 3;
  total_size += 1 * this->rsp_size();
  for (int i = 0; i < this->rsp_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rsp(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDQryRedPacketRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDQryRedPacketRsp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDQryRedPacketRsp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDQryRedPacketRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDQryRedPacketRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDQryRedPacketRsp)
    MergeFrom(*source);
  }
}

void CMDQryRedPacketRsp::MergeFrom(const CMDQryRedPacketRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDQryRedPacketRsp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  rsp_.MergeFrom(from.rsp_);
  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
  if (from.offset() != 0) {
    set_offset(from.offset());
  }
  if (from.clienttimestamp() != 0) {
    set_clienttimestamp(from.clienttimestamp());
  }
}

void CMDQryRedPacketRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDQryRedPacketRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDQryRedPacketRsp::CopyFrom(const CMDQryRedPacketRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDQryRedPacketRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDQryRedPacketRsp::IsInitialized() const {

  return true;
}

void CMDQryRedPacketRsp::Swap(CMDQryRedPacketRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDQryRedPacketRsp::InternalSwap(CMDQryRedPacketRsp* other) {
  std::swap(groupid_, other->groupid_);
  std::swap(offset_, other->offset_);
  rsp_.UnsafeArenaSwap(&other->rsp_);
  std::swap(clienttimestamp_, other->clienttimestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDQryRedPacketRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDQryRedPacketRsp_descriptor_;
  metadata.reflection = CMDQryRedPacketRsp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDQryRedPacketRsp

// optional uint32 groupID = 1;
void CMDQryRedPacketRsp::clear_groupid() {
  groupid_ = 0u;
}
 ::google::protobuf::uint32 CMDQryRedPacketRsp::groupid() const {
  // @@protoc_insertion_point(field_get:CMDQryRedPacketRsp.groupID)
  return groupid_;
}
 void CMDQryRedPacketRsp::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDQryRedPacketRsp.groupID)
}

// optional uint32 offset = 2;
void CMDQryRedPacketRsp::clear_offset() {
  offset_ = 0u;
}
 ::google::protobuf::uint32 CMDQryRedPacketRsp::offset() const {
  // @@protoc_insertion_point(field_get:CMDQryRedPacketRsp.offset)
  return offset_;
}
 void CMDQryRedPacketRsp::set_offset(::google::protobuf::uint32 value) {
  
  offset_ = value;
  // @@protoc_insertion_point(field_set:CMDQryRedPacketRsp.offset)
}

// repeated .CMDRedPacket rsp = 3;
int CMDQryRedPacketRsp::rsp_size() const {
  return rsp_.size();
}
void CMDQryRedPacketRsp::clear_rsp() {
  rsp_.Clear();
}
const ::CMDRedPacket& CMDQryRedPacketRsp::rsp(int index) const {
  // @@protoc_insertion_point(field_get:CMDQryRedPacketRsp.rsp)
  return rsp_.Get(index);
}
::CMDRedPacket* CMDQryRedPacketRsp::mutable_rsp(int index) {
  // @@protoc_insertion_point(field_mutable:CMDQryRedPacketRsp.rsp)
  return rsp_.Mutable(index);
}
::CMDRedPacket* CMDQryRedPacketRsp::add_rsp() {
  // @@protoc_insertion_point(field_add:CMDQryRedPacketRsp.rsp)
  return rsp_.Add();
}
::google::protobuf::RepeatedPtrField< ::CMDRedPacket >*
CMDQryRedPacketRsp::mutable_rsp() {
  // @@protoc_insertion_point(field_mutable_list:CMDQryRedPacketRsp.rsp)
  return &rsp_;
}
const ::google::protobuf::RepeatedPtrField< ::CMDRedPacket >&
CMDQryRedPacketRsp::rsp() const {
  // @@protoc_insertion_point(field_list:CMDQryRedPacketRsp.rsp)
  return rsp_;
}

// optional uint64 clienttimestamp = 4;
void CMDQryRedPacketRsp::clear_clienttimestamp() {
  clienttimestamp_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 CMDQryRedPacketRsp::clienttimestamp() const {
  // @@protoc_insertion_point(field_get:CMDQryRedPacketRsp.clienttimestamp)
  return clienttimestamp_;
}
 void CMDQryRedPacketRsp::set_clienttimestamp(::google::protobuf::uint64 value) {
  
  clienttimestamp_ = value;
  // @@protoc_insertion_point(field_set:CMDQryRedPacketRsp.clienttimestamp)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDUesrTreasureBuyInfo::kBuyUserFieldNumber;
const int CMDUesrTreasureBuyInfo::kBuyNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDUesrTreasureBuyInfo::CMDUesrTreasureBuyInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDUesrTreasureBuyInfo)
}

void CMDUesrTreasureBuyInfo::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  buy_user_ = const_cast< ::UserInfo_t*>(&::UserInfo_t::default_instance());
}

CMDUesrTreasureBuyInfo::CMDUesrTreasureBuyInfo(const CMDUesrTreasureBuyInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDUesrTreasureBuyInfo)
}

void CMDUesrTreasureBuyInfo::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  buy_user_ = NULL;
  buy_num_ = 0u;
}

CMDUesrTreasureBuyInfo::~CMDUesrTreasureBuyInfo() {
  // @@protoc_insertion_point(destructor:CMDUesrTreasureBuyInfo)
  SharedDtor();
}

void CMDUesrTreasureBuyInfo::SharedDtor() {
  if (this != default_instance_) {
    delete buy_user_;
  }
}

void CMDUesrTreasureBuyInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDUesrTreasureBuyInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDUesrTreasureBuyInfo_descriptor_;
}

const CMDUesrTreasureBuyInfo& CMDUesrTreasureBuyInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ConsumeSvr_2eproto();
  return *default_instance_;
}

CMDUesrTreasureBuyInfo* CMDUesrTreasureBuyInfo::default_instance_ = NULL;

CMDUesrTreasureBuyInfo* CMDUesrTreasureBuyInfo::New(::google::protobuf::Arena* arena) const {
  CMDUesrTreasureBuyInfo* n = new CMDUesrTreasureBuyInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDUesrTreasureBuyInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDUesrTreasureBuyInfo)
  if (GetArenaNoVirtual() == NULL && buy_user_ != NULL) delete buy_user_;
  buy_user_ = NULL;
  buy_num_ = 0u;
}

bool CMDUesrTreasureBuyInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDUesrTreasureBuyInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .UserInfo_t buy_user = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_buy_user()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_buy_num;
        break;
      }

      // optional uint32 buy_num = 2;
      case 2: {
        if (tag == 16) {
         parse_buy_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &buy_num_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDUesrTreasureBuyInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDUesrTreasureBuyInfo)
  return false;
#undef DO_
}

void CMDUesrTreasureBuyInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDUesrTreasureBuyInfo)
  // optional .UserInfo_t buy_user = 1;
  if (this->has_buy_user()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->buy_user_, output);
  }

  // optional uint32 buy_num = 2;
  if (this->buy_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->buy_num(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDUesrTreasureBuyInfo)
}

::google::protobuf::uint8* CMDUesrTreasureBuyInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDUesrTreasureBuyInfo)
  // optional .UserInfo_t buy_user = 1;
  if (this->has_buy_user()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->buy_user_, false, target);
  }

  // optional uint32 buy_num = 2;
  if (this->buy_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->buy_num(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDUesrTreasureBuyInfo)
  return target;
}

int CMDUesrTreasureBuyInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDUesrTreasureBuyInfo)
  int total_size = 0;

  // optional .UserInfo_t buy_user = 1;
  if (this->has_buy_user()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->buy_user_);
  }

  // optional uint32 buy_num = 2;
  if (this->buy_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->buy_num());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDUesrTreasureBuyInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDUesrTreasureBuyInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDUesrTreasureBuyInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDUesrTreasureBuyInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDUesrTreasureBuyInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDUesrTreasureBuyInfo)
    MergeFrom(*source);
  }
}

void CMDUesrTreasureBuyInfo::MergeFrom(const CMDUesrTreasureBuyInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDUesrTreasureBuyInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.has_buy_user()) {
    mutable_buy_user()->::UserInfo_t::MergeFrom(from.buy_user());
  }
  if (from.buy_num() != 0) {
    set_buy_num(from.buy_num());
  }
}

void CMDUesrTreasureBuyInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDUesrTreasureBuyInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDUesrTreasureBuyInfo::CopyFrom(const CMDUesrTreasureBuyInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDUesrTreasureBuyInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDUesrTreasureBuyInfo::IsInitialized() const {

  return true;
}

void CMDUesrTreasureBuyInfo::Swap(CMDUesrTreasureBuyInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDUesrTreasureBuyInfo::InternalSwap(CMDUesrTreasureBuyInfo* other) {
  std::swap(buy_user_, other->buy_user_);
  std::swap(buy_num_, other->buy_num_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDUesrTreasureBuyInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDUesrTreasureBuyInfo_descriptor_;
  metadata.reflection = CMDUesrTreasureBuyInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDUesrTreasureBuyInfo

// optional .UserInfo_t buy_user = 1;
bool CMDUesrTreasureBuyInfo::has_buy_user() const {
  return !_is_default_instance_ && buy_user_ != NULL;
}
void CMDUesrTreasureBuyInfo::clear_buy_user() {
  if (GetArenaNoVirtual() == NULL && buy_user_ != NULL) delete buy_user_;
  buy_user_ = NULL;
}
const ::UserInfo_t& CMDUesrTreasureBuyInfo::buy_user() const {
  // @@protoc_insertion_point(field_get:CMDUesrTreasureBuyInfo.buy_user)
  return buy_user_ != NULL ? *buy_user_ : *default_instance_->buy_user_;
}
::UserInfo_t* CMDUesrTreasureBuyInfo::mutable_buy_user() {
  
  if (buy_user_ == NULL) {
    buy_user_ = new ::UserInfo_t;
  }
  // @@protoc_insertion_point(field_mutable:CMDUesrTreasureBuyInfo.buy_user)
  return buy_user_;
}
::UserInfo_t* CMDUesrTreasureBuyInfo::release_buy_user() {
  // @@protoc_insertion_point(field_release:CMDUesrTreasureBuyInfo.buy_user)
  
  ::UserInfo_t* temp = buy_user_;
  buy_user_ = NULL;
  return temp;
}
void CMDUesrTreasureBuyInfo::set_allocated_buy_user(::UserInfo_t* buy_user) {
  delete buy_user_;
  buy_user_ = buy_user;
  if (buy_user) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDUesrTreasureBuyInfo.buy_user)
}

// optional uint32 buy_num = 2;
void CMDUesrTreasureBuyInfo::clear_buy_num() {
  buy_num_ = 0u;
}
 ::google::protobuf::uint32 CMDUesrTreasureBuyInfo::buy_num() const {
  // @@protoc_insertion_point(field_get:CMDUesrTreasureBuyInfo.buy_num)
  return buy_num_;
}
 void CMDUesrTreasureBuyInfo::set_buy_num(::google::protobuf::uint32 value) {
  
  buy_num_ = value;
  // @@protoc_insertion_point(field_set:CMDUesrTreasureBuyInfo.buy_num)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDTreasureInfo::kTreasureIdFieldNumber;
const int CMDTreasureInfo::kGroupidFieldNumber;
const int CMDTreasureInfo::kUserFieldNumber;
const int CMDTreasureInfo::kJoinRangeFieldNumber;
const int CMDTreasureInfo::kTreasureTypeFieldNumber;
const int CMDTreasureInfo::kTreasureAmountFieldNumber;
const int CMDTreasureInfo::kTreasureTimeFieldNumber;
const int CMDTreasureInfo::kLotteryTypeFieldNumber;
const int CMDTreasureInfo::kWinnerNumFieldNumber;
const int CMDTreasureInfo::kMessageFieldNumber;
const int CMDTreasureInfo::kCreateTimeFieldNumber;
const int CMDTreasureInfo::kExtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDTreasureInfo::CMDTreasureInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDTreasureInfo)
}

void CMDTreasureInfo::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  user_ = const_cast< ::UserInfo_t*>(&::UserInfo_t::default_instance());
  ext_ = const_cast< ::CMDTreasureExtraInfo*>(&::CMDTreasureExtraInfo::default_instance());
}

CMDTreasureInfo::CMDTreasureInfo(const CMDTreasureInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDTreasureInfo)
}

void CMDTreasureInfo::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  treasure_id_ = 0u;
  groupid_ = 0u;
  user_ = NULL;
  join_range_ = 0;
  treasure_type_ = 0;
  treasure_amount_ = 0u;
  treasure_time_ = 0u;
  lottery_type_ = 0;
  winner_num_ = 0u;
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  create_time_ = 0u;
  ext_ = NULL;
}

CMDTreasureInfo::~CMDTreasureInfo() {
  // @@protoc_insertion_point(destructor:CMDTreasureInfo)
  SharedDtor();
}

void CMDTreasureInfo::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete user_;
    delete ext_;
  }
}

void CMDTreasureInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDTreasureInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDTreasureInfo_descriptor_;
}

const CMDTreasureInfo& CMDTreasureInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ConsumeSvr_2eproto();
  return *default_instance_;
}

CMDTreasureInfo* CMDTreasureInfo::default_instance_ = NULL;

CMDTreasureInfo* CMDTreasureInfo::New(::google::protobuf::Arena* arena) const {
  CMDTreasureInfo* n = new CMDTreasureInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDTreasureInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDTreasureInfo)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDTreasureInfo, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDTreasureInfo*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(treasure_id_, groupid_);
  ZR_(join_range_, lottery_type_);
  if (GetArenaNoVirtual() == NULL && user_ != NULL) delete user_;
  user_ = NULL;
  winner_num_ = 0u;
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  create_time_ = 0u;
  if (GetArenaNoVirtual() == NULL && ext_ != NULL) delete ext_;
  ext_ = NULL;

#undef ZR_HELPER_
#undef ZR_

}

bool CMDTreasureInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDTreasureInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 treasure_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &treasure_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_groupid;
        break;
      }

      // optional uint32 groupid = 2;
      case 2: {
        if (tag == 16) {
         parse_groupid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &groupid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_user;
        break;
      }

      // optional .UserInfo_t user = 3;
      case 3: {
        if (tag == 26) {
         parse_user:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_user()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_join_range;
        break;
      }

      // optional .e_UserRange join_range = 4;
      case 4: {
        if (tag == 32) {
         parse_join_range:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_join_range(static_cast< ::e_UserRange >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_treasure_type;
        break;
      }

      // optional .e_TreasureType treasure_type = 5;
      case 5: {
        if (tag == 40) {
         parse_treasure_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_treasure_type(static_cast< ::e_TreasureType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_treasure_amount;
        break;
      }

      // optional uint32 treasure_amount = 6;
      case 6: {
        if (tag == 48) {
         parse_treasure_amount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &treasure_amount_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_treasure_time;
        break;
      }

      // optional uint32 treasure_time = 7;
      case 7: {
        if (tag == 56) {
         parse_treasure_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &treasure_time_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_lottery_type;
        break;
      }

      // optional .e_LotteryType lottery_type = 8;
      case 8: {
        if (tag == 64) {
         parse_lottery_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_lottery_type(static_cast< ::e_LotteryType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_winner_num;
        break;
      }

      // optional uint32 winner_num = 9;
      case 9: {
        if (tag == 72) {
         parse_winner_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &winner_num_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_message;
        break;
      }

      // optional string message = 10;
      case 10: {
        if (tag == 82) {
         parse_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), this->message().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMDTreasureInfo.message"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_create_time;
        break;
      }

      // optional uint32 create_time = 11;
      case 11: {
        if (tag == 88) {
         parse_create_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &create_time_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_ext;
        break;
      }

      // optional .CMDTreasureExtraInfo ext = 12;
      case 12: {
        if (tag == 98) {
         parse_ext:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ext()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDTreasureInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDTreasureInfo)
  return false;
#undef DO_
}

void CMDTreasureInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDTreasureInfo)
  // optional uint32 treasure_id = 1;
  if (this->treasure_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->treasure_id(), output);
  }

  // optional uint32 groupid = 2;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->groupid(), output);
  }

  // optional .UserInfo_t user = 3;
  if (this->has_user()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->user_, output);
  }

  // optional .e_UserRange join_range = 4;
  if (this->join_range() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->join_range(), output);
  }

  // optional .e_TreasureType treasure_type = 5;
  if (this->treasure_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->treasure_type(), output);
  }

  // optional uint32 treasure_amount = 6;
  if (this->treasure_amount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->treasure_amount(), output);
  }

  // optional uint32 treasure_time = 7;
  if (this->treasure_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->treasure_time(), output);
  }

  // optional .e_LotteryType lottery_type = 8;
  if (this->lottery_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->lottery_type(), output);
  }

  // optional uint32 winner_num = 9;
  if (this->winner_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->winner_num(), output);
  }

  // optional string message = 10;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDTreasureInfo.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->message(), output);
  }

  // optional uint32 create_time = 11;
  if (this->create_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->create_time(), output);
  }

  // optional .CMDTreasureExtraInfo ext = 12;
  if (this->has_ext()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, *this->ext_, output);
  }

  // @@protoc_insertion_point(serialize_end:CMDTreasureInfo)
}

::google::protobuf::uint8* CMDTreasureInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDTreasureInfo)
  // optional uint32 treasure_id = 1;
  if (this->treasure_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->treasure_id(), target);
  }

  // optional uint32 groupid = 2;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->groupid(), target);
  }

  // optional .UserInfo_t user = 3;
  if (this->has_user()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->user_, false, target);
  }

  // optional .e_UserRange join_range = 4;
  if (this->join_range() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->join_range(), target);
  }

  // optional .e_TreasureType treasure_type = 5;
  if (this->treasure_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->treasure_type(), target);
  }

  // optional uint32 treasure_amount = 6;
  if (this->treasure_amount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->treasure_amount(), target);
  }

  // optional uint32 treasure_time = 7;
  if (this->treasure_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->treasure_time(), target);
  }

  // optional .e_LotteryType lottery_type = 8;
  if (this->lottery_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->lottery_type(), target);
  }

  // optional uint32 winner_num = 9;
  if (this->winner_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->winner_num(), target);
  }

  // optional string message = 10;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDTreasureInfo.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->message(), target);
  }

  // optional uint32 create_time = 11;
  if (this->create_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->create_time(), target);
  }

  // optional .CMDTreasureExtraInfo ext = 12;
  if (this->has_ext()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        12, *this->ext_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDTreasureInfo)
  return target;
}

int CMDTreasureInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDTreasureInfo)
  int total_size = 0;

  // optional uint32 treasure_id = 1;
  if (this->treasure_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->treasure_id());
  }

  // optional uint32 groupid = 2;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->groupid());
  }

  // optional .UserInfo_t user = 3;
  if (this->has_user()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->user_);
  }

  // optional .e_UserRange join_range = 4;
  if (this->join_range() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->join_range());
  }

  // optional .e_TreasureType treasure_type = 5;
  if (this->treasure_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->treasure_type());
  }

  // optional uint32 treasure_amount = 6;
  if (this->treasure_amount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->treasure_amount());
  }

  // optional uint32 treasure_time = 7;
  if (this->treasure_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->treasure_time());
  }

  // optional .e_LotteryType lottery_type = 8;
  if (this->lottery_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->lottery_type());
  }

  // optional uint32 winner_num = 9;
  if (this->winner_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->winner_num());
  }

  // optional string message = 10;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // optional uint32 create_time = 11;
  if (this->create_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->create_time());
  }

  // optional .CMDTreasureExtraInfo ext = 12;
  if (this->has_ext()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->ext_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDTreasureInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDTreasureInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDTreasureInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDTreasureInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDTreasureInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDTreasureInfo)
    MergeFrom(*source);
  }
}

void CMDTreasureInfo::MergeFrom(const CMDTreasureInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDTreasureInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.treasure_id() != 0) {
    set_treasure_id(from.treasure_id());
  }
  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
  if (from.has_user()) {
    mutable_user()->::UserInfo_t::MergeFrom(from.user());
  }
  if (from.join_range() != 0) {
    set_join_range(from.join_range());
  }
  if (from.treasure_type() != 0) {
    set_treasure_type(from.treasure_type());
  }
  if (from.treasure_amount() != 0) {
    set_treasure_amount(from.treasure_amount());
  }
  if (from.treasure_time() != 0) {
    set_treasure_time(from.treasure_time());
  }
  if (from.lottery_type() != 0) {
    set_lottery_type(from.lottery_type());
  }
  if (from.winner_num() != 0) {
    set_winner_num(from.winner_num());
  }
  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.create_time() != 0) {
    set_create_time(from.create_time());
  }
  if (from.has_ext()) {
    mutable_ext()->::CMDTreasureExtraInfo::MergeFrom(from.ext());
  }
}

void CMDTreasureInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDTreasureInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDTreasureInfo::CopyFrom(const CMDTreasureInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDTreasureInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDTreasureInfo::IsInitialized() const {

  return true;
}

void CMDTreasureInfo::Swap(CMDTreasureInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDTreasureInfo::InternalSwap(CMDTreasureInfo* other) {
  std::swap(treasure_id_, other->treasure_id_);
  std::swap(groupid_, other->groupid_);
  std::swap(user_, other->user_);
  std::swap(join_range_, other->join_range_);
  std::swap(treasure_type_, other->treasure_type_);
  std::swap(treasure_amount_, other->treasure_amount_);
  std::swap(treasure_time_, other->treasure_time_);
  std::swap(lottery_type_, other->lottery_type_);
  std::swap(winner_num_, other->winner_num_);
  message_.Swap(&other->message_);
  std::swap(create_time_, other->create_time_);
  std::swap(ext_, other->ext_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDTreasureInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDTreasureInfo_descriptor_;
  metadata.reflection = CMDTreasureInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDTreasureInfo

// optional uint32 treasure_id = 1;
void CMDTreasureInfo::clear_treasure_id() {
  treasure_id_ = 0u;
}
 ::google::protobuf::uint32 CMDTreasureInfo::treasure_id() const {
  // @@protoc_insertion_point(field_get:CMDTreasureInfo.treasure_id)
  return treasure_id_;
}
 void CMDTreasureInfo::set_treasure_id(::google::protobuf::uint32 value) {
  
  treasure_id_ = value;
  // @@protoc_insertion_point(field_set:CMDTreasureInfo.treasure_id)
}

// optional uint32 groupid = 2;
void CMDTreasureInfo::clear_groupid() {
  groupid_ = 0u;
}
 ::google::protobuf::uint32 CMDTreasureInfo::groupid() const {
  // @@protoc_insertion_point(field_get:CMDTreasureInfo.groupid)
  return groupid_;
}
 void CMDTreasureInfo::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDTreasureInfo.groupid)
}

// optional .UserInfo_t user = 3;
bool CMDTreasureInfo::has_user() const {
  return !_is_default_instance_ && user_ != NULL;
}
void CMDTreasureInfo::clear_user() {
  if (GetArenaNoVirtual() == NULL && user_ != NULL) delete user_;
  user_ = NULL;
}
const ::UserInfo_t& CMDTreasureInfo::user() const {
  // @@protoc_insertion_point(field_get:CMDTreasureInfo.user)
  return user_ != NULL ? *user_ : *default_instance_->user_;
}
::UserInfo_t* CMDTreasureInfo::mutable_user() {
  
  if (user_ == NULL) {
    user_ = new ::UserInfo_t;
  }
  // @@protoc_insertion_point(field_mutable:CMDTreasureInfo.user)
  return user_;
}
::UserInfo_t* CMDTreasureInfo::release_user() {
  // @@protoc_insertion_point(field_release:CMDTreasureInfo.user)
  
  ::UserInfo_t* temp = user_;
  user_ = NULL;
  return temp;
}
void CMDTreasureInfo::set_allocated_user(::UserInfo_t* user) {
  delete user_;
  user_ = user;
  if (user) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDTreasureInfo.user)
}

// optional .e_UserRange join_range = 4;
void CMDTreasureInfo::clear_join_range() {
  join_range_ = 0;
}
 ::e_UserRange CMDTreasureInfo::join_range() const {
  // @@protoc_insertion_point(field_get:CMDTreasureInfo.join_range)
  return static_cast< ::e_UserRange >(join_range_);
}
 void CMDTreasureInfo::set_join_range(::e_UserRange value) {
  
  join_range_ = value;
  // @@protoc_insertion_point(field_set:CMDTreasureInfo.join_range)
}

// optional .e_TreasureType treasure_type = 5;
void CMDTreasureInfo::clear_treasure_type() {
  treasure_type_ = 0;
}
 ::e_TreasureType CMDTreasureInfo::treasure_type() const {
  // @@protoc_insertion_point(field_get:CMDTreasureInfo.treasure_type)
  return static_cast< ::e_TreasureType >(treasure_type_);
}
 void CMDTreasureInfo::set_treasure_type(::e_TreasureType value) {
  
  treasure_type_ = value;
  // @@protoc_insertion_point(field_set:CMDTreasureInfo.treasure_type)
}

// optional uint32 treasure_amount = 6;
void CMDTreasureInfo::clear_treasure_amount() {
  treasure_amount_ = 0u;
}
 ::google::protobuf::uint32 CMDTreasureInfo::treasure_amount() const {
  // @@protoc_insertion_point(field_get:CMDTreasureInfo.treasure_amount)
  return treasure_amount_;
}
 void CMDTreasureInfo::set_treasure_amount(::google::protobuf::uint32 value) {
  
  treasure_amount_ = value;
  // @@protoc_insertion_point(field_set:CMDTreasureInfo.treasure_amount)
}

// optional uint32 treasure_time = 7;
void CMDTreasureInfo::clear_treasure_time() {
  treasure_time_ = 0u;
}
 ::google::protobuf::uint32 CMDTreasureInfo::treasure_time() const {
  // @@protoc_insertion_point(field_get:CMDTreasureInfo.treasure_time)
  return treasure_time_;
}
 void CMDTreasureInfo::set_treasure_time(::google::protobuf::uint32 value) {
  
  treasure_time_ = value;
  // @@protoc_insertion_point(field_set:CMDTreasureInfo.treasure_time)
}

// optional .e_LotteryType lottery_type = 8;
void CMDTreasureInfo::clear_lottery_type() {
  lottery_type_ = 0;
}
 ::e_LotteryType CMDTreasureInfo::lottery_type() const {
  // @@protoc_insertion_point(field_get:CMDTreasureInfo.lottery_type)
  return static_cast< ::e_LotteryType >(lottery_type_);
}
 void CMDTreasureInfo::set_lottery_type(::e_LotteryType value) {
  
  lottery_type_ = value;
  // @@protoc_insertion_point(field_set:CMDTreasureInfo.lottery_type)
}

// optional uint32 winner_num = 9;
void CMDTreasureInfo::clear_winner_num() {
  winner_num_ = 0u;
}
 ::google::protobuf::uint32 CMDTreasureInfo::winner_num() const {
  // @@protoc_insertion_point(field_get:CMDTreasureInfo.winner_num)
  return winner_num_;
}
 void CMDTreasureInfo::set_winner_num(::google::protobuf::uint32 value) {
  
  winner_num_ = value;
  // @@protoc_insertion_point(field_set:CMDTreasureInfo.winner_num)
}

// optional string message = 10;
void CMDTreasureInfo::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CMDTreasureInfo::message() const {
  // @@protoc_insertion_point(field_get:CMDTreasureInfo.message)
  return message_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDTreasureInfo::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDTreasureInfo.message)
}
 void CMDTreasureInfo::set_message(const char* value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDTreasureInfo.message)
}
 void CMDTreasureInfo::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDTreasureInfo.message)
}
 ::std::string* CMDTreasureInfo::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:CMDTreasureInfo.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMDTreasureInfo::release_message() {
  // @@protoc_insertion_point(field_release:CMDTreasureInfo.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDTreasureInfo::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:CMDTreasureInfo.message)
}

// optional uint32 create_time = 11;
void CMDTreasureInfo::clear_create_time() {
  create_time_ = 0u;
}
 ::google::protobuf::uint32 CMDTreasureInfo::create_time() const {
  // @@protoc_insertion_point(field_get:CMDTreasureInfo.create_time)
  return create_time_;
}
 void CMDTreasureInfo::set_create_time(::google::protobuf::uint32 value) {
  
  create_time_ = value;
  // @@protoc_insertion_point(field_set:CMDTreasureInfo.create_time)
}

// optional .CMDTreasureExtraInfo ext = 12;
bool CMDTreasureInfo::has_ext() const {
  return !_is_default_instance_ && ext_ != NULL;
}
void CMDTreasureInfo::clear_ext() {
  if (GetArenaNoVirtual() == NULL && ext_ != NULL) delete ext_;
  ext_ = NULL;
}
const ::CMDTreasureExtraInfo& CMDTreasureInfo::ext() const {
  // @@protoc_insertion_point(field_get:CMDTreasureInfo.ext)
  return ext_ != NULL ? *ext_ : *default_instance_->ext_;
}
::CMDTreasureExtraInfo* CMDTreasureInfo::mutable_ext() {
  
  if (ext_ == NULL) {
    ext_ = new ::CMDTreasureExtraInfo;
  }
  // @@protoc_insertion_point(field_mutable:CMDTreasureInfo.ext)
  return ext_;
}
::CMDTreasureExtraInfo* CMDTreasureInfo::release_ext() {
  // @@protoc_insertion_point(field_release:CMDTreasureInfo.ext)
  
  ::CMDTreasureExtraInfo* temp = ext_;
  ext_ = NULL;
  return temp;
}
void CMDTreasureInfo::set_allocated_ext(::CMDTreasureExtraInfo* ext) {
  delete ext_;
  ext_ = ext;
  if (ext) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDTreasureInfo.ext)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDTreasureExtraInfo::kBuyPeopleFieldNumber;
const int CMDTreasureExtraInfo::kBuyAmountFieldNumber;
const int CMDTreasureExtraInfo::kStatusFieldNumber;
const int CMDTreasureExtraInfo::kFinishedTimeFieldNumber;
const int CMDTreasureExtraInfo::kMyBuyFieldNumber;
const int CMDTreasureExtraInfo::kBuyersFieldNumber;
const int CMDTreasureExtraInfo::kWinnersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDTreasureExtraInfo::CMDTreasureExtraInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDTreasureExtraInfo)
}

void CMDTreasureExtraInfo::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  my_buy_ = const_cast< ::CMDUesrTreasureBuyInfo*>(&::CMDUesrTreasureBuyInfo::default_instance());
}

CMDTreasureExtraInfo::CMDTreasureExtraInfo(const CMDTreasureExtraInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDTreasureExtraInfo)
}

void CMDTreasureExtraInfo::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  buy_people_ = 0u;
  buy_amount_ = 0u;
  status_ = 0;
  finished_time_ = 0u;
  my_buy_ = NULL;
}

CMDTreasureExtraInfo::~CMDTreasureExtraInfo() {
  // @@protoc_insertion_point(destructor:CMDTreasureExtraInfo)
  SharedDtor();
}

void CMDTreasureExtraInfo::SharedDtor() {
  if (this != default_instance_) {
    delete my_buy_;
  }
}

void CMDTreasureExtraInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDTreasureExtraInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDTreasureExtraInfo_descriptor_;
}

const CMDTreasureExtraInfo& CMDTreasureExtraInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ConsumeSvr_2eproto();
  return *default_instance_;
}

CMDTreasureExtraInfo* CMDTreasureExtraInfo::default_instance_ = NULL;

CMDTreasureExtraInfo* CMDTreasureExtraInfo::New(::google::protobuf::Arena* arena) const {
  CMDTreasureExtraInfo* n = new CMDTreasureExtraInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDTreasureExtraInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDTreasureExtraInfo)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDTreasureExtraInfo, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDTreasureExtraInfo*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(buy_people_, finished_time_);
  if (GetArenaNoVirtual() == NULL && my_buy_ != NULL) delete my_buy_;
  my_buy_ = NULL;

#undef ZR_HELPER_
#undef ZR_

  buyers_.Clear();
  winners_.Clear();
}

bool CMDTreasureExtraInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDTreasureExtraInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 buy_people = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &buy_people_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_buy_amount;
        break;
      }

      // optional uint32 buy_amount = 2;
      case 2: {
        if (tag == 16) {
         parse_buy_amount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &buy_amount_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_status;
        break;
      }

      // optional .e_TreasureStatus status = 3;
      case 3: {
        if (tag == 24) {
         parse_status:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_status(static_cast< ::e_TreasureStatus >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_finished_time;
        break;
      }

      // optional uint32 finished_time = 4;
      case 4: {
        if (tag == 32) {
         parse_finished_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &finished_time_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_my_buy;
        break;
      }

      // optional .CMDUesrTreasureBuyInfo my_buy = 5;
      case 5: {
        if (tag == 42) {
         parse_my_buy:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_my_buy()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_buyers;
        break;
      }

      // repeated .CMDUesrTreasureBuyInfo buyers = 6;
      case 6: {
        if (tag == 50) {
         parse_buyers:
          DO_(input->IncrementRecursionDepth());
         parse_loop_buyers:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_buyers()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_loop_buyers;
        if (input->ExpectTag(58)) goto parse_loop_winners;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .CMDUesrTreasureBuyInfo winners = 7;
      case 7: {
        if (tag == 58) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_winners:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_winners()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_loop_winners;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDTreasureExtraInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDTreasureExtraInfo)
  return false;
#undef DO_
}

void CMDTreasureExtraInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDTreasureExtraInfo)
  // optional uint32 buy_people = 1;
  if (this->buy_people() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->buy_people(), output);
  }

  // optional uint32 buy_amount = 2;
  if (this->buy_amount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->buy_amount(), output);
  }

  // optional .e_TreasureStatus status = 3;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->status(), output);
  }

  // optional uint32 finished_time = 4;
  if (this->finished_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->finished_time(), output);
  }

  // optional .CMDUesrTreasureBuyInfo my_buy = 5;
  if (this->has_my_buy()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->my_buy_, output);
  }

  // repeated .CMDUesrTreasureBuyInfo buyers = 6;
  for (unsigned int i = 0, n = this->buyers_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->buyers(i), output);
  }

  // repeated .CMDUesrTreasureBuyInfo winners = 7;
  for (unsigned int i = 0, n = this->winners_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->winners(i), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDTreasureExtraInfo)
}

::google::protobuf::uint8* CMDTreasureExtraInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDTreasureExtraInfo)
  // optional uint32 buy_people = 1;
  if (this->buy_people() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->buy_people(), target);
  }

  // optional uint32 buy_amount = 2;
  if (this->buy_amount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->buy_amount(), target);
  }

  // optional .e_TreasureStatus status = 3;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->status(), target);
  }

  // optional uint32 finished_time = 4;
  if (this->finished_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->finished_time(), target);
  }

  // optional .CMDUesrTreasureBuyInfo my_buy = 5;
  if (this->has_my_buy()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->my_buy_, false, target);
  }

  // repeated .CMDUesrTreasureBuyInfo buyers = 6;
  for (unsigned int i = 0, n = this->buyers_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, this->buyers(i), false, target);
  }

  // repeated .CMDUesrTreasureBuyInfo winners = 7;
  for (unsigned int i = 0, n = this->winners_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, this->winners(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDTreasureExtraInfo)
  return target;
}

int CMDTreasureExtraInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDTreasureExtraInfo)
  int total_size = 0;

  // optional uint32 buy_people = 1;
  if (this->buy_people() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->buy_people());
  }

  // optional uint32 buy_amount = 2;
  if (this->buy_amount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->buy_amount());
  }

  // optional .e_TreasureStatus status = 3;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
  }

  // optional uint32 finished_time = 4;
  if (this->finished_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->finished_time());
  }

  // optional .CMDUesrTreasureBuyInfo my_buy = 5;
  if (this->has_my_buy()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->my_buy_);
  }

  // repeated .CMDUesrTreasureBuyInfo buyers = 6;
  total_size += 1 * this->buyers_size();
  for (int i = 0; i < this->buyers_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->buyers(i));
  }

  // repeated .CMDUesrTreasureBuyInfo winners = 7;
  total_size += 1 * this->winners_size();
  for (int i = 0; i < this->winners_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->winners(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDTreasureExtraInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDTreasureExtraInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDTreasureExtraInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDTreasureExtraInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDTreasureExtraInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDTreasureExtraInfo)
    MergeFrom(*source);
  }
}

void CMDTreasureExtraInfo::MergeFrom(const CMDTreasureExtraInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDTreasureExtraInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  buyers_.MergeFrom(from.buyers_);
  winners_.MergeFrom(from.winners_);
  if (from.buy_people() != 0) {
    set_buy_people(from.buy_people());
  }
  if (from.buy_amount() != 0) {
    set_buy_amount(from.buy_amount());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
  if (from.finished_time() != 0) {
    set_finished_time(from.finished_time());
  }
  if (from.has_my_buy()) {
    mutable_my_buy()->::CMDUesrTreasureBuyInfo::MergeFrom(from.my_buy());
  }
}

void CMDTreasureExtraInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDTreasureExtraInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDTreasureExtraInfo::CopyFrom(const CMDTreasureExtraInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDTreasureExtraInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDTreasureExtraInfo::IsInitialized() const {

  return true;
}

void CMDTreasureExtraInfo::Swap(CMDTreasureExtraInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDTreasureExtraInfo::InternalSwap(CMDTreasureExtraInfo* other) {
  std::swap(buy_people_, other->buy_people_);
  std::swap(buy_amount_, other->buy_amount_);
  std::swap(status_, other->status_);
  std::swap(finished_time_, other->finished_time_);
  std::swap(my_buy_, other->my_buy_);
  buyers_.UnsafeArenaSwap(&other->buyers_);
  winners_.UnsafeArenaSwap(&other->winners_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDTreasureExtraInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDTreasureExtraInfo_descriptor_;
  metadata.reflection = CMDTreasureExtraInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDTreasureExtraInfo

// optional uint32 buy_people = 1;
void CMDTreasureExtraInfo::clear_buy_people() {
  buy_people_ = 0u;
}
 ::google::protobuf::uint32 CMDTreasureExtraInfo::buy_people() const {
  // @@protoc_insertion_point(field_get:CMDTreasureExtraInfo.buy_people)
  return buy_people_;
}
 void CMDTreasureExtraInfo::set_buy_people(::google::protobuf::uint32 value) {
  
  buy_people_ = value;
  // @@protoc_insertion_point(field_set:CMDTreasureExtraInfo.buy_people)
}

// optional uint32 buy_amount = 2;
void CMDTreasureExtraInfo::clear_buy_amount() {
  buy_amount_ = 0u;
}
 ::google::protobuf::uint32 CMDTreasureExtraInfo::buy_amount() const {
  // @@protoc_insertion_point(field_get:CMDTreasureExtraInfo.buy_amount)
  return buy_amount_;
}
 void CMDTreasureExtraInfo::set_buy_amount(::google::protobuf::uint32 value) {
  
  buy_amount_ = value;
  // @@protoc_insertion_point(field_set:CMDTreasureExtraInfo.buy_amount)
}

// optional .e_TreasureStatus status = 3;
void CMDTreasureExtraInfo::clear_status() {
  status_ = 0;
}
 ::e_TreasureStatus CMDTreasureExtraInfo::status() const {
  // @@protoc_insertion_point(field_get:CMDTreasureExtraInfo.status)
  return static_cast< ::e_TreasureStatus >(status_);
}
 void CMDTreasureExtraInfo::set_status(::e_TreasureStatus value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:CMDTreasureExtraInfo.status)
}

// optional uint32 finished_time = 4;
void CMDTreasureExtraInfo::clear_finished_time() {
  finished_time_ = 0u;
}
 ::google::protobuf::uint32 CMDTreasureExtraInfo::finished_time() const {
  // @@protoc_insertion_point(field_get:CMDTreasureExtraInfo.finished_time)
  return finished_time_;
}
 void CMDTreasureExtraInfo::set_finished_time(::google::protobuf::uint32 value) {
  
  finished_time_ = value;
  // @@protoc_insertion_point(field_set:CMDTreasureExtraInfo.finished_time)
}

// optional .CMDUesrTreasureBuyInfo my_buy = 5;
bool CMDTreasureExtraInfo::has_my_buy() const {
  return !_is_default_instance_ && my_buy_ != NULL;
}
void CMDTreasureExtraInfo::clear_my_buy() {
  if (GetArenaNoVirtual() == NULL && my_buy_ != NULL) delete my_buy_;
  my_buy_ = NULL;
}
const ::CMDUesrTreasureBuyInfo& CMDTreasureExtraInfo::my_buy() const {
  // @@protoc_insertion_point(field_get:CMDTreasureExtraInfo.my_buy)
  return my_buy_ != NULL ? *my_buy_ : *default_instance_->my_buy_;
}
::CMDUesrTreasureBuyInfo* CMDTreasureExtraInfo::mutable_my_buy() {
  
  if (my_buy_ == NULL) {
    my_buy_ = new ::CMDUesrTreasureBuyInfo;
  }
  // @@protoc_insertion_point(field_mutable:CMDTreasureExtraInfo.my_buy)
  return my_buy_;
}
::CMDUesrTreasureBuyInfo* CMDTreasureExtraInfo::release_my_buy() {
  // @@protoc_insertion_point(field_release:CMDTreasureExtraInfo.my_buy)
  
  ::CMDUesrTreasureBuyInfo* temp = my_buy_;
  my_buy_ = NULL;
  return temp;
}
void CMDTreasureExtraInfo::set_allocated_my_buy(::CMDUesrTreasureBuyInfo* my_buy) {
  delete my_buy_;
  my_buy_ = my_buy;
  if (my_buy) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDTreasureExtraInfo.my_buy)
}

// repeated .CMDUesrTreasureBuyInfo buyers = 6;
int CMDTreasureExtraInfo::buyers_size() const {
  return buyers_.size();
}
void CMDTreasureExtraInfo::clear_buyers() {
  buyers_.Clear();
}
const ::CMDUesrTreasureBuyInfo& CMDTreasureExtraInfo::buyers(int index) const {
  // @@protoc_insertion_point(field_get:CMDTreasureExtraInfo.buyers)
  return buyers_.Get(index);
}
::CMDUesrTreasureBuyInfo* CMDTreasureExtraInfo::mutable_buyers(int index) {
  // @@protoc_insertion_point(field_mutable:CMDTreasureExtraInfo.buyers)
  return buyers_.Mutable(index);
}
::CMDUesrTreasureBuyInfo* CMDTreasureExtraInfo::add_buyers() {
  // @@protoc_insertion_point(field_add:CMDTreasureExtraInfo.buyers)
  return buyers_.Add();
}
::google::protobuf::RepeatedPtrField< ::CMDUesrTreasureBuyInfo >*
CMDTreasureExtraInfo::mutable_buyers() {
  // @@protoc_insertion_point(field_mutable_list:CMDTreasureExtraInfo.buyers)
  return &buyers_;
}
const ::google::protobuf::RepeatedPtrField< ::CMDUesrTreasureBuyInfo >&
CMDTreasureExtraInfo::buyers() const {
  // @@protoc_insertion_point(field_list:CMDTreasureExtraInfo.buyers)
  return buyers_;
}

// repeated .CMDUesrTreasureBuyInfo winners = 7;
int CMDTreasureExtraInfo::winners_size() const {
  return winners_.size();
}
void CMDTreasureExtraInfo::clear_winners() {
  winners_.Clear();
}
const ::CMDUesrTreasureBuyInfo& CMDTreasureExtraInfo::winners(int index) const {
  // @@protoc_insertion_point(field_get:CMDTreasureExtraInfo.winners)
  return winners_.Get(index);
}
::CMDUesrTreasureBuyInfo* CMDTreasureExtraInfo::mutable_winners(int index) {
  // @@protoc_insertion_point(field_mutable:CMDTreasureExtraInfo.winners)
  return winners_.Mutable(index);
}
::CMDUesrTreasureBuyInfo* CMDTreasureExtraInfo::add_winners() {
  // @@protoc_insertion_point(field_add:CMDTreasureExtraInfo.winners)
  return winners_.Add();
}
::google::protobuf::RepeatedPtrField< ::CMDUesrTreasureBuyInfo >*
CMDTreasureExtraInfo::mutable_winners() {
  // @@protoc_insertion_point(field_mutable_list:CMDTreasureExtraInfo.winners)
  return &winners_;
}
const ::google::protobuf::RepeatedPtrField< ::CMDUesrTreasureBuyInfo >&
CMDTreasureExtraInfo::winners() const {
  // @@protoc_insertion_point(field_list:CMDTreasureExtraInfo.winners)
  return winners_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDBuyCodeRange::kBuyTimeFieldNumber;
const int CMDBuyCodeRange::kBeginFieldNumber;
const int CMDBuyCodeRange::kEndFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDBuyCodeRange::CMDBuyCodeRange()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDBuyCodeRange)
}

void CMDBuyCodeRange::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDBuyCodeRange::CMDBuyCodeRange(const CMDBuyCodeRange& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDBuyCodeRange)
}

void CMDBuyCodeRange::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  buy_time_ = 0u;
  begin_ = 0u;
  end_ = 0u;
}

CMDBuyCodeRange::~CMDBuyCodeRange() {
  // @@protoc_insertion_point(destructor:CMDBuyCodeRange)
  SharedDtor();
}

void CMDBuyCodeRange::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMDBuyCodeRange::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDBuyCodeRange::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDBuyCodeRange_descriptor_;
}

const CMDBuyCodeRange& CMDBuyCodeRange::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ConsumeSvr_2eproto();
  return *default_instance_;
}

CMDBuyCodeRange* CMDBuyCodeRange::default_instance_ = NULL;

CMDBuyCodeRange* CMDBuyCodeRange::New(::google::protobuf::Arena* arena) const {
  CMDBuyCodeRange* n = new CMDBuyCodeRange;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDBuyCodeRange::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDBuyCodeRange)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDBuyCodeRange, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDBuyCodeRange*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(buy_time_, end_);

#undef ZR_HELPER_
#undef ZR_

}

bool CMDBuyCodeRange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDBuyCodeRange)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 buy_time = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &buy_time_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_begin;
        break;
      }

      // optional uint32 begin = 2;
      case 2: {
        if (tag == 16) {
         parse_begin:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &begin_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_end;
        break;
      }

      // optional uint32 end = 3;
      case 3: {
        if (tag == 24) {
         parse_end:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &end_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDBuyCodeRange)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDBuyCodeRange)
  return false;
#undef DO_
}

void CMDBuyCodeRange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDBuyCodeRange)
  // optional uint32 buy_time = 1;
  if (this->buy_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->buy_time(), output);
  }

  // optional uint32 begin = 2;
  if (this->begin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->begin(), output);
  }

  // optional uint32 end = 3;
  if (this->end() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->end(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDBuyCodeRange)
}

::google::protobuf::uint8* CMDBuyCodeRange::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDBuyCodeRange)
  // optional uint32 buy_time = 1;
  if (this->buy_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->buy_time(), target);
  }

  // optional uint32 begin = 2;
  if (this->begin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->begin(), target);
  }

  // optional uint32 end = 3;
  if (this->end() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->end(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDBuyCodeRange)
  return target;
}

int CMDBuyCodeRange::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDBuyCodeRange)
  int total_size = 0;

  // optional uint32 buy_time = 1;
  if (this->buy_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->buy_time());
  }

  // optional uint32 begin = 2;
  if (this->begin() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->begin());
  }

  // optional uint32 end = 3;
  if (this->end() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->end());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDBuyCodeRange::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDBuyCodeRange)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDBuyCodeRange* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDBuyCodeRange>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDBuyCodeRange)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDBuyCodeRange)
    MergeFrom(*source);
  }
}

void CMDBuyCodeRange::MergeFrom(const CMDBuyCodeRange& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDBuyCodeRange)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.buy_time() != 0) {
    set_buy_time(from.buy_time());
  }
  if (from.begin() != 0) {
    set_begin(from.begin());
  }
  if (from.end() != 0) {
    set_end(from.end());
  }
}

void CMDBuyCodeRange::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDBuyCodeRange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDBuyCodeRange::CopyFrom(const CMDBuyCodeRange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDBuyCodeRange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDBuyCodeRange::IsInitialized() const {

  return true;
}

void CMDBuyCodeRange::Swap(CMDBuyCodeRange* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDBuyCodeRange::InternalSwap(CMDBuyCodeRange* other) {
  std::swap(buy_time_, other->buy_time_);
  std::swap(begin_, other->begin_);
  std::swap(end_, other->end_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDBuyCodeRange::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDBuyCodeRange_descriptor_;
  metadata.reflection = CMDBuyCodeRange_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDBuyCodeRange

// optional uint32 buy_time = 1;
void CMDBuyCodeRange::clear_buy_time() {
  buy_time_ = 0u;
}
 ::google::protobuf::uint32 CMDBuyCodeRange::buy_time() const {
  // @@protoc_insertion_point(field_get:CMDBuyCodeRange.buy_time)
  return buy_time_;
}
 void CMDBuyCodeRange::set_buy_time(::google::protobuf::uint32 value) {
  
  buy_time_ = value;
  // @@protoc_insertion_point(field_set:CMDBuyCodeRange.buy_time)
}

// optional uint32 begin = 2;
void CMDBuyCodeRange::clear_begin() {
  begin_ = 0u;
}
 ::google::protobuf::uint32 CMDBuyCodeRange::begin() const {
  // @@protoc_insertion_point(field_get:CMDBuyCodeRange.begin)
  return begin_;
}
 void CMDBuyCodeRange::set_begin(::google::protobuf::uint32 value) {
  
  begin_ = value;
  // @@protoc_insertion_point(field_set:CMDBuyCodeRange.begin)
}

// optional uint32 end = 3;
void CMDBuyCodeRange::clear_end() {
  end_ = 0u;
}
 ::google::protobuf::uint32 CMDBuyCodeRange::end() const {
  // @@protoc_insertion_point(field_get:CMDBuyCodeRange.end)
  return end_;
}
 void CMDBuyCodeRange::set_end(::google::protobuf::uint32 value) {
  
  end_ = value;
  // @@protoc_insertion_point(field_set:CMDBuyCodeRange.end)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDSponsorTreasureReq::kInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDSponsorTreasureReq::CMDSponsorTreasureReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDSponsorTreasureReq)
}

void CMDSponsorTreasureReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  info_ = const_cast< ::CMDTreasureInfo*>(&::CMDTreasureInfo::default_instance());
}

CMDSponsorTreasureReq::CMDSponsorTreasureReq(const CMDSponsorTreasureReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDSponsorTreasureReq)
}

void CMDSponsorTreasureReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  info_ = NULL;
}

CMDSponsorTreasureReq::~CMDSponsorTreasureReq() {
  // @@protoc_insertion_point(destructor:CMDSponsorTreasureReq)
  SharedDtor();
}

void CMDSponsorTreasureReq::SharedDtor() {
  if (this != default_instance_) {
    delete info_;
  }
}

void CMDSponsorTreasureReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDSponsorTreasureReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDSponsorTreasureReq_descriptor_;
}

const CMDSponsorTreasureReq& CMDSponsorTreasureReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ConsumeSvr_2eproto();
  return *default_instance_;
}

CMDSponsorTreasureReq* CMDSponsorTreasureReq::default_instance_ = NULL;

CMDSponsorTreasureReq* CMDSponsorTreasureReq::New(::google::protobuf::Arena* arena) const {
  CMDSponsorTreasureReq* n = new CMDSponsorTreasureReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDSponsorTreasureReq::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDSponsorTreasureReq)
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}

bool CMDSponsorTreasureReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDSponsorTreasureReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CMDTreasureInfo info = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDSponsorTreasureReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDSponsorTreasureReq)
  return false;
#undef DO_
}

void CMDSponsorTreasureReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDSponsorTreasureReq)
  // optional .CMDTreasureInfo info = 1;
  if (this->has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->info_, output);
  }

  // @@protoc_insertion_point(serialize_end:CMDSponsorTreasureReq)
}

::google::protobuf::uint8* CMDSponsorTreasureReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDSponsorTreasureReq)
  // optional .CMDTreasureInfo info = 1;
  if (this->has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->info_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDSponsorTreasureReq)
  return target;
}

int CMDSponsorTreasureReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDSponsorTreasureReq)
  int total_size = 0;

  // optional .CMDTreasureInfo info = 1;
  if (this->has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->info_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDSponsorTreasureReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDSponsorTreasureReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDSponsorTreasureReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDSponsorTreasureReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDSponsorTreasureReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDSponsorTreasureReq)
    MergeFrom(*source);
  }
}

void CMDSponsorTreasureReq::MergeFrom(const CMDSponsorTreasureReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDSponsorTreasureReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.has_info()) {
    mutable_info()->::CMDTreasureInfo::MergeFrom(from.info());
  }
}

void CMDSponsorTreasureReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDSponsorTreasureReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDSponsorTreasureReq::CopyFrom(const CMDSponsorTreasureReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDSponsorTreasureReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDSponsorTreasureReq::IsInitialized() const {

  return true;
}

void CMDSponsorTreasureReq::Swap(CMDSponsorTreasureReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDSponsorTreasureReq::InternalSwap(CMDSponsorTreasureReq* other) {
  std::swap(info_, other->info_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDSponsorTreasureReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDSponsorTreasureReq_descriptor_;
  metadata.reflection = CMDSponsorTreasureReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDSponsorTreasureReq

// optional .CMDTreasureInfo info = 1;
bool CMDSponsorTreasureReq::has_info() const {
  return !_is_default_instance_ && info_ != NULL;
}
void CMDSponsorTreasureReq::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
const ::CMDTreasureInfo& CMDSponsorTreasureReq::info() const {
  // @@protoc_insertion_point(field_get:CMDSponsorTreasureReq.info)
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
::CMDTreasureInfo* CMDSponsorTreasureReq::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::CMDTreasureInfo;
  }
  // @@protoc_insertion_point(field_mutable:CMDSponsorTreasureReq.info)
  return info_;
}
::CMDTreasureInfo* CMDSponsorTreasureReq::release_info() {
  // @@protoc_insertion_point(field_release:CMDSponsorTreasureReq.info)
  
  ::CMDTreasureInfo* temp = info_;
  info_ = NULL;
  return temp;
}
void CMDSponsorTreasureReq::set_allocated_info(::CMDTreasureInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDSponsorTreasureReq.info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDSponsorTreasureResp::kErrinfoFieldNumber;
const int CMDSponsorTreasureResp::kInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDSponsorTreasureResp::CMDSponsorTreasureResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDSponsorTreasureResp)
}

void CMDSponsorTreasureResp::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  errinfo_ = const_cast< ::CMDErrCode*>(&::CMDErrCode::default_instance());
  info_ = const_cast< ::CMDTreasureInfo*>(&::CMDTreasureInfo::default_instance());
}

CMDSponsorTreasureResp::CMDSponsorTreasureResp(const CMDSponsorTreasureResp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDSponsorTreasureResp)
}

void CMDSponsorTreasureResp::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  errinfo_ = NULL;
  info_ = NULL;
}

CMDSponsorTreasureResp::~CMDSponsorTreasureResp() {
  // @@protoc_insertion_point(destructor:CMDSponsorTreasureResp)
  SharedDtor();
}

void CMDSponsorTreasureResp::SharedDtor() {
  if (this != default_instance_) {
    delete errinfo_;
    delete info_;
  }
}

void CMDSponsorTreasureResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDSponsorTreasureResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDSponsorTreasureResp_descriptor_;
}

const CMDSponsorTreasureResp& CMDSponsorTreasureResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ConsumeSvr_2eproto();
  return *default_instance_;
}

CMDSponsorTreasureResp* CMDSponsorTreasureResp::default_instance_ = NULL;

CMDSponsorTreasureResp* CMDSponsorTreasureResp::New(::google::protobuf::Arena* arena) const {
  CMDSponsorTreasureResp* n = new CMDSponsorTreasureResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDSponsorTreasureResp::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDSponsorTreasureResp)
  if (GetArenaNoVirtual() == NULL && errinfo_ != NULL) delete errinfo_;
  errinfo_ = NULL;
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}

bool CMDSponsorTreasureResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDSponsorTreasureResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CMDErrCode errinfo = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_errinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_info;
        break;
      }

      // optional .CMDTreasureInfo info = 2;
      case 2: {
        if (tag == 18) {
         parse_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDSponsorTreasureResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDSponsorTreasureResp)
  return false;
#undef DO_
}

void CMDSponsorTreasureResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDSponsorTreasureResp)
  // optional .CMDErrCode errinfo = 1;
  if (this->has_errinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->errinfo_, output);
  }

  // optional .CMDTreasureInfo info = 2;
  if (this->has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->info_, output);
  }

  // @@protoc_insertion_point(serialize_end:CMDSponsorTreasureResp)
}

::google::protobuf::uint8* CMDSponsorTreasureResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDSponsorTreasureResp)
  // optional .CMDErrCode errinfo = 1;
  if (this->has_errinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->errinfo_, false, target);
  }

  // optional .CMDTreasureInfo info = 2;
  if (this->has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->info_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDSponsorTreasureResp)
  return target;
}

int CMDSponsorTreasureResp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDSponsorTreasureResp)
  int total_size = 0;

  // optional .CMDErrCode errinfo = 1;
  if (this->has_errinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->errinfo_);
  }

  // optional .CMDTreasureInfo info = 2;
  if (this->has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->info_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDSponsorTreasureResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDSponsorTreasureResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDSponsorTreasureResp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDSponsorTreasureResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDSponsorTreasureResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDSponsorTreasureResp)
    MergeFrom(*source);
  }
}

void CMDSponsorTreasureResp::MergeFrom(const CMDSponsorTreasureResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDSponsorTreasureResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.has_errinfo()) {
    mutable_errinfo()->::CMDErrCode::MergeFrom(from.errinfo());
  }
  if (from.has_info()) {
    mutable_info()->::CMDTreasureInfo::MergeFrom(from.info());
  }
}

void CMDSponsorTreasureResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDSponsorTreasureResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDSponsorTreasureResp::CopyFrom(const CMDSponsorTreasureResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDSponsorTreasureResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDSponsorTreasureResp::IsInitialized() const {

  return true;
}

void CMDSponsorTreasureResp::Swap(CMDSponsorTreasureResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDSponsorTreasureResp::InternalSwap(CMDSponsorTreasureResp* other) {
  std::swap(errinfo_, other->errinfo_);
  std::swap(info_, other->info_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDSponsorTreasureResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDSponsorTreasureResp_descriptor_;
  metadata.reflection = CMDSponsorTreasureResp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDSponsorTreasureResp

// optional .CMDErrCode errinfo = 1;
bool CMDSponsorTreasureResp::has_errinfo() const {
  return !_is_default_instance_ && errinfo_ != NULL;
}
void CMDSponsorTreasureResp::clear_errinfo() {
  if (GetArenaNoVirtual() == NULL && errinfo_ != NULL) delete errinfo_;
  errinfo_ = NULL;
}
const ::CMDErrCode& CMDSponsorTreasureResp::errinfo() const {
  // @@protoc_insertion_point(field_get:CMDSponsorTreasureResp.errinfo)
  return errinfo_ != NULL ? *errinfo_ : *default_instance_->errinfo_;
}
::CMDErrCode* CMDSponsorTreasureResp::mutable_errinfo() {
  
  if (errinfo_ == NULL) {
    errinfo_ = new ::CMDErrCode;
  }
  // @@protoc_insertion_point(field_mutable:CMDSponsorTreasureResp.errinfo)
  return errinfo_;
}
::CMDErrCode* CMDSponsorTreasureResp::release_errinfo() {
  // @@protoc_insertion_point(field_release:CMDSponsorTreasureResp.errinfo)
  
  ::CMDErrCode* temp = errinfo_;
  errinfo_ = NULL;
  return temp;
}
void CMDSponsorTreasureResp::set_allocated_errinfo(::CMDErrCode* errinfo) {
  delete errinfo_;
  errinfo_ = errinfo;
  if (errinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDSponsorTreasureResp.errinfo)
}

// optional .CMDTreasureInfo info = 2;
bool CMDSponsorTreasureResp::has_info() const {
  return !_is_default_instance_ && info_ != NULL;
}
void CMDSponsorTreasureResp::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
const ::CMDTreasureInfo& CMDSponsorTreasureResp::info() const {
  // @@protoc_insertion_point(field_get:CMDSponsorTreasureResp.info)
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
::CMDTreasureInfo* CMDSponsorTreasureResp::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::CMDTreasureInfo;
  }
  // @@protoc_insertion_point(field_mutable:CMDSponsorTreasureResp.info)
  return info_;
}
::CMDTreasureInfo* CMDSponsorTreasureResp::release_info() {
  // @@protoc_insertion_point(field_release:CMDSponsorTreasureResp.info)
  
  ::CMDTreasureInfo* temp = info_;
  info_ = NULL;
  return temp;
}
void CMDSponsorTreasureResp::set_allocated_info(::CMDTreasureInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDSponsorTreasureResp.info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDBuyTreasure::kGroupidFieldNumber;
const int CMDBuyTreasure::kUseridFieldNumber;
const int CMDBuyTreasure::kTreasureIdFieldNumber;
const int CMDBuyTreasure::kBuyAmountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDBuyTreasure::CMDBuyTreasure()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDBuyTreasure)
}

void CMDBuyTreasure::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDBuyTreasure::CMDBuyTreasure(const CMDBuyTreasure& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDBuyTreasure)
}

void CMDBuyTreasure::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  groupid_ = 0u;
  userid_ = 0u;
  treasure_id_ = 0u;
  buy_amount_ = 0u;
}

CMDBuyTreasure::~CMDBuyTreasure() {
  // @@protoc_insertion_point(destructor:CMDBuyTreasure)
  SharedDtor();
}

void CMDBuyTreasure::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMDBuyTreasure::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDBuyTreasure::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDBuyTreasure_descriptor_;
}

const CMDBuyTreasure& CMDBuyTreasure::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ConsumeSvr_2eproto();
  return *default_instance_;
}

CMDBuyTreasure* CMDBuyTreasure::default_instance_ = NULL;

CMDBuyTreasure* CMDBuyTreasure::New(::google::protobuf::Arena* arena) const {
  CMDBuyTreasure* n = new CMDBuyTreasure;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDBuyTreasure::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDBuyTreasure)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDBuyTreasure, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDBuyTreasure*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(groupid_, buy_amount_);

#undef ZR_HELPER_
#undef ZR_

}

bool CMDBuyTreasure::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDBuyTreasure)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 groupid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &groupid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_userid;
        break;
      }

      // optional uint32 userid = 2;
      case 2: {
        if (tag == 16) {
         parse_userid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_treasure_id;
        break;
      }

      // optional uint32 treasure_id = 3;
      case 3: {
        if (tag == 24) {
         parse_treasure_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &treasure_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_buy_amount;
        break;
      }

      // optional uint32 buy_amount = 4;
      case 4: {
        if (tag == 32) {
         parse_buy_amount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &buy_amount_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDBuyTreasure)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDBuyTreasure)
  return false;
#undef DO_
}

void CMDBuyTreasure::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDBuyTreasure)
  // optional uint32 groupid = 1;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->groupid(), output);
  }

  // optional uint32 userid = 2;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->userid(), output);
  }

  // optional uint32 treasure_id = 3;
  if (this->treasure_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->treasure_id(), output);
  }

  // optional uint32 buy_amount = 4;
  if (this->buy_amount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->buy_amount(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDBuyTreasure)
}

::google::protobuf::uint8* CMDBuyTreasure::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDBuyTreasure)
  // optional uint32 groupid = 1;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->groupid(), target);
  }

  // optional uint32 userid = 2;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->userid(), target);
  }

  // optional uint32 treasure_id = 3;
  if (this->treasure_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->treasure_id(), target);
  }

  // optional uint32 buy_amount = 4;
  if (this->buy_amount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->buy_amount(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDBuyTreasure)
  return target;
}

int CMDBuyTreasure::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDBuyTreasure)
  int total_size = 0;

  // optional uint32 groupid = 1;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->groupid());
  }

  // optional uint32 userid = 2;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userid());
  }

  // optional uint32 treasure_id = 3;
  if (this->treasure_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->treasure_id());
  }

  // optional uint32 buy_amount = 4;
  if (this->buy_amount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->buy_amount());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDBuyTreasure::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDBuyTreasure)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDBuyTreasure* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDBuyTreasure>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDBuyTreasure)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDBuyTreasure)
    MergeFrom(*source);
  }
}

void CMDBuyTreasure::MergeFrom(const CMDBuyTreasure& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDBuyTreasure)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.treasure_id() != 0) {
    set_treasure_id(from.treasure_id());
  }
  if (from.buy_amount() != 0) {
    set_buy_amount(from.buy_amount());
  }
}

void CMDBuyTreasure::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDBuyTreasure)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDBuyTreasure::CopyFrom(const CMDBuyTreasure& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDBuyTreasure)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDBuyTreasure::IsInitialized() const {

  return true;
}

void CMDBuyTreasure::Swap(CMDBuyTreasure* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDBuyTreasure::InternalSwap(CMDBuyTreasure* other) {
  std::swap(groupid_, other->groupid_);
  std::swap(userid_, other->userid_);
  std::swap(treasure_id_, other->treasure_id_);
  std::swap(buy_amount_, other->buy_amount_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDBuyTreasure::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDBuyTreasure_descriptor_;
  metadata.reflection = CMDBuyTreasure_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDBuyTreasure

// optional uint32 groupid = 1;
void CMDBuyTreasure::clear_groupid() {
  groupid_ = 0u;
}
 ::google::protobuf::uint32 CMDBuyTreasure::groupid() const {
  // @@protoc_insertion_point(field_get:CMDBuyTreasure.groupid)
  return groupid_;
}
 void CMDBuyTreasure::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDBuyTreasure.groupid)
}

// optional uint32 userid = 2;
void CMDBuyTreasure::clear_userid() {
  userid_ = 0u;
}
 ::google::protobuf::uint32 CMDBuyTreasure::userid() const {
  // @@protoc_insertion_point(field_get:CMDBuyTreasure.userid)
  return userid_;
}
 void CMDBuyTreasure::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDBuyTreasure.userid)
}

// optional uint32 treasure_id = 3;
void CMDBuyTreasure::clear_treasure_id() {
  treasure_id_ = 0u;
}
 ::google::protobuf::uint32 CMDBuyTreasure::treasure_id() const {
  // @@protoc_insertion_point(field_get:CMDBuyTreasure.treasure_id)
  return treasure_id_;
}
 void CMDBuyTreasure::set_treasure_id(::google::protobuf::uint32 value) {
  
  treasure_id_ = value;
  // @@protoc_insertion_point(field_set:CMDBuyTreasure.treasure_id)
}

// optional uint32 buy_amount = 4;
void CMDBuyTreasure::clear_buy_amount() {
  buy_amount_ = 0u;
}
 ::google::protobuf::uint32 CMDBuyTreasure::buy_amount() const {
  // @@protoc_insertion_point(field_get:CMDBuyTreasure.buy_amount)
  return buy_amount_;
}
 void CMDBuyTreasure::set_buy_amount(::google::protobuf::uint32 value) {
  
  buy_amount_ = value;
  // @@protoc_insertion_point(field_set:CMDBuyTreasure.buy_amount)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDBuyTreasureResp::kErrinfoFieldNumber;
const int CMDBuyTreasureResp::kBuyInfoFieldNumber;
const int CMDBuyTreasureResp::kBuyCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDBuyTreasureResp::CMDBuyTreasureResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDBuyTreasureResp)
}

void CMDBuyTreasureResp::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  errinfo_ = const_cast< ::CMDErrCode*>(&::CMDErrCode::default_instance());
  buy_info_ = const_cast< ::CMDBuyTreasure*>(&::CMDBuyTreasure::default_instance());
  buy_code_ = const_cast< ::CMDBuyCodeRange*>(&::CMDBuyCodeRange::default_instance());
}

CMDBuyTreasureResp::CMDBuyTreasureResp(const CMDBuyTreasureResp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDBuyTreasureResp)
}

void CMDBuyTreasureResp::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  errinfo_ = NULL;
  buy_info_ = NULL;
  buy_code_ = NULL;
}

CMDBuyTreasureResp::~CMDBuyTreasureResp() {
  // @@protoc_insertion_point(destructor:CMDBuyTreasureResp)
  SharedDtor();
}

void CMDBuyTreasureResp::SharedDtor() {
  if (this != default_instance_) {
    delete errinfo_;
    delete buy_info_;
    delete buy_code_;
  }
}

void CMDBuyTreasureResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDBuyTreasureResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDBuyTreasureResp_descriptor_;
}

const CMDBuyTreasureResp& CMDBuyTreasureResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ConsumeSvr_2eproto();
  return *default_instance_;
}

CMDBuyTreasureResp* CMDBuyTreasureResp::default_instance_ = NULL;

CMDBuyTreasureResp* CMDBuyTreasureResp::New(::google::protobuf::Arena* arena) const {
  CMDBuyTreasureResp* n = new CMDBuyTreasureResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDBuyTreasureResp::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDBuyTreasureResp)
  if (GetArenaNoVirtual() == NULL && errinfo_ != NULL) delete errinfo_;
  errinfo_ = NULL;
  if (GetArenaNoVirtual() == NULL && buy_info_ != NULL) delete buy_info_;
  buy_info_ = NULL;
  if (GetArenaNoVirtual() == NULL && buy_code_ != NULL) delete buy_code_;
  buy_code_ = NULL;
}

bool CMDBuyTreasureResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDBuyTreasureResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CMDErrCode errinfo = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_errinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_buy_info;
        break;
      }

      // optional .CMDBuyTreasure buy_info = 2;
      case 2: {
        if (tag == 18) {
         parse_buy_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_buy_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_buy_code;
        break;
      }

      // optional .CMDBuyCodeRange buy_code = 3;
      case 3: {
        if (tag == 26) {
         parse_buy_code:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_buy_code()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDBuyTreasureResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDBuyTreasureResp)
  return false;
#undef DO_
}

void CMDBuyTreasureResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDBuyTreasureResp)
  // optional .CMDErrCode errinfo = 1;
  if (this->has_errinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->errinfo_, output);
  }

  // optional .CMDBuyTreasure buy_info = 2;
  if (this->has_buy_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->buy_info_, output);
  }

  // optional .CMDBuyCodeRange buy_code = 3;
  if (this->has_buy_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->buy_code_, output);
  }

  // @@protoc_insertion_point(serialize_end:CMDBuyTreasureResp)
}

::google::protobuf::uint8* CMDBuyTreasureResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDBuyTreasureResp)
  // optional .CMDErrCode errinfo = 1;
  if (this->has_errinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->errinfo_, false, target);
  }

  // optional .CMDBuyTreasure buy_info = 2;
  if (this->has_buy_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->buy_info_, false, target);
  }

  // optional .CMDBuyCodeRange buy_code = 3;
  if (this->has_buy_code()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->buy_code_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDBuyTreasureResp)
  return target;
}

int CMDBuyTreasureResp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDBuyTreasureResp)
  int total_size = 0;

  // optional .CMDErrCode errinfo = 1;
  if (this->has_errinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->errinfo_);
  }

  // optional .CMDBuyTreasure buy_info = 2;
  if (this->has_buy_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->buy_info_);
  }

  // optional .CMDBuyCodeRange buy_code = 3;
  if (this->has_buy_code()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->buy_code_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDBuyTreasureResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDBuyTreasureResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDBuyTreasureResp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDBuyTreasureResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDBuyTreasureResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDBuyTreasureResp)
    MergeFrom(*source);
  }
}

void CMDBuyTreasureResp::MergeFrom(const CMDBuyTreasureResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDBuyTreasureResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.has_errinfo()) {
    mutable_errinfo()->::CMDErrCode::MergeFrom(from.errinfo());
  }
  if (from.has_buy_info()) {
    mutable_buy_info()->::CMDBuyTreasure::MergeFrom(from.buy_info());
  }
  if (from.has_buy_code()) {
    mutable_buy_code()->::CMDBuyCodeRange::MergeFrom(from.buy_code());
  }
}

void CMDBuyTreasureResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDBuyTreasureResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDBuyTreasureResp::CopyFrom(const CMDBuyTreasureResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDBuyTreasureResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDBuyTreasureResp::IsInitialized() const {

  return true;
}

void CMDBuyTreasureResp::Swap(CMDBuyTreasureResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDBuyTreasureResp::InternalSwap(CMDBuyTreasureResp* other) {
  std::swap(errinfo_, other->errinfo_);
  std::swap(buy_info_, other->buy_info_);
  std::swap(buy_code_, other->buy_code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDBuyTreasureResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDBuyTreasureResp_descriptor_;
  metadata.reflection = CMDBuyTreasureResp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDBuyTreasureResp

// optional .CMDErrCode errinfo = 1;
bool CMDBuyTreasureResp::has_errinfo() const {
  return !_is_default_instance_ && errinfo_ != NULL;
}
void CMDBuyTreasureResp::clear_errinfo() {
  if (GetArenaNoVirtual() == NULL && errinfo_ != NULL) delete errinfo_;
  errinfo_ = NULL;
}
const ::CMDErrCode& CMDBuyTreasureResp::errinfo() const {
  // @@protoc_insertion_point(field_get:CMDBuyTreasureResp.errinfo)
  return errinfo_ != NULL ? *errinfo_ : *default_instance_->errinfo_;
}
::CMDErrCode* CMDBuyTreasureResp::mutable_errinfo() {
  
  if (errinfo_ == NULL) {
    errinfo_ = new ::CMDErrCode;
  }
  // @@protoc_insertion_point(field_mutable:CMDBuyTreasureResp.errinfo)
  return errinfo_;
}
::CMDErrCode* CMDBuyTreasureResp::release_errinfo() {
  // @@protoc_insertion_point(field_release:CMDBuyTreasureResp.errinfo)
  
  ::CMDErrCode* temp = errinfo_;
  errinfo_ = NULL;
  return temp;
}
void CMDBuyTreasureResp::set_allocated_errinfo(::CMDErrCode* errinfo) {
  delete errinfo_;
  errinfo_ = errinfo;
  if (errinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDBuyTreasureResp.errinfo)
}

// optional .CMDBuyTreasure buy_info = 2;
bool CMDBuyTreasureResp::has_buy_info() const {
  return !_is_default_instance_ && buy_info_ != NULL;
}
void CMDBuyTreasureResp::clear_buy_info() {
  if (GetArenaNoVirtual() == NULL && buy_info_ != NULL) delete buy_info_;
  buy_info_ = NULL;
}
const ::CMDBuyTreasure& CMDBuyTreasureResp::buy_info() const {
  // @@protoc_insertion_point(field_get:CMDBuyTreasureResp.buy_info)
  return buy_info_ != NULL ? *buy_info_ : *default_instance_->buy_info_;
}
::CMDBuyTreasure* CMDBuyTreasureResp::mutable_buy_info() {
  
  if (buy_info_ == NULL) {
    buy_info_ = new ::CMDBuyTreasure;
  }
  // @@protoc_insertion_point(field_mutable:CMDBuyTreasureResp.buy_info)
  return buy_info_;
}
::CMDBuyTreasure* CMDBuyTreasureResp::release_buy_info() {
  // @@protoc_insertion_point(field_release:CMDBuyTreasureResp.buy_info)
  
  ::CMDBuyTreasure* temp = buy_info_;
  buy_info_ = NULL;
  return temp;
}
void CMDBuyTreasureResp::set_allocated_buy_info(::CMDBuyTreasure* buy_info) {
  delete buy_info_;
  buy_info_ = buy_info;
  if (buy_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDBuyTreasureResp.buy_info)
}

// optional .CMDBuyCodeRange buy_code = 3;
bool CMDBuyTreasureResp::has_buy_code() const {
  return !_is_default_instance_ && buy_code_ != NULL;
}
void CMDBuyTreasureResp::clear_buy_code() {
  if (GetArenaNoVirtual() == NULL && buy_code_ != NULL) delete buy_code_;
  buy_code_ = NULL;
}
const ::CMDBuyCodeRange& CMDBuyTreasureResp::buy_code() const {
  // @@protoc_insertion_point(field_get:CMDBuyTreasureResp.buy_code)
  return buy_code_ != NULL ? *buy_code_ : *default_instance_->buy_code_;
}
::CMDBuyCodeRange* CMDBuyTreasureResp::mutable_buy_code() {
  
  if (buy_code_ == NULL) {
    buy_code_ = new ::CMDBuyCodeRange;
  }
  // @@protoc_insertion_point(field_mutable:CMDBuyTreasureResp.buy_code)
  return buy_code_;
}
::CMDBuyCodeRange* CMDBuyTreasureResp::release_buy_code() {
  // @@protoc_insertion_point(field_release:CMDBuyTreasureResp.buy_code)
  
  ::CMDBuyCodeRange* temp = buy_code_;
  buy_code_ = NULL;
  return temp;
}
void CMDBuyTreasureResp::set_allocated_buy_code(::CMDBuyCodeRange* buy_code) {
  delete buy_code_;
  buy_code_ = buy_code;
  if (buy_code) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDBuyTreasureResp.buy_code)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDQryMyTreasureDetail::kUseridFieldNumber;
const int CMDQryMyTreasureDetail::kGroupidFieldNumber;
const int CMDQryMyTreasureDetail::kTreasureIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDQryMyTreasureDetail::CMDQryMyTreasureDetail()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDQryMyTreasureDetail)
}

void CMDQryMyTreasureDetail::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDQryMyTreasureDetail::CMDQryMyTreasureDetail(const CMDQryMyTreasureDetail& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDQryMyTreasureDetail)
}

void CMDQryMyTreasureDetail::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  userid_ = 0u;
  groupid_ = 0u;
  treasure_id_ = 0u;
}

CMDQryMyTreasureDetail::~CMDQryMyTreasureDetail() {
  // @@protoc_insertion_point(destructor:CMDQryMyTreasureDetail)
  SharedDtor();
}

void CMDQryMyTreasureDetail::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMDQryMyTreasureDetail::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDQryMyTreasureDetail::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDQryMyTreasureDetail_descriptor_;
}

const CMDQryMyTreasureDetail& CMDQryMyTreasureDetail::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ConsumeSvr_2eproto();
  return *default_instance_;
}

CMDQryMyTreasureDetail* CMDQryMyTreasureDetail::default_instance_ = NULL;

CMDQryMyTreasureDetail* CMDQryMyTreasureDetail::New(::google::protobuf::Arena* arena) const {
  CMDQryMyTreasureDetail* n = new CMDQryMyTreasureDetail;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDQryMyTreasureDetail::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDQryMyTreasureDetail)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDQryMyTreasureDetail, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDQryMyTreasureDetail*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(userid_, treasure_id_);

#undef ZR_HELPER_
#undef ZR_

}

bool CMDQryMyTreasureDetail::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDQryMyTreasureDetail)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 userid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_groupid;
        break;
      }

      // optional uint32 groupid = 2;
      case 2: {
        if (tag == 16) {
         parse_groupid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &groupid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_treasure_id;
        break;
      }

      // optional uint32 treasure_id = 3;
      case 3: {
        if (tag == 24) {
         parse_treasure_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &treasure_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDQryMyTreasureDetail)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDQryMyTreasureDetail)
  return false;
#undef DO_
}

void CMDQryMyTreasureDetail::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDQryMyTreasureDetail)
  // optional uint32 userid = 1;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->userid(), output);
  }

  // optional uint32 groupid = 2;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->groupid(), output);
  }

  // optional uint32 treasure_id = 3;
  if (this->treasure_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->treasure_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDQryMyTreasureDetail)
}

::google::protobuf::uint8* CMDQryMyTreasureDetail::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDQryMyTreasureDetail)
  // optional uint32 userid = 1;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->userid(), target);
  }

  // optional uint32 groupid = 2;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->groupid(), target);
  }

  // optional uint32 treasure_id = 3;
  if (this->treasure_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->treasure_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDQryMyTreasureDetail)
  return target;
}

int CMDQryMyTreasureDetail::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDQryMyTreasureDetail)
  int total_size = 0;

  // optional uint32 userid = 1;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userid());
  }

  // optional uint32 groupid = 2;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->groupid());
  }

  // optional uint32 treasure_id = 3;
  if (this->treasure_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->treasure_id());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDQryMyTreasureDetail::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDQryMyTreasureDetail)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDQryMyTreasureDetail* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDQryMyTreasureDetail>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDQryMyTreasureDetail)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDQryMyTreasureDetail)
    MergeFrom(*source);
  }
}

void CMDQryMyTreasureDetail::MergeFrom(const CMDQryMyTreasureDetail& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDQryMyTreasureDetail)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
  if (from.treasure_id() != 0) {
    set_treasure_id(from.treasure_id());
  }
}

void CMDQryMyTreasureDetail::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDQryMyTreasureDetail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDQryMyTreasureDetail::CopyFrom(const CMDQryMyTreasureDetail& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDQryMyTreasureDetail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDQryMyTreasureDetail::IsInitialized() const {

  return true;
}

void CMDQryMyTreasureDetail::Swap(CMDQryMyTreasureDetail* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDQryMyTreasureDetail::InternalSwap(CMDQryMyTreasureDetail* other) {
  std::swap(userid_, other->userid_);
  std::swap(groupid_, other->groupid_);
  std::swap(treasure_id_, other->treasure_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDQryMyTreasureDetail::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDQryMyTreasureDetail_descriptor_;
  metadata.reflection = CMDQryMyTreasureDetail_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDQryMyTreasureDetail

// optional uint32 userid = 1;
void CMDQryMyTreasureDetail::clear_userid() {
  userid_ = 0u;
}
 ::google::protobuf::uint32 CMDQryMyTreasureDetail::userid() const {
  // @@protoc_insertion_point(field_get:CMDQryMyTreasureDetail.userid)
  return userid_;
}
 void CMDQryMyTreasureDetail::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDQryMyTreasureDetail.userid)
}

// optional uint32 groupid = 2;
void CMDQryMyTreasureDetail::clear_groupid() {
  groupid_ = 0u;
}
 ::google::protobuf::uint32 CMDQryMyTreasureDetail::groupid() const {
  // @@protoc_insertion_point(field_get:CMDQryMyTreasureDetail.groupid)
  return groupid_;
}
 void CMDQryMyTreasureDetail::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDQryMyTreasureDetail.groupid)
}

// optional uint32 treasure_id = 3;
void CMDQryMyTreasureDetail::clear_treasure_id() {
  treasure_id_ = 0u;
}
 ::google::protobuf::uint32 CMDQryMyTreasureDetail::treasure_id() const {
  // @@protoc_insertion_point(field_get:CMDQryMyTreasureDetail.treasure_id)
  return treasure_id_;
}
 void CMDQryMyTreasureDetail::set_treasure_id(::google::protobuf::uint32 value) {
  
  treasure_id_ = value;
  // @@protoc_insertion_point(field_set:CMDQryMyTreasureDetail.treasure_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDMyTreasureDetail::kUseridFieldNumber;
const int CMDMyTreasureDetail::kGroupidFieldNumber;
const int CMDMyTreasureDetail::kTreasureIdFieldNumber;
const int CMDMyTreasureDetail::kBuyTotalFieldNumber;
const int CMDMyTreasureDetail::kBuyListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDMyTreasureDetail::CMDMyTreasureDetail()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDMyTreasureDetail)
}

void CMDMyTreasureDetail::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDMyTreasureDetail::CMDMyTreasureDetail(const CMDMyTreasureDetail& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDMyTreasureDetail)
}

void CMDMyTreasureDetail::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  userid_ = 0u;
  groupid_ = 0u;
  treasure_id_ = 0u;
  buy_total_ = 0u;
}

CMDMyTreasureDetail::~CMDMyTreasureDetail() {
  // @@protoc_insertion_point(destructor:CMDMyTreasureDetail)
  SharedDtor();
}

void CMDMyTreasureDetail::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMDMyTreasureDetail::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDMyTreasureDetail::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDMyTreasureDetail_descriptor_;
}

const CMDMyTreasureDetail& CMDMyTreasureDetail::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ConsumeSvr_2eproto();
  return *default_instance_;
}

CMDMyTreasureDetail* CMDMyTreasureDetail::default_instance_ = NULL;

CMDMyTreasureDetail* CMDMyTreasureDetail::New(::google::protobuf::Arena* arena) const {
  CMDMyTreasureDetail* n = new CMDMyTreasureDetail;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDMyTreasureDetail::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDMyTreasureDetail)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDMyTreasureDetail, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDMyTreasureDetail*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(userid_, buy_total_);

#undef ZR_HELPER_
#undef ZR_

  buy_list_.Clear();
}

bool CMDMyTreasureDetail::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDMyTreasureDetail)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 userid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_groupid;
        break;
      }

      // optional uint32 groupid = 2;
      case 2: {
        if (tag == 16) {
         parse_groupid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &groupid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_treasure_id;
        break;
      }

      // optional uint32 treasure_id = 3;
      case 3: {
        if (tag == 24) {
         parse_treasure_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &treasure_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_buy_total;
        break;
      }

      // optional uint32 buy_total = 4;
      case 4: {
        if (tag == 32) {
         parse_buy_total:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &buy_total_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_buy_list;
        break;
      }

      // repeated .CMDBuyCodeRange buy_list = 5;
      case 5: {
        if (tag == 42) {
         parse_buy_list:
          DO_(input->IncrementRecursionDepth());
         parse_loop_buy_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_buy_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_loop_buy_list;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDMyTreasureDetail)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDMyTreasureDetail)
  return false;
#undef DO_
}

void CMDMyTreasureDetail::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDMyTreasureDetail)
  // optional uint32 userid = 1;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->userid(), output);
  }

  // optional uint32 groupid = 2;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->groupid(), output);
  }

  // optional uint32 treasure_id = 3;
  if (this->treasure_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->treasure_id(), output);
  }

  // optional uint32 buy_total = 4;
  if (this->buy_total() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->buy_total(), output);
  }

  // repeated .CMDBuyCodeRange buy_list = 5;
  for (unsigned int i = 0, n = this->buy_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->buy_list(i), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDMyTreasureDetail)
}

::google::protobuf::uint8* CMDMyTreasureDetail::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDMyTreasureDetail)
  // optional uint32 userid = 1;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->userid(), target);
  }

  // optional uint32 groupid = 2;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->groupid(), target);
  }

  // optional uint32 treasure_id = 3;
  if (this->treasure_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->treasure_id(), target);
  }

  // optional uint32 buy_total = 4;
  if (this->buy_total() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->buy_total(), target);
  }

  // repeated .CMDBuyCodeRange buy_list = 5;
  for (unsigned int i = 0, n = this->buy_list_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->buy_list(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDMyTreasureDetail)
  return target;
}

int CMDMyTreasureDetail::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDMyTreasureDetail)
  int total_size = 0;

  // optional uint32 userid = 1;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userid());
  }

  // optional uint32 groupid = 2;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->groupid());
  }

  // optional uint32 treasure_id = 3;
  if (this->treasure_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->treasure_id());
  }

  // optional uint32 buy_total = 4;
  if (this->buy_total() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->buy_total());
  }

  // repeated .CMDBuyCodeRange buy_list = 5;
  total_size += 1 * this->buy_list_size();
  for (int i = 0; i < this->buy_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->buy_list(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDMyTreasureDetail::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDMyTreasureDetail)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDMyTreasureDetail* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDMyTreasureDetail>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDMyTreasureDetail)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDMyTreasureDetail)
    MergeFrom(*source);
  }
}

void CMDMyTreasureDetail::MergeFrom(const CMDMyTreasureDetail& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDMyTreasureDetail)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  buy_list_.MergeFrom(from.buy_list_);
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
  if (from.treasure_id() != 0) {
    set_treasure_id(from.treasure_id());
  }
  if (from.buy_total() != 0) {
    set_buy_total(from.buy_total());
  }
}

void CMDMyTreasureDetail::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDMyTreasureDetail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDMyTreasureDetail::CopyFrom(const CMDMyTreasureDetail& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDMyTreasureDetail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDMyTreasureDetail::IsInitialized() const {

  return true;
}

void CMDMyTreasureDetail::Swap(CMDMyTreasureDetail* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDMyTreasureDetail::InternalSwap(CMDMyTreasureDetail* other) {
  std::swap(userid_, other->userid_);
  std::swap(groupid_, other->groupid_);
  std::swap(treasure_id_, other->treasure_id_);
  std::swap(buy_total_, other->buy_total_);
  buy_list_.UnsafeArenaSwap(&other->buy_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDMyTreasureDetail::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDMyTreasureDetail_descriptor_;
  metadata.reflection = CMDMyTreasureDetail_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDMyTreasureDetail

// optional uint32 userid = 1;
void CMDMyTreasureDetail::clear_userid() {
  userid_ = 0u;
}
 ::google::protobuf::uint32 CMDMyTreasureDetail::userid() const {
  // @@protoc_insertion_point(field_get:CMDMyTreasureDetail.userid)
  return userid_;
}
 void CMDMyTreasureDetail::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDMyTreasureDetail.userid)
}

// optional uint32 groupid = 2;
void CMDMyTreasureDetail::clear_groupid() {
  groupid_ = 0u;
}
 ::google::protobuf::uint32 CMDMyTreasureDetail::groupid() const {
  // @@protoc_insertion_point(field_get:CMDMyTreasureDetail.groupid)
  return groupid_;
}
 void CMDMyTreasureDetail::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDMyTreasureDetail.groupid)
}

// optional uint32 treasure_id = 3;
void CMDMyTreasureDetail::clear_treasure_id() {
  treasure_id_ = 0u;
}
 ::google::protobuf::uint32 CMDMyTreasureDetail::treasure_id() const {
  // @@protoc_insertion_point(field_get:CMDMyTreasureDetail.treasure_id)
  return treasure_id_;
}
 void CMDMyTreasureDetail::set_treasure_id(::google::protobuf::uint32 value) {
  
  treasure_id_ = value;
  // @@protoc_insertion_point(field_set:CMDMyTreasureDetail.treasure_id)
}

// optional uint32 buy_total = 4;
void CMDMyTreasureDetail::clear_buy_total() {
  buy_total_ = 0u;
}
 ::google::protobuf::uint32 CMDMyTreasureDetail::buy_total() const {
  // @@protoc_insertion_point(field_get:CMDMyTreasureDetail.buy_total)
  return buy_total_;
}
 void CMDMyTreasureDetail::set_buy_total(::google::protobuf::uint32 value) {
  
  buy_total_ = value;
  // @@protoc_insertion_point(field_set:CMDMyTreasureDetail.buy_total)
}

// repeated .CMDBuyCodeRange buy_list = 5;
int CMDMyTreasureDetail::buy_list_size() const {
  return buy_list_.size();
}
void CMDMyTreasureDetail::clear_buy_list() {
  buy_list_.Clear();
}
const ::CMDBuyCodeRange& CMDMyTreasureDetail::buy_list(int index) const {
  // @@protoc_insertion_point(field_get:CMDMyTreasureDetail.buy_list)
  return buy_list_.Get(index);
}
::CMDBuyCodeRange* CMDMyTreasureDetail::mutable_buy_list(int index) {
  // @@protoc_insertion_point(field_mutable:CMDMyTreasureDetail.buy_list)
  return buy_list_.Mutable(index);
}
::CMDBuyCodeRange* CMDMyTreasureDetail::add_buy_list() {
  // @@protoc_insertion_point(field_add:CMDMyTreasureDetail.buy_list)
  return buy_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::CMDBuyCodeRange >*
CMDMyTreasureDetail::mutable_buy_list() {
  // @@protoc_insertion_point(field_mutable_list:CMDMyTreasureDetail.buy_list)
  return &buy_list_;
}
const ::google::protobuf::RepeatedPtrField< ::CMDBuyCodeRange >&
CMDMyTreasureDetail::buy_list() const {
  // @@protoc_insertion_point(field_list:CMDMyTreasureDetail.buy_list)
  return buy_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDQryTreasureList::kGroupidFieldNumber;
const int CMDQryTreasureList::kUseridFieldNumber;
const int CMDQryTreasureList::kCountFieldNumber;
const int CMDQryTreasureList::kLastCreateTimeFieldNumber;
const int CMDQryTreasureList::kLastEndTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDQryTreasureList::CMDQryTreasureList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDQryTreasureList)
}

void CMDQryTreasureList::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDQryTreasureList::CMDQryTreasureList(const CMDQryTreasureList& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDQryTreasureList)
}

void CMDQryTreasureList::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  groupid_ = 0u;
  userid_ = 0u;
  count_ = 0u;
  last_create_time_ = 0u;
  last_end_time_ = 0u;
}

CMDQryTreasureList::~CMDQryTreasureList() {
  // @@protoc_insertion_point(destructor:CMDQryTreasureList)
  SharedDtor();
}

void CMDQryTreasureList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMDQryTreasureList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDQryTreasureList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDQryTreasureList_descriptor_;
}

const CMDQryTreasureList& CMDQryTreasureList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ConsumeSvr_2eproto();
  return *default_instance_;
}

CMDQryTreasureList* CMDQryTreasureList::default_instance_ = NULL;

CMDQryTreasureList* CMDQryTreasureList::New(::google::protobuf::Arena* arena) const {
  CMDQryTreasureList* n = new CMDQryTreasureList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDQryTreasureList::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDQryTreasureList)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDQryTreasureList, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDQryTreasureList*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(groupid_, last_end_time_);

#undef ZR_HELPER_
#undef ZR_

}

bool CMDQryTreasureList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDQryTreasureList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 groupid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &groupid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_userid;
        break;
      }

      // optional uint32 userid = 2;
      case 2: {
        if (tag == 16) {
         parse_userid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_count;
        break;
      }

      // optional uint32 count = 3;
      case 3: {
        if (tag == 24) {
         parse_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_last_create_time;
        break;
      }

      // optional uint32 last_create_time = 4;
      case 4: {
        if (tag == 32) {
         parse_last_create_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &last_create_time_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_last_end_time;
        break;
      }

      // optional uint32 last_end_time = 5;
      case 5: {
        if (tag == 40) {
         parse_last_end_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &last_end_time_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDQryTreasureList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDQryTreasureList)
  return false;
#undef DO_
}

void CMDQryTreasureList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDQryTreasureList)
  // optional uint32 groupid = 1;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->groupid(), output);
  }

  // optional uint32 userid = 2;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->userid(), output);
  }

  // optional uint32 count = 3;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->count(), output);
  }

  // optional uint32 last_create_time = 4;
  if (this->last_create_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->last_create_time(), output);
  }

  // optional uint32 last_end_time = 5;
  if (this->last_end_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->last_end_time(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDQryTreasureList)
}

::google::protobuf::uint8* CMDQryTreasureList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDQryTreasureList)
  // optional uint32 groupid = 1;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->groupid(), target);
  }

  // optional uint32 userid = 2;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->userid(), target);
  }

  // optional uint32 count = 3;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->count(), target);
  }

  // optional uint32 last_create_time = 4;
  if (this->last_create_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->last_create_time(), target);
  }

  // optional uint32 last_end_time = 5;
  if (this->last_end_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->last_end_time(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDQryTreasureList)
  return target;
}

int CMDQryTreasureList::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDQryTreasureList)
  int total_size = 0;

  // optional uint32 groupid = 1;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->groupid());
  }

  // optional uint32 userid = 2;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userid());
  }

  // optional uint32 count = 3;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  // optional uint32 last_create_time = 4;
  if (this->last_create_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->last_create_time());
  }

  // optional uint32 last_end_time = 5;
  if (this->last_end_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->last_end_time());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDQryTreasureList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDQryTreasureList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDQryTreasureList* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDQryTreasureList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDQryTreasureList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDQryTreasureList)
    MergeFrom(*source);
  }
}

void CMDQryTreasureList::MergeFrom(const CMDQryTreasureList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDQryTreasureList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.count() != 0) {
    set_count(from.count());
  }
  if (from.last_create_time() != 0) {
    set_last_create_time(from.last_create_time());
  }
  if (from.last_end_time() != 0) {
    set_last_end_time(from.last_end_time());
  }
}

void CMDQryTreasureList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDQryTreasureList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDQryTreasureList::CopyFrom(const CMDQryTreasureList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDQryTreasureList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDQryTreasureList::IsInitialized() const {

  return true;
}

void CMDQryTreasureList::Swap(CMDQryTreasureList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDQryTreasureList::InternalSwap(CMDQryTreasureList* other) {
  std::swap(groupid_, other->groupid_);
  std::swap(userid_, other->userid_);
  std::swap(count_, other->count_);
  std::swap(last_create_time_, other->last_create_time_);
  std::swap(last_end_time_, other->last_end_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDQryTreasureList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDQryTreasureList_descriptor_;
  metadata.reflection = CMDQryTreasureList_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDQryTreasureList

// optional uint32 groupid = 1;
void CMDQryTreasureList::clear_groupid() {
  groupid_ = 0u;
}
 ::google::protobuf::uint32 CMDQryTreasureList::groupid() const {
  // @@protoc_insertion_point(field_get:CMDQryTreasureList.groupid)
  return groupid_;
}
 void CMDQryTreasureList::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDQryTreasureList.groupid)
}

// optional uint32 userid = 2;
void CMDQryTreasureList::clear_userid() {
  userid_ = 0u;
}
 ::google::protobuf::uint32 CMDQryTreasureList::userid() const {
  // @@protoc_insertion_point(field_get:CMDQryTreasureList.userid)
  return userid_;
}
 void CMDQryTreasureList::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDQryTreasureList.userid)
}

// optional uint32 count = 3;
void CMDQryTreasureList::clear_count() {
  count_ = 0u;
}
 ::google::protobuf::uint32 CMDQryTreasureList::count() const {
  // @@protoc_insertion_point(field_get:CMDQryTreasureList.count)
  return count_;
}
 void CMDQryTreasureList::set_count(::google::protobuf::uint32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:CMDQryTreasureList.count)
}

// optional uint32 last_create_time = 4;
void CMDQryTreasureList::clear_last_create_time() {
  last_create_time_ = 0u;
}
 ::google::protobuf::uint32 CMDQryTreasureList::last_create_time() const {
  // @@protoc_insertion_point(field_get:CMDQryTreasureList.last_create_time)
  return last_create_time_;
}
 void CMDQryTreasureList::set_last_create_time(::google::protobuf::uint32 value) {
  
  last_create_time_ = value;
  // @@protoc_insertion_point(field_set:CMDQryTreasureList.last_create_time)
}

// optional uint32 last_end_time = 5;
void CMDQryTreasureList::clear_last_end_time() {
  last_end_time_ = 0u;
}
 ::google::protobuf::uint32 CMDQryTreasureList::last_end_time() const {
  // @@protoc_insertion_point(field_get:CMDQryTreasureList.last_end_time)
  return last_end_time_;
}
 void CMDQryTreasureList::set_last_end_time(::google::protobuf::uint32 value) {
  
  last_end_time_ = value;
  // @@protoc_insertion_point(field_set:CMDQryTreasureList.last_end_time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDTreasureList::kGroupidFieldNumber;
const int CMDTreasureList::kUseridFieldNumber;
const int CMDTreasureList::kListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDTreasureList::CMDTreasureList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDTreasureList)
}

void CMDTreasureList::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDTreasureList::CMDTreasureList(const CMDTreasureList& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDTreasureList)
}

void CMDTreasureList::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  groupid_ = 0u;
  userid_ = 0u;
}

CMDTreasureList::~CMDTreasureList() {
  // @@protoc_insertion_point(destructor:CMDTreasureList)
  SharedDtor();
}

void CMDTreasureList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMDTreasureList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDTreasureList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDTreasureList_descriptor_;
}

const CMDTreasureList& CMDTreasureList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ConsumeSvr_2eproto();
  return *default_instance_;
}

CMDTreasureList* CMDTreasureList::default_instance_ = NULL;

CMDTreasureList* CMDTreasureList::New(::google::protobuf::Arena* arena) const {
  CMDTreasureList* n = new CMDTreasureList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDTreasureList::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDTreasureList)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDTreasureList, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDTreasureList*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(groupid_, userid_);

#undef ZR_HELPER_
#undef ZR_

  list_.Clear();
}

bool CMDTreasureList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDTreasureList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 groupid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &groupid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_userid;
        break;
      }

      // optional uint32 userid = 2;
      case 2: {
        if (tag == 16) {
         parse_userid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_list;
        break;
      }

      // repeated .CMDTreasureInfo list = 3;
      case 3: {
        if (tag == 26) {
         parse_list:
          DO_(input->IncrementRecursionDepth());
         parse_loop_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_list;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDTreasureList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDTreasureList)
  return false;
#undef DO_
}

void CMDTreasureList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDTreasureList)
  // optional uint32 groupid = 1;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->groupid(), output);
  }

  // optional uint32 userid = 2;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->userid(), output);
  }

  // repeated .CMDTreasureInfo list = 3;
  for (unsigned int i = 0, n = this->list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->list(i), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDTreasureList)
}

::google::protobuf::uint8* CMDTreasureList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDTreasureList)
  // optional uint32 groupid = 1;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->groupid(), target);
  }

  // optional uint32 userid = 2;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->userid(), target);
  }

  // repeated .CMDTreasureInfo list = 3;
  for (unsigned int i = 0, n = this->list_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->list(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDTreasureList)
  return target;
}

int CMDTreasureList::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDTreasureList)
  int total_size = 0;

  // optional uint32 groupid = 1;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->groupid());
  }

  // optional uint32 userid = 2;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userid());
  }

  // repeated .CMDTreasureInfo list = 3;
  total_size += 1 * this->list_size();
  for (int i = 0; i < this->list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->list(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDTreasureList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDTreasureList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDTreasureList* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDTreasureList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDTreasureList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDTreasureList)
    MergeFrom(*source);
  }
}

void CMDTreasureList::MergeFrom(const CMDTreasureList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDTreasureList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  list_.MergeFrom(from.list_);
  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
}

void CMDTreasureList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDTreasureList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDTreasureList::CopyFrom(const CMDTreasureList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDTreasureList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDTreasureList::IsInitialized() const {

  return true;
}

void CMDTreasureList::Swap(CMDTreasureList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDTreasureList::InternalSwap(CMDTreasureList* other) {
  std::swap(groupid_, other->groupid_);
  std::swap(userid_, other->userid_);
  list_.UnsafeArenaSwap(&other->list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDTreasureList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDTreasureList_descriptor_;
  metadata.reflection = CMDTreasureList_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDTreasureList

// optional uint32 groupid = 1;
void CMDTreasureList::clear_groupid() {
  groupid_ = 0u;
}
 ::google::protobuf::uint32 CMDTreasureList::groupid() const {
  // @@protoc_insertion_point(field_get:CMDTreasureList.groupid)
  return groupid_;
}
 void CMDTreasureList::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDTreasureList.groupid)
}

// optional uint32 userid = 2;
void CMDTreasureList::clear_userid() {
  userid_ = 0u;
}
 ::google::protobuf::uint32 CMDTreasureList::userid() const {
  // @@protoc_insertion_point(field_get:CMDTreasureList.userid)
  return userid_;
}
 void CMDTreasureList::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDTreasureList.userid)
}

// repeated .CMDTreasureInfo list = 3;
int CMDTreasureList::list_size() const {
  return list_.size();
}
void CMDTreasureList::clear_list() {
  list_.Clear();
}
const ::CMDTreasureInfo& CMDTreasureList::list(int index) const {
  // @@protoc_insertion_point(field_get:CMDTreasureList.list)
  return list_.Get(index);
}
::CMDTreasureInfo* CMDTreasureList::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:CMDTreasureList.list)
  return list_.Mutable(index);
}
::CMDTreasureInfo* CMDTreasureList::add_list() {
  // @@protoc_insertion_point(field_add:CMDTreasureList.list)
  return list_.Add();
}
::google::protobuf::RepeatedPtrField< ::CMDTreasureInfo >*
CMDTreasureList::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:CMDTreasureList.list)
  return &list_;
}
const ::google::protobuf::RepeatedPtrField< ::CMDTreasureInfo >&
CMDTreasureList::list() const {
  // @@protoc_insertion_point(field_list:CMDTreasureList.list)
  return list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDTreasureInfoNotify::kOldStatusFieldNumber;
const int CMDTreasureInfoNotify::kNewStatusFieldNumber;
const int CMDTreasureInfoNotify::kInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDTreasureInfoNotify::CMDTreasureInfoNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDTreasureInfoNotify)
}

void CMDTreasureInfoNotify::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  info_ = const_cast< ::CMDTreasureInfo*>(&::CMDTreasureInfo::default_instance());
}

CMDTreasureInfoNotify::CMDTreasureInfoNotify(const CMDTreasureInfoNotify& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDTreasureInfoNotify)
}

void CMDTreasureInfoNotify::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  old_status_ = 0;
  new_status_ = 0;
  info_ = NULL;
}

CMDTreasureInfoNotify::~CMDTreasureInfoNotify() {
  // @@protoc_insertion_point(destructor:CMDTreasureInfoNotify)
  SharedDtor();
}

void CMDTreasureInfoNotify::SharedDtor() {
  if (this != default_instance_) {
    delete info_;
  }
}

void CMDTreasureInfoNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDTreasureInfoNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDTreasureInfoNotify_descriptor_;
}

const CMDTreasureInfoNotify& CMDTreasureInfoNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ConsumeSvr_2eproto();
  return *default_instance_;
}

CMDTreasureInfoNotify* CMDTreasureInfoNotify::default_instance_ = NULL;

CMDTreasureInfoNotify* CMDTreasureInfoNotify::New(::google::protobuf::Arena* arena) const {
  CMDTreasureInfoNotify* n = new CMDTreasureInfoNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDTreasureInfoNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDTreasureInfoNotify)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDTreasureInfoNotify, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDTreasureInfoNotify*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(old_status_, new_status_);
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;

#undef ZR_HELPER_
#undef ZR_

}

bool CMDTreasureInfoNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDTreasureInfoNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .e_TreasureStatus old_status = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_old_status(static_cast< ::e_TreasureStatus >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_new_status;
        break;
      }

      // optional .e_TreasureStatus new_status = 2;
      case 2: {
        if (tag == 16) {
         parse_new_status:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_new_status(static_cast< ::e_TreasureStatus >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_info;
        break;
      }

      // optional .CMDTreasureInfo info = 3;
      case 3: {
        if (tag == 26) {
         parse_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDTreasureInfoNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDTreasureInfoNotify)
  return false;
#undef DO_
}

void CMDTreasureInfoNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDTreasureInfoNotify)
  // optional .e_TreasureStatus old_status = 1;
  if (this->old_status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->old_status(), output);
  }

  // optional .e_TreasureStatus new_status = 2;
  if (this->new_status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->new_status(), output);
  }

  // optional .CMDTreasureInfo info = 3;
  if (this->has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->info_, output);
  }

  // @@protoc_insertion_point(serialize_end:CMDTreasureInfoNotify)
}

::google::protobuf::uint8* CMDTreasureInfoNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDTreasureInfoNotify)
  // optional .e_TreasureStatus old_status = 1;
  if (this->old_status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->old_status(), target);
  }

  // optional .e_TreasureStatus new_status = 2;
  if (this->new_status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->new_status(), target);
  }

  // optional .CMDTreasureInfo info = 3;
  if (this->has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->info_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDTreasureInfoNotify)
  return target;
}

int CMDTreasureInfoNotify::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDTreasureInfoNotify)
  int total_size = 0;

  // optional .e_TreasureStatus old_status = 1;
  if (this->old_status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->old_status());
  }

  // optional .e_TreasureStatus new_status = 2;
  if (this->new_status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->new_status());
  }

  // optional .CMDTreasureInfo info = 3;
  if (this->has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->info_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDTreasureInfoNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDTreasureInfoNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDTreasureInfoNotify* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDTreasureInfoNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDTreasureInfoNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDTreasureInfoNotify)
    MergeFrom(*source);
  }
}

void CMDTreasureInfoNotify::MergeFrom(const CMDTreasureInfoNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDTreasureInfoNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.old_status() != 0) {
    set_old_status(from.old_status());
  }
  if (from.new_status() != 0) {
    set_new_status(from.new_status());
  }
  if (from.has_info()) {
    mutable_info()->::CMDTreasureInfo::MergeFrom(from.info());
  }
}

void CMDTreasureInfoNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDTreasureInfoNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDTreasureInfoNotify::CopyFrom(const CMDTreasureInfoNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDTreasureInfoNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDTreasureInfoNotify::IsInitialized() const {

  return true;
}

void CMDTreasureInfoNotify::Swap(CMDTreasureInfoNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDTreasureInfoNotify::InternalSwap(CMDTreasureInfoNotify* other) {
  std::swap(old_status_, other->old_status_);
  std::swap(new_status_, other->new_status_);
  std::swap(info_, other->info_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDTreasureInfoNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDTreasureInfoNotify_descriptor_;
  metadata.reflection = CMDTreasureInfoNotify_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDTreasureInfoNotify

// optional .e_TreasureStatus old_status = 1;
void CMDTreasureInfoNotify::clear_old_status() {
  old_status_ = 0;
}
 ::e_TreasureStatus CMDTreasureInfoNotify::old_status() const {
  // @@protoc_insertion_point(field_get:CMDTreasureInfoNotify.old_status)
  return static_cast< ::e_TreasureStatus >(old_status_);
}
 void CMDTreasureInfoNotify::set_old_status(::e_TreasureStatus value) {
  
  old_status_ = value;
  // @@protoc_insertion_point(field_set:CMDTreasureInfoNotify.old_status)
}

// optional .e_TreasureStatus new_status = 2;
void CMDTreasureInfoNotify::clear_new_status() {
  new_status_ = 0;
}
 ::e_TreasureStatus CMDTreasureInfoNotify::new_status() const {
  // @@protoc_insertion_point(field_get:CMDTreasureInfoNotify.new_status)
  return static_cast< ::e_TreasureStatus >(new_status_);
}
 void CMDTreasureInfoNotify::set_new_status(::e_TreasureStatus value) {
  
  new_status_ = value;
  // @@protoc_insertion_point(field_set:CMDTreasureInfoNotify.new_status)
}

// optional .CMDTreasureInfo info = 3;
bool CMDTreasureInfoNotify::has_info() const {
  return !_is_default_instance_ && info_ != NULL;
}
void CMDTreasureInfoNotify::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
const ::CMDTreasureInfo& CMDTreasureInfoNotify::info() const {
  // @@protoc_insertion_point(field_get:CMDTreasureInfoNotify.info)
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
::CMDTreasureInfo* CMDTreasureInfoNotify::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::CMDTreasureInfo;
  }
  // @@protoc_insertion_point(field_mutable:CMDTreasureInfoNotify.info)
  return info_;
}
::CMDTreasureInfo* CMDTreasureInfoNotify::release_info() {
  // @@protoc_insertion_point(field_release:CMDTreasureInfoNotify.info)
  
  ::CMDTreasureInfo* temp = info_;
  info_ = NULL;
  return temp;
}
void CMDTreasureInfoNotify::set_allocated_info(::CMDTreasureInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDTreasureInfoNotify.info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDQryTreasureInfo::kGroupidFieldNumber;
const int CMDQryTreasureInfo::kUseridFieldNumber;
const int CMDQryTreasureInfo::kTreasureIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDQryTreasureInfo::CMDQryTreasureInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDQryTreasureInfo)
}

void CMDQryTreasureInfo::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDQryTreasureInfo::CMDQryTreasureInfo(const CMDQryTreasureInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDQryTreasureInfo)
}

void CMDQryTreasureInfo::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  groupid_ = 0u;
  userid_ = 0u;
  treasure_id_ = 0u;
}

CMDQryTreasureInfo::~CMDQryTreasureInfo() {
  // @@protoc_insertion_point(destructor:CMDQryTreasureInfo)
  SharedDtor();
}

void CMDQryTreasureInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMDQryTreasureInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDQryTreasureInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDQryTreasureInfo_descriptor_;
}

const CMDQryTreasureInfo& CMDQryTreasureInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ConsumeSvr_2eproto();
  return *default_instance_;
}

CMDQryTreasureInfo* CMDQryTreasureInfo::default_instance_ = NULL;

CMDQryTreasureInfo* CMDQryTreasureInfo::New(::google::protobuf::Arena* arena) const {
  CMDQryTreasureInfo* n = new CMDQryTreasureInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDQryTreasureInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDQryTreasureInfo)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDQryTreasureInfo, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDQryTreasureInfo*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(groupid_, treasure_id_);

#undef ZR_HELPER_
#undef ZR_

}

bool CMDQryTreasureInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDQryTreasureInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 groupid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &groupid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_userid;
        break;
      }

      // optional uint32 userid = 2;
      case 2: {
        if (tag == 16) {
         parse_userid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_treasure_id;
        break;
      }

      // optional uint32 treasure_id = 3;
      case 3: {
        if (tag == 24) {
         parse_treasure_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &treasure_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDQryTreasureInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDQryTreasureInfo)
  return false;
#undef DO_
}

void CMDQryTreasureInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDQryTreasureInfo)
  // optional uint32 groupid = 1;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->groupid(), output);
  }

  // optional uint32 userid = 2;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->userid(), output);
  }

  // optional uint32 treasure_id = 3;
  if (this->treasure_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->treasure_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDQryTreasureInfo)
}

::google::protobuf::uint8* CMDQryTreasureInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDQryTreasureInfo)
  // optional uint32 groupid = 1;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->groupid(), target);
  }

  // optional uint32 userid = 2;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->userid(), target);
  }

  // optional uint32 treasure_id = 3;
  if (this->treasure_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->treasure_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDQryTreasureInfo)
  return target;
}

int CMDQryTreasureInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDQryTreasureInfo)
  int total_size = 0;

  // optional uint32 groupid = 1;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->groupid());
  }

  // optional uint32 userid = 2;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userid());
  }

  // optional uint32 treasure_id = 3;
  if (this->treasure_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->treasure_id());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDQryTreasureInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDQryTreasureInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDQryTreasureInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDQryTreasureInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDQryTreasureInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDQryTreasureInfo)
    MergeFrom(*source);
  }
}

void CMDQryTreasureInfo::MergeFrom(const CMDQryTreasureInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDQryTreasureInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.treasure_id() != 0) {
    set_treasure_id(from.treasure_id());
  }
}

void CMDQryTreasureInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDQryTreasureInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDQryTreasureInfo::CopyFrom(const CMDQryTreasureInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDQryTreasureInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDQryTreasureInfo::IsInitialized() const {

  return true;
}

void CMDQryTreasureInfo::Swap(CMDQryTreasureInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDQryTreasureInfo::InternalSwap(CMDQryTreasureInfo* other) {
  std::swap(groupid_, other->groupid_);
  std::swap(userid_, other->userid_);
  std::swap(treasure_id_, other->treasure_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDQryTreasureInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDQryTreasureInfo_descriptor_;
  metadata.reflection = CMDQryTreasureInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDQryTreasureInfo

// optional uint32 groupid = 1;
void CMDQryTreasureInfo::clear_groupid() {
  groupid_ = 0u;
}
 ::google::protobuf::uint32 CMDQryTreasureInfo::groupid() const {
  // @@protoc_insertion_point(field_get:CMDQryTreasureInfo.groupid)
  return groupid_;
}
 void CMDQryTreasureInfo::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDQryTreasureInfo.groupid)
}

// optional uint32 userid = 2;
void CMDQryTreasureInfo::clear_userid() {
  userid_ = 0u;
}
 ::google::protobuf::uint32 CMDQryTreasureInfo::userid() const {
  // @@protoc_insertion_point(field_get:CMDQryTreasureInfo.userid)
  return userid_;
}
 void CMDQryTreasureInfo::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDQryTreasureInfo.userid)
}

// optional uint32 treasure_id = 3;
void CMDQryTreasureInfo::clear_treasure_id() {
  treasure_id_ = 0u;
}
 ::google::protobuf::uint32 CMDQryTreasureInfo::treasure_id() const {
  // @@protoc_insertion_point(field_get:CMDQryTreasureInfo.treasure_id)
  return treasure_id_;
}
 void CMDQryTreasureInfo::set_treasure_id(::google::protobuf::uint32 value) {
  
  treasure_id_ = value;
  // @@protoc_insertion_point(field_set:CMDQryTreasureInfo.treasure_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDQryTreasureInfoResp::kErrinfoFieldNumber;
const int CMDQryTreasureInfoResp::kReqFieldNumber;
const int CMDQryTreasureInfoResp::kInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDQryTreasureInfoResp::CMDQryTreasureInfoResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDQryTreasureInfoResp)
}

void CMDQryTreasureInfoResp::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  errinfo_ = const_cast< ::CMDErrCode*>(&::CMDErrCode::default_instance());
  req_ = const_cast< ::CMDQryTreasureInfo*>(&::CMDQryTreasureInfo::default_instance());
  info_ = const_cast< ::CMDTreasureInfo*>(&::CMDTreasureInfo::default_instance());
}

CMDQryTreasureInfoResp::CMDQryTreasureInfoResp(const CMDQryTreasureInfoResp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDQryTreasureInfoResp)
}

void CMDQryTreasureInfoResp::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  errinfo_ = NULL;
  req_ = NULL;
  info_ = NULL;
}

CMDQryTreasureInfoResp::~CMDQryTreasureInfoResp() {
  // @@protoc_insertion_point(destructor:CMDQryTreasureInfoResp)
  SharedDtor();
}

void CMDQryTreasureInfoResp::SharedDtor() {
  if (this != default_instance_) {
    delete errinfo_;
    delete req_;
    delete info_;
  }
}

void CMDQryTreasureInfoResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDQryTreasureInfoResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDQryTreasureInfoResp_descriptor_;
}

const CMDQryTreasureInfoResp& CMDQryTreasureInfoResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ConsumeSvr_2eproto();
  return *default_instance_;
}

CMDQryTreasureInfoResp* CMDQryTreasureInfoResp::default_instance_ = NULL;

CMDQryTreasureInfoResp* CMDQryTreasureInfoResp::New(::google::protobuf::Arena* arena) const {
  CMDQryTreasureInfoResp* n = new CMDQryTreasureInfoResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDQryTreasureInfoResp::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDQryTreasureInfoResp)
  if (GetArenaNoVirtual() == NULL && errinfo_ != NULL) delete errinfo_;
  errinfo_ = NULL;
  if (GetArenaNoVirtual() == NULL && req_ != NULL) delete req_;
  req_ = NULL;
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}

bool CMDQryTreasureInfoResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDQryTreasureInfoResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CMDErrCode errinfo = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_errinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_req;
        break;
      }

      // optional .CMDQryTreasureInfo req = 2;
      case 2: {
        if (tag == 18) {
         parse_req:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_req()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_info;
        break;
      }

      // optional .CMDTreasureInfo info = 3;
      case 3: {
        if (tag == 26) {
         parse_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDQryTreasureInfoResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDQryTreasureInfoResp)
  return false;
#undef DO_
}

void CMDQryTreasureInfoResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDQryTreasureInfoResp)
  // optional .CMDErrCode errinfo = 1;
  if (this->has_errinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->errinfo_, output);
  }

  // optional .CMDQryTreasureInfo req = 2;
  if (this->has_req()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->req_, output);
  }

  // optional .CMDTreasureInfo info = 3;
  if (this->has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->info_, output);
  }

  // @@protoc_insertion_point(serialize_end:CMDQryTreasureInfoResp)
}

::google::protobuf::uint8* CMDQryTreasureInfoResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDQryTreasureInfoResp)
  // optional .CMDErrCode errinfo = 1;
  if (this->has_errinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->errinfo_, false, target);
  }

  // optional .CMDQryTreasureInfo req = 2;
  if (this->has_req()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->req_, false, target);
  }

  // optional .CMDTreasureInfo info = 3;
  if (this->has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->info_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDQryTreasureInfoResp)
  return target;
}

int CMDQryTreasureInfoResp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDQryTreasureInfoResp)
  int total_size = 0;

  // optional .CMDErrCode errinfo = 1;
  if (this->has_errinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->errinfo_);
  }

  // optional .CMDQryTreasureInfo req = 2;
  if (this->has_req()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->req_);
  }

  // optional .CMDTreasureInfo info = 3;
  if (this->has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->info_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDQryTreasureInfoResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDQryTreasureInfoResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDQryTreasureInfoResp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDQryTreasureInfoResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDQryTreasureInfoResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDQryTreasureInfoResp)
    MergeFrom(*source);
  }
}

void CMDQryTreasureInfoResp::MergeFrom(const CMDQryTreasureInfoResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDQryTreasureInfoResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.has_errinfo()) {
    mutable_errinfo()->::CMDErrCode::MergeFrom(from.errinfo());
  }
  if (from.has_req()) {
    mutable_req()->::CMDQryTreasureInfo::MergeFrom(from.req());
  }
  if (from.has_info()) {
    mutable_info()->::CMDTreasureInfo::MergeFrom(from.info());
  }
}

void CMDQryTreasureInfoResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDQryTreasureInfoResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDQryTreasureInfoResp::CopyFrom(const CMDQryTreasureInfoResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDQryTreasureInfoResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDQryTreasureInfoResp::IsInitialized() const {

  return true;
}

void CMDQryTreasureInfoResp::Swap(CMDQryTreasureInfoResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDQryTreasureInfoResp::InternalSwap(CMDQryTreasureInfoResp* other) {
  std::swap(errinfo_, other->errinfo_);
  std::swap(req_, other->req_);
  std::swap(info_, other->info_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDQryTreasureInfoResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDQryTreasureInfoResp_descriptor_;
  metadata.reflection = CMDQryTreasureInfoResp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDQryTreasureInfoResp

// optional .CMDErrCode errinfo = 1;
bool CMDQryTreasureInfoResp::has_errinfo() const {
  return !_is_default_instance_ && errinfo_ != NULL;
}
void CMDQryTreasureInfoResp::clear_errinfo() {
  if (GetArenaNoVirtual() == NULL && errinfo_ != NULL) delete errinfo_;
  errinfo_ = NULL;
}
const ::CMDErrCode& CMDQryTreasureInfoResp::errinfo() const {
  // @@protoc_insertion_point(field_get:CMDQryTreasureInfoResp.errinfo)
  return errinfo_ != NULL ? *errinfo_ : *default_instance_->errinfo_;
}
::CMDErrCode* CMDQryTreasureInfoResp::mutable_errinfo() {
  
  if (errinfo_ == NULL) {
    errinfo_ = new ::CMDErrCode;
  }
  // @@protoc_insertion_point(field_mutable:CMDQryTreasureInfoResp.errinfo)
  return errinfo_;
}
::CMDErrCode* CMDQryTreasureInfoResp::release_errinfo() {
  // @@protoc_insertion_point(field_release:CMDQryTreasureInfoResp.errinfo)
  
  ::CMDErrCode* temp = errinfo_;
  errinfo_ = NULL;
  return temp;
}
void CMDQryTreasureInfoResp::set_allocated_errinfo(::CMDErrCode* errinfo) {
  delete errinfo_;
  errinfo_ = errinfo;
  if (errinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDQryTreasureInfoResp.errinfo)
}

// optional .CMDQryTreasureInfo req = 2;
bool CMDQryTreasureInfoResp::has_req() const {
  return !_is_default_instance_ && req_ != NULL;
}
void CMDQryTreasureInfoResp::clear_req() {
  if (GetArenaNoVirtual() == NULL && req_ != NULL) delete req_;
  req_ = NULL;
}
const ::CMDQryTreasureInfo& CMDQryTreasureInfoResp::req() const {
  // @@protoc_insertion_point(field_get:CMDQryTreasureInfoResp.req)
  return req_ != NULL ? *req_ : *default_instance_->req_;
}
::CMDQryTreasureInfo* CMDQryTreasureInfoResp::mutable_req() {
  
  if (req_ == NULL) {
    req_ = new ::CMDQryTreasureInfo;
  }
  // @@protoc_insertion_point(field_mutable:CMDQryTreasureInfoResp.req)
  return req_;
}
::CMDQryTreasureInfo* CMDQryTreasureInfoResp::release_req() {
  // @@protoc_insertion_point(field_release:CMDQryTreasureInfoResp.req)
  
  ::CMDQryTreasureInfo* temp = req_;
  req_ = NULL;
  return temp;
}
void CMDQryTreasureInfoResp::set_allocated_req(::CMDQryTreasureInfo* req) {
  delete req_;
  req_ = req;
  if (req) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDQryTreasureInfoResp.req)
}

// optional .CMDTreasureInfo info = 3;
bool CMDQryTreasureInfoResp::has_info() const {
  return !_is_default_instance_ && info_ != NULL;
}
void CMDQryTreasureInfoResp::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
const ::CMDTreasureInfo& CMDQryTreasureInfoResp::info() const {
  // @@protoc_insertion_point(field_get:CMDQryTreasureInfoResp.info)
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
::CMDTreasureInfo* CMDQryTreasureInfoResp::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::CMDTreasureInfo;
  }
  // @@protoc_insertion_point(field_mutable:CMDQryTreasureInfoResp.info)
  return info_;
}
::CMDTreasureInfo* CMDQryTreasureInfoResp::release_info() {
  // @@protoc_insertion_point(field_release:CMDQryTreasureInfoResp.info)
  
  ::CMDTreasureInfo* temp = info_;
  info_ = NULL;
  return temp;
}
void CMDQryTreasureInfoResp::set_allocated_info(::CMDTreasureInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDQryTreasureInfoResp.info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDSendPressStampReq::kUserIDFieldNumber;
const int CMDSendPressStampReq::kGroupIDFieldNumber;
const int CMDSendPressStampReq::kDstUserIDFieldNumber;
const int CMDSendPressStampReq::kMoneyFieldNumber;
const int CMDSendPressStampReq::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDSendPressStampReq::CMDSendPressStampReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDSendPressStampReq)
}

void CMDSendPressStampReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDSendPressStampReq::CMDSendPressStampReq(const CMDSendPressStampReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDSendPressStampReq)
}

void CMDSendPressStampReq::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  userid_ = 0u;
  groupid_ = 0u;
  dstuserid_ = 0u;
  money_ = 0u;
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CMDSendPressStampReq::~CMDSendPressStampReq() {
  // @@protoc_insertion_point(destructor:CMDSendPressStampReq)
  SharedDtor();
}

void CMDSendPressStampReq::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CMDSendPressStampReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDSendPressStampReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDSendPressStampReq_descriptor_;
}

const CMDSendPressStampReq& CMDSendPressStampReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ConsumeSvr_2eproto();
  return *default_instance_;
}

CMDSendPressStampReq* CMDSendPressStampReq::default_instance_ = NULL;

CMDSendPressStampReq* CMDSendPressStampReq::New(::google::protobuf::Arena* arena) const {
  CMDSendPressStampReq* n = new CMDSendPressStampReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDSendPressStampReq::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDSendPressStampReq)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDSendPressStampReq, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDSendPressStampReq*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(userid_, money_);
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool CMDSendPressStampReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDSendPressStampReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 userID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_groupID;
        break;
      }

      // optional uint32 groupID = 2;
      case 2: {
        if (tag == 16) {
         parse_groupID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &groupid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_dstUserID;
        break;
      }

      // optional uint32 dstUserID = 3;
      case 3: {
        if (tag == 24) {
         parse_dstUserID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dstuserid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_Money;
        break;
      }

      // optional uint32 Money = 4;
      case 4: {
        if (tag == 32) {
         parse_Money:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &money_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_message;
        break;
      }

      // optional string message = 5;
      case 5: {
        if (tag == 42) {
         parse_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), this->message().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMDSendPressStampReq.message"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDSendPressStampReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDSendPressStampReq)
  return false;
#undef DO_
}

void CMDSendPressStampReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDSendPressStampReq)
  // optional uint32 userID = 1;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->userid(), output);
  }

  // optional uint32 groupID = 2;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->groupid(), output);
  }

  // optional uint32 dstUserID = 3;
  if (this->dstuserid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->dstuserid(), output);
  }

  // optional uint32 Money = 4;
  if (this->money() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->money(), output);
  }

  // optional string message = 5;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDSendPressStampReq.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->message(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDSendPressStampReq)
}

::google::protobuf::uint8* CMDSendPressStampReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDSendPressStampReq)
  // optional uint32 userID = 1;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->userid(), target);
  }

  // optional uint32 groupID = 2;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->groupid(), target);
  }

  // optional uint32 dstUserID = 3;
  if (this->dstuserid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->dstuserid(), target);
  }

  // optional uint32 Money = 4;
  if (this->money() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->money(), target);
  }

  // optional string message = 5;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDSendPressStampReq.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->message(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDSendPressStampReq)
  return target;
}

int CMDSendPressStampReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDSendPressStampReq)
  int total_size = 0;

  // optional uint32 userID = 1;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userid());
  }

  // optional uint32 groupID = 2;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->groupid());
  }

  // optional uint32 dstUserID = 3;
  if (this->dstuserid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dstuserid());
  }

  // optional uint32 Money = 4;
  if (this->money() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->money());
  }

  // optional string message = 5;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDSendPressStampReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDSendPressStampReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDSendPressStampReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDSendPressStampReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDSendPressStampReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDSendPressStampReq)
    MergeFrom(*source);
  }
}

void CMDSendPressStampReq::MergeFrom(const CMDSendPressStampReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDSendPressStampReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
  if (from.dstuserid() != 0) {
    set_dstuserid(from.dstuserid());
  }
  if (from.money() != 0) {
    set_money(from.money());
  }
  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
}

void CMDSendPressStampReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDSendPressStampReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDSendPressStampReq::CopyFrom(const CMDSendPressStampReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDSendPressStampReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDSendPressStampReq::IsInitialized() const {

  return true;
}

void CMDSendPressStampReq::Swap(CMDSendPressStampReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDSendPressStampReq::InternalSwap(CMDSendPressStampReq* other) {
  std::swap(userid_, other->userid_);
  std::swap(groupid_, other->groupid_);
  std::swap(dstuserid_, other->dstuserid_);
  std::swap(money_, other->money_);
  message_.Swap(&other->message_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDSendPressStampReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDSendPressStampReq_descriptor_;
  metadata.reflection = CMDSendPressStampReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDSendPressStampReq

// optional uint32 userID = 1;
void CMDSendPressStampReq::clear_userid() {
  userid_ = 0u;
}
 ::google::protobuf::uint32 CMDSendPressStampReq::userid() const {
  // @@protoc_insertion_point(field_get:CMDSendPressStampReq.userID)
  return userid_;
}
 void CMDSendPressStampReq::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDSendPressStampReq.userID)
}

// optional uint32 groupID = 2;
void CMDSendPressStampReq::clear_groupid() {
  groupid_ = 0u;
}
 ::google::protobuf::uint32 CMDSendPressStampReq::groupid() const {
  // @@protoc_insertion_point(field_get:CMDSendPressStampReq.groupID)
  return groupid_;
}
 void CMDSendPressStampReq::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDSendPressStampReq.groupID)
}

// optional uint32 dstUserID = 3;
void CMDSendPressStampReq::clear_dstuserid() {
  dstuserid_ = 0u;
}
 ::google::protobuf::uint32 CMDSendPressStampReq::dstuserid() const {
  // @@protoc_insertion_point(field_get:CMDSendPressStampReq.dstUserID)
  return dstuserid_;
}
 void CMDSendPressStampReq::set_dstuserid(::google::protobuf::uint32 value) {
  
  dstuserid_ = value;
  // @@protoc_insertion_point(field_set:CMDSendPressStampReq.dstUserID)
}

// optional uint32 Money = 4;
void CMDSendPressStampReq::clear_money() {
  money_ = 0u;
}
 ::google::protobuf::uint32 CMDSendPressStampReq::money() const {
  // @@protoc_insertion_point(field_get:CMDSendPressStampReq.Money)
  return money_;
}
 void CMDSendPressStampReq::set_money(::google::protobuf::uint32 value) {
  
  money_ = value;
  // @@protoc_insertion_point(field_set:CMDSendPressStampReq.Money)
}

// optional string message = 5;
void CMDSendPressStampReq::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CMDSendPressStampReq::message() const {
  // @@protoc_insertion_point(field_get:CMDSendPressStampReq.message)
  return message_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDSendPressStampReq::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDSendPressStampReq.message)
}
 void CMDSendPressStampReq::set_message(const char* value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDSendPressStampReq.message)
}
 void CMDSendPressStampReq::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDSendPressStampReq.message)
}
 ::std::string* CMDSendPressStampReq::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:CMDSendPressStampReq.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMDSendPressStampReq::release_message() {
  // @@protoc_insertion_point(field_release:CMDSendPressStampReq.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDSendPressStampReq::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:CMDSendPressStampReq.message)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDSendPressStampResp::kErrInfoFieldNumber;
const int CMDSendPressStampResp::kUserIDFieldNumber;
const int CMDSendPressStampResp::kGroupIDFieldNumber;
const int CMDSendPressStampResp::kStampIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDSendPressStampResp::CMDSendPressStampResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDSendPressStampResp)
}

void CMDSendPressStampResp::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  errinfo_ = const_cast< ::CMDErrCode*>(&::CMDErrCode::default_instance());
}

CMDSendPressStampResp::CMDSendPressStampResp(const CMDSendPressStampResp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDSendPressStampResp)
}

void CMDSendPressStampResp::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  errinfo_ = NULL;
  userid_ = 0u;
  groupid_ = 0u;
  stampid_ = 0u;
}

CMDSendPressStampResp::~CMDSendPressStampResp() {
  // @@protoc_insertion_point(destructor:CMDSendPressStampResp)
  SharedDtor();
}

void CMDSendPressStampResp::SharedDtor() {
  if (this != default_instance_) {
    delete errinfo_;
  }
}

void CMDSendPressStampResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDSendPressStampResp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDSendPressStampResp_descriptor_;
}

const CMDSendPressStampResp& CMDSendPressStampResp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ConsumeSvr_2eproto();
  return *default_instance_;
}

CMDSendPressStampResp* CMDSendPressStampResp::default_instance_ = NULL;

CMDSendPressStampResp* CMDSendPressStampResp::New(::google::protobuf::Arena* arena) const {
  CMDSendPressStampResp* n = new CMDSendPressStampResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDSendPressStampResp::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDSendPressStampResp)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDSendPressStampResp, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDSendPressStampResp*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(userid_, stampid_);
  if (GetArenaNoVirtual() == NULL && errinfo_ != NULL) delete errinfo_;
  errinfo_ = NULL;

#undef ZR_HELPER_
#undef ZR_

}

bool CMDSendPressStampResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDSendPressStampResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .CMDErrCode errInfo = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_errinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_userID;
        break;
      }

      // optional uint32 userID = 2;
      case 2: {
        if (tag == 16) {
         parse_userID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_groupID;
        break;
      }

      // optional uint32 groupID = 3;
      case 3: {
        if (tag == 24) {
         parse_groupID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &groupid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_stampID;
        break;
      }

      // optional uint32 stampID = 4;
      case 4: {
        if (tag == 32) {
         parse_stampID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &stampid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDSendPressStampResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDSendPressStampResp)
  return false;
#undef DO_
}

void CMDSendPressStampResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDSendPressStampResp)
  // optional .CMDErrCode errInfo = 1;
  if (this->has_errinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->errinfo_, output);
  }

  // optional uint32 userID = 2;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->userid(), output);
  }

  // optional uint32 groupID = 3;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->groupid(), output);
  }

  // optional uint32 stampID = 4;
  if (this->stampid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->stampid(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDSendPressStampResp)
}

::google::protobuf::uint8* CMDSendPressStampResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDSendPressStampResp)
  // optional .CMDErrCode errInfo = 1;
  if (this->has_errinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->errinfo_, false, target);
  }

  // optional uint32 userID = 2;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->userid(), target);
  }

  // optional uint32 groupID = 3;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->groupid(), target);
  }

  // optional uint32 stampID = 4;
  if (this->stampid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->stampid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDSendPressStampResp)
  return target;
}

int CMDSendPressStampResp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDSendPressStampResp)
  int total_size = 0;

  // optional .CMDErrCode errInfo = 1;
  if (this->has_errinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->errinfo_);
  }

  // optional uint32 userID = 2;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userid());
  }

  // optional uint32 groupID = 3;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->groupid());
  }

  // optional uint32 stampID = 4;
  if (this->stampid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->stampid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDSendPressStampResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDSendPressStampResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDSendPressStampResp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDSendPressStampResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDSendPressStampResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDSendPressStampResp)
    MergeFrom(*source);
  }
}

void CMDSendPressStampResp::MergeFrom(const CMDSendPressStampResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDSendPressStampResp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.has_errinfo()) {
    mutable_errinfo()->::CMDErrCode::MergeFrom(from.errinfo());
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
  if (from.stampid() != 0) {
    set_stampid(from.stampid());
  }
}

void CMDSendPressStampResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDSendPressStampResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDSendPressStampResp::CopyFrom(const CMDSendPressStampResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDSendPressStampResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDSendPressStampResp::IsInitialized() const {

  return true;
}

void CMDSendPressStampResp::Swap(CMDSendPressStampResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDSendPressStampResp::InternalSwap(CMDSendPressStampResp* other) {
  std::swap(errinfo_, other->errinfo_);
  std::swap(userid_, other->userid_);
  std::swap(groupid_, other->groupid_);
  std::swap(stampid_, other->stampid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDSendPressStampResp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDSendPressStampResp_descriptor_;
  metadata.reflection = CMDSendPressStampResp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDSendPressStampResp

// optional .CMDErrCode errInfo = 1;
bool CMDSendPressStampResp::has_errinfo() const {
  return !_is_default_instance_ && errinfo_ != NULL;
}
void CMDSendPressStampResp::clear_errinfo() {
  if (GetArenaNoVirtual() == NULL && errinfo_ != NULL) delete errinfo_;
  errinfo_ = NULL;
}
const ::CMDErrCode& CMDSendPressStampResp::errinfo() const {
  // @@protoc_insertion_point(field_get:CMDSendPressStampResp.errInfo)
  return errinfo_ != NULL ? *errinfo_ : *default_instance_->errinfo_;
}
::CMDErrCode* CMDSendPressStampResp::mutable_errinfo() {
  
  if (errinfo_ == NULL) {
    errinfo_ = new ::CMDErrCode;
  }
  // @@protoc_insertion_point(field_mutable:CMDSendPressStampResp.errInfo)
  return errinfo_;
}
::CMDErrCode* CMDSendPressStampResp::release_errinfo() {
  // @@protoc_insertion_point(field_release:CMDSendPressStampResp.errInfo)
  
  ::CMDErrCode* temp = errinfo_;
  errinfo_ = NULL;
  return temp;
}
void CMDSendPressStampResp::set_allocated_errinfo(::CMDErrCode* errinfo) {
  delete errinfo_;
  errinfo_ = errinfo;
  if (errinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDSendPressStampResp.errInfo)
}

// optional uint32 userID = 2;
void CMDSendPressStampResp::clear_userid() {
  userid_ = 0u;
}
 ::google::protobuf::uint32 CMDSendPressStampResp::userid() const {
  // @@protoc_insertion_point(field_get:CMDSendPressStampResp.userID)
  return userid_;
}
 void CMDSendPressStampResp::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDSendPressStampResp.userID)
}

// optional uint32 groupID = 3;
void CMDSendPressStampResp::clear_groupid() {
  groupid_ = 0u;
}
 ::google::protobuf::uint32 CMDSendPressStampResp::groupid() const {
  // @@protoc_insertion_point(field_get:CMDSendPressStampResp.groupID)
  return groupid_;
}
 void CMDSendPressStampResp::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDSendPressStampResp.groupID)
}

// optional uint32 stampID = 4;
void CMDSendPressStampResp::clear_stampid() {
  stampid_ = 0u;
}
 ::google::protobuf::uint32 CMDSendPressStampResp::stampid() const {
  // @@protoc_insertion_point(field_get:CMDSendPressStampResp.stampID)
  return stampid_;
}
 void CMDSendPressStampResp::set_stampid(::google::protobuf::uint32 value) {
  
  stampid_ = value;
  // @@protoc_insertion_point(field_set:CMDSendPressStampResp.stampID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDQryStampReq::kGroupIDFieldNumber;
const int CMDQryStampReq::kUserIDFieldNumber;
const int CMDQryStampReq::kDstUserIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDQryStampReq::CMDQryStampReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDQryStampReq)
}

void CMDQryStampReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDQryStampReq::CMDQryStampReq(const CMDQryStampReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDQryStampReq)
}

void CMDQryStampReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  groupid_ = 0u;
  userid_ = 0u;
  dstuserid_ = 0u;
}

CMDQryStampReq::~CMDQryStampReq() {
  // @@protoc_insertion_point(destructor:CMDQryStampReq)
  SharedDtor();
}

void CMDQryStampReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMDQryStampReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDQryStampReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDQryStampReq_descriptor_;
}

const CMDQryStampReq& CMDQryStampReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ConsumeSvr_2eproto();
  return *default_instance_;
}

CMDQryStampReq* CMDQryStampReq::default_instance_ = NULL;

CMDQryStampReq* CMDQryStampReq::New(::google::protobuf::Arena* arena) const {
  CMDQryStampReq* n = new CMDQryStampReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDQryStampReq::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDQryStampReq)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDQryStampReq, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDQryStampReq*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(groupid_, dstuserid_);

#undef ZR_HELPER_
#undef ZR_

}

bool CMDQryStampReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDQryStampReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 groupID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &groupid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_userID;
        break;
      }

      // optional uint32 userID = 2;
      case 2: {
        if (tag == 16) {
         parse_userID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_dstUserID;
        break;
      }

      // optional uint32 dstUserID = 3;
      case 3: {
        if (tag == 24) {
         parse_dstUserID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dstuserid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDQryStampReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDQryStampReq)
  return false;
#undef DO_
}

void CMDQryStampReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDQryStampReq)
  // optional uint32 groupID = 1;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->groupid(), output);
  }

  // optional uint32 userID = 2;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->userid(), output);
  }

  // optional uint32 dstUserID = 3;
  if (this->dstuserid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->dstuserid(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDQryStampReq)
}

::google::protobuf::uint8* CMDQryStampReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDQryStampReq)
  // optional uint32 groupID = 1;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->groupid(), target);
  }

  // optional uint32 userID = 2;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->userid(), target);
  }

  // optional uint32 dstUserID = 3;
  if (this->dstuserid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->dstuserid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDQryStampReq)
  return target;
}

int CMDQryStampReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDQryStampReq)
  int total_size = 0;

  // optional uint32 groupID = 1;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->groupid());
  }

  // optional uint32 userID = 2;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userid());
  }

  // optional uint32 dstUserID = 3;
  if (this->dstuserid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dstuserid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDQryStampReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDQryStampReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDQryStampReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDQryStampReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDQryStampReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDQryStampReq)
    MergeFrom(*source);
  }
}

void CMDQryStampReq::MergeFrom(const CMDQryStampReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDQryStampReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.dstuserid() != 0) {
    set_dstuserid(from.dstuserid());
  }
}

void CMDQryStampReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDQryStampReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDQryStampReq::CopyFrom(const CMDQryStampReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDQryStampReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDQryStampReq::IsInitialized() const {

  return true;
}

void CMDQryStampReq::Swap(CMDQryStampReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDQryStampReq::InternalSwap(CMDQryStampReq* other) {
  std::swap(groupid_, other->groupid_);
  std::swap(userid_, other->userid_);
  std::swap(dstuserid_, other->dstuserid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDQryStampReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDQryStampReq_descriptor_;
  metadata.reflection = CMDQryStampReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDQryStampReq

// optional uint32 groupID = 1;
void CMDQryStampReq::clear_groupid() {
  groupid_ = 0u;
}
 ::google::protobuf::uint32 CMDQryStampReq::groupid() const {
  // @@protoc_insertion_point(field_get:CMDQryStampReq.groupID)
  return groupid_;
}
 void CMDQryStampReq::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDQryStampReq.groupID)
}

// optional uint32 userID = 2;
void CMDQryStampReq::clear_userid() {
  userid_ = 0u;
}
 ::google::protobuf::uint32 CMDQryStampReq::userid() const {
  // @@protoc_insertion_point(field_get:CMDQryStampReq.userID)
  return userid_;
}
 void CMDQryStampReq::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDQryStampReq.userID)
}

// optional uint32 dstUserID = 3;
void CMDQryStampReq::clear_dstuserid() {
  dstuserid_ = 0u;
}
 ::google::protobuf::uint32 CMDQryStampReq::dstuserid() const {
  // @@protoc_insertion_point(field_get:CMDQryStampReq.dstUserID)
  return dstuserid_;
}
 void CMDQryStampReq::set_dstuserid(::google::protobuf::uint32 value) {
  
  dstuserid_ = value;
  // @@protoc_insertion_point(field_set:CMDQryStampReq.dstUserID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDStampInfo::kStampIDFieldNumber;
const int CMDStampInfo::kUserIDFieldNumber;
const int CMDStampInfo::kDstUserIDFieldNumber;
const int CMDStampInfo::kPressNumFieldNumber;
const int CMDStampInfo::kMoneyFieldNumber;
const int CMDStampInfo::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDStampInfo::CMDStampInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDStampInfo)
}

void CMDStampInfo::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDStampInfo::CMDStampInfo(const CMDStampInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDStampInfo)
}

void CMDStampInfo::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  stampid_ = 0u;
  userid_ = 0u;
  dstuserid_ = 0u;
  pressnum_ = 0u;
  money_ = 0u;
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CMDStampInfo::~CMDStampInfo() {
  // @@protoc_insertion_point(destructor:CMDStampInfo)
  SharedDtor();
}

void CMDStampInfo::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CMDStampInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDStampInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDStampInfo_descriptor_;
}

const CMDStampInfo& CMDStampInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ConsumeSvr_2eproto();
  return *default_instance_;
}

CMDStampInfo* CMDStampInfo::default_instance_ = NULL;

CMDStampInfo* CMDStampInfo::New(::google::protobuf::Arena* arena) const {
  CMDStampInfo* n = new CMDStampInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDStampInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDStampInfo)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDStampInfo, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDStampInfo*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(stampid_, pressnum_);
  money_ = 0u;
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool CMDStampInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDStampInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 stampID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &stampid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_userID;
        break;
      }

      // optional uint32 userID = 2;
      case 2: {
        if (tag == 16) {
         parse_userID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_dstUserID;
        break;
      }

      // optional uint32 dstUserID = 3;
      case 3: {
        if (tag == 24) {
         parse_dstUserID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dstuserid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_pressNum;
        break;
      }

      // optional uint32 pressNum = 4;
      case 4: {
        if (tag == 32) {
         parse_pressNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pressnum_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_Money;
        break;
      }

      // optional uint32 Money = 5;
      case 5: {
        if (tag == 40) {
         parse_Money:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &money_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_message;
        break;
      }

      // optional string message = 6;
      case 6: {
        if (tag == 50) {
         parse_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), this->message().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CMDStampInfo.message"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDStampInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDStampInfo)
  return false;
#undef DO_
}

void CMDStampInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDStampInfo)
  // optional uint32 stampID = 1;
  if (this->stampid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->stampid(), output);
  }

  // optional uint32 userID = 2;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->userid(), output);
  }

  // optional uint32 dstUserID = 3;
  if (this->dstuserid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->dstuserid(), output);
  }

  // optional uint32 pressNum = 4;
  if (this->pressnum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->pressnum(), output);
  }

  // optional uint32 Money = 5;
  if (this->money() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->money(), output);
  }

  // optional string message = 6;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDStampInfo.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->message(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDStampInfo)
}

::google::protobuf::uint8* CMDStampInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDStampInfo)
  // optional uint32 stampID = 1;
  if (this->stampid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->stampid(), target);
  }

  // optional uint32 userID = 2;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->userid(), target);
  }

  // optional uint32 dstUserID = 3;
  if (this->dstuserid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->dstuserid(), target);
  }

  // optional uint32 pressNum = 4;
  if (this->pressnum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->pressnum(), target);
  }

  // optional uint32 Money = 5;
  if (this->money() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->money(), target);
  }

  // optional string message = 6;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CMDStampInfo.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->message(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDStampInfo)
  return target;
}

int CMDStampInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDStampInfo)
  int total_size = 0;

  // optional uint32 stampID = 1;
  if (this->stampid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->stampid());
  }

  // optional uint32 userID = 2;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userid());
  }

  // optional uint32 dstUserID = 3;
  if (this->dstuserid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dstuserid());
  }

  // optional uint32 pressNum = 4;
  if (this->pressnum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pressnum());
  }

  // optional uint32 Money = 5;
  if (this->money() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->money());
  }

  // optional string message = 6;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDStampInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDStampInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDStampInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDStampInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDStampInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDStampInfo)
    MergeFrom(*source);
  }
}

void CMDStampInfo::MergeFrom(const CMDStampInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDStampInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.stampid() != 0) {
    set_stampid(from.stampid());
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.dstuserid() != 0) {
    set_dstuserid(from.dstuserid());
  }
  if (from.pressnum() != 0) {
    set_pressnum(from.pressnum());
  }
  if (from.money() != 0) {
    set_money(from.money());
  }
  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
}

void CMDStampInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDStampInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDStampInfo::CopyFrom(const CMDStampInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDStampInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDStampInfo::IsInitialized() const {

  return true;
}

void CMDStampInfo::Swap(CMDStampInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDStampInfo::InternalSwap(CMDStampInfo* other) {
  std::swap(stampid_, other->stampid_);
  std::swap(userid_, other->userid_);
  std::swap(dstuserid_, other->dstuserid_);
  std::swap(pressnum_, other->pressnum_);
  std::swap(money_, other->money_);
  message_.Swap(&other->message_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDStampInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDStampInfo_descriptor_;
  metadata.reflection = CMDStampInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDStampInfo

// optional uint32 stampID = 1;
void CMDStampInfo::clear_stampid() {
  stampid_ = 0u;
}
 ::google::protobuf::uint32 CMDStampInfo::stampid() const {
  // @@protoc_insertion_point(field_get:CMDStampInfo.stampID)
  return stampid_;
}
 void CMDStampInfo::set_stampid(::google::protobuf::uint32 value) {
  
  stampid_ = value;
  // @@protoc_insertion_point(field_set:CMDStampInfo.stampID)
}

// optional uint32 userID = 2;
void CMDStampInfo::clear_userid() {
  userid_ = 0u;
}
 ::google::protobuf::uint32 CMDStampInfo::userid() const {
  // @@protoc_insertion_point(field_get:CMDStampInfo.userID)
  return userid_;
}
 void CMDStampInfo::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDStampInfo.userID)
}

// optional uint32 dstUserID = 3;
void CMDStampInfo::clear_dstuserid() {
  dstuserid_ = 0u;
}
 ::google::protobuf::uint32 CMDStampInfo::dstuserid() const {
  // @@protoc_insertion_point(field_get:CMDStampInfo.dstUserID)
  return dstuserid_;
}
 void CMDStampInfo::set_dstuserid(::google::protobuf::uint32 value) {
  
  dstuserid_ = value;
  // @@protoc_insertion_point(field_set:CMDStampInfo.dstUserID)
}

// optional uint32 pressNum = 4;
void CMDStampInfo::clear_pressnum() {
  pressnum_ = 0u;
}
 ::google::protobuf::uint32 CMDStampInfo::pressnum() const {
  // @@protoc_insertion_point(field_get:CMDStampInfo.pressNum)
  return pressnum_;
}
 void CMDStampInfo::set_pressnum(::google::protobuf::uint32 value) {
  
  pressnum_ = value;
  // @@protoc_insertion_point(field_set:CMDStampInfo.pressNum)
}

// optional uint32 Money = 5;
void CMDStampInfo::clear_money() {
  money_ = 0u;
}
 ::google::protobuf::uint32 CMDStampInfo::money() const {
  // @@protoc_insertion_point(field_get:CMDStampInfo.Money)
  return money_;
}
 void CMDStampInfo::set_money(::google::protobuf::uint32 value) {
  
  money_ = value;
  // @@protoc_insertion_point(field_set:CMDStampInfo.Money)
}

// optional string message = 6;
void CMDStampInfo::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CMDStampInfo::message() const {
  // @@protoc_insertion_point(field_get:CMDStampInfo.message)
  return message_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDStampInfo::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDStampInfo.message)
}
 void CMDStampInfo::set_message(const char* value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDStampInfo.message)
}
 void CMDStampInfo::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDStampInfo.message)
}
 ::std::string* CMDStampInfo::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:CMDStampInfo.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CMDStampInfo::release_message() {
  // @@protoc_insertion_point(field_release:CMDStampInfo.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CMDStampInfo::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:CMDStampInfo.message)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMDQryStampRsp::kGroupIDFieldNumber;
const int CMDQryStampRsp::kStartMoneyFieldNumber;
const int CMDQryStampRsp::kIncreaseMoneyFieldNumber;
const int CMDQryStampRsp::kStampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMDQryStampRsp::CMDQryStampRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMDQryStampRsp)
}

void CMDQryStampRsp::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CMDQryStampRsp::CMDQryStampRsp(const CMDQryStampRsp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMDQryStampRsp)
}

void CMDQryStampRsp::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  groupid_ = 0u;
  startmoney_ = 0u;
  increasemoney_ = 0u;
}

CMDQryStampRsp::~CMDQryStampRsp() {
  // @@protoc_insertion_point(destructor:CMDQryStampRsp)
  SharedDtor();
}

void CMDQryStampRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMDQryStampRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMDQryStampRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMDQryStampRsp_descriptor_;
}

const CMDQryStampRsp& CMDQryStampRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ConsumeSvr_2eproto();
  return *default_instance_;
}

CMDQryStampRsp* CMDQryStampRsp::default_instance_ = NULL;

CMDQryStampRsp* CMDQryStampRsp::New(::google::protobuf::Arena* arena) const {
  CMDQryStampRsp* n = new CMDQryStampRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMDQryStampRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:CMDQryStampRsp)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMDQryStampRsp, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMDQryStampRsp*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(groupid_, startmoney_);
  increasemoney_ = 0u;

#undef ZR_HELPER_
#undef ZR_

  stamp_.Clear();
}

bool CMDQryStampRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMDQryStampRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 groupID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &groupid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_startMoney;
        break;
      }

      // optional uint32 startMoney = 2;
      case 2: {
        if (tag == 16) {
         parse_startMoney:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &startmoney_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_IncreaseMoney;
        break;
      }

      // optional uint32 IncreaseMoney = 3;
      case 3: {
        if (tag == 24) {
         parse_IncreaseMoney:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &increasemoney_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_stamp;
        break;
      }

      // repeated .CMDStampInfo stamp = 4;
      case 4: {
        if (tag == 34) {
         parse_stamp:
          DO_(input->IncrementRecursionDepth());
         parse_loop_stamp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_stamp()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loop_stamp;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMDQryStampRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMDQryStampRsp)
  return false;
#undef DO_
}

void CMDQryStampRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMDQryStampRsp)
  // optional uint32 groupID = 1;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->groupid(), output);
  }

  // optional uint32 startMoney = 2;
  if (this->startmoney() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->startmoney(), output);
  }

  // optional uint32 IncreaseMoney = 3;
  if (this->increasemoney() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->increasemoney(), output);
  }

  // repeated .CMDStampInfo stamp = 4;
  for (unsigned int i = 0, n = this->stamp_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->stamp(i), output);
  }

  // @@protoc_insertion_point(serialize_end:CMDQryStampRsp)
}

::google::protobuf::uint8* CMDQryStampRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMDQryStampRsp)
  // optional uint32 groupID = 1;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->groupid(), target);
  }

  // optional uint32 startMoney = 2;
  if (this->startmoney() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->startmoney(), target);
  }

  // optional uint32 IncreaseMoney = 3;
  if (this->increasemoney() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->increasemoney(), target);
  }

  // repeated .CMDStampInfo stamp = 4;
  for (unsigned int i = 0, n = this->stamp_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->stamp(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMDQryStampRsp)
  return target;
}

int CMDQryStampRsp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CMDQryStampRsp)
  int total_size = 0;

  // optional uint32 groupID = 1;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->groupid());
  }

  // optional uint32 startMoney = 2;
  if (this->startmoney() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->startmoney());
  }

  // optional uint32 IncreaseMoney = 3;
  if (this->increasemoney() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->increasemoney());
  }

  // repeated .CMDStampInfo stamp = 4;
  total_size += 1 * this->stamp_size();
  for (int i = 0; i < this->stamp_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->stamp(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMDQryStampRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMDQryStampRsp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CMDQryStampRsp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMDQryStampRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMDQryStampRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMDQryStampRsp)
    MergeFrom(*source);
  }
}

void CMDQryStampRsp::MergeFrom(const CMDQryStampRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMDQryStampRsp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  stamp_.MergeFrom(from.stamp_);
  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
  if (from.startmoney() != 0) {
    set_startmoney(from.startmoney());
  }
  if (from.increasemoney() != 0) {
    set_increasemoney(from.increasemoney());
  }
}

void CMDQryStampRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMDQryStampRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMDQryStampRsp::CopyFrom(const CMDQryStampRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMDQryStampRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMDQryStampRsp::IsInitialized() const {

  return true;
}

void CMDQryStampRsp::Swap(CMDQryStampRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMDQryStampRsp::InternalSwap(CMDQryStampRsp* other) {
  std::swap(groupid_, other->groupid_);
  std::swap(startmoney_, other->startmoney_);
  std::swap(increasemoney_, other->increasemoney_);
  stamp_.UnsafeArenaSwap(&other->stamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMDQryStampRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMDQryStampRsp_descriptor_;
  metadata.reflection = CMDQryStampRsp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDQryStampRsp

// optional uint32 groupID = 1;
void CMDQryStampRsp::clear_groupid() {
  groupid_ = 0u;
}
 ::google::protobuf::uint32 CMDQryStampRsp::groupid() const {
  // @@protoc_insertion_point(field_get:CMDQryStampRsp.groupID)
  return groupid_;
}
 void CMDQryStampRsp::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDQryStampRsp.groupID)
}

// optional uint32 startMoney = 2;
void CMDQryStampRsp::clear_startmoney() {
  startmoney_ = 0u;
}
 ::google::protobuf::uint32 CMDQryStampRsp::startmoney() const {
  // @@protoc_insertion_point(field_get:CMDQryStampRsp.startMoney)
  return startmoney_;
}
 void CMDQryStampRsp::set_startmoney(::google::protobuf::uint32 value) {
  
  startmoney_ = value;
  // @@protoc_insertion_point(field_set:CMDQryStampRsp.startMoney)
}

// optional uint32 IncreaseMoney = 3;
void CMDQryStampRsp::clear_increasemoney() {
  increasemoney_ = 0u;
}
 ::google::protobuf::uint32 CMDQryStampRsp::increasemoney() const {
  // @@protoc_insertion_point(field_get:CMDQryStampRsp.IncreaseMoney)
  return increasemoney_;
}
 void CMDQryStampRsp::set_increasemoney(::google::protobuf::uint32 value) {
  
  increasemoney_ = value;
  // @@protoc_insertion_point(field_set:CMDQryStampRsp.IncreaseMoney)
}

// repeated .CMDStampInfo stamp = 4;
int CMDQryStampRsp::stamp_size() const {
  return stamp_.size();
}
void CMDQryStampRsp::clear_stamp() {
  stamp_.Clear();
}
const ::CMDStampInfo& CMDQryStampRsp::stamp(int index) const {
  // @@protoc_insertion_point(field_get:CMDQryStampRsp.stamp)
  return stamp_.Get(index);
}
::CMDStampInfo* CMDQryStampRsp::mutable_stamp(int index) {
  // @@protoc_insertion_point(field_mutable:CMDQryStampRsp.stamp)
  return stamp_.Mutable(index);
}
::CMDStampInfo* CMDQryStampRsp::add_stamp() {
  // @@protoc_insertion_point(field_add:CMDQryStampRsp.stamp)
  return stamp_.Add();
}
::google::protobuf::RepeatedPtrField< ::CMDStampInfo >*
CMDQryStampRsp::mutable_stamp() {
  // @@protoc_insertion_point(field_mutable_list:CMDQryStampRsp.stamp)
  return &stamp_;
}
const ::google::protobuf::RepeatedPtrField< ::CMDStampInfo >&
CMDQryStampRsp::stamp() const {
  // @@protoc_insertion_point(field_list:CMDQryStampRsp.stamp)
  return stamp_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
