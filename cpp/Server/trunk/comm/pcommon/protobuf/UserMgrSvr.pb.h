// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: UserMgrSvr.proto

#ifndef PROTOBUF_UserMgrSvr_2eproto__INCLUDED
#define PROTOBUF_UserMgrSvr_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "Common.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_UserMgrSvr_2eproto();
void protobuf_AssignDesc_UserMgrSvr_2eproto();
void protobuf_ShutdownFile_UserMgrSvr_2eproto();

class CMDGroupInfo;
class CMDLogonClientInf;
class CMDLogonClientInfLst;
class CMDOperFriendshipReq;
class CMDOperFriendshipResp;
class CMDQryUserAttentionList;
class CMDTransferMicState;
class CMDUserAttentionList;
class CMDUserGroupInfo;
class CMDUserInfoModNotify;
class CMDUserKickOffLine;
class CMDUserLocateInfo;
class CMDUserLocationResp;
class CMDUserModInfoReq;
class CMDUserModInfoResp;
class CMDUserSysConfigNotify;

enum e_Friendship_OpType {
  OPTYPE_UNFOLLOW = 0,
  OPTYPE_FOLLOW = 1,
  OPTYPE_UNBLOCK = 2,
  OPTYPE_BLOCK = 3,
  e_Friendship_OpType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  e_Friendship_OpType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool e_Friendship_OpType_IsValid(int value);
const e_Friendship_OpType e_Friendship_OpType_MIN = OPTYPE_UNFOLLOW;
const e_Friendship_OpType e_Friendship_OpType_MAX = OPTYPE_BLOCK;
const int e_Friendship_OpType_ARRAYSIZE = e_Friendship_OpType_MAX + 1;

const ::google::protobuf::EnumDescriptor* e_Friendship_OpType_descriptor();
inline const ::std::string& e_Friendship_OpType_Name(e_Friendship_OpType value) {
  return ::google::protobuf::internal::NameOfEnum(
    e_Friendship_OpType_descriptor(), value);
}
inline bool e_Friendship_OpType_Parse(
    const ::std::string& name, e_Friendship_OpType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<e_Friendship_OpType>(
    e_Friendship_OpType_descriptor(), name, value);
}
// ===================================================================

class CMDLogonClientInf : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDLogonClientInf) */ {
 public:
  CMDLogonClientInf();
  virtual ~CMDLogonClientInf();

  CMDLogonClientInf(const CMDLogonClientInf& from);

  inline CMDLogonClientInf& operator=(const CMDLogonClientInf& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDLogonClientInf& default_instance();

  void Swap(CMDLogonClientInf* other);

  // implements Message ----------------------------------------------

  inline CMDLogonClientInf* New() const { return New(NULL); }

  CMDLogonClientInf* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDLogonClientInf& from);
  void MergeFrom(const CMDLogonClientInf& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDLogonClientInf* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 userid = 1;
  void clear_userid();
  static const int kUseridFieldNumber = 1;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // optional uint32 mobile = 2;
  void clear_mobile();
  static const int kMobileFieldNumber = 2;
  ::google::protobuf::uint32 mobile() const;
  void set_mobile(::google::protobuf::uint32 value);

  // optional uint32 logontime = 3;
  void clear_logontime();
  static const int kLogontimeFieldNumber = 3;
  ::google::protobuf::uint32 logontime() const;
  void set_logontime(::google::protobuf::uint32 value);

  // optional uint32 connid = 4;
  void clear_connid();
  static const int kConnidFieldNumber = 4;
  ::google::protobuf::uint32 connid() const;
  void set_connid(::google::protobuf::uint32 value);

  // optional string uuid = 5;
  void clear_uuid();
  static const int kUuidFieldNumber = 5;
  const ::std::string& uuid() const;
  void set_uuid(const ::std::string& value);
  void set_uuid(const char* value);
  void set_uuid(const char* value, size_t size);
  ::std::string* mutable_uuid();
  ::std::string* release_uuid();
  void set_allocated_uuid(::std::string* uuid);

  // @@protoc_insertion_point(class_scope:CMDLogonClientInf)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 mobile_;
  ::google::protobuf::uint32 logontime_;
  ::google::protobuf::uint32 connid_;
  ::google::protobuf::internal::ArenaStringPtr uuid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_UserMgrSvr_2eproto();
  friend void protobuf_AssignDesc_UserMgrSvr_2eproto();
  friend void protobuf_ShutdownFile_UserMgrSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDLogonClientInf* default_instance_;
};
// -------------------------------------------------------------------

class CMDLogonClientInfLst : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDLogonClientInfLst) */ {
 public:
  CMDLogonClientInfLst();
  virtual ~CMDLogonClientInfLst();

  CMDLogonClientInfLst(const CMDLogonClientInfLst& from);

  inline CMDLogonClientInfLst& operator=(const CMDLogonClientInfLst& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDLogonClientInfLst& default_instance();

  void Swap(CMDLogonClientInfLst* other);

  // implements Message ----------------------------------------------

  inline CMDLogonClientInfLst* New() const { return New(NULL); }

  CMDLogonClientInfLst* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDLogonClientInfLst& from);
  void MergeFrom(const CMDLogonClientInfLst& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDLogonClientInfLst* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CMDLogonClientInf userInfLst = 1;
  int userinflst_size() const;
  void clear_userinflst();
  static const int kUserInfLstFieldNumber = 1;
  const ::CMDLogonClientInf& userinflst(int index) const;
  ::CMDLogonClientInf* mutable_userinflst(int index);
  ::CMDLogonClientInf* add_userinflst();
  ::google::protobuf::RepeatedPtrField< ::CMDLogonClientInf >*
      mutable_userinflst();
  const ::google::protobuf::RepeatedPtrField< ::CMDLogonClientInf >&
      userinflst() const;

  // @@protoc_insertion_point(class_scope:CMDLogonClientInfLst)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::CMDLogonClientInf > userinflst_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_UserMgrSvr_2eproto();
  friend void protobuf_AssignDesc_UserMgrSvr_2eproto();
  friend void protobuf_ShutdownFile_UserMgrSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDLogonClientInfLst* default_instance_;
};
// -------------------------------------------------------------------

class CMDTransferMicState : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDTransferMicState) */ {
 public:
  CMDTransferMicState();
  virtual ~CMDTransferMicState();

  CMDTransferMicState(const CMDTransferMicState& from);

  inline CMDTransferMicState& operator=(const CMDTransferMicState& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDTransferMicState& default_instance();

  void Swap(CMDTransferMicState* other);

  // implements Message ----------------------------------------------

  inline CMDTransferMicState* New() const { return New(NULL); }

  CMDTransferMicState* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDTransferMicState& from);
  void MergeFrom(const CMDTransferMicState& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDTransferMicState* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 micRunUserID = 1;
  void clear_micrunuserid();
  static const int kMicRunUserIDFieldNumber = 1;
  ::google::protobuf::int32 micrunuserid() const;
  void set_micrunuserid(::google::protobuf::int32 value);

  // optional int32 micToUserID = 2;
  void clear_mictouserid();
  static const int kMicToUserIDFieldNumber = 2;
  ::google::protobuf::int32 mictouserid() const;
  void set_mictouserid(::google::protobuf::int32 value);

  // optional int32 micGroupID = 3;
  void clear_micgroupid();
  static const int kMicGroupIDFieldNumber = 3;
  ::google::protobuf::int32 micgroupid() const;
  void set_micgroupid(::google::protobuf::int32 value);

  // optional int32 micIndex = 4;
  void clear_micindex();
  static const int kMicIndexFieldNumber = 4;
  ::google::protobuf::int32 micindex() const;
  void set_micindex(::google::protobuf::int32 value);

  // optional int32 micState = 5;
  void clear_micstate();
  static const int kMicStateFieldNumber = 5;
  ::google::protobuf::int32 micstate() const;
  void set_micstate(::google::protobuf::int32 value);

  // optional int32 inviteMicRunID = 6;
  void clear_invitemicrunid();
  static const int kInviteMicRunIDFieldNumber = 6;
  ::google::protobuf::int32 invitemicrunid() const;
  void set_invitemicrunid(::google::protobuf::int32 value);

  // optional int32 inviteMicToID = 7;
  void clear_invitemictoid();
  static const int kInviteMicToIDFieldNumber = 7;
  ::google::protobuf::int32 invitemictoid() const;
  void set_invitemictoid(::google::protobuf::int32 value);

  // optional int32 inviteMicSessionID = 8;
  void clear_invitemicsessionid();
  static const int kInviteMicSessionIDFieldNumber = 8;
  ::google::protobuf::int32 invitemicsessionid() const;
  void set_invitemicsessionid(::google::protobuf::int32 value);

  // optional uint32 userID = 9;
  void clear_userid();
  static const int kUserIDFieldNumber = 9;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMDTransferMicState)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 micrunuserid_;
  ::google::protobuf::int32 mictouserid_;
  ::google::protobuf::int32 micgroupid_;
  ::google::protobuf::int32 micindex_;
  ::google::protobuf::int32 micstate_;
  ::google::protobuf::int32 invitemicrunid_;
  ::google::protobuf::int32 invitemictoid_;
  ::google::protobuf::int32 invitemicsessionid_;
  ::google::protobuf::uint32 userid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_UserMgrSvr_2eproto();
  friend void protobuf_AssignDesc_UserMgrSvr_2eproto();
  friend void protobuf_ShutdownFile_UserMgrSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDTransferMicState* default_instance_;
};
// -------------------------------------------------------------------

class CMDUserKickOffLine : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDUserKickOffLine) */ {
 public:
  CMDUserKickOffLine();
  virtual ~CMDUserKickOffLine();

  CMDUserKickOffLine(const CMDUserKickOffLine& from);

  inline CMDUserKickOffLine& operator=(const CMDUserKickOffLine& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDUserKickOffLine& default_instance();

  void Swap(CMDUserKickOffLine* other);

  // implements Message ----------------------------------------------

  inline CMDUserKickOffLine* New() const { return New(NULL); }

  CMDUserKickOffLine* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDUserKickOffLine& from);
  void MergeFrom(const CMDUserKickOffLine& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDUserKickOffLine* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 reasonid = 1;
  void clear_reasonid();
  static const int kReasonidFieldNumber = 1;
  ::google::protobuf::uint32 reasonid() const;
  void set_reasonid(::google::protobuf::uint32 value);

  // optional string newsessionUUID = 2;
  void clear_newsessionuuid();
  static const int kNewsessionUUIDFieldNumber = 2;
  const ::std::string& newsessionuuid() const;
  void set_newsessionuuid(const ::std::string& value);
  void set_newsessionuuid(const char* value);
  void set_newsessionuuid(const char* value, size_t size);
  ::std::string* mutable_newsessionuuid();
  ::std::string* release_newsessionuuid();
  void set_allocated_newsessionuuid(::std::string* newsessionuuid);

  // @@protoc_insertion_point(class_scope:CMDUserKickOffLine)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr newsessionuuid_;
  ::google::protobuf::uint32 reasonid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_UserMgrSvr_2eproto();
  friend void protobuf_AssignDesc_UserMgrSvr_2eproto();
  friend void protobuf_ShutdownFile_UserMgrSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDUserKickOffLine* default_instance_;
};
// -------------------------------------------------------------------

class CMDGroupInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDGroupInfo) */ {
 public:
  CMDGroupInfo();
  virtual ~CMDGroupInfo();

  CMDGroupInfo(const CMDGroupInfo& from);

  inline CMDGroupInfo& operator=(const CMDGroupInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDGroupInfo& default_instance();

  void Swap(CMDGroupInfo* other);

  // implements Message ----------------------------------------------

  inline CMDGroupInfo* New() const { return New(NULL); }

  CMDGroupInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDGroupInfo& from);
  void MergeFrom(const CMDGroupInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDGroupInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 groupid = 1;
  void clear_groupid();
  static const int kGroupidFieldNumber = 1;
  ::google::protobuf::uint32 groupid() const;
  void set_groupid(::google::protobuf::uint32 value);

  // optional string groupName = 2;
  void clear_groupname();
  static const int kGroupNameFieldNumber = 2;
  const ::std::string& groupname() const;
  void set_groupname(const ::std::string& value);
  void set_groupname(const char* value);
  void set_groupname(const char* value, size_t size);
  ::std::string* mutable_groupname();
  ::std::string* release_groupname();
  void set_allocated_groupname(::std::string* groupname);

  // optional string grouphead = 3;
  void clear_grouphead();
  static const int kGroupheadFieldNumber = 3;
  const ::std::string& grouphead() const;
  void set_grouphead(const ::std::string& value);
  void set_grouphead(const char* value);
  void set_grouphead(const char* value, size_t size);
  ::std::string* mutable_grouphead();
  ::std::string* release_grouphead();
  void set_allocated_grouphead(::std::string* grouphead);

  // optional uint32 showid = 4;
  void clear_showid();
  static const int kShowidFieldNumber = 4;
  ::google::protobuf::uint32 showid() const;
  void set_showid(::google::protobuf::uint32 value);

  // optional uint32 muteSet = 5;
  void clear_muteset();
  static const int kMuteSetFieldNumber = 5;
  ::google::protobuf::uint32 muteset() const;
  void set_muteset(::google::protobuf::uint32 value);

  // optional uint32 roleType = 6;
  void clear_roletype();
  static const int kRoleTypeFieldNumber = 6;
  ::google::protobuf::uint32 roletype() const;
  void set_roletype(::google::protobuf::uint32 value);

  // optional uint32 memberCount = 7;
  void clear_membercount();
  static const int kMemberCountFieldNumber = 7;
  ::google::protobuf::uint32 membercount() const;
  void set_membercount(::google::protobuf::uint32 value);

  // optional uint32 visitCount = 8;
  void clear_visitcount();
  static const int kVisitCountFieldNumber = 8;
  ::google::protobuf::uint32 visitcount() const;
  void set_visitcount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMDGroupInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr groupname_;
  ::google::protobuf::uint32 groupid_;
  ::google::protobuf::uint32 showid_;
  ::google::protobuf::internal::ArenaStringPtr grouphead_;
  ::google::protobuf::uint32 muteset_;
  ::google::protobuf::uint32 roletype_;
  ::google::protobuf::uint32 membercount_;
  ::google::protobuf::uint32 visitcount_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_UserMgrSvr_2eproto();
  friend void protobuf_AssignDesc_UserMgrSvr_2eproto();
  friend void protobuf_ShutdownFile_UserMgrSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDGroupInfo* default_instance_;
};
// -------------------------------------------------------------------

class CMDUserGroupInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDUserGroupInfo) */ {
 public:
  CMDUserGroupInfo();
  virtual ~CMDUserGroupInfo();

  CMDUserGroupInfo(const CMDUserGroupInfo& from);

  inline CMDUserGroupInfo& operator=(const CMDUserGroupInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDUserGroupInfo& default_instance();

  void Swap(CMDUserGroupInfo* other);

  // implements Message ----------------------------------------------

  inline CMDUserGroupInfo* New() const { return New(NULL); }

  CMDUserGroupInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDUserGroupInfo& from);
  void MergeFrom(const CMDUserGroupInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDUserGroupInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CMDGroupInfo grouplst = 1;
  int grouplst_size() const;
  void clear_grouplst();
  static const int kGrouplstFieldNumber = 1;
  const ::CMDGroupInfo& grouplst(int index) const;
  ::CMDGroupInfo* mutable_grouplst(int index);
  ::CMDGroupInfo* add_grouplst();
  ::google::protobuf::RepeatedPtrField< ::CMDGroupInfo >*
      mutable_grouplst();
  const ::google::protobuf::RepeatedPtrField< ::CMDGroupInfo >&
      grouplst() const;

  // @@protoc_insertion_point(class_scope:CMDUserGroupInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::CMDGroupInfo > grouplst_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_UserMgrSvr_2eproto();
  friend void protobuf_AssignDesc_UserMgrSvr_2eproto();
  friend void protobuf_ShutdownFile_UserMgrSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDUserGroupInfo* default_instance_;
};
// -------------------------------------------------------------------

class CMDUserModInfoReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDUserModInfoReq) */ {
 public:
  CMDUserModInfoReq();
  virtual ~CMDUserModInfoReq();

  CMDUserModInfoReq(const CMDUserModInfoReq& from);

  inline CMDUserModInfoReq& operator=(const CMDUserModInfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDUserModInfoReq& default_instance();

  void Swap(CMDUserModInfoReq* other);

  // implements Message ----------------------------------------------

  inline CMDUserModInfoReq* New() const { return New(NULL); }

  CMDUserModInfoReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDUserModInfoReq& from);
  void MergeFrom(const CMDUserModInfoReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDUserModInfoReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 userID = 1;
  void clear_userid();
  static const int kUserIDFieldNumber = 1;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // optional .CMDString userAlias = 2;
  bool has_useralias() const;
  void clear_useralias();
  static const int kUserAliasFieldNumber = 2;
  const ::CMDString& useralias() const;
  ::CMDString* mutable_useralias();
  ::CMDString* release_useralias();
  void set_allocated_useralias(::CMDString* useralias);

  // optional .CMDString headAdd = 3;
  bool has_headadd() const;
  void clear_headadd();
  static const int kHeadAddFieldNumber = 3;
  const ::CMDString& headadd() const;
  ::CMDString* mutable_headadd();
  ::CMDString* release_headadd();
  void set_allocated_headadd(::CMDString* headadd);

  // optional .CMDString birthday = 4;
  bool has_birthday() const;
  void clear_birthday();
  static const int kBirthdayFieldNumber = 4;
  const ::CMDString& birthday() const;
  ::CMDString* mutable_birthday();
  ::CMDString* release_birthday();
  void set_allocated_birthday(::CMDString* birthday);

  // optional .CMDString city = 5;
  bool has_city() const;
  void clear_city();
  static const int kCityFieldNumber = 5;
  const ::CMDString& city() const;
  ::CMDString* mutable_city();
  ::CMDString* release_city();
  void set_allocated_city(::CMDString* city);

  // optional .CMDString sign = 6;
  bool has_sign() const;
  void clear_sign();
  static const int kSignFieldNumber = 6;
  const ::CMDString& sign() const;
  ::CMDString* mutable_sign();
  ::CMDString* release_sign();
  void set_allocated_sign(::CMDString* sign);

  // @@protoc_insertion_point(class_scope:CMDUserModInfoReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::CMDString* useralias_;
  ::CMDString* headadd_;
  ::CMDString* birthday_;
  ::CMDString* city_;
  ::CMDString* sign_;
  ::google::protobuf::uint32 userid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_UserMgrSvr_2eproto();
  friend void protobuf_AssignDesc_UserMgrSvr_2eproto();
  friend void protobuf_ShutdownFile_UserMgrSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDUserModInfoReq* default_instance_;
};
// -------------------------------------------------------------------

class CMDUserModInfoResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDUserModInfoResp) */ {
 public:
  CMDUserModInfoResp();
  virtual ~CMDUserModInfoResp();

  CMDUserModInfoResp(const CMDUserModInfoResp& from);

  inline CMDUserModInfoResp& operator=(const CMDUserModInfoResp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDUserModInfoResp& default_instance();

  void Swap(CMDUserModInfoResp* other);

  // implements Message ----------------------------------------------

  inline CMDUserModInfoResp* New() const { return New(NULL); }

  CMDUserModInfoResp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDUserModInfoResp& from);
  void MergeFrom(const CMDUserModInfoResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDUserModInfoResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 userID = 1;
  void clear_userid();
  static const int kUserIDFieldNumber = 1;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // optional .CMDErrCode errInfo = 2;
  bool has_errinfo() const;
  void clear_errinfo();
  static const int kErrInfoFieldNumber = 2;
  const ::CMDErrCode& errinfo() const;
  ::CMDErrCode* mutable_errinfo();
  ::CMDErrCode* release_errinfo();
  void set_allocated_errinfo(::CMDErrCode* errinfo);

  // @@protoc_insertion_point(class_scope:CMDUserModInfoResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::CMDErrCode* errinfo_;
  ::google::protobuf::uint32 userid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_UserMgrSvr_2eproto();
  friend void protobuf_AssignDesc_UserMgrSvr_2eproto();
  friend void protobuf_ShutdownFile_UserMgrSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDUserModInfoResp* default_instance_;
};
// -------------------------------------------------------------------

class CMDUserInfoModNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDUserInfoModNotify) */ {
 public:
  CMDUserInfoModNotify();
  virtual ~CMDUserInfoModNotify();

  CMDUserInfoModNotify(const CMDUserInfoModNotify& from);

  inline CMDUserInfoModNotify& operator=(const CMDUserInfoModNotify& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDUserInfoModNotify& default_instance();

  void Swap(CMDUserInfoModNotify* other);

  // implements Message ----------------------------------------------

  inline CMDUserInfoModNotify* New() const { return New(NULL); }

  CMDUserInfoModNotify* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDUserInfoModNotify& from);
  void MergeFrom(const CMDUserInfoModNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDUserInfoModNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 userID = 1;
  void clear_userid();
  static const int kUserIDFieldNumber = 1;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // optional .CMDString userAlias = 2;
  bool has_useralias() const;
  void clear_useralias();
  static const int kUserAliasFieldNumber = 2;
  const ::CMDString& useralias() const;
  ::CMDString* mutable_useralias();
  ::CMDString* release_useralias();
  void set_allocated_useralias(::CMDString* useralias);

  // optional .CMDString headAdd = 3;
  bool has_headadd() const;
  void clear_headadd();
  static const int kHeadAddFieldNumber = 3;
  const ::CMDString& headadd() const;
  ::CMDString* mutable_headadd();
  ::CMDString* release_headadd();
  void set_allocated_headadd(::CMDString* headadd);

  // optional .CMDUInt32 roleType = 4;
  bool has_roletype() const;
  void clear_roletype();
  static const int kRoleTypeFieldNumber = 4;
  const ::CMDUInt32& roletype() const;
  ::CMDUInt32* mutable_roletype();
  ::CMDUInt32* release_roletype();
  void set_allocated_roletype(::CMDUInt32* roletype);

  // optional .CMDGroupInfo groupInfo = 6;
  bool has_groupinfo() const;
  void clear_groupinfo();
  static const int kGroupInfoFieldNumber = 6;
  const ::CMDGroupInfo& groupinfo() const;
  ::CMDGroupInfo* mutable_groupinfo();
  ::CMDGroupInfo* release_groupinfo();
  void set_allocated_groupinfo(::CMDGroupInfo* groupinfo);

  // @@protoc_insertion_point(class_scope:CMDUserInfoModNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::CMDString* useralias_;
  ::CMDString* headadd_;
  ::CMDUInt32* roletype_;
  ::CMDGroupInfo* groupinfo_;
  ::google::protobuf::uint32 userid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_UserMgrSvr_2eproto();
  friend void protobuf_AssignDesc_UserMgrSvr_2eproto();
  friend void protobuf_ShutdownFile_UserMgrSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDUserInfoModNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMDOperFriendshipReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDOperFriendshipReq) */ {
 public:
  CMDOperFriendshipReq();
  virtual ~CMDOperFriendshipReq();

  CMDOperFriendshipReq(const CMDOperFriendshipReq& from);

  inline CMDOperFriendshipReq& operator=(const CMDOperFriendshipReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDOperFriendshipReq& default_instance();

  void Swap(CMDOperFriendshipReq* other);

  // implements Message ----------------------------------------------

  inline CMDOperFriendshipReq* New() const { return New(NULL); }

  CMDOperFriendshipReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDOperFriendshipReq& from);
  void MergeFrom(const CMDOperFriendshipReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDOperFriendshipReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 userid = 1;
  void clear_userid();
  static const int kUseridFieldNumber = 1;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // optional uint32 dstuid = 2;
  void clear_dstuid();
  static const int kDstuidFieldNumber = 2;
  ::google::protobuf::uint32 dstuid() const;
  void set_dstuid(::google::protobuf::uint32 value);

  // optional .e_Friendship_OpType action = 3;
  void clear_action();
  static const int kActionFieldNumber = 3;
  ::e_Friendship_OpType action() const;
  void set_action(::e_Friendship_OpType value);

  // @@protoc_insertion_point(class_scope:CMDOperFriendshipReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 dstuid_;
  int action_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_UserMgrSvr_2eproto();
  friend void protobuf_AssignDesc_UserMgrSvr_2eproto();
  friend void protobuf_ShutdownFile_UserMgrSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDOperFriendshipReq* default_instance_;
};
// -------------------------------------------------------------------

class CMDOperFriendshipResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDOperFriendshipResp) */ {
 public:
  CMDOperFriendshipResp();
  virtual ~CMDOperFriendshipResp();

  CMDOperFriendshipResp(const CMDOperFriendshipResp& from);

  inline CMDOperFriendshipResp& operator=(const CMDOperFriendshipResp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDOperFriendshipResp& default_instance();

  void Swap(CMDOperFriendshipResp* other);

  // implements Message ----------------------------------------------

  inline CMDOperFriendshipResp* New() const { return New(NULL); }

  CMDOperFriendshipResp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDOperFriendshipResp& from);
  void MergeFrom(const CMDOperFriendshipResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDOperFriendshipResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CMDErrCode errInfo = 1;
  bool has_errinfo() const;
  void clear_errinfo();
  static const int kErrInfoFieldNumber = 1;
  const ::CMDErrCode& errinfo() const;
  ::CMDErrCode* mutable_errinfo();
  ::CMDErrCode* release_errinfo();
  void set_allocated_errinfo(::CMDErrCode* errinfo);

  // optional uint32 dstuid = 2;
  void clear_dstuid();
  static const int kDstuidFieldNumber = 2;
  ::google::protobuf::uint32 dstuid() const;
  void set_dstuid(::google::protobuf::uint32 value);

  // optional .e_Friendship_OpType action = 3;
  void clear_action();
  static const int kActionFieldNumber = 3;
  ::e_Friendship_OpType action() const;
  void set_action(::e_Friendship_OpType value);

  // @@protoc_insertion_point(class_scope:CMDOperFriendshipResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::CMDErrCode* errinfo_;
  ::google::protobuf::uint32 dstuid_;
  int action_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_UserMgrSvr_2eproto();
  friend void protobuf_AssignDesc_UserMgrSvr_2eproto();
  friend void protobuf_ShutdownFile_UserMgrSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDOperFriendshipResp* default_instance_;
};
// -------------------------------------------------------------------

class CMDQryUserAttentionList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDQryUserAttentionList) */ {
 public:
  CMDQryUserAttentionList();
  virtual ~CMDQryUserAttentionList();

  CMDQryUserAttentionList(const CMDQryUserAttentionList& from);

  inline CMDQryUserAttentionList& operator=(const CMDQryUserAttentionList& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDQryUserAttentionList& default_instance();

  void Swap(CMDQryUserAttentionList* other);

  // implements Message ----------------------------------------------

  inline CMDQryUserAttentionList* New() const { return New(NULL); }

  CMDQryUserAttentionList* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDQryUserAttentionList& from);
  void MergeFrom(const CMDQryUserAttentionList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDQryUserAttentionList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 userid = 1;
  void clear_userid();
  static const int kUseridFieldNumber = 1;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMDQryUserAttentionList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 userid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_UserMgrSvr_2eproto();
  friend void protobuf_AssignDesc_UserMgrSvr_2eproto();
  friend void protobuf_ShutdownFile_UserMgrSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDQryUserAttentionList* default_instance_;
};
// -------------------------------------------------------------------

class CMDUserAttentionList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDUserAttentionList) */ {
 public:
  CMDUserAttentionList();
  virtual ~CMDUserAttentionList();

  CMDUserAttentionList(const CMDUserAttentionList& from);

  inline CMDUserAttentionList& operator=(const CMDUserAttentionList& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDUserAttentionList& default_instance();

  void Swap(CMDUserAttentionList* other);

  // implements Message ----------------------------------------------

  inline CMDUserAttentionList* New() const { return New(NULL); }

  CMDUserAttentionList* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDUserAttentionList& from);
  void MergeFrom(const CMDUserAttentionList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDUserAttentionList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 userid = 1;
  void clear_userid();
  static const int kUseridFieldNumber = 1;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // repeated uint32 list = 2;
  int list_size() const;
  void clear_list();
  static const int kListFieldNumber = 2;
  ::google::protobuf::uint32 list(int index) const;
  void set_list(int index, ::google::protobuf::uint32 value);
  void add_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_list();

  // @@protoc_insertion_point(class_scope:CMDUserAttentionList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > list_;
  mutable int _list_cached_byte_size_;
  ::google::protobuf::uint32 userid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_UserMgrSvr_2eproto();
  friend void protobuf_AssignDesc_UserMgrSvr_2eproto();
  friend void protobuf_ShutdownFile_UserMgrSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDUserAttentionList* default_instance_;
};
// -------------------------------------------------------------------

class CMDUserSysConfigNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDUserSysConfigNotify) */ {
 public:
  CMDUserSysConfigNotify();
  virtual ~CMDUserSysConfigNotify();

  CMDUserSysConfigNotify(const CMDUserSysConfigNotify& from);

  inline CMDUserSysConfigNotify& operator=(const CMDUserSysConfigNotify& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDUserSysConfigNotify& default_instance();

  void Swap(CMDUserSysConfigNotify* other);

  // implements Message ----------------------------------------------

  inline CMDUserSysConfigNotify* New() const { return New(NULL); }

  CMDUserSysConfigNotify* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDUserSysConfigNotify& from);
  void MergeFrom(const CMDUserSysConfigNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDUserSysConfigNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string sysconfig = 1;
  void clear_sysconfig();
  static const int kSysconfigFieldNumber = 1;
  const ::std::string& sysconfig() const;
  void set_sysconfig(const ::std::string& value);
  void set_sysconfig(const char* value);
  void set_sysconfig(const char* value, size_t size);
  ::std::string* mutable_sysconfig();
  ::std::string* release_sysconfig();
  void set_allocated_sysconfig(::std::string* sysconfig);

  // @@protoc_insertion_point(class_scope:CMDUserSysConfigNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr sysconfig_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_UserMgrSvr_2eproto();
  friend void protobuf_AssignDesc_UserMgrSvr_2eproto();
  friend void protobuf_ShutdownFile_UserMgrSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDUserSysConfigNotify* default_instance_;
};
// -------------------------------------------------------------------

class CMDUserLocateInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDUserLocateInfo) */ {
 public:
  CMDUserLocateInfo();
  virtual ~CMDUserLocateInfo();

  CMDUserLocateInfo(const CMDUserLocateInfo& from);

  inline CMDUserLocateInfo& operator=(const CMDUserLocateInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDUserLocateInfo& default_instance();

  void Swap(CMDUserLocateInfo* other);

  // implements Message ----------------------------------------------

  inline CMDUserLocateInfo* New() const { return New(NULL); }

  CMDUserLocateInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDUserLocateInfo& from);
  void MergeFrom(const CMDUserLocateInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDUserLocateInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 userid = 1;
  void clear_userid();
  static const int kUseridFieldNumber = 1;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // optional double longitude = 2;
  void clear_longitude();
  static const int kLongitudeFieldNumber = 2;
  double longitude() const;
  void set_longitude(double value);

  // optional double latitude = 3;
  void clear_latitude();
  static const int kLatitudeFieldNumber = 3;
  double latitude() const;
  void set_latitude(double value);

  // @@protoc_insertion_point(class_scope:CMDUserLocateInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  double longitude_;
  double latitude_;
  ::google::protobuf::uint32 userid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_UserMgrSvr_2eproto();
  friend void protobuf_AssignDesc_UserMgrSvr_2eproto();
  friend void protobuf_ShutdownFile_UserMgrSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDUserLocateInfo* default_instance_;
};
// -------------------------------------------------------------------

class CMDUserLocationResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMDUserLocationResp) */ {
 public:
  CMDUserLocationResp();
  virtual ~CMDUserLocationResp();

  CMDUserLocationResp(const CMDUserLocationResp& from);

  inline CMDUserLocationResp& operator=(const CMDUserLocationResp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMDUserLocationResp& default_instance();

  void Swap(CMDUserLocationResp* other);

  // implements Message ----------------------------------------------

  inline CMDUserLocationResp* New() const { return New(NULL); }

  CMDUserLocationResp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMDUserLocationResp& from);
  void MergeFrom(const CMDUserLocationResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMDUserLocationResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 userid = 1;
  void clear_userid();
  static const int kUseridFieldNumber = 1;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // repeated .CMDUserLocateInfo nearlist = 2;
  int nearlist_size() const;
  void clear_nearlist();
  static const int kNearlistFieldNumber = 2;
  const ::CMDUserLocateInfo& nearlist(int index) const;
  ::CMDUserLocateInfo* mutable_nearlist(int index);
  ::CMDUserLocateInfo* add_nearlist();
  ::google::protobuf::RepeatedPtrField< ::CMDUserLocateInfo >*
      mutable_nearlist();
  const ::google::protobuf::RepeatedPtrField< ::CMDUserLocateInfo >&
      nearlist() const;

  // @@protoc_insertion_point(class_scope:CMDUserLocationResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::CMDUserLocateInfo > nearlist_;
  ::google::protobuf::uint32 userid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_UserMgrSvr_2eproto();
  friend void protobuf_AssignDesc_UserMgrSvr_2eproto();
  friend void protobuf_ShutdownFile_UserMgrSvr_2eproto();

  void InitAsDefaultInstance();
  static CMDUserLocationResp* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// CMDLogonClientInf

// optional uint32 userid = 1;
inline void CMDLogonClientInf::clear_userid() {
  userid_ = 0u;
}
inline ::google::protobuf::uint32 CMDLogonClientInf::userid() const {
  // @@protoc_insertion_point(field_get:CMDLogonClientInf.userid)
  return userid_;
}
inline void CMDLogonClientInf::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDLogonClientInf.userid)
}

// optional uint32 mobile = 2;
inline void CMDLogonClientInf::clear_mobile() {
  mobile_ = 0u;
}
inline ::google::protobuf::uint32 CMDLogonClientInf::mobile() const {
  // @@protoc_insertion_point(field_get:CMDLogonClientInf.mobile)
  return mobile_;
}
inline void CMDLogonClientInf::set_mobile(::google::protobuf::uint32 value) {
  
  mobile_ = value;
  // @@protoc_insertion_point(field_set:CMDLogonClientInf.mobile)
}

// optional uint32 logontime = 3;
inline void CMDLogonClientInf::clear_logontime() {
  logontime_ = 0u;
}
inline ::google::protobuf::uint32 CMDLogonClientInf::logontime() const {
  // @@protoc_insertion_point(field_get:CMDLogonClientInf.logontime)
  return logontime_;
}
inline void CMDLogonClientInf::set_logontime(::google::protobuf::uint32 value) {
  
  logontime_ = value;
  // @@protoc_insertion_point(field_set:CMDLogonClientInf.logontime)
}

// optional uint32 connid = 4;
inline void CMDLogonClientInf::clear_connid() {
  connid_ = 0u;
}
inline ::google::protobuf::uint32 CMDLogonClientInf::connid() const {
  // @@protoc_insertion_point(field_get:CMDLogonClientInf.connid)
  return connid_;
}
inline void CMDLogonClientInf::set_connid(::google::protobuf::uint32 value) {
  
  connid_ = value;
  // @@protoc_insertion_point(field_set:CMDLogonClientInf.connid)
}

// optional string uuid = 5;
inline void CMDLogonClientInf::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMDLogonClientInf::uuid() const {
  // @@protoc_insertion_point(field_get:CMDLogonClientInf.uuid)
  return uuid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDLogonClientInf::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDLogonClientInf.uuid)
}
inline void CMDLogonClientInf::set_uuid(const char* value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDLogonClientInf.uuid)
}
inline void CMDLogonClientInf::set_uuid(const char* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDLogonClientInf.uuid)
}
inline ::std::string* CMDLogonClientInf::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:CMDLogonClientInf.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMDLogonClientInf::release_uuid() {
  // @@protoc_insertion_point(field_release:CMDLogonClientInf.uuid)
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDLogonClientInf::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:CMDLogonClientInf.uuid)
}

// -------------------------------------------------------------------

// CMDLogonClientInfLst

// repeated .CMDLogonClientInf userInfLst = 1;
inline int CMDLogonClientInfLst::userinflst_size() const {
  return userinflst_.size();
}
inline void CMDLogonClientInfLst::clear_userinflst() {
  userinflst_.Clear();
}
inline const ::CMDLogonClientInf& CMDLogonClientInfLst::userinflst(int index) const {
  // @@protoc_insertion_point(field_get:CMDLogonClientInfLst.userInfLst)
  return userinflst_.Get(index);
}
inline ::CMDLogonClientInf* CMDLogonClientInfLst::mutable_userinflst(int index) {
  // @@protoc_insertion_point(field_mutable:CMDLogonClientInfLst.userInfLst)
  return userinflst_.Mutable(index);
}
inline ::CMDLogonClientInf* CMDLogonClientInfLst::add_userinflst() {
  // @@protoc_insertion_point(field_add:CMDLogonClientInfLst.userInfLst)
  return userinflst_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMDLogonClientInf >*
CMDLogonClientInfLst::mutable_userinflst() {
  // @@protoc_insertion_point(field_mutable_list:CMDLogonClientInfLst.userInfLst)
  return &userinflst_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMDLogonClientInf >&
CMDLogonClientInfLst::userinflst() const {
  // @@protoc_insertion_point(field_list:CMDLogonClientInfLst.userInfLst)
  return userinflst_;
}

// -------------------------------------------------------------------

// CMDTransferMicState

// optional int32 micRunUserID = 1;
inline void CMDTransferMicState::clear_micrunuserid() {
  micrunuserid_ = 0;
}
inline ::google::protobuf::int32 CMDTransferMicState::micrunuserid() const {
  // @@protoc_insertion_point(field_get:CMDTransferMicState.micRunUserID)
  return micrunuserid_;
}
inline void CMDTransferMicState::set_micrunuserid(::google::protobuf::int32 value) {
  
  micrunuserid_ = value;
  // @@protoc_insertion_point(field_set:CMDTransferMicState.micRunUserID)
}

// optional int32 micToUserID = 2;
inline void CMDTransferMicState::clear_mictouserid() {
  mictouserid_ = 0;
}
inline ::google::protobuf::int32 CMDTransferMicState::mictouserid() const {
  // @@protoc_insertion_point(field_get:CMDTransferMicState.micToUserID)
  return mictouserid_;
}
inline void CMDTransferMicState::set_mictouserid(::google::protobuf::int32 value) {
  
  mictouserid_ = value;
  // @@protoc_insertion_point(field_set:CMDTransferMicState.micToUserID)
}

// optional int32 micGroupID = 3;
inline void CMDTransferMicState::clear_micgroupid() {
  micgroupid_ = 0;
}
inline ::google::protobuf::int32 CMDTransferMicState::micgroupid() const {
  // @@protoc_insertion_point(field_get:CMDTransferMicState.micGroupID)
  return micgroupid_;
}
inline void CMDTransferMicState::set_micgroupid(::google::protobuf::int32 value) {
  
  micgroupid_ = value;
  // @@protoc_insertion_point(field_set:CMDTransferMicState.micGroupID)
}

// optional int32 micIndex = 4;
inline void CMDTransferMicState::clear_micindex() {
  micindex_ = 0;
}
inline ::google::protobuf::int32 CMDTransferMicState::micindex() const {
  // @@protoc_insertion_point(field_get:CMDTransferMicState.micIndex)
  return micindex_;
}
inline void CMDTransferMicState::set_micindex(::google::protobuf::int32 value) {
  
  micindex_ = value;
  // @@protoc_insertion_point(field_set:CMDTransferMicState.micIndex)
}

// optional int32 micState = 5;
inline void CMDTransferMicState::clear_micstate() {
  micstate_ = 0;
}
inline ::google::protobuf::int32 CMDTransferMicState::micstate() const {
  // @@protoc_insertion_point(field_get:CMDTransferMicState.micState)
  return micstate_;
}
inline void CMDTransferMicState::set_micstate(::google::protobuf::int32 value) {
  
  micstate_ = value;
  // @@protoc_insertion_point(field_set:CMDTransferMicState.micState)
}

// optional int32 inviteMicRunID = 6;
inline void CMDTransferMicState::clear_invitemicrunid() {
  invitemicrunid_ = 0;
}
inline ::google::protobuf::int32 CMDTransferMicState::invitemicrunid() const {
  // @@protoc_insertion_point(field_get:CMDTransferMicState.inviteMicRunID)
  return invitemicrunid_;
}
inline void CMDTransferMicState::set_invitemicrunid(::google::protobuf::int32 value) {
  
  invitemicrunid_ = value;
  // @@protoc_insertion_point(field_set:CMDTransferMicState.inviteMicRunID)
}

// optional int32 inviteMicToID = 7;
inline void CMDTransferMicState::clear_invitemictoid() {
  invitemictoid_ = 0;
}
inline ::google::protobuf::int32 CMDTransferMicState::invitemictoid() const {
  // @@protoc_insertion_point(field_get:CMDTransferMicState.inviteMicToID)
  return invitemictoid_;
}
inline void CMDTransferMicState::set_invitemictoid(::google::protobuf::int32 value) {
  
  invitemictoid_ = value;
  // @@protoc_insertion_point(field_set:CMDTransferMicState.inviteMicToID)
}

// optional int32 inviteMicSessionID = 8;
inline void CMDTransferMicState::clear_invitemicsessionid() {
  invitemicsessionid_ = 0;
}
inline ::google::protobuf::int32 CMDTransferMicState::invitemicsessionid() const {
  // @@protoc_insertion_point(field_get:CMDTransferMicState.inviteMicSessionID)
  return invitemicsessionid_;
}
inline void CMDTransferMicState::set_invitemicsessionid(::google::protobuf::int32 value) {
  
  invitemicsessionid_ = value;
  // @@protoc_insertion_point(field_set:CMDTransferMicState.inviteMicSessionID)
}

// optional uint32 userID = 9;
inline void CMDTransferMicState::clear_userid() {
  userid_ = 0u;
}
inline ::google::protobuf::uint32 CMDTransferMicState::userid() const {
  // @@protoc_insertion_point(field_get:CMDTransferMicState.userID)
  return userid_;
}
inline void CMDTransferMicState::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDTransferMicState.userID)
}

// -------------------------------------------------------------------

// CMDUserKickOffLine

// optional uint32 reasonid = 1;
inline void CMDUserKickOffLine::clear_reasonid() {
  reasonid_ = 0u;
}
inline ::google::protobuf::uint32 CMDUserKickOffLine::reasonid() const {
  // @@protoc_insertion_point(field_get:CMDUserKickOffLine.reasonid)
  return reasonid_;
}
inline void CMDUserKickOffLine::set_reasonid(::google::protobuf::uint32 value) {
  
  reasonid_ = value;
  // @@protoc_insertion_point(field_set:CMDUserKickOffLine.reasonid)
}

// optional string newsessionUUID = 2;
inline void CMDUserKickOffLine::clear_newsessionuuid() {
  newsessionuuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMDUserKickOffLine::newsessionuuid() const {
  // @@protoc_insertion_point(field_get:CMDUserKickOffLine.newsessionUUID)
  return newsessionuuid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDUserKickOffLine::set_newsessionuuid(const ::std::string& value) {
  
  newsessionuuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDUserKickOffLine.newsessionUUID)
}
inline void CMDUserKickOffLine::set_newsessionuuid(const char* value) {
  
  newsessionuuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDUserKickOffLine.newsessionUUID)
}
inline void CMDUserKickOffLine::set_newsessionuuid(const char* value, size_t size) {
  
  newsessionuuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDUserKickOffLine.newsessionUUID)
}
inline ::std::string* CMDUserKickOffLine::mutable_newsessionuuid() {
  
  // @@protoc_insertion_point(field_mutable:CMDUserKickOffLine.newsessionUUID)
  return newsessionuuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMDUserKickOffLine::release_newsessionuuid() {
  // @@protoc_insertion_point(field_release:CMDUserKickOffLine.newsessionUUID)
  
  return newsessionuuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDUserKickOffLine::set_allocated_newsessionuuid(::std::string* newsessionuuid) {
  if (newsessionuuid != NULL) {
    
  } else {
    
  }
  newsessionuuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), newsessionuuid);
  // @@protoc_insertion_point(field_set_allocated:CMDUserKickOffLine.newsessionUUID)
}

// -------------------------------------------------------------------

// CMDGroupInfo

// optional uint32 groupid = 1;
inline void CMDGroupInfo::clear_groupid() {
  groupid_ = 0u;
}
inline ::google::protobuf::uint32 CMDGroupInfo::groupid() const {
  // @@protoc_insertion_point(field_get:CMDGroupInfo.groupid)
  return groupid_;
}
inline void CMDGroupInfo::set_groupid(::google::protobuf::uint32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:CMDGroupInfo.groupid)
}

// optional string groupName = 2;
inline void CMDGroupInfo::clear_groupname() {
  groupname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMDGroupInfo::groupname() const {
  // @@protoc_insertion_point(field_get:CMDGroupInfo.groupName)
  return groupname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDGroupInfo::set_groupname(const ::std::string& value) {
  
  groupname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDGroupInfo.groupName)
}
inline void CMDGroupInfo::set_groupname(const char* value) {
  
  groupname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDGroupInfo.groupName)
}
inline void CMDGroupInfo::set_groupname(const char* value, size_t size) {
  
  groupname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDGroupInfo.groupName)
}
inline ::std::string* CMDGroupInfo::mutable_groupname() {
  
  // @@protoc_insertion_point(field_mutable:CMDGroupInfo.groupName)
  return groupname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMDGroupInfo::release_groupname() {
  // @@protoc_insertion_point(field_release:CMDGroupInfo.groupName)
  
  return groupname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDGroupInfo::set_allocated_groupname(::std::string* groupname) {
  if (groupname != NULL) {
    
  } else {
    
  }
  groupname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), groupname);
  // @@protoc_insertion_point(field_set_allocated:CMDGroupInfo.groupName)
}

// optional string grouphead = 3;
inline void CMDGroupInfo::clear_grouphead() {
  grouphead_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMDGroupInfo::grouphead() const {
  // @@protoc_insertion_point(field_get:CMDGroupInfo.grouphead)
  return grouphead_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDGroupInfo::set_grouphead(const ::std::string& value) {
  
  grouphead_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDGroupInfo.grouphead)
}
inline void CMDGroupInfo::set_grouphead(const char* value) {
  
  grouphead_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDGroupInfo.grouphead)
}
inline void CMDGroupInfo::set_grouphead(const char* value, size_t size) {
  
  grouphead_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDGroupInfo.grouphead)
}
inline ::std::string* CMDGroupInfo::mutable_grouphead() {
  
  // @@protoc_insertion_point(field_mutable:CMDGroupInfo.grouphead)
  return grouphead_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMDGroupInfo::release_grouphead() {
  // @@protoc_insertion_point(field_release:CMDGroupInfo.grouphead)
  
  return grouphead_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDGroupInfo::set_allocated_grouphead(::std::string* grouphead) {
  if (grouphead != NULL) {
    
  } else {
    
  }
  grouphead_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), grouphead);
  // @@protoc_insertion_point(field_set_allocated:CMDGroupInfo.grouphead)
}

// optional uint32 showid = 4;
inline void CMDGroupInfo::clear_showid() {
  showid_ = 0u;
}
inline ::google::protobuf::uint32 CMDGroupInfo::showid() const {
  // @@protoc_insertion_point(field_get:CMDGroupInfo.showid)
  return showid_;
}
inline void CMDGroupInfo::set_showid(::google::protobuf::uint32 value) {
  
  showid_ = value;
  // @@protoc_insertion_point(field_set:CMDGroupInfo.showid)
}

// optional uint32 muteSet = 5;
inline void CMDGroupInfo::clear_muteset() {
  muteset_ = 0u;
}
inline ::google::protobuf::uint32 CMDGroupInfo::muteset() const {
  // @@protoc_insertion_point(field_get:CMDGroupInfo.muteSet)
  return muteset_;
}
inline void CMDGroupInfo::set_muteset(::google::protobuf::uint32 value) {
  
  muteset_ = value;
  // @@protoc_insertion_point(field_set:CMDGroupInfo.muteSet)
}

// optional uint32 roleType = 6;
inline void CMDGroupInfo::clear_roletype() {
  roletype_ = 0u;
}
inline ::google::protobuf::uint32 CMDGroupInfo::roletype() const {
  // @@protoc_insertion_point(field_get:CMDGroupInfo.roleType)
  return roletype_;
}
inline void CMDGroupInfo::set_roletype(::google::protobuf::uint32 value) {
  
  roletype_ = value;
  // @@protoc_insertion_point(field_set:CMDGroupInfo.roleType)
}

// optional uint32 memberCount = 7;
inline void CMDGroupInfo::clear_membercount() {
  membercount_ = 0u;
}
inline ::google::protobuf::uint32 CMDGroupInfo::membercount() const {
  // @@protoc_insertion_point(field_get:CMDGroupInfo.memberCount)
  return membercount_;
}
inline void CMDGroupInfo::set_membercount(::google::protobuf::uint32 value) {
  
  membercount_ = value;
  // @@protoc_insertion_point(field_set:CMDGroupInfo.memberCount)
}

// optional uint32 visitCount = 8;
inline void CMDGroupInfo::clear_visitcount() {
  visitcount_ = 0u;
}
inline ::google::protobuf::uint32 CMDGroupInfo::visitcount() const {
  // @@protoc_insertion_point(field_get:CMDGroupInfo.visitCount)
  return visitcount_;
}
inline void CMDGroupInfo::set_visitcount(::google::protobuf::uint32 value) {
  
  visitcount_ = value;
  // @@protoc_insertion_point(field_set:CMDGroupInfo.visitCount)
}

// -------------------------------------------------------------------

// CMDUserGroupInfo

// repeated .CMDGroupInfo grouplst = 1;
inline int CMDUserGroupInfo::grouplst_size() const {
  return grouplst_.size();
}
inline void CMDUserGroupInfo::clear_grouplst() {
  grouplst_.Clear();
}
inline const ::CMDGroupInfo& CMDUserGroupInfo::grouplst(int index) const {
  // @@protoc_insertion_point(field_get:CMDUserGroupInfo.grouplst)
  return grouplst_.Get(index);
}
inline ::CMDGroupInfo* CMDUserGroupInfo::mutable_grouplst(int index) {
  // @@protoc_insertion_point(field_mutable:CMDUserGroupInfo.grouplst)
  return grouplst_.Mutable(index);
}
inline ::CMDGroupInfo* CMDUserGroupInfo::add_grouplst() {
  // @@protoc_insertion_point(field_add:CMDUserGroupInfo.grouplst)
  return grouplst_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMDGroupInfo >*
CMDUserGroupInfo::mutable_grouplst() {
  // @@protoc_insertion_point(field_mutable_list:CMDUserGroupInfo.grouplst)
  return &grouplst_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMDGroupInfo >&
CMDUserGroupInfo::grouplst() const {
  // @@protoc_insertion_point(field_list:CMDUserGroupInfo.grouplst)
  return grouplst_;
}

// -------------------------------------------------------------------

// CMDUserModInfoReq

// optional uint32 userID = 1;
inline void CMDUserModInfoReq::clear_userid() {
  userid_ = 0u;
}
inline ::google::protobuf::uint32 CMDUserModInfoReq::userid() const {
  // @@protoc_insertion_point(field_get:CMDUserModInfoReq.userID)
  return userid_;
}
inline void CMDUserModInfoReq::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDUserModInfoReq.userID)
}

// optional .CMDString userAlias = 2;
inline bool CMDUserModInfoReq::has_useralias() const {
  return !_is_default_instance_ && useralias_ != NULL;
}
inline void CMDUserModInfoReq::clear_useralias() {
  if (GetArenaNoVirtual() == NULL && useralias_ != NULL) delete useralias_;
  useralias_ = NULL;
}
inline const ::CMDString& CMDUserModInfoReq::useralias() const {
  // @@protoc_insertion_point(field_get:CMDUserModInfoReq.userAlias)
  return useralias_ != NULL ? *useralias_ : *default_instance_->useralias_;
}
inline ::CMDString* CMDUserModInfoReq::mutable_useralias() {
  
  if (useralias_ == NULL) {
    useralias_ = new ::CMDString;
  }
  // @@protoc_insertion_point(field_mutable:CMDUserModInfoReq.userAlias)
  return useralias_;
}
inline ::CMDString* CMDUserModInfoReq::release_useralias() {
  // @@protoc_insertion_point(field_release:CMDUserModInfoReq.userAlias)
  
  ::CMDString* temp = useralias_;
  useralias_ = NULL;
  return temp;
}
inline void CMDUserModInfoReq::set_allocated_useralias(::CMDString* useralias) {
  delete useralias_;
  useralias_ = useralias;
  if (useralias) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDUserModInfoReq.userAlias)
}

// optional .CMDString headAdd = 3;
inline bool CMDUserModInfoReq::has_headadd() const {
  return !_is_default_instance_ && headadd_ != NULL;
}
inline void CMDUserModInfoReq::clear_headadd() {
  if (GetArenaNoVirtual() == NULL && headadd_ != NULL) delete headadd_;
  headadd_ = NULL;
}
inline const ::CMDString& CMDUserModInfoReq::headadd() const {
  // @@protoc_insertion_point(field_get:CMDUserModInfoReq.headAdd)
  return headadd_ != NULL ? *headadd_ : *default_instance_->headadd_;
}
inline ::CMDString* CMDUserModInfoReq::mutable_headadd() {
  
  if (headadd_ == NULL) {
    headadd_ = new ::CMDString;
  }
  // @@protoc_insertion_point(field_mutable:CMDUserModInfoReq.headAdd)
  return headadd_;
}
inline ::CMDString* CMDUserModInfoReq::release_headadd() {
  // @@protoc_insertion_point(field_release:CMDUserModInfoReq.headAdd)
  
  ::CMDString* temp = headadd_;
  headadd_ = NULL;
  return temp;
}
inline void CMDUserModInfoReq::set_allocated_headadd(::CMDString* headadd) {
  delete headadd_;
  headadd_ = headadd;
  if (headadd) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDUserModInfoReq.headAdd)
}

// optional .CMDString birthday = 4;
inline bool CMDUserModInfoReq::has_birthday() const {
  return !_is_default_instance_ && birthday_ != NULL;
}
inline void CMDUserModInfoReq::clear_birthday() {
  if (GetArenaNoVirtual() == NULL && birthday_ != NULL) delete birthday_;
  birthday_ = NULL;
}
inline const ::CMDString& CMDUserModInfoReq::birthday() const {
  // @@protoc_insertion_point(field_get:CMDUserModInfoReq.birthday)
  return birthday_ != NULL ? *birthday_ : *default_instance_->birthday_;
}
inline ::CMDString* CMDUserModInfoReq::mutable_birthday() {
  
  if (birthday_ == NULL) {
    birthday_ = new ::CMDString;
  }
  // @@protoc_insertion_point(field_mutable:CMDUserModInfoReq.birthday)
  return birthday_;
}
inline ::CMDString* CMDUserModInfoReq::release_birthday() {
  // @@protoc_insertion_point(field_release:CMDUserModInfoReq.birthday)
  
  ::CMDString* temp = birthday_;
  birthday_ = NULL;
  return temp;
}
inline void CMDUserModInfoReq::set_allocated_birthday(::CMDString* birthday) {
  delete birthday_;
  birthday_ = birthday;
  if (birthday) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDUserModInfoReq.birthday)
}

// optional .CMDString city = 5;
inline bool CMDUserModInfoReq::has_city() const {
  return !_is_default_instance_ && city_ != NULL;
}
inline void CMDUserModInfoReq::clear_city() {
  if (GetArenaNoVirtual() == NULL && city_ != NULL) delete city_;
  city_ = NULL;
}
inline const ::CMDString& CMDUserModInfoReq::city() const {
  // @@protoc_insertion_point(field_get:CMDUserModInfoReq.city)
  return city_ != NULL ? *city_ : *default_instance_->city_;
}
inline ::CMDString* CMDUserModInfoReq::mutable_city() {
  
  if (city_ == NULL) {
    city_ = new ::CMDString;
  }
  // @@protoc_insertion_point(field_mutable:CMDUserModInfoReq.city)
  return city_;
}
inline ::CMDString* CMDUserModInfoReq::release_city() {
  // @@protoc_insertion_point(field_release:CMDUserModInfoReq.city)
  
  ::CMDString* temp = city_;
  city_ = NULL;
  return temp;
}
inline void CMDUserModInfoReq::set_allocated_city(::CMDString* city) {
  delete city_;
  city_ = city;
  if (city) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDUserModInfoReq.city)
}

// optional .CMDString sign = 6;
inline bool CMDUserModInfoReq::has_sign() const {
  return !_is_default_instance_ && sign_ != NULL;
}
inline void CMDUserModInfoReq::clear_sign() {
  if (GetArenaNoVirtual() == NULL && sign_ != NULL) delete sign_;
  sign_ = NULL;
}
inline const ::CMDString& CMDUserModInfoReq::sign() const {
  // @@protoc_insertion_point(field_get:CMDUserModInfoReq.sign)
  return sign_ != NULL ? *sign_ : *default_instance_->sign_;
}
inline ::CMDString* CMDUserModInfoReq::mutable_sign() {
  
  if (sign_ == NULL) {
    sign_ = new ::CMDString;
  }
  // @@protoc_insertion_point(field_mutable:CMDUserModInfoReq.sign)
  return sign_;
}
inline ::CMDString* CMDUserModInfoReq::release_sign() {
  // @@protoc_insertion_point(field_release:CMDUserModInfoReq.sign)
  
  ::CMDString* temp = sign_;
  sign_ = NULL;
  return temp;
}
inline void CMDUserModInfoReq::set_allocated_sign(::CMDString* sign) {
  delete sign_;
  sign_ = sign;
  if (sign) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDUserModInfoReq.sign)
}

// -------------------------------------------------------------------

// CMDUserModInfoResp

// optional uint32 userID = 1;
inline void CMDUserModInfoResp::clear_userid() {
  userid_ = 0u;
}
inline ::google::protobuf::uint32 CMDUserModInfoResp::userid() const {
  // @@protoc_insertion_point(field_get:CMDUserModInfoResp.userID)
  return userid_;
}
inline void CMDUserModInfoResp::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDUserModInfoResp.userID)
}

// optional .CMDErrCode errInfo = 2;
inline bool CMDUserModInfoResp::has_errinfo() const {
  return !_is_default_instance_ && errinfo_ != NULL;
}
inline void CMDUserModInfoResp::clear_errinfo() {
  if (GetArenaNoVirtual() == NULL && errinfo_ != NULL) delete errinfo_;
  errinfo_ = NULL;
}
inline const ::CMDErrCode& CMDUserModInfoResp::errinfo() const {
  // @@protoc_insertion_point(field_get:CMDUserModInfoResp.errInfo)
  return errinfo_ != NULL ? *errinfo_ : *default_instance_->errinfo_;
}
inline ::CMDErrCode* CMDUserModInfoResp::mutable_errinfo() {
  
  if (errinfo_ == NULL) {
    errinfo_ = new ::CMDErrCode;
  }
  // @@protoc_insertion_point(field_mutable:CMDUserModInfoResp.errInfo)
  return errinfo_;
}
inline ::CMDErrCode* CMDUserModInfoResp::release_errinfo() {
  // @@protoc_insertion_point(field_release:CMDUserModInfoResp.errInfo)
  
  ::CMDErrCode* temp = errinfo_;
  errinfo_ = NULL;
  return temp;
}
inline void CMDUserModInfoResp::set_allocated_errinfo(::CMDErrCode* errinfo) {
  delete errinfo_;
  errinfo_ = errinfo;
  if (errinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDUserModInfoResp.errInfo)
}

// -------------------------------------------------------------------

// CMDUserInfoModNotify

// optional uint32 userID = 1;
inline void CMDUserInfoModNotify::clear_userid() {
  userid_ = 0u;
}
inline ::google::protobuf::uint32 CMDUserInfoModNotify::userid() const {
  // @@protoc_insertion_point(field_get:CMDUserInfoModNotify.userID)
  return userid_;
}
inline void CMDUserInfoModNotify::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDUserInfoModNotify.userID)
}

// optional .CMDString userAlias = 2;
inline bool CMDUserInfoModNotify::has_useralias() const {
  return !_is_default_instance_ && useralias_ != NULL;
}
inline void CMDUserInfoModNotify::clear_useralias() {
  if (GetArenaNoVirtual() == NULL && useralias_ != NULL) delete useralias_;
  useralias_ = NULL;
}
inline const ::CMDString& CMDUserInfoModNotify::useralias() const {
  // @@protoc_insertion_point(field_get:CMDUserInfoModNotify.userAlias)
  return useralias_ != NULL ? *useralias_ : *default_instance_->useralias_;
}
inline ::CMDString* CMDUserInfoModNotify::mutable_useralias() {
  
  if (useralias_ == NULL) {
    useralias_ = new ::CMDString;
  }
  // @@protoc_insertion_point(field_mutable:CMDUserInfoModNotify.userAlias)
  return useralias_;
}
inline ::CMDString* CMDUserInfoModNotify::release_useralias() {
  // @@protoc_insertion_point(field_release:CMDUserInfoModNotify.userAlias)
  
  ::CMDString* temp = useralias_;
  useralias_ = NULL;
  return temp;
}
inline void CMDUserInfoModNotify::set_allocated_useralias(::CMDString* useralias) {
  delete useralias_;
  useralias_ = useralias;
  if (useralias) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDUserInfoModNotify.userAlias)
}

// optional .CMDString headAdd = 3;
inline bool CMDUserInfoModNotify::has_headadd() const {
  return !_is_default_instance_ && headadd_ != NULL;
}
inline void CMDUserInfoModNotify::clear_headadd() {
  if (GetArenaNoVirtual() == NULL && headadd_ != NULL) delete headadd_;
  headadd_ = NULL;
}
inline const ::CMDString& CMDUserInfoModNotify::headadd() const {
  // @@protoc_insertion_point(field_get:CMDUserInfoModNotify.headAdd)
  return headadd_ != NULL ? *headadd_ : *default_instance_->headadd_;
}
inline ::CMDString* CMDUserInfoModNotify::mutable_headadd() {
  
  if (headadd_ == NULL) {
    headadd_ = new ::CMDString;
  }
  // @@protoc_insertion_point(field_mutable:CMDUserInfoModNotify.headAdd)
  return headadd_;
}
inline ::CMDString* CMDUserInfoModNotify::release_headadd() {
  // @@protoc_insertion_point(field_release:CMDUserInfoModNotify.headAdd)
  
  ::CMDString* temp = headadd_;
  headadd_ = NULL;
  return temp;
}
inline void CMDUserInfoModNotify::set_allocated_headadd(::CMDString* headadd) {
  delete headadd_;
  headadd_ = headadd;
  if (headadd) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDUserInfoModNotify.headAdd)
}

// optional .CMDUInt32 roleType = 4;
inline bool CMDUserInfoModNotify::has_roletype() const {
  return !_is_default_instance_ && roletype_ != NULL;
}
inline void CMDUserInfoModNotify::clear_roletype() {
  if (GetArenaNoVirtual() == NULL && roletype_ != NULL) delete roletype_;
  roletype_ = NULL;
}
inline const ::CMDUInt32& CMDUserInfoModNotify::roletype() const {
  // @@protoc_insertion_point(field_get:CMDUserInfoModNotify.roleType)
  return roletype_ != NULL ? *roletype_ : *default_instance_->roletype_;
}
inline ::CMDUInt32* CMDUserInfoModNotify::mutable_roletype() {
  
  if (roletype_ == NULL) {
    roletype_ = new ::CMDUInt32;
  }
  // @@protoc_insertion_point(field_mutable:CMDUserInfoModNotify.roleType)
  return roletype_;
}
inline ::CMDUInt32* CMDUserInfoModNotify::release_roletype() {
  // @@protoc_insertion_point(field_release:CMDUserInfoModNotify.roleType)
  
  ::CMDUInt32* temp = roletype_;
  roletype_ = NULL;
  return temp;
}
inline void CMDUserInfoModNotify::set_allocated_roletype(::CMDUInt32* roletype) {
  delete roletype_;
  roletype_ = roletype;
  if (roletype) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDUserInfoModNotify.roleType)
}

// optional .CMDGroupInfo groupInfo = 6;
inline bool CMDUserInfoModNotify::has_groupinfo() const {
  return !_is_default_instance_ && groupinfo_ != NULL;
}
inline void CMDUserInfoModNotify::clear_groupinfo() {
  if (GetArenaNoVirtual() == NULL && groupinfo_ != NULL) delete groupinfo_;
  groupinfo_ = NULL;
}
inline const ::CMDGroupInfo& CMDUserInfoModNotify::groupinfo() const {
  // @@protoc_insertion_point(field_get:CMDUserInfoModNotify.groupInfo)
  return groupinfo_ != NULL ? *groupinfo_ : *default_instance_->groupinfo_;
}
inline ::CMDGroupInfo* CMDUserInfoModNotify::mutable_groupinfo() {
  
  if (groupinfo_ == NULL) {
    groupinfo_ = new ::CMDGroupInfo;
  }
  // @@protoc_insertion_point(field_mutable:CMDUserInfoModNotify.groupInfo)
  return groupinfo_;
}
inline ::CMDGroupInfo* CMDUserInfoModNotify::release_groupinfo() {
  // @@protoc_insertion_point(field_release:CMDUserInfoModNotify.groupInfo)
  
  ::CMDGroupInfo* temp = groupinfo_;
  groupinfo_ = NULL;
  return temp;
}
inline void CMDUserInfoModNotify::set_allocated_groupinfo(::CMDGroupInfo* groupinfo) {
  delete groupinfo_;
  groupinfo_ = groupinfo;
  if (groupinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDUserInfoModNotify.groupInfo)
}

// -------------------------------------------------------------------

// CMDOperFriendshipReq

// optional uint32 userid = 1;
inline void CMDOperFriendshipReq::clear_userid() {
  userid_ = 0u;
}
inline ::google::protobuf::uint32 CMDOperFriendshipReq::userid() const {
  // @@protoc_insertion_point(field_get:CMDOperFriendshipReq.userid)
  return userid_;
}
inline void CMDOperFriendshipReq::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDOperFriendshipReq.userid)
}

// optional uint32 dstuid = 2;
inline void CMDOperFriendshipReq::clear_dstuid() {
  dstuid_ = 0u;
}
inline ::google::protobuf::uint32 CMDOperFriendshipReq::dstuid() const {
  // @@protoc_insertion_point(field_get:CMDOperFriendshipReq.dstuid)
  return dstuid_;
}
inline void CMDOperFriendshipReq::set_dstuid(::google::protobuf::uint32 value) {
  
  dstuid_ = value;
  // @@protoc_insertion_point(field_set:CMDOperFriendshipReq.dstuid)
}

// optional .e_Friendship_OpType action = 3;
inline void CMDOperFriendshipReq::clear_action() {
  action_ = 0;
}
inline ::e_Friendship_OpType CMDOperFriendshipReq::action() const {
  // @@protoc_insertion_point(field_get:CMDOperFriendshipReq.action)
  return static_cast< ::e_Friendship_OpType >(action_);
}
inline void CMDOperFriendshipReq::set_action(::e_Friendship_OpType value) {
  
  action_ = value;
  // @@protoc_insertion_point(field_set:CMDOperFriendshipReq.action)
}

// -------------------------------------------------------------------

// CMDOperFriendshipResp

// optional .CMDErrCode errInfo = 1;
inline bool CMDOperFriendshipResp::has_errinfo() const {
  return !_is_default_instance_ && errinfo_ != NULL;
}
inline void CMDOperFriendshipResp::clear_errinfo() {
  if (GetArenaNoVirtual() == NULL && errinfo_ != NULL) delete errinfo_;
  errinfo_ = NULL;
}
inline const ::CMDErrCode& CMDOperFriendshipResp::errinfo() const {
  // @@protoc_insertion_point(field_get:CMDOperFriendshipResp.errInfo)
  return errinfo_ != NULL ? *errinfo_ : *default_instance_->errinfo_;
}
inline ::CMDErrCode* CMDOperFriendshipResp::mutable_errinfo() {
  
  if (errinfo_ == NULL) {
    errinfo_ = new ::CMDErrCode;
  }
  // @@protoc_insertion_point(field_mutable:CMDOperFriendshipResp.errInfo)
  return errinfo_;
}
inline ::CMDErrCode* CMDOperFriendshipResp::release_errinfo() {
  // @@protoc_insertion_point(field_release:CMDOperFriendshipResp.errInfo)
  
  ::CMDErrCode* temp = errinfo_;
  errinfo_ = NULL;
  return temp;
}
inline void CMDOperFriendshipResp::set_allocated_errinfo(::CMDErrCode* errinfo) {
  delete errinfo_;
  errinfo_ = errinfo;
  if (errinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CMDOperFriendshipResp.errInfo)
}

// optional uint32 dstuid = 2;
inline void CMDOperFriendshipResp::clear_dstuid() {
  dstuid_ = 0u;
}
inline ::google::protobuf::uint32 CMDOperFriendshipResp::dstuid() const {
  // @@protoc_insertion_point(field_get:CMDOperFriendshipResp.dstuid)
  return dstuid_;
}
inline void CMDOperFriendshipResp::set_dstuid(::google::protobuf::uint32 value) {
  
  dstuid_ = value;
  // @@protoc_insertion_point(field_set:CMDOperFriendshipResp.dstuid)
}

// optional .e_Friendship_OpType action = 3;
inline void CMDOperFriendshipResp::clear_action() {
  action_ = 0;
}
inline ::e_Friendship_OpType CMDOperFriendshipResp::action() const {
  // @@protoc_insertion_point(field_get:CMDOperFriendshipResp.action)
  return static_cast< ::e_Friendship_OpType >(action_);
}
inline void CMDOperFriendshipResp::set_action(::e_Friendship_OpType value) {
  
  action_ = value;
  // @@protoc_insertion_point(field_set:CMDOperFriendshipResp.action)
}

// -------------------------------------------------------------------

// CMDQryUserAttentionList

// optional uint32 userid = 1;
inline void CMDQryUserAttentionList::clear_userid() {
  userid_ = 0u;
}
inline ::google::protobuf::uint32 CMDQryUserAttentionList::userid() const {
  // @@protoc_insertion_point(field_get:CMDQryUserAttentionList.userid)
  return userid_;
}
inline void CMDQryUserAttentionList::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDQryUserAttentionList.userid)
}

// -------------------------------------------------------------------

// CMDUserAttentionList

// optional uint32 userid = 1;
inline void CMDUserAttentionList::clear_userid() {
  userid_ = 0u;
}
inline ::google::protobuf::uint32 CMDUserAttentionList::userid() const {
  // @@protoc_insertion_point(field_get:CMDUserAttentionList.userid)
  return userid_;
}
inline void CMDUserAttentionList::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDUserAttentionList.userid)
}

// repeated uint32 list = 2;
inline int CMDUserAttentionList::list_size() const {
  return list_.size();
}
inline void CMDUserAttentionList::clear_list() {
  list_.Clear();
}
inline ::google::protobuf::uint32 CMDUserAttentionList::list(int index) const {
  // @@protoc_insertion_point(field_get:CMDUserAttentionList.list)
  return list_.Get(index);
}
inline void CMDUserAttentionList::set_list(int index, ::google::protobuf::uint32 value) {
  list_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMDUserAttentionList.list)
}
inline void CMDUserAttentionList::add_list(::google::protobuf::uint32 value) {
  list_.Add(value);
  // @@protoc_insertion_point(field_add:CMDUserAttentionList.list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMDUserAttentionList::list() const {
  // @@protoc_insertion_point(field_list:CMDUserAttentionList.list)
  return list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMDUserAttentionList::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:CMDUserAttentionList.list)
  return &list_;
}

// -------------------------------------------------------------------

// CMDUserSysConfigNotify

// optional string sysconfig = 1;
inline void CMDUserSysConfigNotify::clear_sysconfig() {
  sysconfig_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMDUserSysConfigNotify::sysconfig() const {
  // @@protoc_insertion_point(field_get:CMDUserSysConfigNotify.sysconfig)
  return sysconfig_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDUserSysConfigNotify::set_sysconfig(const ::std::string& value) {
  
  sysconfig_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMDUserSysConfigNotify.sysconfig)
}
inline void CMDUserSysConfigNotify::set_sysconfig(const char* value) {
  
  sysconfig_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMDUserSysConfigNotify.sysconfig)
}
inline void CMDUserSysConfigNotify::set_sysconfig(const char* value, size_t size) {
  
  sysconfig_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMDUserSysConfigNotify.sysconfig)
}
inline ::std::string* CMDUserSysConfigNotify::mutable_sysconfig() {
  
  // @@protoc_insertion_point(field_mutable:CMDUserSysConfigNotify.sysconfig)
  return sysconfig_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMDUserSysConfigNotify::release_sysconfig() {
  // @@protoc_insertion_point(field_release:CMDUserSysConfigNotify.sysconfig)
  
  return sysconfig_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMDUserSysConfigNotify::set_allocated_sysconfig(::std::string* sysconfig) {
  if (sysconfig != NULL) {
    
  } else {
    
  }
  sysconfig_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sysconfig);
  // @@protoc_insertion_point(field_set_allocated:CMDUserSysConfigNotify.sysconfig)
}

// -------------------------------------------------------------------

// CMDUserLocateInfo

// optional uint32 userid = 1;
inline void CMDUserLocateInfo::clear_userid() {
  userid_ = 0u;
}
inline ::google::protobuf::uint32 CMDUserLocateInfo::userid() const {
  // @@protoc_insertion_point(field_get:CMDUserLocateInfo.userid)
  return userid_;
}
inline void CMDUserLocateInfo::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDUserLocateInfo.userid)
}

// optional double longitude = 2;
inline void CMDUserLocateInfo::clear_longitude() {
  longitude_ = 0;
}
inline double CMDUserLocateInfo::longitude() const {
  // @@protoc_insertion_point(field_get:CMDUserLocateInfo.longitude)
  return longitude_;
}
inline void CMDUserLocateInfo::set_longitude(double value) {
  
  longitude_ = value;
  // @@protoc_insertion_point(field_set:CMDUserLocateInfo.longitude)
}

// optional double latitude = 3;
inline void CMDUserLocateInfo::clear_latitude() {
  latitude_ = 0;
}
inline double CMDUserLocateInfo::latitude() const {
  // @@protoc_insertion_point(field_get:CMDUserLocateInfo.latitude)
  return latitude_;
}
inline void CMDUserLocateInfo::set_latitude(double value) {
  
  latitude_ = value;
  // @@protoc_insertion_point(field_set:CMDUserLocateInfo.latitude)
}

// -------------------------------------------------------------------

// CMDUserLocationResp

// optional uint32 userid = 1;
inline void CMDUserLocationResp::clear_userid() {
  userid_ = 0u;
}
inline ::google::protobuf::uint32 CMDUserLocationResp::userid() const {
  // @@protoc_insertion_point(field_get:CMDUserLocationResp.userid)
  return userid_;
}
inline void CMDUserLocationResp::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CMDUserLocationResp.userid)
}

// repeated .CMDUserLocateInfo nearlist = 2;
inline int CMDUserLocationResp::nearlist_size() const {
  return nearlist_.size();
}
inline void CMDUserLocationResp::clear_nearlist() {
  nearlist_.Clear();
}
inline const ::CMDUserLocateInfo& CMDUserLocationResp::nearlist(int index) const {
  // @@protoc_insertion_point(field_get:CMDUserLocationResp.nearlist)
  return nearlist_.Get(index);
}
inline ::CMDUserLocateInfo* CMDUserLocationResp::mutable_nearlist(int index) {
  // @@protoc_insertion_point(field_mutable:CMDUserLocationResp.nearlist)
  return nearlist_.Mutable(index);
}
inline ::CMDUserLocateInfo* CMDUserLocationResp::add_nearlist() {
  // @@protoc_insertion_point(field_add:CMDUserLocationResp.nearlist)
  return nearlist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMDUserLocateInfo >*
CMDUserLocationResp::mutable_nearlist() {
  // @@protoc_insertion_point(field_mutable_list:CMDUserLocationResp.nearlist)
  return &nearlist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMDUserLocateInfo >&
CMDUserLocationResp::nearlist() const {
  // @@protoc_insertion_point(field_list:CMDUserLocationResp.nearlist)
  return nearlist_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::e_Friendship_OpType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::e_Friendship_OpType>() {
  return ::e_Friendship_OpType_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_UserMgrSvr_2eproto__INCLUDED
